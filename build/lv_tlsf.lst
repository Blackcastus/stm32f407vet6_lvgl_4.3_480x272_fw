ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_tlsf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.block_size,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	block_size:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "lvgl/src/misc/lv_tlsf.c"
   1:lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:lvgl/src/misc/lv_tlsf.c **** 
   4:lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:lvgl/src/misc/lv_tlsf.c **** 
  12:lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:lvgl/src/misc/lv_tlsf.c **** 
  14:lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:lvgl/src/misc/lv_tlsf.c **** #endif
  17:lvgl/src/misc/lv_tlsf.c **** 
  18:lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:lvgl/src/misc/lv_tlsf.c **** #else
  21:lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:lvgl/src/misc/lv_tlsf.c **** #endif
  23:lvgl/src/misc/lv_tlsf.c **** 
  24:lvgl/src/misc/lv_tlsf.c **** /*
  25:lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:lvgl/src/misc/lv_tlsf.c **** **
  27:lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 2


  31:lvgl/src/misc/lv_tlsf.c **** ** routines.
  32:lvgl/src/misc/lv_tlsf.c **** **
  33:lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:lvgl/src/misc/lv_tlsf.c **** **
  38:lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:lvgl/src/misc/lv_tlsf.c **** */
  41:lvgl/src/misc/lv_tlsf.c **** 
  42:lvgl/src/misc/lv_tlsf.c **** /*
  43:lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:lvgl/src/misc/lv_tlsf.c **** */
  46:lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:lvgl/src/misc/lv_tlsf.c **** #endif
  50:lvgl/src/misc/lv_tlsf.c **** 
  51:lvgl/src/misc/lv_tlsf.c **** /*
  52:lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:lvgl/src/misc/lv_tlsf.c **** */
  55:lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:lvgl/src/misc/lv_tlsf.c **** #else
  58:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:lvgl/src/misc/lv_tlsf.c **** #endif
  60:lvgl/src/misc/lv_tlsf.c **** 
  61:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:lvgl/src/misc/lv_tlsf.c **** 
  68:lvgl/src/misc/lv_tlsf.c **** /*
  69:lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:lvgl/src/misc/lv_tlsf.c **** */
  72:lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:lvgl/src/misc/lv_tlsf.c **** 
  74:lvgl/src/misc/lv_tlsf.c **** /*
  75:lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:lvgl/src/misc/lv_tlsf.c **** */
  78:lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:lvgl/src/misc/lv_tlsf.c **** 
  81:lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:lvgl/src/misc/lv_tlsf.c **** 
  84:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:lvgl/src/misc/lv_tlsf.c **** {
  86:lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 3


  88:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
  89:lvgl/src/misc/lv_tlsf.c **** }
  90:lvgl/src/misc/lv_tlsf.c **** 
  91:lvgl/src/misc/lv_tlsf.c **** #else
  92:lvgl/src/misc/lv_tlsf.c **** 
  93:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:lvgl/src/misc/lv_tlsf.c **** {
  95:lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:lvgl/src/misc/lv_tlsf.c **** }
  97:lvgl/src/misc/lv_tlsf.c **** 
  98:lvgl/src/misc/lv_tlsf.c **** #endif
  99:lvgl/src/misc/lv_tlsf.c **** 
 100:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:lvgl/src/misc/lv_tlsf.c **** {
 102:lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:lvgl/src/misc/lv_tlsf.c **** }
 105:lvgl/src/misc/lv_tlsf.c **** 
 106:lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:lvgl/src/misc/lv_tlsf.c **** 
 109:lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:lvgl/src/misc/lv_tlsf.c **** 
 111:lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:lvgl/src/misc/lv_tlsf.c **** 
 114:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:lvgl/src/misc/lv_tlsf.c **** {
 116:lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:lvgl/src/misc/lv_tlsf.c **** }
 119:lvgl/src/misc/lv_tlsf.c **** 
 120:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:lvgl/src/misc/lv_tlsf.c **** {
 122:lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:lvgl/src/misc/lv_tlsf.c **** }
 125:lvgl/src/misc/lv_tlsf.c **** 
 126:lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:lvgl/src/misc/lv_tlsf.c **** 
 129:lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:lvgl/src/misc/lv_tlsf.c **** 
 131:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:lvgl/src/misc/lv_tlsf.c **** {
 133:lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:lvgl/src/misc/lv_tlsf.c **** }
 136:lvgl/src/misc/lv_tlsf.c **** 
 137:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:lvgl/src/misc/lv_tlsf.c **** {
 139:lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:lvgl/src/misc/lv_tlsf.c **** }
 143:lvgl/src/misc/lv_tlsf.c **** 
 144:lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 4


 145:lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
 146:lvgl/src/misc/lv_tlsf.c **** 
 147:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:lvgl/src/misc/lv_tlsf.c **** {
 149:lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:lvgl/src/misc/lv_tlsf.c **** }
 153:lvgl/src/misc/lv_tlsf.c **** 
 154:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:lvgl/src/misc/lv_tlsf.c **** {
 156:lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:lvgl/src/misc/lv_tlsf.c **** }
 159:lvgl/src/misc/lv_tlsf.c **** 
 160:lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:lvgl/src/misc/lv_tlsf.c **** 
 163:lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:lvgl/src/misc/lv_tlsf.c **** 
 165:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:lvgl/src/misc/lv_tlsf.c **** {
 167:lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:lvgl/src/misc/lv_tlsf.c **** }
 171:lvgl/src/misc/lv_tlsf.c **** 
 172:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:lvgl/src/misc/lv_tlsf.c **** {
 174:lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:lvgl/src/misc/lv_tlsf.c **** }
 177:lvgl/src/misc/lv_tlsf.c **** 
 178:lvgl/src/misc/lv_tlsf.c **** #else
 179:lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:lvgl/src/misc/lv_tlsf.c **** 
 181:lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:lvgl/src/misc/lv_tlsf.c **** {
 184:lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:lvgl/src/misc/lv_tlsf.c **** }
 187:lvgl/src/misc/lv_tlsf.c **** 
 188:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:lvgl/src/misc/lv_tlsf.c **** {
 190:lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:lvgl/src/misc/lv_tlsf.c **** }
 192:lvgl/src/misc/lv_tlsf.c **** 
 193:lvgl/src/misc/lv_tlsf.c **** #endif
 194:lvgl/src/misc/lv_tlsf.c **** 
 195:lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:lvgl/src/misc/lv_tlsf.c **** {
 199:lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:lvgl/src/misc/lv_tlsf.c **** 	if (high)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 5


 202:lvgl/src/misc/lv_tlsf.c **** 	{
 203:lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:lvgl/src/misc/lv_tlsf.c **** 	}
 205:lvgl/src/misc/lv_tlsf.c **** 	else
 206:lvgl/src/misc/lv_tlsf.c **** 	{
 207:lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:lvgl/src/misc/lv_tlsf.c **** 
 209:lvgl/src/misc/lv_tlsf.c **** 	}
 210:lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:lvgl/src/misc/lv_tlsf.c **** }
 212:lvgl/src/misc/lv_tlsf.c **** #else
 213:lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:lvgl/src/misc/lv_tlsf.c **** #endif
 215:lvgl/src/misc/lv_tlsf.c **** 
 216:lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:lvgl/src/misc/lv_tlsf.c **** 
 218:lvgl/src/misc/lv_tlsf.c **** /*
 219:lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:lvgl/src/misc/lv_tlsf.c **** */
 221:lvgl/src/misc/lv_tlsf.c **** 
 222:lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:lvgl/src/misc/lv_tlsf.c **** {
 225:lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:lvgl/src/misc/lv_tlsf.c **** 	*/
 229:lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:lvgl/src/misc/lv_tlsf.c **** };
 231:lvgl/src/misc/lv_tlsf.c **** 
 232:lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:lvgl/src/misc/lv_tlsf.c **** {
 235:lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:lvgl/src/misc/lv_tlsf.c **** #else
 239:lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:lvgl/src/misc/lv_tlsf.c **** #endif
 242:lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:lvgl/src/misc/lv_tlsf.c **** 
 244:lvgl/src/misc/lv_tlsf.c **** 	/*
 245:lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:lvgl/src/misc/lv_tlsf.c **** 	*/
 254:lvgl/src/misc/lv_tlsf.c **** 
 255:lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:lvgl/src/misc/lv_tlsf.c **** 	/*
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 6


 259:lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
 260:lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:lvgl/src/misc/lv_tlsf.c **** 	*/
 262:lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:lvgl/src/misc/lv_tlsf.c **** #else
 264:lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:lvgl/src/misc/lv_tlsf.c **** #endif
 266:lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:lvgl/src/misc/lv_tlsf.c **** 
 270:lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:lvgl/src/misc/lv_tlsf.c **** };
 272:lvgl/src/misc/lv_tlsf.c **** 
 273:lvgl/src/misc/lv_tlsf.c **** /*
 274:lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:lvgl/src/misc/lv_tlsf.c **** */
 276:lvgl/src/misc/lv_tlsf.c **** 
 277:lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:lvgl/src/misc/lv_tlsf.c **** 
 281:lvgl/src/misc/lv_tlsf.c **** /*
 282:lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:lvgl/src/misc/lv_tlsf.c **** */
 284:lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:lvgl/src/misc/lv_tlsf.c **** 
 286:lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:lvgl/src/misc/lv_tlsf.c **** #endif
 289:lvgl/src/misc/lv_tlsf.c **** 
 290:lvgl/src/misc/lv_tlsf.c **** /*
 291:lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:lvgl/src/misc/lv_tlsf.c **** */
 293:lvgl/src/misc/lv_tlsf.c **** 
 294:lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:lvgl/src/misc/lv_tlsf.c **** 
 299:lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:lvgl/src/misc/lv_tlsf.c **** 
 304:lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:lvgl/src/misc/lv_tlsf.c **** 
 307:lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:lvgl/src/misc/lv_tlsf.c **** 
 310:lvgl/src/misc/lv_tlsf.c **** /*
 311:lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:lvgl/src/misc/lv_tlsf.c **** */
 313:lvgl/src/misc/lv_tlsf.c **** 
 314:lvgl/src/misc/lv_tlsf.c **** /*
 315:lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 7


 316:lvgl/src/misc/lv_tlsf.c **** **
 317:lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:lvgl/src/misc/lv_tlsf.c **** */
 324:lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:lvgl/src/misc/lv_tlsf.c **** {
 326:lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:lvgl/src/misc/lv_tlsf.c **** 
 329:lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:lvgl/src/misc/lv_tlsf.c **** 
 332:lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:lvgl/src/misc/lv_tlsf.c **** 
 337:lvgl/src/misc/lv_tlsf.c **** /*
 338:lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:lvgl/src/misc/lv_tlsf.c **** */
 343:lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:lvgl/src/misc/lv_tlsf.c **** 
 346:lvgl/src/misc/lv_tlsf.c **** /*
 347:lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:lvgl/src/misc/lv_tlsf.c **** */
 350:lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:lvgl/src/misc/lv_tlsf.c **** 
 352:lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:lvgl/src/misc/lv_tlsf.c **** 
 356:lvgl/src/misc/lv_tlsf.c **** /*
 357:lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:lvgl/src/misc/lv_tlsf.c **** */
 361:lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:lvgl/src/misc/lv_tlsf.c **** 
 365:lvgl/src/misc/lv_tlsf.c **** 
 366:lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:lvgl/src/misc/lv_tlsf.c **** {
 369:lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:lvgl/src/misc/lv_tlsf.c **** 
 372:lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 8


 373:lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
 374:lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:lvgl/src/misc/lv_tlsf.c **** 
 376:lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:lvgl/src/misc/lv_tlsf.c **** 
 380:lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:lvgl/src/misc/lv_tlsf.c **** 
 383:lvgl/src/misc/lv_tlsf.c **** /*
 384:lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:lvgl/src/misc/lv_tlsf.c **** */
 386:lvgl/src/misc/lv_tlsf.c **** 
 387:lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:lvgl/src/misc/lv_tlsf.c **** {
  29              		.loc 1 388 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 389:lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  34              		.loc 1 389 2 view .LVU1
  35              		.loc 1 389 14 is_stmt 0 view .LVU2
  36 0000 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
 390:lvgl/src/misc/lv_tlsf.c **** }
  38              		.loc 1 390 1 view .LVU3
  39 0002 20F00300 		bic	r0, r0, #3
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE3:
  44              		.section	.text.block_set_size,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	block_set_size:
  51              	.LVL2:
  52              	.LFB4:
 391:lvgl/src/misc/lv_tlsf.c **** 
 392:lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:lvgl/src/misc/lv_tlsf.c **** {
  53              		.loc 1 393 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 394:lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  58              		.loc 1 394 2 view .LVU5
  59              		.loc 1 394 15 is_stmt 0 view .LVU6
  60 0000 4368     		ldr	r3, [r0, #4]
  61              	.LVL3:
 395:lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  62              		.loc 1 395 2 is_stmt 1 view .LVU7
  63              		.loc 1 395 32 is_stmt 0 view .LVU8
  64 0002 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 9


  65              	.LVL4:
  66              		.loc 1 395 21 view .LVU9
  67 0006 0B43     		orrs	r3, r3, r1
  68              		.loc 1 395 14 view .LVU10
  69 0008 4360     		str	r3, [r0, #4]
  70              	.LVL5:
 396:lvgl/src/misc/lv_tlsf.c **** }
  71              		.loc 1 396 1 view .LVU11
  72 000a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE4:
  76              		.section	.text.block_is_last,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	block_is_last:
  83              	.LVL6:
  84              	.LFB5:
 397:lvgl/src/misc/lv_tlsf.c **** 
 398:lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:lvgl/src/misc/lv_tlsf.c **** {
  85              		.loc 1 399 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 399 1 is_stmt 0 view .LVU13
  90 0000 08B5     		push	{r3, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 400:lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  95              		.loc 1 400 2 is_stmt 1 view .LVU14
  96              		.loc 1 400 9 is_stmt 0 view .LVU15
  97 0002 FFF7FEFF 		bl	block_size
  98              	.LVL7:
 401:lvgl/src/misc/lv_tlsf.c **** }
  99              		.loc 1 401 1 view .LVU16
 100 0006 B0FA80F0 		clz	r0, r0
 101 000a 4009     		lsrs	r0, r0, #5
 102 000c 08BD     		pop	{r3, pc}
 103              		.cfi_endproc
 104              	.LFE5:
 106              		.section	.text.block_is_free,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	block_is_free:
 113              	.LVL8:
 114              	.LFB6:
 402:lvgl/src/misc/lv_tlsf.c **** 
 403:lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
 404:lvgl/src/misc/lv_tlsf.c **** {
 115              		.loc 1 404 1 is_stmt 1 view -0
 116              		.cfi_startproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 10


 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 405:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 120              		.loc 1 405 2 view .LVU18
 121              		.loc 1 405 9 is_stmt 0 view .LVU19
 122 0000 4068     		ldr	r0, [r0, #4]
 123              	.LVL9:
 406:lvgl/src/misc/lv_tlsf.c **** }
 124              		.loc 1 406 1 view .LVU20
 125 0002 00F00100 		and	r0, r0, #1
 126 0006 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE6:
 130              		.section	.text.block_set_free,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	block_set_free:
 137              	.LVL10:
 138              	.LFB7:
 407:lvgl/src/misc/lv_tlsf.c **** 
 408:lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:lvgl/src/misc/lv_tlsf.c **** {
 139              		.loc 1 409 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 410:lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 144              		.loc 1 410 2 view .LVU22
 145              		.loc 1 410 14 is_stmt 0 view .LVU23
 146 0000 4368     		ldr	r3, [r0, #4]
 147 0002 43F00103 		orr	r3, r3, #1
 148 0006 4360     		str	r3, [r0, #4]
 411:lvgl/src/misc/lv_tlsf.c **** }
 149              		.loc 1 411 1 view .LVU24
 150 0008 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE7:
 154              		.section	.text.block_set_used,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	block_set_used:
 161              	.LVL11:
 162              	.LFB8:
 412:lvgl/src/misc/lv_tlsf.c **** 
 413:lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:lvgl/src/misc/lv_tlsf.c **** {
 163              		.loc 1 414 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 11


 415:lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
 168              		.loc 1 415 2 view .LVU26
 169              		.loc 1 415 14 is_stmt 0 view .LVU27
 170 0000 4368     		ldr	r3, [r0, #4]
 171 0002 23F00103 		bic	r3, r3, #1
 172 0006 4360     		str	r3, [r0, #4]
 416:lvgl/src/misc/lv_tlsf.c **** }
 173              		.loc 1 416 1 view .LVU28
 174 0008 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE8:
 178              		.section	.text.block_is_prev_free,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	block_is_prev_free:
 185              	.LVL12:
 186              	.LFB9:
 417:lvgl/src/misc/lv_tlsf.c **** 
 418:lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:lvgl/src/misc/lv_tlsf.c **** {
 187              		.loc 1 419 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 420:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 192              		.loc 1 420 2 view .LVU30
 193              		.loc 1 420 9 is_stmt 0 view .LVU31
 194 0000 4068     		ldr	r0, [r0, #4]
 195              	.LVL13:
 421:lvgl/src/misc/lv_tlsf.c **** }
 196              		.loc 1 421 1 view .LVU32
 197 0002 00F00200 		and	r0, r0, #2
 198 0006 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE9:
 202              		.section	.text.block_set_prev_free,"ax",%progbits
 203              		.align	1
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	block_set_prev_free:
 209              	.LVL14:
 210              	.LFB10:
 422:lvgl/src/misc/lv_tlsf.c **** 
 423:lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:lvgl/src/misc/lv_tlsf.c **** {
 211              		.loc 1 424 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 425:lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 216              		.loc 1 425 2 view .LVU34
 217              		.loc 1 425 14 is_stmt 0 view .LVU35
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 12


 218 0000 4368     		ldr	r3, [r0, #4]
 219 0002 43F00203 		orr	r3, r3, #2
 220 0006 4360     		str	r3, [r0, #4]
 426:lvgl/src/misc/lv_tlsf.c **** }
 221              		.loc 1 426 1 view .LVU36
 222 0008 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE10:
 226              		.section	.text.block_set_prev_used,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	block_set_prev_used:
 233              	.LVL15:
 234              	.LFB11:
 427:lvgl/src/misc/lv_tlsf.c **** 
 428:lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:lvgl/src/misc/lv_tlsf.c **** {
 235              		.loc 1 429 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 430:lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 240              		.loc 1 430 2 view .LVU38
 241              		.loc 1 430 14 is_stmt 0 view .LVU39
 242 0000 4368     		ldr	r3, [r0, #4]
 243 0002 23F00203 		bic	r3, r3, #2
 244 0006 4360     		str	r3, [r0, #4]
 431:lvgl/src/misc/lv_tlsf.c **** }
 245              		.loc 1 431 1 view .LVU40
 246 0008 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE11:
 250              		.section	.text.block_from_ptr,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	block_from_ptr:
 257              	.LVL16:
 258              	.LFB12:
 432:lvgl/src/misc/lv_tlsf.c **** 
 433:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:lvgl/src/misc/lv_tlsf.c **** {
 259              		.loc 1 434 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 435:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 264              		.loc 1 435 2 view .LVU42
 436:lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:lvgl/src/misc/lv_tlsf.c **** }
 265              		.loc 1 437 1 is_stmt 0 view .LVU43
 266 0000 0838     		subs	r0, r0, #8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 13


 267              	.LVL17:
 268              		.loc 1 437 1 view .LVU44
 269 0002 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE12:
 273              		.section	.text.block_to_ptr,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	block_to_ptr:
 280              	.LVL18:
 281              	.LFB13:
 438:lvgl/src/misc/lv_tlsf.c **** 
 439:lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:lvgl/src/misc/lv_tlsf.c **** {
 282              		.loc 1 440 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 441:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 287              		.loc 1 441 2 view .LVU46
 442:lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:lvgl/src/misc/lv_tlsf.c **** }
 288              		.loc 1 443 1 is_stmt 0 view .LVU47
 289 0000 0830     		adds	r0, r0, #8
 290              	.LVL19:
 291              		.loc 1 443 1 view .LVU48
 292 0002 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE13:
 296              		.section	.text.offset_to_block,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	offset_to_block:
 303              	.LVL20:
 304              	.LFB14:
 444:lvgl/src/misc/lv_tlsf.c **** 
 445:lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:lvgl/src/misc/lv_tlsf.c **** {
 305              		.loc 1 447 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 448:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 310              		.loc 1 448 2 view .LVU50
 449:lvgl/src/misc/lv_tlsf.c **** }
 311              		.loc 1 449 1 is_stmt 0 view .LVU51
 312 0000 0844     		add	r0, r0, r1
 313              	.LVL21:
 314              		.loc 1 449 1 view .LVU52
 315 0002 7047     		bx	lr
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 14


 316              		.cfi_endproc
 317              	.LFE14:
 319              		.section	.text.block_prev,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	block_prev:
 326              	.LVL22:
 327              	.LFB15:
 450:lvgl/src/misc/lv_tlsf.c **** 
 451:lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:lvgl/src/misc/lv_tlsf.c **** {
 328              		.loc 1 453 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		.loc 1 453 1 is_stmt 0 view .LVU54
 333 0000 10B5     		push	{r4, lr}
 334              	.LCFI1:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
 338 0002 0446     		mov	r4, r0
 454:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 339              		.loc 1 454 2 is_stmt 1 view .LVU55
 340              		.loc 1 454 2 view .LVU56
 341 0004 FFF7FEFF 		bl	block_is_prev_free
 342              	.LVL23:
 343              		.loc 1 454 2 is_stmt 0 view .LVU57
 344 0008 00B9     		cbnz	r0, .L15
 345              	.L16:
 346              		.loc 1 454 2 is_stmt 1 discriminator 1 view .LVU58
 347              		.loc 1 454 2 discriminator 1 view .LVU59
 348              		.loc 1 454 2 discriminator 1 view .LVU60
 349              		.loc 1 454 2 discriminator 1 view .LVU61
 350 000a FEE7     		b	.L16
 351              	.L15:
 352              		.loc 1 454 2 discriminator 4 view .LVU62
 455:lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 353              		.loc 1 455 2 discriminator 4 view .LVU63
 456:lvgl/src/misc/lv_tlsf.c **** }
 354              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU64
 355 000c 2068     		ldr	r0, [r4]
 356 000e 10BD     		pop	{r4, pc}
 357              		.loc 1 456 1 discriminator 4 view .LVU65
 358              		.cfi_endproc
 359              	.LFE15:
 361              		.section	.text.block_next,"ax",%progbits
 362              		.align	1
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	block_next:
 368              	.LVL24:
 369              	.LFB16:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 15


 457:lvgl/src/misc/lv_tlsf.c **** 
 458:lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:lvgl/src/misc/lv_tlsf.c **** {
 370              		.loc 1 460 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 460 1 is_stmt 0 view .LVU67
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              	.LCFI2:
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 0446     		mov	r4, r0
 461:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 383              		.loc 1 461 2 is_stmt 1 view .LVU68
 384              		.loc 1 461 41 is_stmt 0 view .LVU69
 385 0004 FFF7FEFF 		bl	block_to_ptr
 386              	.LVL25:
 387              		.loc 1 461 41 view .LVU70
 388 0008 0546     		mov	r5, r0
 462:lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 389              		.loc 1 462 3 view .LVU71
 390 000a 2046     		mov	r0, r4
 391 000c FFF7FEFF 		bl	block_size
 392              	.LVL26:
 461:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 393              		.loc 1 461 25 view .LVU72
 394 0010 011F     		subs	r1, r0, #4
 395 0012 2846     		mov	r0, r5
 396 0014 FFF7FEFF 		bl	offset_to_block
 397              	.LVL27:
 398 0018 0546     		mov	r5, r0
 399              	.LVL28:
 463:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 400              		.loc 1 463 2 is_stmt 1 view .LVU73
 401              		.loc 1 463 2 view .LVU74
 402 001a 2046     		mov	r0, r4
 403              	.LVL29:
 404              		.loc 1 463 2 is_stmt 0 view .LVU75
 405 001c FFF7FEFF 		bl	block_is_last
 406              	.LVL30:
 407 0020 00B1     		cbz	r0, .L18
 408              	.L20:
 409              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU76
 410              		.loc 1 463 2 discriminator 1 view .LVU77
 411              		.loc 1 463 2 discriminator 1 view .LVU78
 412              		.loc 1 463 2 discriminator 1 view .LVU79
 413 0022 FEE7     		b	.L20
 414              	.L18:
 464:lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:lvgl/src/misc/lv_tlsf.c **** }
 415              		.loc 1 465 1 is_stmt 0 view .LVU80
 416 0024 2846     		mov	r0, r5
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 16


 417 0026 38BD     		pop	{r3, r4, r5, pc}
 418              		.loc 1 465 1 view .LVU81
 419              		.cfi_endproc
 420              	.LFE16:
 422              		.section	.text.block_link_next,"ax",%progbits
 423              		.align	1
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	block_link_next:
 429              	.LVL31:
 430              	.LFB17:
 466:lvgl/src/misc/lv_tlsf.c **** 
 467:lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:lvgl/src/misc/lv_tlsf.c **** {
 431              		.loc 1 469 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 469 1 is_stmt 0 view .LVU83
 436 0000 10B5     		push	{r4, lr}
 437              	.LCFI3:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 441 0002 0446     		mov	r4, r0
 470:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 442              		.loc 1 470 2 is_stmt 1 view .LVU84
 443              		.loc 1 470 25 is_stmt 0 view .LVU85
 444 0004 FFF7FEFF 		bl	block_next
 445              	.LVL32:
 471:lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 446              		.loc 1 471 2 is_stmt 1 view .LVU86
 447              		.loc 1 471 24 is_stmt 0 view .LVU87
 448 0008 0460     		str	r4, [r0]
 472:lvgl/src/misc/lv_tlsf.c **** 	return next;
 449              		.loc 1 472 2 is_stmt 1 view .LVU88
 473:lvgl/src/misc/lv_tlsf.c **** }
 450              		.loc 1 473 1 is_stmt 0 view .LVU89
 451 000a 10BD     		pop	{r4, pc}
 452              		.loc 1 473 1 view .LVU90
 453              		.cfi_endproc
 454              	.LFE17:
 456              		.section	.text.block_mark_as_free,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	block_mark_as_free:
 463              	.LVL33:
 464              	.LFB18:
 474:lvgl/src/misc/lv_tlsf.c **** 
 475:lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:lvgl/src/misc/lv_tlsf.c **** {
 465              		.loc 1 476 1 is_stmt 1 view -0
 466              		.cfi_startproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 17


 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		.loc 1 476 1 is_stmt 0 view .LVU92
 470 0000 10B5     		push	{r4, lr}
 471              	.LCFI4:
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 475 0002 0446     		mov	r4, r0
 477:lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 476              		.loc 1 478 2 is_stmt 1 view .LVU93
 477              		.loc 1 478 25 is_stmt 0 view .LVU94
 478 0004 FFF7FEFF 		bl	block_link_next
 479              	.LVL34:
 479:lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 480              		.loc 1 479 2 is_stmt 1 view .LVU95
 481 0008 FFF7FEFF 		bl	block_set_prev_free
 482              	.LVL35:
 480:lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 483              		.loc 1 480 2 view .LVU96
 484 000c 2046     		mov	r0, r4
 485 000e FFF7FEFF 		bl	block_set_free
 486              	.LVL36:
 481:lvgl/src/misc/lv_tlsf.c **** }
 487              		.loc 1 481 1 is_stmt 0 view .LVU97
 488 0012 10BD     		pop	{r4, pc}
 489              		.loc 1 481 1 view .LVU98
 490              		.cfi_endproc
 491              	.LFE18:
 493              		.section	.text.block_mark_as_used,"ax",%progbits
 494              		.align	1
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	block_mark_as_used:
 500              	.LVL37:
 501              	.LFB19:
 482:lvgl/src/misc/lv_tlsf.c **** 
 483:lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:lvgl/src/misc/lv_tlsf.c **** {
 502              		.loc 1 484 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		.loc 1 484 1 is_stmt 0 view .LVU100
 507 0000 10B5     		push	{r4, lr}
 508              	.LCFI5:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 512 0002 0446     		mov	r4, r0
 485:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 513              		.loc 1 485 2 is_stmt 1 view .LVU101
 514              		.loc 1 485 25 is_stmt 0 view .LVU102
 515 0004 FFF7FEFF 		bl	block_next
 516              	.LVL38:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 18


 486:lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 517              		.loc 1 486 2 is_stmt 1 view .LVU103
 518 0008 FFF7FEFF 		bl	block_set_prev_used
 519              	.LVL39:
 487:lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 520              		.loc 1 487 2 view .LVU104
 521 000c 2046     		mov	r0, r4
 522 000e FFF7FEFF 		bl	block_set_used
 523              	.LVL40:
 488:lvgl/src/misc/lv_tlsf.c **** }
 524              		.loc 1 488 1 is_stmt 0 view .LVU105
 525 0012 10BD     		pop	{r4, pc}
 526              		.loc 1 488 1 view .LVU106
 527              		.cfi_endproc
 528              	.LFE19:
 530              		.section	.text.align_up,"ax",%progbits
 531              		.align	1
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	align_up:
 537              	.LVL41:
 538              	.LFB20:
 489:lvgl/src/misc/lv_tlsf.c **** 
 490:lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:lvgl/src/misc/lv_tlsf.c **** {
 539              		.loc 1 491 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 492:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 544              		.loc 1 492 2 view .LVU108
 545              		.loc 1 492 2 view .LVU109
 546 0000 4B1E     		subs	r3, r1, #1
 547 0002 0B42     		tst	r3, r1
 548 0004 00D0     		beq	.L29
 549              	.L30:
 550              		.loc 1 492 2 discriminator 1 view .LVU110
 551              		.loc 1 492 2 discriminator 1 view .LVU111
 552              		.loc 1 492 2 discriminator 1 view .LVU112
 553              		.loc 1 492 2 discriminator 1 view .LVU113
 554 0006 FEE7     		b	.L30
 555              	.L29:
 556              		.loc 1 492 2 discriminator 2 view .LVU114
 493:lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 557              		.loc 1 493 2 discriminator 2 view .LVU115
 558              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU116
 559 0008 0844     		add	r0, r0, r1
 560              	.LVL42:
 561              		.loc 1 493 12 discriminator 2 view .LVU117
 562 000a 0138     		subs	r0, r0, #1
 563              		.loc 1 493 29 discriminator 2 view .LVU118
 564 000c 4942     		rsbs	r1, r1, #0
 565              	.LVL43:
 494:lvgl/src/misc/lv_tlsf.c **** }
 566              		.loc 1 494 1 discriminator 2 view .LVU119
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 19


 567 000e 0840     		ands	r0, r0, r1
 568 0010 7047     		bx	lr
 569              		.cfi_endproc
 570              	.LFE20:
 572              		.section	.text.align_down,"ax",%progbits
 573              		.align	1
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	align_down:
 579              	.LVL44:
 580              	.LFB21:
 495:lvgl/src/misc/lv_tlsf.c **** 
 496:lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:lvgl/src/misc/lv_tlsf.c **** {
 581              		.loc 1 497 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 498:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 586              		.loc 1 498 2 view .LVU121
 587              		.loc 1 498 2 view .LVU122
 588 0000 4B1E     		subs	r3, r1, #1
 589 0002 0B42     		tst	r3, r1
 590 0004 00D0     		beq	.L32
 591              	.L33:
 592              		.loc 1 498 2 discriminator 1 view .LVU123
 593              		.loc 1 498 2 discriminator 1 view .LVU124
 594              		.loc 1 498 2 discriminator 1 view .LVU125
 595              		.loc 1 498 2 discriminator 1 view .LVU126
 596 0006 FEE7     		b	.L33
 597              	.L32:
 598              		.loc 1 498 2 discriminator 2 view .LVU127
 499:lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 599              		.loc 1 499 2 discriminator 2 view .LVU128
 600              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU129
 601 0008 4942     		rsbs	r1, r1, #0
 602              	.LVL45:
 500:lvgl/src/misc/lv_tlsf.c **** }
 603              		.loc 1 500 1 discriminator 2 view .LVU130
 604 000a 0840     		ands	r0, r0, r1
 605              	.LVL46:
 606              		.loc 1 500 1 discriminator 2 view .LVU131
 607 000c 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE21:
 611              		.section	.text.align_ptr,"ax",%progbits
 612              		.align	1
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	align_ptr:
 618              	.LVL47:
 619              	.LFB22:
 501:lvgl/src/misc/lv_tlsf.c **** 
 502:lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 20


 503:lvgl/src/misc/lv_tlsf.c **** {
 620              		.loc 1 503 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 504:lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 625              		.loc 1 504 2 view .LVU133
 505:lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 626              		.loc 1 505 30 is_stmt 0 view .LVU134
 627 0000 0844     		add	r0, r0, r1
 628              	.LVL48:
 629              		.loc 1 505 30 view .LVU135
 630 0002 0138     		subs	r0, r0, #1
 631              		.loc 1 505 47 view .LVU136
 632 0004 4B42     		rsbs	r3, r1, #0
 633              		.loc 1 505 45 view .LVU137
 634 0006 1840     		ands	r0, r0, r3
 635              	.LVL49:
 506:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 636              		.loc 1 506 2 is_stmt 1 view .LVU138
 637              		.loc 1 506 2 view .LVU139
 638 0008 4B1E     		subs	r3, r1, #1
 639 000a 0B42     		tst	r3, r1
 640 000c 00D0     		beq	.L35
 641              	.L36:
 642              		.loc 1 506 2 discriminator 1 view .LVU140
 643              		.loc 1 506 2 discriminator 1 view .LVU141
 644              		.loc 1 506 2 discriminator 1 view .LVU142
 645              		.loc 1 506 2 discriminator 1 view .LVU143
 646 000e FEE7     		b	.L36
 647              	.L35:
 648              		.loc 1 506 2 discriminator 2 view .LVU144
 507:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 649              		.loc 1 507 2 discriminator 2 view .LVU145
 508:lvgl/src/misc/lv_tlsf.c **** }
 650              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU146
 651 0010 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE22:
 655              		.section	.text.adjust_request_size,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	adjust_request_size:
 662              	.LVL50:
 663              	.LFB23:
 509:lvgl/src/misc/lv_tlsf.c **** 
 510:lvgl/src/misc/lv_tlsf.c **** /*
 511:lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:lvgl/src/misc/lv_tlsf.c **** */
 514:lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:lvgl/src/misc/lv_tlsf.c **** {
 664              		.loc 1 515 1 is_stmt 1 view -0
 665              		.cfi_startproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 21


 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		.loc 1 515 1 is_stmt 0 view .LVU148
 669 0000 08B5     		push	{r3, lr}
 670              	.LCFI6:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 516:lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 674              		.loc 1 516 2 is_stmt 1 view .LVU149
 675              	.LVL51:
 517:lvgl/src/misc/lv_tlsf.c **** 	if (size)
 676              		.loc 1 517 2 view .LVU150
 677              		.loc 1 517 5 is_stmt 0 view .LVU151
 678 0002 00B9     		cbnz	r0, .L41
 679              	.LVL52:
 680              	.L38:
 518:lvgl/src/misc/lv_tlsf.c **** 	{
 519:lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:lvgl/src/misc/lv_tlsf.c **** 
 521:lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:lvgl/src/misc/lv_tlsf.c **** 		{
 524:lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:lvgl/src/misc/lv_tlsf.c **** 		}
 526:lvgl/src/misc/lv_tlsf.c **** 	}
 527:lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 681              		.loc 1 527 2 is_stmt 1 view .LVU152
 528:lvgl/src/misc/lv_tlsf.c **** }
 682              		.loc 1 528 1 is_stmt 0 view .LVU153
 683 0004 08BD     		pop	{r3, pc}
 684              	.LVL53:
 685              	.L41:
 686              	.LBB2:
 519:lvgl/src/misc/lv_tlsf.c **** 
 687              		.loc 1 519 3 is_stmt 1 view .LVU154
 519:lvgl/src/misc/lv_tlsf.c **** 
 688              		.loc 1 519 26 is_stmt 0 view .LVU155
 689 0006 FFF7FEFF 		bl	align_up
 690              	.LVL54:
 522:lvgl/src/misc/lv_tlsf.c **** 		{
 691              		.loc 1 522 3 is_stmt 1 view .LVU156
 522:lvgl/src/misc/lv_tlsf.c **** 		{
 692              		.loc 1 522 6 is_stmt 0 view .LVU157
 693 000a B0F5004F 		cmp	r0, #32768
 694 000e 03D2     		bcs	.L39
 524:lvgl/src/misc/lv_tlsf.c **** 		}
 695              		.loc 1 524 4 is_stmt 1 view .LVU158
 524:lvgl/src/misc/lv_tlsf.c **** 		}
 696              		.loc 1 524 11 is_stmt 0 view .LVU159
 697 0010 0C28     		cmp	r0, #12
 698 0012 38BF     		it	cc
 699 0014 0C20     		movcc	r0, #12
 700              	.LVL55:
 524:lvgl/src/misc/lv_tlsf.c **** 		}
 701              		.loc 1 524 11 view .LVU160
 702 0016 F5E7     		b	.L38
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 22


 703              	.LVL56:
 704              	.L39:
 524:lvgl/src/misc/lv_tlsf.c **** 		}
 705              		.loc 1 524 11 view .LVU161
 706              	.LBE2:
 516:lvgl/src/misc/lv_tlsf.c **** 	if (size)
 707              		.loc 1 516 9 view .LVU162
 708 0018 0020     		movs	r0, #0
 709              	.LVL57:
 516:lvgl/src/misc/lv_tlsf.c **** 	if (size)
 710              		.loc 1 516 9 view .LVU163
 711 001a F3E7     		b	.L38
 712              		.cfi_endproc
 713              	.LFE23:
 715              		.section	.text.remove_free_block,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 721              	remove_free_block:
 722              	.LVL58:
 723              	.LFB27:
 529:lvgl/src/misc/lv_tlsf.c **** 
 530:lvgl/src/misc/lv_tlsf.c **** /*
 531:lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:lvgl/src/misc/lv_tlsf.c **** */
 534:lvgl/src/misc/lv_tlsf.c **** 
 535:lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:lvgl/src/misc/lv_tlsf.c **** {
 537:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:lvgl/src/misc/lv_tlsf.c **** 	{
 540:lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
 542:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 543:lvgl/src/misc/lv_tlsf.c **** 	}
 544:lvgl/src/misc/lv_tlsf.c **** 	else
 545:lvgl/src/misc/lv_tlsf.c **** 	{
 546:lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:lvgl/src/misc/lv_tlsf.c **** 	}
 550:lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:lvgl/src/misc/lv_tlsf.c **** }
 553:lvgl/src/misc/lv_tlsf.c **** 
 554:lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:lvgl/src/misc/lv_tlsf.c **** {
 557:lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:lvgl/src/misc/lv_tlsf.c **** 	{
 559:lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:lvgl/src/misc/lv_tlsf.c **** 	}
 562:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 23


 564:lvgl/src/misc/lv_tlsf.c **** 
 565:lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:lvgl/src/misc/lv_tlsf.c **** {
 567:lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:lvgl/src/misc/lv_tlsf.c **** 
 570:lvgl/src/misc/lv_tlsf.c **** 	/*
 571:lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:lvgl/src/misc/lv_tlsf.c **** 	*/
 574:lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:lvgl/src/misc/lv_tlsf.c **** 	{
 577:lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:lvgl/src/misc/lv_tlsf.c **** 		{
 581:lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:lvgl/src/misc/lv_tlsf.c **** 		}
 584:lvgl/src/misc/lv_tlsf.c **** 
 585:lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:lvgl/src/misc/lv_tlsf.c **** 	}
 589:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:lvgl/src/misc/lv_tlsf.c **** 
 593:lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:lvgl/src/misc/lv_tlsf.c **** }
 596:lvgl/src/misc/lv_tlsf.c **** 
 597:lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
 599:lvgl/src/misc/lv_tlsf.c **** {
 724              		.loc 1 599 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		.loc 1 599 1 is_stmt 0 view .LVU165
 729 0000 00B5     		push	{lr}
 730              	.LCFI7:
 731              		.cfi_def_cfa_offset 4
 732              		.cfi_offset 14, -4
 733 0002 8646     		mov	lr, r0
 734 0004 9446     		mov	ip, r2
 600:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 735              		.loc 1 600 2 is_stmt 1 view .LVU166
 736              		.loc 1 600 18 is_stmt 0 view .LVU167
 737 0006 CA68     		ldr	r2, [r1, #12]
 738              	.LVL59:
 601:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 739              		.loc 1 601 2 is_stmt 1 view .LVU168
 740              		.loc 1 601 18 is_stmt 0 view .LVU169
 741 0008 8868     		ldr	r0, [r1, #8]
 742              	.LVL60:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 24


 602:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 743              		.loc 1 602 2 is_stmt 1 view .LVU170
 744              		.loc 1 602 2 view .LVU171
 745 000a 5AB1     		cbz	r2, .L44
 746              		.loc 1 602 2 discriminator 2 view .LVU172
 603:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 747              		.loc 1 603 2 discriminator 2 view .LVU173
 748              		.loc 1 603 2 discriminator 2 view .LVU174
 749 000c 58B1     		cbz	r0, .L46
 750              		.loc 1 603 2 discriminator 2 view .LVU175
 604:lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 751              		.loc 1 604 2 discriminator 2 view .LVU176
 752              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU177
 753 000e C260     		str	r2, [r0, #12]
 605:lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 754              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU178
 755              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU179
 756 0010 9060     		str	r0, [r2, #8]
 606:lvgl/src/misc/lv_tlsf.c **** 
 607:lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 757              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU180
 758              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU181
 759 0012 03EB4C12 		add	r2, r3, ip, lsl #5
 760              	.LVL61:
 761              		.loc 1 608 25 discriminator 2 view .LVU182
 762 0016 0E32     		adds	r2, r2, #14
 763 0018 5EF82220 		ldr	r2, [lr, r2, lsl #2]
 764              		.loc 1 608 5 discriminator 2 view .LVU183
 765 001c 8A42     		cmp	r2, r1
 766 001e 03D0     		beq	.L49
 767              	.LVL62:
 768              	.L42:
 609:lvgl/src/misc/lv_tlsf.c **** 	{
 610:lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:lvgl/src/misc/lv_tlsf.c **** 
 612:lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
 613:lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:lvgl/src/misc/lv_tlsf.c **** 		{
 615:lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:lvgl/src/misc/lv_tlsf.c **** 
 617:lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:lvgl/src/misc/lv_tlsf.c **** 			{
 620:lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:lvgl/src/misc/lv_tlsf.c **** 			}
 622:lvgl/src/misc/lv_tlsf.c **** 		}
 623:lvgl/src/misc/lv_tlsf.c **** 	}
 624:lvgl/src/misc/lv_tlsf.c **** }
 769              		.loc 1 624 1 view .LVU184
 770 0020 5DF804FB 		ldr	pc, [sp], #4
 771              	.LVL63:
 772              	.L44:
 602:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 773              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU185
 602:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 774              		.loc 1 602 2 discriminator 1 view .LVU186
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 25


 602:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 775              		.loc 1 602 2 discriminator 1 view .LVU187
 602:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 776              		.loc 1 602 2 discriminator 1 view .LVU188
 777 0024 FEE7     		b	.L44
 778              	.L46:
 603:lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 779              		.loc 1 603 2 discriminator 2 view .LVU189
 603:lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 780              		.loc 1 603 2 discriminator 2 view .LVU190
 603:lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 781              		.loc 1 603 2 discriminator 2 view .LVU191
 603:lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 782              		.loc 1 603 2 discriminator 2 view .LVU192
 783 0026 FEE7     		b	.L46
 784              	.LVL64:
 785              	.L49:
 610:lvgl/src/misc/lv_tlsf.c **** 
 786              		.loc 1 610 3 view .LVU193
 610:lvgl/src/misc/lv_tlsf.c **** 
 787              		.loc 1 610 27 is_stmt 0 view .LVU194
 788 0028 03EB4C12 		add	r2, r3, ip, lsl #5
 789 002c 0E32     		adds	r2, r2, #14
 790 002e 4EF82200 		str	r0, [lr, r2, lsl #2]
 613:lvgl/src/misc/lv_tlsf.c **** 		{
 791              		.loc 1 613 3 is_stmt 1 view .LVU195
 613:lvgl/src/misc/lv_tlsf.c **** 		{
 792              		.loc 1 613 6 is_stmt 0 view .LVU196
 793 0032 8645     		cmp	lr, r0
 794 0034 F4D1     		bne	.L42
 615:lvgl/src/misc/lv_tlsf.c **** 
 795              		.loc 1 615 4 is_stmt 1 view .LVU197
 615:lvgl/src/misc/lv_tlsf.c **** 
 796              		.loc 1 615 35 is_stmt 0 view .LVU198
 797 0036 0121     		movs	r1, #1
 798              	.LVL65:
 615:lvgl/src/misc/lv_tlsf.c **** 
 799              		.loc 1 615 35 view .LVU199
 800 0038 9940     		lsls	r1, r1, r3
 615:lvgl/src/misc/lv_tlsf.c **** 
 801              		.loc 1 615 27 view .LVU200
 802 003a 0CF10402 		add	r2, ip, #4
 803 003e 0EEB8202 		add	r2, lr, r2, lsl #2
 804 0042 5368     		ldr	r3, [r2, #4]
 805              	.LVL66:
 615:lvgl/src/misc/lv_tlsf.c **** 
 806              		.loc 1 615 27 view .LVU201
 807 0044 23EA0103 		bic	r3, r3, r1
 808 0048 5360     		str	r3, [r2, #4]
 618:lvgl/src/misc/lv_tlsf.c **** 			{
 809              		.loc 1 618 4 is_stmt 1 view .LVU202
 618:lvgl/src/misc/lv_tlsf.c **** 			{
 810              		.loc 1 618 7 is_stmt 0 view .LVU203
 811 004a 002B     		cmp	r3, #0
 812 004c E8D1     		bne	.L42
 620:lvgl/src/misc/lv_tlsf.c **** 			}
 813              		.loc 1 620 5 is_stmt 1 view .LVU204
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 26


 620:lvgl/src/misc/lv_tlsf.c **** 			}
 814              		.loc 1 620 32 is_stmt 0 view .LVU205
 815 004e 0123     		movs	r3, #1
 816 0050 03FA0CF2 		lsl	r2, r3, ip
 620:lvgl/src/misc/lv_tlsf.c **** 			}
 817              		.loc 1 620 24 view .LVU206
 818 0054 DEF81030 		ldr	r3, [lr, #16]
 819 0058 23EA0203 		bic	r3, r3, r2
 820 005c CEF81030 		str	r3, [lr, #16]
 821              		.loc 1 624 1 view .LVU207
 822 0060 DEE7     		b	.L42
 823              		.cfi_endproc
 824              	.LFE27:
 826              		.section	.text.insert_free_block,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	insert_free_block:
 833              	.LVL67:
 834              	.LFB28:
 625:lvgl/src/misc/lv_tlsf.c **** 
 626:lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:lvgl/src/misc/lv_tlsf.c **** {
 835              		.loc 1 628 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		.loc 1 628 1 is_stmt 0 view .LVU209
 840 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 841              	.LCFI8:
 842              		.cfi_def_cfa_offset 24
 843              		.cfi_offset 4, -24
 844              		.cfi_offset 5, -20
 845              		.cfi_offset 6, -16
 846              		.cfi_offset 7, -12
 847              		.cfi_offset 8, -8
 848              		.cfi_offset 14, -4
 849 0004 1F46     		mov	r7, r3
 629:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 850              		.loc 1 629 2 is_stmt 1 view .LVU210
 851              		.loc 1 629 18 is_stmt 0 view .LVU211
 852 0006 03EB4213 		add	r3, r3, r2, lsl #5
 853              	.LVL68:
 854              		.loc 1 629 18 view .LVU212
 855 000a 0E33     		adds	r3, r3, #14
 856 000c 50F82330 		ldr	r3, [r0, r3, lsl #2]
 857              	.LVL69:
 630:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 858              		.loc 1 630 2 is_stmt 1 view .LVU213
 859              		.loc 1 630 2 view .LVU214
 860 0010 83B1     		cbz	r3, .L52
 861 0012 0546     		mov	r5, r0
 862 0014 0C46     		mov	r4, r1
 863 0016 1646     		mov	r6, r2
 864              		.loc 1 630 2 discriminator 2 view .LVU215
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 27


 631:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 865              		.loc 1 631 2 discriminator 2 view .LVU216
 866              		.loc 1 631 2 discriminator 2 view .LVU217
 867 0018 69B1     		cbz	r1, .L54
 868              		.loc 1 631 2 discriminator 2 view .LVU218
 632:lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 869              		.loc 1 632 2 discriminator 2 view .LVU219
 870              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU220
 871 001a 8B60     		str	r3, [r1, #8]
 633:lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 872              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU221
 873              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU222
 874 001c C860     		str	r0, [r1, #12]
 634:lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 875              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU223
 876              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU224
 877 001e D960     		str	r1, [r3, #12]
 635:lvgl/src/misc/lv_tlsf.c **** 
 636:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 878              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU225
 879              		.loc 1 636 2 discriminator 2 view .LVU226
 880 0020 0846     		mov	r0, r1
 881              	.LVL70:
 882              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU227
 883 0022 FFF7FEFF 		bl	block_to_ptr
 884              	.LVL71:
 885              		.loc 1 636 2 discriminator 2 view .LVU228
 886 0026 8046     		mov	r8, r0
 887 0028 0421     		movs	r1, #4
 888 002a FFF7FEFF 		bl	align_ptr
 889              	.LVL72:
 890 002e 8045     		cmp	r8, r0
 891 0030 02D0     		beq	.L55
 892              	.L56:
 893              		.loc 1 636 2 is_stmt 1 discriminator 3 view .LVU229
 894              		.loc 1 636 2 discriminator 3 view .LVU230
 895              		.loc 1 636 2 discriminator 3 view .LVU231
 896              		.loc 1 636 2 discriminator 3 view .LVU232
 897 0032 FEE7     		b	.L56
 898              	.LVL73:
 899              	.L52:
 630:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 900              		.loc 1 630 2 discriminator 1 view .LVU233
 630:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 901              		.loc 1 630 2 discriminator 1 view .LVU234
 630:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 902              		.loc 1 630 2 discriminator 1 view .LVU235
 630:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 903              		.loc 1 630 2 discriminator 1 view .LVU236
 904 0034 FEE7     		b	.L52
 905              	.L54:
 631:lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 906              		.loc 1 631 2 discriminator 2 view .LVU237
 631:lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 907              		.loc 1 631 2 discriminator 2 view .LVU238
 631:lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 908              		.loc 1 631 2 discriminator 2 view .LVU239
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 28


 631:lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 909              		.loc 1 631 2 discriminator 2 view .LVU240
 910 0036 FEE7     		b	.L54
 911              	.LVL74:
 912              	.L55:
 913              		.loc 1 636 2 discriminator 2 view .LVU241
 637:lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:lvgl/src/misc/lv_tlsf.c **** 	/*
 639:lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:lvgl/src/misc/lv_tlsf.c **** 	*/
 642:lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 914              		.loc 1 642 2 discriminator 2 view .LVU242
 915              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU243
 916 0038 07EB4613 		add	r3, r7, r6, lsl #5
 917 003c 0E33     		adds	r3, r3, #14
 918 003e 45F82340 		str	r4, [r5, r3, lsl #2]
 643:lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 919              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU244
 920              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU245
 921 0042 0123     		movs	r3, #1
 922 0044 03FA06F1 		lsl	r1, r3, r6
 923              		.loc 1 643 21 discriminator 2 view .LVU246
 924 0048 2A69     		ldr	r2, [r5, #16]
 925 004a 0A43     		orrs	r2, r2, r1
 926 004c 2A61     		str	r2, [r5, #16]
 644:lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 927              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU247
 928              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU248
 929 004e BB40     		lsls	r3, r3, r7
 930              		.loc 1 644 25 discriminator 2 view .LVU249
 931 0050 0436     		adds	r6, r6, #4
 932              	.LVL75:
 933              		.loc 1 644 25 discriminator 2 view .LVU250
 934 0052 05EB8605 		add	r5, r5, r6, lsl #2
 935              	.LVL76:
 936              		.loc 1 644 25 discriminator 2 view .LVU251
 937 0056 6A68     		ldr	r2, [r5, #4]
 938 0058 1343     		orrs	r3, r3, r2
 939 005a 6B60     		str	r3, [r5, #4]
 645:lvgl/src/misc/lv_tlsf.c **** }
 940              		.loc 1 645 1 discriminator 2 view .LVU252
 941 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 942              		.loc 1 645 1 discriminator 2 view .LVU253
 943              		.cfi_endproc
 944              	.LFE28:
 946              		.section	.text.block_can_split,"ax",%progbits
 947              		.align	1
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	block_can_split:
 953              	.LVL77:
 954              	.LFB31:
 646:lvgl/src/misc/lv_tlsf.c **** 
 647:lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 29


 649:lvgl/src/misc/lv_tlsf.c **** {
 650:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 651:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 652:lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:lvgl/src/misc/lv_tlsf.c **** }
 654:lvgl/src/misc/lv_tlsf.c **** 
 655:lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
 656:lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:lvgl/src/misc/lv_tlsf.c **** {
 658:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:lvgl/src/misc/lv_tlsf.c **** }
 662:lvgl/src/misc/lv_tlsf.c **** 
 663:lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:lvgl/src/misc/lv_tlsf.c **** {
 955              		.loc 1 664 1 is_stmt 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		.loc 1 664 1 is_stmt 0 view .LVU255
 960 0000 10B5     		push	{r4, lr}
 961              	.LCFI9:
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 0C46     		mov	r4, r1
 665:lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 966              		.loc 1 665 2 is_stmt 1 view .LVU256
 967              		.loc 1 665 9 is_stmt 0 view .LVU257
 968 0004 FFF7FEFF 		bl	block_size
 969              	.LVL78:
 970              		.loc 1 665 53 view .LVU258
 971 0008 1034     		adds	r4, r4, #16
 972              	.LVL79:
 666:lvgl/src/misc/lv_tlsf.c **** }
 973              		.loc 1 666 1 view .LVU259
 974 000a A042     		cmp	r0, r4
 975 000c 34BF     		ite	cc
 976 000e 0020     		movcc	r0, #0
 977 0010 0120     		movcs	r0, #1
 978 0012 10BD     		pop	{r4, pc}
 979              		.loc 1 666 1 view .LVU260
 980              		.cfi_endproc
 981              	.LFE31:
 983              		.section	.text.block_split,"ax",%progbits
 984              		.align	1
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	block_split:
 990              	.LVL80:
 991              	.LFB32:
 667:lvgl/src/misc/lv_tlsf.c **** 
 668:lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 30


 992              		.loc 1 670 1 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		.loc 1 670 1 is_stmt 0 view .LVU262
 997 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 998              	.LCFI10:
 999              		.cfi_def_cfa_offset 32
 1000              		.cfi_offset 3, -32
 1001              		.cfi_offset 4, -28
 1002              		.cfi_offset 5, -24
 1003              		.cfi_offset 6, -20
 1004              		.cfi_offset 7, -16
 1005              		.cfi_offset 8, -12
 1006              		.cfi_offset 9, -8
 1007              		.cfi_offset 14, -4
 1008 0004 0746     		mov	r7, r0
 1009 0006 0C46     		mov	r4, r1
 671:lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 1010              		.loc 1 672 2 is_stmt 1 view .LVU263
 673:lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1011              		.loc 1 673 19 is_stmt 0 view .LVU264
 1012 0008 FFF7FEFF 		bl	block_to_ptr
 1013              	.LVL81:
 1014              		.loc 1 673 3 view .LVU265
 1015 000c 211F     		subs	r1, r4, #4
 1016 000e FFF7FEFF 		bl	offset_to_block
 1017              	.LVL82:
 1018 0012 0546     		mov	r5, r0
 1019              	.LVL83:
 674:lvgl/src/misc/lv_tlsf.c **** 
 675:lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
 1020              		.loc 1 675 2 is_stmt 1 view .LVU266
 1021              		.loc 1 675 29 is_stmt 0 view .LVU267
 1022 0014 3846     		mov	r0, r7
 1023              	.LVL84:
 1024              		.loc 1 675 29 view .LVU268
 1025 0016 FFF7FEFF 		bl	block_size
 1026              	.LVL85:
 1027 001a 0646     		mov	r6, r0
 1028              		.loc 1 675 47 view .LVU269
 1029 001c 031B     		subs	r3, r0, r4
 1030              		.loc 1 675 15 view .LVU270
 1031 001e A3F10409 		sub	r9, r3, #4
 1032              	.LVL86:
 676:lvgl/src/misc/lv_tlsf.c **** 
 677:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1033              		.loc 1 677 2 is_stmt 1 view .LVU271
 1034              		.loc 1 677 2 view .LVU272
 1035 0022 2846     		mov	r0, r5
 1036 0024 FFF7FEFF 		bl	block_to_ptr
 1037              	.LVL87:
 1038 0028 8046     		mov	r8, r0
 1039 002a 0421     		movs	r1, #4
 1040 002c FFF7FEFF 		bl	align_ptr
 1041              	.LVL88:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 31


 1042 0030 8045     		cmp	r8, r0
 1043 0032 00D0     		beq	.L61
 1044              	.L62:
 1045              		.loc 1 677 2 discriminator 1 view .LVU273
 1046              		.loc 1 677 2 discriminator 1 view .LVU274
 1047              		.loc 1 677 2 discriminator 1 view .LVU275
 1048              		.loc 1 677 2 discriminator 1 view .LVU276
 1049 0034 FEE7     		b	.L62
 1050              	.L61:
 1051              		.loc 1 677 2 discriminator 2 view .LVU277
 678:lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:lvgl/src/misc/lv_tlsf.c **** 
 680:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1052              		.loc 1 680 2 discriminator 2 view .LVU278
 1053              		.loc 1 680 2 discriminator 2 view .LVU279
 1054 0036 04EB0903 		add	r3, r4, r9
 1055 003a 0433     		adds	r3, r3, #4
 1056 003c 9E42     		cmp	r6, r3
 1057 003e 00D0     		beq	.L63
 1058              	.L64:
 1059              		.loc 1 680 2 discriminator 2 view .LVU280
 1060              		.loc 1 680 2 discriminator 2 view .LVU281
 1061              		.loc 1 680 2 discriminator 2 view .LVU282
 1062              		.loc 1 680 2 discriminator 2 view .LVU283
 1063 0040 FEE7     		b	.L64
 1064              	.L63:
 1065              		.loc 1 680 2 discriminator 2 view .LVU284
 681:lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1066              		.loc 1 681 2 discriminator 2 view .LVU285
 1067 0042 4946     		mov	r1, r9
 1068 0044 2846     		mov	r0, r5
 1069 0046 FFF7FEFF 		bl	block_set_size
 1070              	.LVL89:
 682:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1071              		.loc 1 682 2 discriminator 2 view .LVU286
 1072              		.loc 1 682 2 discriminator 2 view .LVU287
 1073 004a 2846     		mov	r0, r5
 1074 004c FFF7FEFF 		bl	block_size
 1075              	.LVL90:
 1076 0050 0B28     		cmp	r0, #11
 1077 0052 00D8     		bhi	.L65
 1078              	.L66:
 1079              		.loc 1 682 2 discriminator 3 view .LVU288
 1080              		.loc 1 682 2 discriminator 3 view .LVU289
 1081              		.loc 1 682 2 discriminator 3 view .LVU290
 1082              		.loc 1 682 2 discriminator 3 view .LVU291
 1083 0054 FEE7     		b	.L66
 1084              	.L65:
 1085              		.loc 1 682 2 discriminator 4 view .LVU292
 683:lvgl/src/misc/lv_tlsf.c **** 
 684:lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 1086              		.loc 1 684 2 discriminator 4 view .LVU293
 1087 0056 2146     		mov	r1, r4
 1088 0058 3846     		mov	r0, r7
 1089 005a FFF7FEFF 		bl	block_set_size
 1090              	.LVL91:
 685:lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 32


 1091              		.loc 1 685 2 discriminator 4 view .LVU294
 1092 005e 2846     		mov	r0, r5
 1093 0060 FFF7FEFF 		bl	block_mark_as_free
 1094              	.LVL92:
 686:lvgl/src/misc/lv_tlsf.c **** 
 687:lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 1095              		.loc 1 687 2 discriminator 4 view .LVU295
 688:lvgl/src/misc/lv_tlsf.c **** }
 1096              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU296
 1097 0064 2846     		mov	r0, r5
 1098 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1099              		.loc 1 688 1 discriminator 4 view .LVU297
 1100              		.cfi_endproc
 1101              	.LFE32:
 1103              		.section	.text.block_absorb,"ax",%progbits
 1104              		.align	1
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1109              	block_absorb:
 1110              	.LVL93:
 1111              	.LFB33:
 689:lvgl/src/misc/lv_tlsf.c **** 
 690:lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:lvgl/src/misc/lv_tlsf.c **** {
 1112              		.loc 1 692 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		.loc 1 692 1 is_stmt 0 view .LVU299
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              	.LCFI11:
 1119              		.cfi_def_cfa_offset 16
 1120              		.cfi_offset 3, -16
 1121              		.cfi_offset 4, -12
 1122              		.cfi_offset 5, -8
 1123              		.cfi_offset 14, -4
 1124 0002 0446     		mov	r4, r0
 1125 0004 0D46     		mov	r5, r1
 693:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1126              		.loc 1 693 2 is_stmt 1 view .LVU300
 1127              		.loc 1 693 2 view .LVU301
 1128 0006 FFF7FEFF 		bl	block_is_last
 1129              	.LVL94:
 1130              		.loc 1 693 2 is_stmt 0 view .LVU302
 1131 000a 00B1     		cbz	r0, .L69
 1132              	.L70:
 1133              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU303
 1134              		.loc 1 693 2 discriminator 1 view .LVU304
 1135              		.loc 1 693 2 discriminator 1 view .LVU305
 1136              		.loc 1 693 2 discriminator 1 view .LVU306
 1137 000c FEE7     		b	.L70
 1138              	.L69:
 1139              		.loc 1 693 2 discriminator 2 view .LVU307
 694:lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 33


 1140              		.loc 1 695 2 discriminator 2 view .LVU308
 1141              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU309
 1142 000e 2846     		mov	r0, r5
 1143 0010 FFF7FEFF 		bl	block_size
 1144              	.LVL95:
 1145              		.loc 1 695 34 discriminator 2 view .LVU310
 1146 0014 021D     		adds	r2, r0, #4
 1147              		.loc 1 695 13 discriminator 2 view .LVU311
 1148 0016 6368     		ldr	r3, [r4, #4]
 1149 0018 1344     		add	r3, r3, r2
 1150 001a 6360     		str	r3, [r4, #4]
 696:lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1151              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU312
 1152 001c 2046     		mov	r0, r4
 1153 001e FFF7FEFF 		bl	block_link_next
 1154              	.LVL96:
 697:lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1155              		.loc 1 697 2 discriminator 2 view .LVU313
 698:lvgl/src/misc/lv_tlsf.c **** }
 1156              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU314
 1157 0022 2046     		mov	r0, r4
 1158 0024 38BD     		pop	{r3, r4, r5, pc}
 1159              		.loc 1 698 1 discriminator 2 view .LVU315
 1160              		.cfi_endproc
 1161              	.LFE33:
 1163              		.section	.text.control_constructor,"ax",%progbits
 1164              		.align	1
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	control_constructor:
 1170              	.LVL97:
 1171              	.LFB41:
 699:lvgl/src/misc/lv_tlsf.c **** 
 700:lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:lvgl/src/misc/lv_tlsf.c **** {
 703:lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:lvgl/src/misc/lv_tlsf.c **** 	{
 705:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:lvgl/src/misc/lv_tlsf.c **** 	}
 711:lvgl/src/misc/lv_tlsf.c **** 
 712:lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:lvgl/src/misc/lv_tlsf.c **** }
 714:lvgl/src/misc/lv_tlsf.c **** 
 715:lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:lvgl/src/misc/lv_tlsf.c **** {
 718:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:lvgl/src/misc/lv_tlsf.c **** 
 721:lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 34


 723:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 725:lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 726:lvgl/src/misc/lv_tlsf.c **** 	}
 727:lvgl/src/misc/lv_tlsf.c **** 
 728:lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:lvgl/src/misc/lv_tlsf.c **** }
 730:lvgl/src/misc/lv_tlsf.c **** 
 731:lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:lvgl/src/misc/lv_tlsf.c **** {
 734:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:lvgl/src/misc/lv_tlsf.c **** 	{
 737:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:lvgl/src/misc/lv_tlsf.c **** 	}
 742:lvgl/src/misc/lv_tlsf.c **** }
 743:lvgl/src/misc/lv_tlsf.c **** 
 744:lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:lvgl/src/misc/lv_tlsf.c **** {
 747:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:lvgl/src/misc/lv_tlsf.c **** 	{
 750:lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:lvgl/src/misc/lv_tlsf.c **** 
 754:lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
 755:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:lvgl/src/misc/lv_tlsf.c **** 	}
 757:lvgl/src/misc/lv_tlsf.c **** }
 758:lvgl/src/misc/lv_tlsf.c **** 
 759:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:lvgl/src/misc/lv_tlsf.c **** {
 761:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:lvgl/src/misc/lv_tlsf.c **** 	{
 764:lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:lvgl/src/misc/lv_tlsf.c **** 
 768:lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:lvgl/src/misc/lv_tlsf.c **** 	}
 771:lvgl/src/misc/lv_tlsf.c **** 
 772:lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:lvgl/src/misc/lv_tlsf.c **** }
 774:lvgl/src/misc/lv_tlsf.c **** 
 775:lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:lvgl/src/misc/lv_tlsf.c **** {
 777:lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 35


 780:lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:lvgl/src/misc/lv_tlsf.c **** 	{
 782:lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
 783:lvgl/src/misc/lv_tlsf.c **** 		
 784:lvgl/src/misc/lv_tlsf.c **** 		/*
 785:lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:lvgl/src/misc/lv_tlsf.c **** 		*/
 790:lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
 791:lvgl/src/misc/lv_tlsf.c **** 		{
 792:lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:lvgl/src/misc/lv_tlsf.c **** 		}
 794:lvgl/src/misc/lv_tlsf.c **** 	}
 795:lvgl/src/misc/lv_tlsf.c **** 
 796:lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:lvgl/src/misc/lv_tlsf.c **** 	{
 798:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:lvgl/src/misc/lv_tlsf.c **** 	}
 801:lvgl/src/misc/lv_tlsf.c **** 
 802:lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:lvgl/src/misc/lv_tlsf.c **** }
 804:lvgl/src/misc/lv_tlsf.c **** 
 805:lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:lvgl/src/misc/lv_tlsf.c **** {
 807:lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:lvgl/src/misc/lv_tlsf.c **** 	{
 810:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
 811:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 812:lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:lvgl/src/misc/lv_tlsf.c **** 	}
 815:lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:lvgl/src/misc/lv_tlsf.c **** }
 817:lvgl/src/misc/lv_tlsf.c **** 
 818:lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:lvgl/src/misc/lv_tlsf.c **** {
 1172              		.loc 1 820 1 is_stmt 1 view -0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 821:lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 1177              		.loc 1 821 2 view .LVU317
 822:lvgl/src/misc/lv_tlsf.c **** 
 823:lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 1178              		.loc 1 823 2 view .LVU318
 1179              		.loc 1 823 32 is_stmt 0 view .LVU319
 1180 0000 8060     		str	r0, [r0, #8]
 824:lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 1181              		.loc 1 824 2 is_stmt 1 view .LVU320
 1182              		.loc 1 824 32 is_stmt 0 view .LVU321
 1183 0002 C060     		str	r0, [r0, #12]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 36


 825:lvgl/src/misc/lv_tlsf.c **** 
 826:lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
 1184              		.loc 1 826 2 is_stmt 1 view .LVU322
 1185              		.loc 1 826 21 is_stmt 0 view .LVU323
 1186 0004 0021     		movs	r1, #0
 1187 0006 0161     		str	r1, [r0, #16]
 827:lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1188              		.loc 1 827 2 is_stmt 1 view .LVU324
 1189              	.LVL98:
 1190              		.loc 1 827 2 is_stmt 0 view .LVU325
 1191 0008 08E0     		b	.L73
 1192              	.LVL99:
 1193              	.L75:
 828:lvgl/src/misc/lv_tlsf.c **** 	{
 829:lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 830:lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 831:lvgl/src/misc/lv_tlsf.c **** 		{
 832:lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 1194              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU326
 1195              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU327
 1196 000a 03EB4112 		add	r2, r3, r1, lsl #5
 1197 000e 0E32     		adds	r2, r2, #14
 1198 0010 40F82200 		str	r0, [r0, r2, lsl #2]
 830:lvgl/src/misc/lv_tlsf.c **** 		{
 1199              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU328
 1200 0014 0133     		adds	r3, r3, #1
 1201              	.LVL100:
 1202              	.L74:
 830:lvgl/src/misc/lv_tlsf.c **** 		{
 1203              		.loc 1 830 15 discriminator 1 view .LVU329
 830:lvgl/src/misc/lv_tlsf.c **** 		{
 1204              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU330
 1205 0016 1F2B     		cmp	r3, #31
 1206 0018 F7DD     		ble	.L75
 827:lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1207              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU331
 1208 001a 0131     		adds	r1, r1, #1
 1209              	.LVL101:
 1210              	.L73:
 827:lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1211              		.loc 1 827 14 discriminator 1 view .LVU332
 827:lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1212              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU333
 1213 001c 0829     		cmp	r1, #8
 1214 001e 05DC     		bgt	.L77
 829:lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1215              		.loc 1 829 3 is_stmt 1 view .LVU334
 829:lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1216              		.loc 1 829 25 is_stmt 0 view .LVU335
 1217 0020 0A1D     		adds	r2, r1, #4
 1218 0022 00EB8202 		add	r2, r0, r2, lsl #2
 1219 0026 0023     		movs	r3, #0
 1220 0028 5360     		str	r3, [r2, #4]
 830:lvgl/src/misc/lv_tlsf.c **** 		{
 1221              		.loc 1 830 3 is_stmt 1 view .LVU336
 1222              	.LVL102:
 830:lvgl/src/misc/lv_tlsf.c **** 		{
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 37


 1223              		.loc 1 830 3 is_stmt 0 view .LVU337
 1224 002a F4E7     		b	.L74
 1225              	.LVL103:
 1226              	.L77:
 833:lvgl/src/misc/lv_tlsf.c **** 		}
 834:lvgl/src/misc/lv_tlsf.c **** 	}
 835:lvgl/src/misc/lv_tlsf.c **** }
 1227              		.loc 1 835 1 view .LVU338
 1228 002c 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE41:
 1232              		.section	.text.integrity_walker,"ax",%progbits
 1233              		.align	1
 1234              		.syntax unified
 1235              		.thumb
 1236              		.thumb_func
 1238              	integrity_walker:
 1239              	.LVL104:
 1240              	.LFB42:
 836:lvgl/src/misc/lv_tlsf.c **** 
 837:lvgl/src/misc/lv_tlsf.c **** /*
 838:lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:lvgl/src/misc/lv_tlsf.c **** */
 840:lvgl/src/misc/lv_tlsf.c **** 
 841:lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:lvgl/src/misc/lv_tlsf.c **** {
 843:lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:lvgl/src/misc/lv_tlsf.c **** 
 847:lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 848:lvgl/src/misc/lv_tlsf.c **** 
 849:lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:lvgl/src/misc/lv_tlsf.c **** {
 1241              		.loc 1 850 1 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		.loc 1 850 1 is_stmt 0 view .LVU340
 1246 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1247              	.LCFI12:
 1248              		.cfi_def_cfa_offset 24
 1249              		.cfi_offset 4, -24
 1250              		.cfi_offset 5, -20
 1251              		.cfi_offset 6, -16
 1252              		.cfi_offset 7, -12
 1253              		.cfi_offset 8, -8
 1254              		.cfi_offset 14, -4
 1255 0004 0F46     		mov	r7, r1
 1256 0006 1D46     		mov	r5, r3
 851:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 1257              		.loc 1 851 2 is_stmt 1 view .LVU341
 1258              		.loc 1 851 26 is_stmt 0 view .LVU342
 1259 0008 FFF7FEFF 		bl	block_from_ptr
 1260              	.LVL105:
 1261              		.loc 1 851 26 view .LVU343
 1262 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 38


 1263              	.LVL106:
 852:lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 1264              		.loc 1 852 2 is_stmt 1 view .LVU344
 853:lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1265              		.loc 1 853 2 view .LVU345
 1266              		.loc 1 853 31 is_stmt 0 view .LVU346
 1267 000e FFF7FEFF 		bl	block_is_prev_free
 1268              	.LVL107:
 1269              		.loc 1 853 61 view .LVU347
 1270 0012 061E     		subs	r6, r0, #0
 1271 0014 18BF     		it	ne
 1272 0016 0126     		movne	r6, #1
 1273              	.LVL108:
 854:lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 1274              		.loc 1 854 2 is_stmt 1 view .LVU348
 1275              		.loc 1 854 26 is_stmt 0 view .LVU349
 1276 0018 2046     		mov	r0, r4
 1277 001a FFF7FEFF 		bl	block_is_free
 1278              	.LVL109:
 1279              		.loc 1 854 51 view .LVU350
 1280 001e B0F10008 		subs	r8, r0, #0
 1281 0022 18BF     		it	ne
 1282 0024 4FF00108 		movne	r8, #1
 1283              	.LVL110:
 855:lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 1284              		.loc 1 855 2 is_stmt 1 view .LVU351
 1285              		.loc 1 855 33 is_stmt 0 view .LVU352
 1286 0028 2046     		mov	r0, r4
 1287 002a FFF7FEFF 		bl	block_size
 1288              	.LVL111:
 856:lvgl/src/misc/lv_tlsf.c **** 
 857:lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 1289              		.loc 1 857 2 is_stmt 1 view .LVU353
 858:lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 1290              		.loc 1 858 2 view .LVU354
 859:lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1291              		.loc 1 859 2 view .LVU355
 1292              		.loc 1 859 2 view .LVU356
 1293 002e 2B68     		ldr	r3, [r5]
 1294 0030 B342     		cmp	r3, r6
 1295 0032 00D0     		beq	.L79
 1296              	.L80:
 1297              		.loc 1 859 2 discriminator 1 view .LVU357
 1298              		.loc 1 859 2 discriminator 1 view .LVU358
 1299              		.loc 1 859 2 discriminator 1 view .LVU359
 1300              		.loc 1 859 2 discriminator 1 view .LVU360
 1301 0034 FEE7     		b	.L80
 1302              	.L79:
 1303              		.loc 1 859 2 discriminator 5 view .LVU361
 1304              		.loc 1 859 2 discriminator 5 view .LVU362
 1305              		.loc 1 859 80 discriminator 5 view .LVU363
 860:lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 1306              		.loc 1 860 2 discriminator 5 view .LVU364
 1307              		.loc 1 860 2 discriminator 5 view .LVU365
 1308 0036 B842     		cmp	r0, r7
 1309 0038 00D0     		beq	.L81
 1310              	.L82:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 39


 1311              		.loc 1 860 2 discriminator 2 view .LVU366
 1312              		.loc 1 860 2 discriminator 2 view .LVU367
 1313              		.loc 1 860 2 discriminator 2 view .LVU368
 1314              		.loc 1 860 2 discriminator 2 view .LVU369
 1315 003a FEE7     		b	.L82
 1316              	.L81:
 1317              		.loc 1 860 2 discriminator 5 view .LVU370
 1318              		.loc 1 860 2 discriminator 5 view .LVU371
 1319              		.loc 1 860 64 discriminator 5 view .LVU372
 861:lvgl/src/misc/lv_tlsf.c **** 
 862:lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 1320              		.loc 1 862 2 discriminator 5 view .LVU373
 1321              		.loc 1 862 21 is_stmt 0 discriminator 5 view .LVU374
 1322 003c C5F80080 		str	r8, [r5]
 863:lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 1323              		.loc 1 863 2 is_stmt 1 discriminator 5 view .LVU375
 864:lvgl/src/misc/lv_tlsf.c **** }
 1324              		.loc 1 864 1 is_stmt 0 discriminator 5 view .LVU376
 1325 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1326              		.loc 1 864 1 discriminator 5 view .LVU377
 1327              		.cfi_endproc
 1328              	.LFE42:
 1330              		.section	.text.default_walker,"ax",%progbits
 1331              		.align	1
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1336              	default_walker:
 1337              	.LVL112:
 1338              	.LFB44:
 865:lvgl/src/misc/lv_tlsf.c **** 
 866:lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:lvgl/src/misc/lv_tlsf.c **** {
 868:lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:lvgl/src/misc/lv_tlsf.c **** 
 870:lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:lvgl/src/misc/lv_tlsf.c **** 
 873:lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:lvgl/src/misc/lv_tlsf.c **** 	{
 876:lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:lvgl/src/misc/lv_tlsf.c **** 		{
 878:lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:lvgl/src/misc/lv_tlsf.c **** 
 883:lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:lvgl/src/misc/lv_tlsf.c **** 			{
 886:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:lvgl/src/misc/lv_tlsf.c **** 			}
 888:lvgl/src/misc/lv_tlsf.c **** 
 889:lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:lvgl/src/misc/lv_tlsf.c **** 			{
 891:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 40


 892:lvgl/src/misc/lv_tlsf.c **** 				continue;
 893:lvgl/src/misc/lv_tlsf.c **** 			}
 894:lvgl/src/misc/lv_tlsf.c **** 
 895:lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:lvgl/src/misc/lv_tlsf.c **** 
 899:lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:lvgl/src/misc/lv_tlsf.c **** 			{
 901:lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:lvgl/src/misc/lv_tlsf.c **** 
 908:lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:lvgl/src/misc/lv_tlsf.c **** 			}
 912:lvgl/src/misc/lv_tlsf.c **** 		}
 913:lvgl/src/misc/lv_tlsf.c **** 	}
 914:lvgl/src/misc/lv_tlsf.c **** 
 915:lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:lvgl/src/misc/lv_tlsf.c **** }
 917:lvgl/src/misc/lv_tlsf.c **** 
 918:lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:lvgl/src/misc/lv_tlsf.c **** 
 920:lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
 921:lvgl/src/misc/lv_tlsf.c **** {
 1339              		.loc 1 921 1 is_stmt 1 view -0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 922:lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 1344              		.loc 1 922 2 view .LVU379
 923:lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 1345              		.loc 1 923 112 view .LVU380
 924:lvgl/src/misc/lv_tlsf.c **** }
 1346              		.loc 1 924 1 is_stmt 0 view .LVU381
 1347 0000 7047     		bx	lr
 1348              		.cfi_endproc
 1349              	.LFE44:
 1351              		.section	.text.tlsf_fls,"ax",%progbits
 1352              		.align	1
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1357              	tlsf_fls:
 1358              	.LVL113:
 1359              	.LFB2:
 101:lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1360              		.loc 1 101 1 is_stmt 1 view -0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 41


 1364              		@ link register save eliminated.
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1365              		.loc 1 102 2 view .LVU383
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1366              		.loc 1 102 50 is_stmt 0 view .LVU384
 1367 0000 28B1     		cbz	r0, .L87
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1368              		.loc 1 102 30 discriminator 1 view .LVU385
 1369 0002 B0FA80F0 		clz	r0, r0
 1370              	.LVL114:
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1371              		.loc 1 102 50 discriminator 1 view .LVU386
 1372 0006 C0F12000 		rsb	r0, r0, #32
 1373              	.L86:
 1374              	.LVL115:
 103:lvgl/src/misc/lv_tlsf.c **** }
 1375              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU387
 104:lvgl/src/misc/lv_tlsf.c **** 
 1376              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU388
 1377 000a 0138     		subs	r0, r0, #1
 1378              	.LVL116:
 104:lvgl/src/misc/lv_tlsf.c **** 
 1379              		.loc 1 104 1 discriminator 4 view .LVU389
 1380 000c 7047     		bx	lr
 1381              	.LVL117:
 1382              	.L87:
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1383              		.loc 1 102 50 view .LVU390
 1384 000e 0020     		movs	r0, #0
 1385              	.LVL118:
 102:lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1386              		.loc 1 102 50 view .LVU391
 1387 0010 FBE7     		b	.L86
 1388              		.cfi_endproc
 1389              	.LFE2:
 1391              		.section	.text.mapping_insert,"ax",%progbits
 1392              		.align	1
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1397              	mapping_insert:
 1398              	.LVL119:
 1399              	.LFB24:
 536:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1400              		.loc 1 536 1 is_stmt 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 536:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1404              		.loc 1 536 1 is_stmt 0 view .LVU393
 1405 0000 70B5     		push	{r4, r5, r6, lr}
 1406              	.LCFI13:
 1407              		.cfi_def_cfa_offset 16
 1408              		.cfi_offset 4, -16
 1409              		.cfi_offset 5, -12
 1410              		.cfi_offset 6, -8
 1411              		.cfi_offset 14, -4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 42


 1412 0002 0446     		mov	r4, r0
 1413 0004 0D46     		mov	r5, r1
 1414 0006 1646     		mov	r6, r2
 537:lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1415              		.loc 1 537 2 is_stmt 1 view .LVU394
 538:lvgl/src/misc/lv_tlsf.c **** 	{
 1416              		.loc 1 538 2 view .LVU395
 538:lvgl/src/misc/lv_tlsf.c **** 	{
 1417              		.loc 1 538 5 is_stmt 0 view .LVU396
 1418 0008 7F28     		cmp	r0, #127
 1419 000a 08D8     		bhi	.L89
 541:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1420              		.loc 1 541 3 is_stmt 1 view .LVU397
 1421              	.LVL120:
 542:lvgl/src/misc/lv_tlsf.c **** 	}
 1422              		.loc 1 542 3 view .LVU398
 542:lvgl/src/misc/lv_tlsf.c **** 	}
 1423              		.loc 1 542 6 is_stmt 0 view .LVU399
 1424 000c 0028     		cmp	r0, #0
 1425 000e 04DB     		blt	.L93
 1426              	.LVL121:
 1427              	.L90:
 542:lvgl/src/misc/lv_tlsf.c **** 	}
 1428              		.loc 1 542 6 view .LVU400
 1429 0010 8410     		asrs	r4, r0, #2
 1430              	.LVL122:
 541:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1431              		.loc 1 541 6 view .LVU401
 1432 0012 0020     		movs	r0, #0
 1433              	.LVL123:
 1434              	.L91:
 550:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1435              		.loc 1 550 2 is_stmt 1 view .LVU402
 550:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1436              		.loc 1 550 7 is_stmt 0 view .LVU403
 1437 0014 2860     		str	r0, [r5]
 551:lvgl/src/misc/lv_tlsf.c **** }
 1438              		.loc 1 551 2 is_stmt 1 view .LVU404
 551:lvgl/src/misc/lv_tlsf.c **** }
 1439              		.loc 1 551 7 is_stmt 0 view .LVU405
 1440 0016 3460     		str	r4, [r6]
 552:lvgl/src/misc/lv_tlsf.c **** 
 1441              		.loc 1 552 1 view .LVU406
 1442 0018 70BD     		pop	{r4, r5, r6, pc}
 1443              	.LVL124:
 1444              	.L93:
 542:lvgl/src/misc/lv_tlsf.c **** 	}
 1445              		.loc 1 542 6 view .LVU407
 1446 001a 0330     		adds	r0, r0, #3
 1447              	.LVL125:
 542:lvgl/src/misc/lv_tlsf.c **** 	}
 1448              		.loc 1 542 6 view .LVU408
 1449 001c F8E7     		b	.L90
 1450              	.LVL126:
 1451              	.L89:
 546:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1452              		.loc 1 546 3 is_stmt 1 view .LVU409
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 43


 546:lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1453              		.loc 1 546 8 is_stmt 0 view .LVU410
 1454 001e FFF7FEFF 		bl	tlsf_fls
 1455              	.LVL127:
 547:lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1456              		.loc 1 547 3 is_stmt 1 view .LVU411
 547:lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1457              		.loc 1 547 8 is_stmt 0 view .LVU412
 1458 0022 431F     		subs	r3, r0, #5
 1459 0024 DC40     		lsrs	r4, r4, r3
 1460              	.LVL128:
 547:lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1461              		.loc 1 547 6 view .LVU413
 1462 0026 84F02004 		eor	r4, r4, #32
 1463              	.LVL129:
 548:lvgl/src/misc/lv_tlsf.c **** 	}
 1464              		.loc 1 548 3 is_stmt 1 view .LVU414
 548:lvgl/src/misc/lv_tlsf.c **** 	}
 1465              		.loc 1 548 6 is_stmt 0 view .LVU415
 1466 002a 0638     		subs	r0, r0, #6
 1467              	.LVL130:
 548:lvgl/src/misc/lv_tlsf.c **** 	}
 1468              		.loc 1 548 6 view .LVU416
 1469 002c F2E7     		b	.L91
 1470              		.cfi_endproc
 1471              	.LFE24:
 1473              		.section	.text.block_insert,"ax",%progbits
 1474              		.align	1
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1479              	block_insert:
 1480              	.LVL131:
 1481              	.LFB30:
 657:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1482              		.loc 1 657 1 is_stmt 1 view -0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 8
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 657:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1486              		.loc 1 657 1 is_stmt 0 view .LVU418
 1487 0000 30B5     		push	{r4, r5, lr}
 1488              	.LCFI14:
 1489              		.cfi_def_cfa_offset 12
 1490              		.cfi_offset 4, -12
 1491              		.cfi_offset 5, -8
 1492              		.cfi_offset 14, -4
 1493 0002 83B0     		sub	sp, sp, #12
 1494              	.LCFI15:
 1495              		.cfi_def_cfa_offset 24
 1496 0004 0546     		mov	r5, r0
 1497 0006 0C46     		mov	r4, r1
 658:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1498              		.loc 1 658 2 is_stmt 1 view .LVU419
 659:lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1499              		.loc 1 659 2 view .LVU420
 1500 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 44


 1501              	.LVL132:
 659:lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1502              		.loc 1 659 2 is_stmt 0 view .LVU421
 1503 000a FFF7FEFF 		bl	block_size
 1504              	.LVL133:
 659:lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1505              		.loc 1 659 2 view .LVU422
 1506 000e 6A46     		mov	r2, sp
 1507 0010 01A9     		add	r1, sp, #4
 1508 0012 FFF7FEFF 		bl	mapping_insert
 1509              	.LVL134:
 660:lvgl/src/misc/lv_tlsf.c **** }
 1510              		.loc 1 660 2 is_stmt 1 view .LVU423
 1511 0016 009B     		ldr	r3, [sp]
 1512 0018 019A     		ldr	r2, [sp, #4]
 1513 001a 2146     		mov	r1, r4
 1514 001c 2846     		mov	r0, r5
 1515 001e FFF7FEFF 		bl	insert_free_block
 1516              	.LVL135:
 661:lvgl/src/misc/lv_tlsf.c **** 
 1517              		.loc 1 661 1 is_stmt 0 view .LVU424
 1518 0022 03B0     		add	sp, sp, #12
 1519              	.LCFI16:
 1520              		.cfi_def_cfa_offset 12
 1521              		@ sp needed
 1522 0024 30BD     		pop	{r4, r5, pc}
 661:lvgl/src/misc/lv_tlsf.c **** 
 1523              		.loc 1 661 1 view .LVU425
 1524              		.cfi_endproc
 1525              	.LFE30:
 1527              		.section	.text.block_trim_free,"ax",%progbits
 1528              		.align	1
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1533              	block_trim_free:
 1534              	.LVL136:
 1535              	.LFB36:
 733:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1536              		.loc 1 733 1 is_stmt 1 view -0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 733:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1540              		.loc 1 733 1 is_stmt 0 view .LVU427
 1541 0000 70B5     		push	{r4, r5, r6, lr}
 1542              	.LCFI17:
 1543              		.cfi_def_cfa_offset 16
 1544              		.cfi_offset 4, -16
 1545              		.cfi_offset 5, -12
 1546              		.cfi_offset 6, -8
 1547              		.cfi_offset 14, -4
 1548 0002 0646     		mov	r6, r0
 1549 0004 0C46     		mov	r4, r1
 1550 0006 1546     		mov	r5, r2
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1551              		.loc 1 734 2 is_stmt 1 view .LVU428
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 45


 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1552              		.loc 1 734 2 view .LVU429
 1553 0008 0846     		mov	r0, r1
 1554              	.LVL137:
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1555              		.loc 1 734 2 is_stmt 0 view .LVU430
 1556 000a FFF7FEFF 		bl	block_is_free
 1557              	.LVL138:
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1558              		.loc 1 734 2 view .LVU431
 1559 000e 00B9     		cbnz	r0, .L97
 1560              	.L98:
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1561              		.loc 1 734 2 is_stmt 1 discriminator 1 view .LVU432
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1562              		.loc 1 734 2 discriminator 1 view .LVU433
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1563              		.loc 1 734 2 discriminator 1 view .LVU434
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1564              		.loc 1 734 2 discriminator 1 view .LVU435
 1565 0010 FEE7     		b	.L98
 1566              	.L97:
 734:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1567              		.loc 1 734 2 discriminator 4 view .LVU436
 735:lvgl/src/misc/lv_tlsf.c **** 	{
 1568              		.loc 1 735 2 discriminator 4 view .LVU437
 735:lvgl/src/misc/lv_tlsf.c **** 	{
 1569              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU438
 1570 0012 2946     		mov	r1, r5
 1571 0014 2046     		mov	r0, r4
 1572 0016 FFF7FEFF 		bl	block_can_split
 1573              	.LVL139:
 735:lvgl/src/misc/lv_tlsf.c **** 	{
 1574              		.loc 1 735 5 discriminator 4 view .LVU439
 1575 001a 00B9     		cbnz	r0, .L101
 1576              	.LVL140:
 1577              	.L96:
 742:lvgl/src/misc/lv_tlsf.c **** 
 1578              		.loc 1 742 1 view .LVU440
 1579 001c 70BD     		pop	{r4, r5, r6, pc}
 1580              	.LVL141:
 1581              	.L101:
 1582              	.LBB3:
 737:lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1583              		.loc 1 737 3 is_stmt 1 view .LVU441
 737:lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1584              		.loc 1 737 37 is_stmt 0 view .LVU442
 1585 001e 2946     		mov	r1, r5
 1586 0020 2046     		mov	r0, r4
 1587 0022 FFF7FEFF 		bl	block_split
 1588              	.LVL142:
 1589 0026 0546     		mov	r5, r0
 1590              	.LVL143:
 738:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1591              		.loc 1 738 3 is_stmt 1 view .LVU443
 1592 0028 2046     		mov	r0, r4
 1593              	.LVL144:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 46


 738:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1594              		.loc 1 738 3 is_stmt 0 view .LVU444
 1595 002a FFF7FEFF 		bl	block_link_next
 1596              	.LVL145:
 739:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 1597              		.loc 1 739 3 is_stmt 1 view .LVU445
 1598 002e 2846     		mov	r0, r5
 1599 0030 FFF7FEFF 		bl	block_set_prev_free
 1600              	.LVL146:
 740:lvgl/src/misc/lv_tlsf.c **** 	}
 1601              		.loc 1 740 3 view .LVU446
 1602 0034 2946     		mov	r1, r5
 1603 0036 3046     		mov	r0, r6
 1604 0038 FFF7FEFF 		bl	block_insert
 1605              	.LVL147:
 1606              	.LBE3:
 742:lvgl/src/misc/lv_tlsf.c **** 
 1607              		.loc 1 742 1 is_stmt 0 view .LVU447
 1608 003c EEE7     		b	.L96
 1609              		.cfi_endproc
 1610              	.LFE36:
 1612              		.section	.text.block_prepare_used,"ax",%progbits
 1613              		.align	1
 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1618              	block_prepare_used:
 1619              	.LVL148:
 1620              	.LFB40:
 806:lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1621              		.loc 1 806 1 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 806:lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1625              		.loc 1 806 1 is_stmt 0 view .LVU449
 1626 0000 10B5     		push	{r4, lr}
 1627              	.LCFI18:
 1628              		.cfi_def_cfa_offset 8
 1629              		.cfi_offset 4, -8
 1630              		.cfi_offset 14, -4
 807:lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1631              		.loc 1 807 2 is_stmt 1 view .LVU450
 1632              	.LVL149:
 808:lvgl/src/misc/lv_tlsf.c **** 	{
 1633              		.loc 1 808 2 view .LVU451
 808:lvgl/src/misc/lv_tlsf.c **** 	{
 1634              		.loc 1 808 5 is_stmt 0 view .LVU452
 1635 0002 0C46     		mov	r4, r1
 1636 0004 51B1     		cbz	r1, .L106
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1637              		.loc 1 810 3 is_stmt 1 view .LVU453
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1638              		.loc 1 810 3 view .LVU454
 1639 0006 02B9     		cbnz	r2, .L104
 1640              	.L105:
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 47


 1641              		.loc 1 810 3 discriminator 1 view .LVU455
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1642              		.loc 1 810 3 discriminator 1 view .LVU456
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1643              		.loc 1 810 3 discriminator 1 view .LVU457
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1644              		.loc 1 810 3 discriminator 1 view .LVU458
 1645 0008 FEE7     		b	.L105
 1646              	.L104:
 810:lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1647              		.loc 1 810 3 discriminator 2 view .LVU459
 811:lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 1648              		.loc 1 811 3 discriminator 2 view .LVU460
 1649 000a FFF7FEFF 		bl	block_trim_free
 1650              	.LVL150:
 812:lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 1651              		.loc 1 812 3 discriminator 2 view .LVU461
 1652 000e 2046     		mov	r0, r4
 1653 0010 FFF7FEFF 		bl	block_mark_as_used
 1654              	.LVL151:
 813:lvgl/src/misc/lv_tlsf.c **** 	}
 1655              		.loc 1 813 3 discriminator 2 view .LVU462
 813:lvgl/src/misc/lv_tlsf.c **** 	}
 1656              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU463
 1657 0014 2046     		mov	r0, r4
 1658 0016 FFF7FEFF 		bl	block_to_ptr
 1659              	.LVL152:
 1660              	.L102:
 816:lvgl/src/misc/lv_tlsf.c **** 
 1661              		.loc 1 816 1 view .LVU464
 1662 001a 10BD     		pop	{r4, pc}
 1663              	.LVL153:
 1664              	.L106:
 807:lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1665              		.loc 1 807 8 view .LVU465
 1666 001c 0846     		mov	r0, r1
 1667              	.LVL154:
 815:lvgl/src/misc/lv_tlsf.c **** }
 1668              		.loc 1 815 2 is_stmt 1 view .LVU466
 815:lvgl/src/misc/lv_tlsf.c **** }
 1669              		.loc 1 815 9 is_stmt 0 view .LVU467
 1670 001e FCE7     		b	.L102
 1671              		.cfi_endproc
 1672              	.LFE40:
 1674              		.section	.text.block_trim_free_leading,"ax",%progbits
 1675              		.align	1
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1680              	block_trim_free_leading:
 1681              	.LVL155:
 1682              	.LFB38:
 760:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1683              		.loc 1 760 1 is_stmt 1 view -0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 48


 760:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1687              		.loc 1 760 1 is_stmt 0 view .LVU469
 1688 0000 70B5     		push	{r4, r5, r6, lr}
 1689              	.LCFI19:
 1690              		.cfi_def_cfa_offset 16
 1691              		.cfi_offset 4, -16
 1692              		.cfi_offset 5, -12
 1693              		.cfi_offset 6, -8
 1694              		.cfi_offset 14, -4
 1695 0002 0646     		mov	r6, r0
 1696 0004 0C46     		mov	r4, r1
 1697 0006 1546     		mov	r5, r2
 761:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1698              		.loc 1 761 2 is_stmt 1 view .LVU470
 1699              	.LVL156:
 762:lvgl/src/misc/lv_tlsf.c **** 	{
 1700              		.loc 1 762 2 view .LVU471
 762:lvgl/src/misc/lv_tlsf.c **** 	{
 1701              		.loc 1 762 6 is_stmt 0 view .LVU472
 1702 0008 1146     		mov	r1, r2
 1703              	.LVL157:
 762:lvgl/src/misc/lv_tlsf.c **** 	{
 1704              		.loc 1 762 6 view .LVU473
 1705 000a 2046     		mov	r0, r4
 1706              	.LVL158:
 762:lvgl/src/misc/lv_tlsf.c **** 	{
 1707              		.loc 1 762 6 view .LVU474
 1708 000c FFF7FEFF 		bl	block_can_split
 1709              	.LVL159:
 762:lvgl/src/misc/lv_tlsf.c **** 	{
 1710              		.loc 1 762 5 view .LVU475
 1711 0010 08B9     		cbnz	r0, .L111
 1712              	.LVL160:
 1713              	.L109:
 772:lvgl/src/misc/lv_tlsf.c **** }
 1714              		.loc 1 772 2 is_stmt 1 view .LVU476
 773:lvgl/src/misc/lv_tlsf.c **** 
 1715              		.loc 1 773 1 is_stmt 0 view .LVU477
 1716 0012 2046     		mov	r0, r4
 1717 0014 70BD     		pop	{r4, r5, r6, pc}
 1718              	.LVL161:
 1719              	.L111:
 765:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1720              		.loc 1 765 3 is_stmt 1 view .LVU478
 765:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1721              		.loc 1 765 21 is_stmt 0 view .LVU479
 1722 0016 291F     		subs	r1, r5, #4
 1723 0018 2046     		mov	r0, r4
 1724 001a FFF7FEFF 		bl	block_split
 1725              	.LVL162:
 1726 001e 0546     		mov	r5, r0
 1727              	.LVL163:
 766:lvgl/src/misc/lv_tlsf.c **** 
 1728              		.loc 1 766 3 is_stmt 1 view .LVU480
 1729 0020 FFF7FEFF 		bl	block_set_prev_free
 1730              	.LVL164:
 768:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 49


 1731              		.loc 1 768 3 view .LVU481
 1732 0024 2046     		mov	r0, r4
 1733 0026 FFF7FEFF 		bl	block_link_next
 1734              	.LVL165:
 769:lvgl/src/misc/lv_tlsf.c **** 	}
 1735              		.loc 1 769 3 view .LVU482
 1736 002a 2146     		mov	r1, r4
 1737 002c 3046     		mov	r0, r6
 1738 002e FFF7FEFF 		bl	block_insert
 1739              	.LVL166:
 765:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1740              		.loc 1 765 21 is_stmt 0 view .LVU483
 1741 0032 2C46     		mov	r4, r5
 1742              	.LVL167:
 765:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1743              		.loc 1 765 21 view .LVU484
 1744 0034 EDE7     		b	.L109
 1745              		.cfi_endproc
 1746              	.LFE38:
 1748              		.section	.text.block_remove,"ax",%progbits
 1749              		.align	1
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1754              	block_remove:
 1755              	.LVL168:
 1756              	.LFB29:
 649:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1757              		.loc 1 649 1 is_stmt 1 view -0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 8
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 649:lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1761              		.loc 1 649 1 is_stmt 0 view .LVU486
 1762 0000 30B5     		push	{r4, r5, lr}
 1763              	.LCFI20:
 1764              		.cfi_def_cfa_offset 12
 1765              		.cfi_offset 4, -12
 1766              		.cfi_offset 5, -8
 1767              		.cfi_offset 14, -4
 1768 0002 83B0     		sub	sp, sp, #12
 1769              	.LCFI21:
 1770              		.cfi_def_cfa_offset 24
 1771 0004 0546     		mov	r5, r0
 1772 0006 0C46     		mov	r4, r1
 650:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1773              		.loc 1 650 2 is_stmt 1 view .LVU487
 651:lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1774              		.loc 1 651 2 view .LVU488
 1775 0008 0846     		mov	r0, r1
 1776              	.LVL169:
 651:lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1777              		.loc 1 651 2 is_stmt 0 view .LVU489
 1778 000a FFF7FEFF 		bl	block_size
 1779              	.LVL170:
 651:lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1780              		.loc 1 651 2 view .LVU490
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 50


 1781 000e 6A46     		mov	r2, sp
 1782 0010 01A9     		add	r1, sp, #4
 1783 0012 FFF7FEFF 		bl	mapping_insert
 1784              	.LVL171:
 652:lvgl/src/misc/lv_tlsf.c **** }
 1785              		.loc 1 652 2 is_stmt 1 view .LVU491
 1786 0016 009B     		ldr	r3, [sp]
 1787 0018 019A     		ldr	r2, [sp, #4]
 1788 001a 2146     		mov	r1, r4
 1789 001c 2846     		mov	r0, r5
 1790 001e FFF7FEFF 		bl	remove_free_block
 1791              	.LVL172:
 653:lvgl/src/misc/lv_tlsf.c **** 
 1792              		.loc 1 653 1 is_stmt 0 view .LVU492
 1793 0022 03B0     		add	sp, sp, #12
 1794              	.LCFI22:
 1795              		.cfi_def_cfa_offset 12
 1796              		@ sp needed
 1797 0024 30BD     		pop	{r4, r5, pc}
 653:lvgl/src/misc/lv_tlsf.c **** 
 1798              		.loc 1 653 1 view .LVU493
 1799              		.cfi_endproc
 1800              	.LFE29:
 1802              		.section	.text.block_merge_prev,"ax",%progbits
 1803              		.align	1
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1808              	block_merge_prev:
 1809              	.LVL173:
 1810              	.LFB34:
 702:lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1811              		.loc 1 702 1 is_stmt 1 view -0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 702:lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1815              		.loc 1 702 1 is_stmt 0 view .LVU495
 1816 0000 70B5     		push	{r4, r5, r6, lr}
 1817              	.LCFI23:
 1818              		.cfi_def_cfa_offset 16
 1819              		.cfi_offset 4, -16
 1820              		.cfi_offset 5, -12
 1821              		.cfi_offset 6, -8
 1822              		.cfi_offset 14, -4
 1823 0002 0546     		mov	r5, r0
 1824 0004 0C46     		mov	r4, r1
 703:lvgl/src/misc/lv_tlsf.c **** 	{
 1825              		.loc 1 703 2 is_stmt 1 view .LVU496
 703:lvgl/src/misc/lv_tlsf.c **** 	{
 1826              		.loc 1 703 6 is_stmt 0 view .LVU497
 1827 0006 0846     		mov	r0, r1
 1828              	.LVL174:
 703:lvgl/src/misc/lv_tlsf.c **** 	{
 1829              		.loc 1 703 6 view .LVU498
 1830 0008 FFF7FEFF 		bl	block_is_prev_free
 1831              	.LVL175:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 51


 703:lvgl/src/misc/lv_tlsf.c **** 	{
 1832              		.loc 1 703 5 view .LVU499
 1833 000c 08B9     		cbnz	r0, .L121
 1834              	.L115:
 712:lvgl/src/misc/lv_tlsf.c **** }
 1835              		.loc 1 712 2 is_stmt 1 view .LVU500
 713:lvgl/src/misc/lv_tlsf.c **** 
 1836              		.loc 1 713 1 is_stmt 0 view .LVU501
 1837 000e 2046     		mov	r0, r4
 1838 0010 70BD     		pop	{r4, r5, r6, pc}
 1839              	.LVL176:
 1840              	.L121:
 1841              	.LBB4:
 705:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1842              		.loc 1 705 3 is_stmt 1 view .LVU502
 705:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1843              		.loc 1 705 26 is_stmt 0 view .LVU503
 1844 0012 2046     		mov	r0, r4
 1845 0014 FFF7FEFF 		bl	block_prev
 1846              	.LVL177:
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1847              		.loc 1 706 3 is_stmt 1 view .LVU504
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1848              		.loc 1 706 3 view .LVU505
 1849 0018 0646     		mov	r6, r0
 1850 001a 18B1     		cbz	r0, .L117
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1851              		.loc 1 706 3 discriminator 2 view .LVU506
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1852              		.loc 1 707 3 discriminator 2 view .LVU507
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1853              		.loc 1 707 3 discriminator 2 view .LVU508
 1854 001c FFF7FEFF 		bl	block_is_free
 1855              	.LVL178:
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1856              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU509
 1857 0020 08B9     		cbnz	r0, .L118
 1858              	.L119:
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1859              		.loc 1 707 3 is_stmt 1 discriminator 2 view .LVU510
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1860              		.loc 1 707 3 discriminator 2 view .LVU511
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1861              		.loc 1 707 3 discriminator 2 view .LVU512
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1862              		.loc 1 707 3 discriminator 2 view .LVU513
 1863 0022 FEE7     		b	.L119
 1864              	.LVL179:
 1865              	.L117:
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1866              		.loc 1 706 3 discriminator 1 view .LVU514
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1867              		.loc 1 706 3 discriminator 1 view .LVU515
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1868              		.loc 1 706 3 discriminator 1 view .LVU516
 706:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1869              		.loc 1 706 3 discriminator 1 view .LVU517
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 52


 1870 0024 FEE7     		b	.L117
 1871              	.LVL180:
 1872              	.L118:
 707:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1873              		.loc 1 707 3 discriminator 4 view .LVU518
 708:lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 1874              		.loc 1 708 3 discriminator 4 view .LVU519
 1875 0026 3146     		mov	r1, r6
 1876 0028 2846     		mov	r0, r5
 1877 002a FFF7FEFF 		bl	block_remove
 1878              	.LVL181:
 709:lvgl/src/misc/lv_tlsf.c **** 	}
 1879              		.loc 1 709 3 discriminator 4 view .LVU520
 709:lvgl/src/misc/lv_tlsf.c **** 	}
 1880              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU521
 1881 002e 2146     		mov	r1, r4
 1882 0030 3046     		mov	r0, r6
 1883 0032 FFF7FEFF 		bl	block_absorb
 1884              	.LVL182:
 1885 0036 0446     		mov	r4, r0
 1886              	.LVL183:
 709:lvgl/src/misc/lv_tlsf.c **** 	}
 1887              		.loc 1 709 11 discriminator 4 view .LVU522
 1888 0038 E9E7     		b	.L115
 1889              	.LBE4:
 1890              		.cfi_endproc
 1891              	.LFE34:
 1893              		.section	.text.block_merge_next,"ax",%progbits
 1894              		.align	1
 1895              		.syntax unified
 1896              		.thumb
 1897              		.thumb_func
 1899              	block_merge_next:
 1900              	.LVL184:
 1901              	.LFB35:
 717:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1902              		.loc 1 717 1 is_stmt 1 view -0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 717:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1906              		.loc 1 717 1 is_stmt 0 view .LVU524
 1907 0000 70B5     		push	{r4, r5, r6, lr}
 1908              	.LCFI24:
 1909              		.cfi_def_cfa_offset 16
 1910              		.cfi_offset 4, -16
 1911              		.cfi_offset 5, -12
 1912              		.cfi_offset 6, -8
 1913              		.cfi_offset 14, -4
 1914 0002 0546     		mov	r5, r0
 1915 0004 0C46     		mov	r4, r1
 718:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1916              		.loc 1 718 2 is_stmt 1 view .LVU525
 718:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1917              		.loc 1 718 25 is_stmt 0 view .LVU526
 1918 0006 0846     		mov	r0, r1
 1919              	.LVL185:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 53


 718:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1920              		.loc 1 718 25 view .LVU527
 1921 0008 FFF7FEFF 		bl	block_next
 1922              	.LVL186:
 719:lvgl/src/misc/lv_tlsf.c **** 
 1923              		.loc 1 719 2 is_stmt 1 view .LVU528
 719:lvgl/src/misc/lv_tlsf.c **** 
 1924              		.loc 1 719 2 view .LVU529
 1925 000c 40B1     		cbz	r0, .L124
 1926 000e 0646     		mov	r6, r0
 719:lvgl/src/misc/lv_tlsf.c **** 
 1927              		.loc 1 719 2 discriminator 2 view .LVU530
 721:lvgl/src/misc/lv_tlsf.c **** 	{
 1928              		.loc 1 721 2 discriminator 2 view .LVU531
 721:lvgl/src/misc/lv_tlsf.c **** 	{
 1929              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU532
 1930 0010 FFF7FEFF 		bl	block_is_free
 1931              	.LVL187:
 721:lvgl/src/misc/lv_tlsf.c **** 	{
 1932              		.loc 1 721 5 discriminator 2 view .LVU533
 1933 0014 70B1     		cbz	r0, .L125
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1934              		.loc 1 723 3 is_stmt 1 view .LVU534
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1935              		.loc 1 723 3 view .LVU535
 1936 0016 2046     		mov	r0, r4
 1937 0018 FFF7FEFF 		bl	block_is_last
 1938              	.LVL188:
 1939 001c 08B1     		cbz	r0, .L126
 1940              	.L127:
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1941              		.loc 1 723 3 discriminator 2 view .LVU536
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1942              		.loc 1 723 3 discriminator 2 view .LVU537
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1943              		.loc 1 723 3 discriminator 2 view .LVU538
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1944              		.loc 1 723 3 discriminator 2 view .LVU539
 1945 001e FEE7     		b	.L127
 1946              	.LVL189:
 1947              	.L124:
 719:lvgl/src/misc/lv_tlsf.c **** 
 1948              		.loc 1 719 2 discriminator 1 view .LVU540
 719:lvgl/src/misc/lv_tlsf.c **** 
 1949              		.loc 1 719 2 discriminator 1 view .LVU541
 719:lvgl/src/misc/lv_tlsf.c **** 
 1950              		.loc 1 719 2 discriminator 1 view .LVU542
 719:lvgl/src/misc/lv_tlsf.c **** 
 1951              		.loc 1 719 2 discriminator 1 view .LVU543
 1952 0020 FEE7     		b	.L124
 1953              	.LVL190:
 1954              	.L126:
 723:lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1955              		.loc 1 723 3 discriminator 2 view .LVU544
 724:lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 1956              		.loc 1 724 3 discriminator 2 view .LVU545
 1957 0022 3146     		mov	r1, r6
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 54


 1958 0024 2846     		mov	r0, r5
 1959 0026 FFF7FEFF 		bl	block_remove
 1960              	.LVL191:
 725:lvgl/src/misc/lv_tlsf.c **** 	}
 1961              		.loc 1 725 3 discriminator 2 view .LVU546
 725:lvgl/src/misc/lv_tlsf.c **** 	}
 1962              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU547
 1963 002a 3146     		mov	r1, r6
 1964 002c 2046     		mov	r0, r4
 1965 002e FFF7FEFF 		bl	block_absorb
 1966              	.LVL192:
 1967 0032 0446     		mov	r4, r0
 1968              	.LVL193:
 1969              	.L125:
 728:lvgl/src/misc/lv_tlsf.c **** }
 1970              		.loc 1 728 2 is_stmt 1 view .LVU548
 729:lvgl/src/misc/lv_tlsf.c **** 
 1971              		.loc 1 729 1 is_stmt 0 view .LVU549
 1972 0034 2046     		mov	r0, r4
 1973 0036 70BD     		pop	{r4, r5, r6, pc}
 729:lvgl/src/misc/lv_tlsf.c **** 
 1974              		.loc 1 729 1 view .LVU550
 1975              		.cfi_endproc
 1976              	.LFE35:
 1978              		.section	.text.block_trim_used,"ax",%progbits
 1979              		.align	1
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1984              	block_trim_used:
 1985              	.LVL194:
 1986              	.LFB37:
 746:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1987              		.loc 1 746 1 is_stmt 1 view -0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 746:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1991              		.loc 1 746 1 is_stmt 0 view .LVU552
 1992 0000 70B5     		push	{r4, r5, r6, lr}
 1993              	.LCFI25:
 1994              		.cfi_def_cfa_offset 16
 1995              		.cfi_offset 4, -16
 1996              		.cfi_offset 5, -12
 1997              		.cfi_offset 6, -8
 1998              		.cfi_offset 14, -4
 1999 0002 0646     		mov	r6, r0
 2000 0004 0C46     		mov	r4, r1
 2001 0006 1546     		mov	r5, r2
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2002              		.loc 1 747 2 is_stmt 1 view .LVU553
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2003              		.loc 1 747 2 view .LVU554
 2004 0008 0846     		mov	r0, r1
 2005              	.LVL195:
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2006              		.loc 1 747 2 is_stmt 0 view .LVU555
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 55


 2007 000a FFF7FEFF 		bl	block_is_free
 2008              	.LVL196:
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2009              		.loc 1 747 2 view .LVU556
 2010 000e 00B1     		cbz	r0, .L130
 2011              	.L131:
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2012              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU557
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2013              		.loc 1 747 2 discriminator 1 view .LVU558
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2014              		.loc 1 747 2 discriminator 1 view .LVU559
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2015              		.loc 1 747 2 discriminator 1 view .LVU560
 2016 0010 FEE7     		b	.L131
 2017              	.L130:
 747:lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2018              		.loc 1 747 2 discriminator 2 view .LVU561
 748:lvgl/src/misc/lv_tlsf.c **** 	{
 2019              		.loc 1 748 2 discriminator 2 view .LVU562
 748:lvgl/src/misc/lv_tlsf.c **** 	{
 2020              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU563
 2021 0012 2946     		mov	r1, r5
 2022 0014 2046     		mov	r0, r4
 2023 0016 FFF7FEFF 		bl	block_can_split
 2024              	.LVL197:
 748:lvgl/src/misc/lv_tlsf.c **** 	{
 2025              		.loc 1 748 5 discriminator 2 view .LVU564
 2026 001a 00B9     		cbnz	r0, .L134
 2027              	.LVL198:
 2028              	.L129:
 757:lvgl/src/misc/lv_tlsf.c **** 
 2029              		.loc 1 757 1 view .LVU565
 2030 001c 70BD     		pop	{r4, r5, r6, pc}
 2031              	.LVL199:
 2032              	.L134:
 2033              	.LBB5:
 751:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2034              		.loc 1 751 3 is_stmt 1 view .LVU566
 751:lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2035              		.loc 1 751 37 is_stmt 0 view .LVU567
 2036 001e 2946     		mov	r1, r5
 2037 0020 2046     		mov	r0, r4
 2038 0022 FFF7FEFF 		bl	block_split
 2039              	.LVL200:
 2040 0026 0446     		mov	r4, r0
 2041              	.LVL201:
 752:lvgl/src/misc/lv_tlsf.c **** 
 2042              		.loc 1 752 3 is_stmt 1 view .LVU568
 2043 0028 FFF7FEFF 		bl	block_set_prev_used
 2044              	.LVL202:
 754:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2045              		.loc 1 754 3 view .LVU569
 754:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2046              		.loc 1 754 21 is_stmt 0 view .LVU570
 2047 002c 2146     		mov	r1, r4
 2048 002e 3046     		mov	r0, r6
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 56


 2049 0030 FFF7FEFF 		bl	block_merge_next
 2050              	.LVL203:
 2051 0034 0146     		mov	r1, r0
 2052              	.LVL204:
 755:lvgl/src/misc/lv_tlsf.c **** 	}
 2053              		.loc 1 755 3 is_stmt 1 view .LVU571
 2054 0036 3046     		mov	r0, r6
 2055              	.LVL205:
 755:lvgl/src/misc/lv_tlsf.c **** 	}
 2056              		.loc 1 755 3 is_stmt 0 view .LVU572
 2057 0038 FFF7FEFF 		bl	block_insert
 2058              	.LVL206:
 755:lvgl/src/misc/lv_tlsf.c **** 	}
 2059              		.loc 1 755 3 view .LVU573
 2060              	.LBE5:
 757:lvgl/src/misc/lv_tlsf.c **** 
 2061              		.loc 1 757 1 view .LVU574
 2062 003c EEE7     		b	.L129
 2063              		.cfi_endproc
 2064              	.LFE37:
 2066              		.section	.text.mapping_search,"ax",%progbits
 2067              		.align	1
 2068              		.syntax unified
 2069              		.thumb
 2070              		.thumb_func
 2072              	mapping_search:
 2073              	.LVL207:
 2074              	.LFB25:
 556:lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2075              		.loc 1 556 1 is_stmt 1 view -0
 2076              		.cfi_startproc
 2077              		@ args = 0, pretend = 0, frame = 0
 2078              		@ frame_needed = 0, uses_anonymous_args = 0
 556:lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2079              		.loc 1 556 1 is_stmt 0 view .LVU576
 2080 0000 70B5     		push	{r4, r5, r6, lr}
 2081              	.LCFI26:
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 4, -16
 2084              		.cfi_offset 5, -12
 2085              		.cfi_offset 6, -8
 2086              		.cfi_offset 14, -4
 2087 0002 0446     		mov	r4, r0
 2088 0004 0D46     		mov	r5, r1
 2089 0006 1646     		mov	r6, r2
 557:lvgl/src/misc/lv_tlsf.c **** 	{
 2090              		.loc 1 557 2 is_stmt 1 view .LVU577
 557:lvgl/src/misc/lv_tlsf.c **** 	{
 2091              		.loc 1 557 5 is_stmt 0 view .LVU578
 2092 0008 7F28     		cmp	r0, #127
 2093 000a 06D9     		bls	.L136
 2094              	.LBB6:
 559:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2095              		.loc 1 559 3 is_stmt 1 view .LVU579
 559:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2096              		.loc 1 559 31 is_stmt 0 view .LVU580
 2097 000c FFF7FEFF 		bl	tlsf_fls
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 57


 2098              	.LVL208:
 559:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2099              		.loc 1 559 52 view .LVU581
 2100 0010 431F     		subs	r3, r0, #5
 559:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2101              		.loc 1 559 27 view .LVU582
 2102 0012 0120     		movs	r0, #1
 2103 0014 9840     		lsls	r0, r0, r3
 559:lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2104              		.loc 1 559 76 view .LVU583
 2105 0016 0138     		subs	r0, r0, #1
 2106              	.LVL209:
 560:lvgl/src/misc/lv_tlsf.c **** 	}
 2107              		.loc 1 560 3 is_stmt 1 view .LVU584
 560:lvgl/src/misc/lv_tlsf.c **** 	}
 2108              		.loc 1 560 8 is_stmt 0 view .LVU585
 2109 0018 0444     		add	r4, r4, r0
 2110              	.LVL210:
 2111              	.L136:
 560:lvgl/src/misc/lv_tlsf.c **** 	}
 2112              		.loc 1 560 8 view .LVU586
 2113              	.LBE6:
 562:lvgl/src/misc/lv_tlsf.c **** }
 2114              		.loc 1 562 2 is_stmt 1 view .LVU587
 2115 001a 3246     		mov	r2, r6
 2116 001c 2946     		mov	r1, r5
 2117 001e 2046     		mov	r0, r4
 2118 0020 FFF7FEFF 		bl	mapping_insert
 2119              	.LVL211:
 563:lvgl/src/misc/lv_tlsf.c **** 
 2120              		.loc 1 563 1 is_stmt 0 view .LVU588
 2121 0024 70BD     		pop	{r4, r5, r6, pc}
 563:lvgl/src/misc/lv_tlsf.c **** 
 2122              		.loc 1 563 1 view .LVU589
 2123              		.cfi_endproc
 2124              	.LFE25:
 2126              		.section	.text.tlsf_ffs,"ax",%progbits
 2127              		.align	1
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2132              	tlsf_ffs:
 2133              	.LVL212:
 2134              	.LFB1:
  94:lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2135              		.loc 1 94 1 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 2139              		@ link register save eliminated.
  94:lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2140              		.loc 1 94 1 is_stmt 0 view .LVU591
 2141 0000 0346     		mov	r3, r0
  95:lvgl/src/misc/lv_tlsf.c **** }
 2142              		.loc 1 95 2 is_stmt 1 view .LVU592
  95:lvgl/src/misc/lv_tlsf.c **** }
 2143              		.loc 1 95 9 is_stmt 0 view .LVU593
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 58


 2144 0002 90FAA0F0 		rbit	r0, r0
 2145              	.LVL213:
  95:lvgl/src/misc/lv_tlsf.c **** }
 2146              		.loc 1 95 9 view .LVU594
 2147 0006 B0FA80F0 		clz	r0, r0
 2148 000a 0BB9     		cbnz	r3, .L139
 2149 000c 4FF0FF30 		mov	r0, #-1
 2150              	.L139:
  96:lvgl/src/misc/lv_tlsf.c **** 
 2151              		.loc 1 96 1 view .LVU595
 2152 0010 7047     		bx	lr
 2153              		.cfi_endproc
 2154              	.LFE1:
 2156              		.section	.text.search_suitable_block,"ax",%progbits
 2157              		.align	1
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2162              	search_suitable_block:
 2163              	.LVL214:
 2164              	.LFB26:
 566:lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2165              		.loc 1 566 1 is_stmt 1 view -0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 566:lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2169              		.loc 1 566 1 is_stmt 0 view .LVU597
 2170 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2171              	.LCFI27:
 2172              		.cfi_def_cfa_offset 24
 2173              		.cfi_offset 3, -24
 2174              		.cfi_offset 4, -20
 2175              		.cfi_offset 5, -16
 2176              		.cfi_offset 6, -12
 2177              		.cfi_offset 7, -8
 2178              		.cfi_offset 14, -4
 2179 0002 0546     		mov	r5, r0
 2180 0004 1646     		mov	r6, r2
 567:lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2181              		.loc 1 567 2 is_stmt 1 view .LVU598
 567:lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2182              		.loc 1 567 6 is_stmt 0 view .LVU599
 2183 0006 0C68     		ldr	r4, [r1]
 2184              	.LVL215:
 568:lvgl/src/misc/lv_tlsf.c **** 
 2185              		.loc 1 568 2 is_stmt 1 view .LVU600
 568:lvgl/src/misc/lv_tlsf.c **** 
 2186              		.loc 1 568 6 is_stmt 0 view .LVU601
 2187 0008 1268     		ldr	r2, [r2]
 2188              	.LVL216:
 574:lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2189              		.loc 1 574 2 is_stmt 1 view .LVU602
 574:lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2190              		.loc 1 574 42 is_stmt 0 view .LVU603
 2191 000a 231D     		adds	r3, r4, #4
 2192 000c 00EB8303 		add	r3, r0, r3, lsl #2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 59


 2193 0010 5B68     		ldr	r3, [r3, #4]
 574:lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2194              		.loc 1 574 54 view .LVU604
 2195 0012 4FF0FF30 		mov	r0, #-1
 2196              	.LVL217:
 574:lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2197              		.loc 1 574 54 view .LVU605
 2198 0016 9040     		lsls	r0, r0, r2
 2199              	.LVL218:
 575:lvgl/src/misc/lv_tlsf.c **** 	{
 2200              		.loc 1 575 2 is_stmt 1 view .LVU606
 575:lvgl/src/misc/lv_tlsf.c **** 	{
 2201              		.loc 1 575 5 is_stmt 0 view .LVU607
 2202 0018 1840     		ands	r0, r3, r0
 2203              	.LVL219:
 575:lvgl/src/misc/lv_tlsf.c **** 	{
 2204              		.loc 1 575 5 view .LVU608
 2205 001a 10D1     		bne	.L141
 2206 001c 0F46     		mov	r7, r1
 2207              	.LBB7:
 578:lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2208              		.loc 1 578 3 is_stmt 1 view .LVU609
 578:lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2209              		.loc 1 578 38 is_stmt 0 view .LVU610
 2210 001e 2A69     		ldr	r2, [r5, #16]
 2211              	.LVL220:
 578:lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2212              		.loc 1 578 64 view .LVU611
 2213 0020 0134     		adds	r4, r4, #1
 2214              	.LVL221:
 578:lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2215              		.loc 1 578 57 view .LVU612
 2216 0022 4FF0FF33 		mov	r3, #-1
 2217 0026 A340     		lsls	r3, r3, r4
 2218              	.LVL222:
 579:lvgl/src/misc/lv_tlsf.c **** 		{
 2219              		.loc 1 579 3 is_stmt 1 view .LVU613
 579:lvgl/src/misc/lv_tlsf.c **** 		{
 2220              		.loc 1 579 6 is_stmt 0 view .LVU614
 2221 0028 12EA0300 		ands	r0, r2, r3
 2222              	.LVL223:
 579:lvgl/src/misc/lv_tlsf.c **** 		{
 2223              		.loc 1 579 6 view .LVU615
 2224 002c 12D0     		beq	.L145
 585:lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2225              		.loc 1 585 3 is_stmt 1 view .LVU616
 585:lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2226              		.loc 1 585 8 is_stmt 0 view .LVU617
 2227 002e FFF7FEFF 		bl	tlsf_ffs
 2228              	.LVL224:
 585:lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2229              		.loc 1 585 8 view .LVU618
 2230 0032 0446     		mov	r4, r0
 2231              	.LVL225:
 586:lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2232              		.loc 1 586 3 is_stmt 1 view .LVU619
 586:lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 60


 2233              		.loc 1 586 8 is_stmt 0 view .LVU620
 2234 0034 3860     		str	r0, [r7]
 587:lvgl/src/misc/lv_tlsf.c **** 	}
 2235              		.loc 1 587 3 is_stmt 1 view .LVU621
 587:lvgl/src/misc/lv_tlsf.c **** 	}
 2236              		.loc 1 587 10 is_stmt 0 view .LVU622
 2237 0036 031D     		adds	r3, r0, #4
 2238 0038 05EB8303 		add	r3, r5, r3, lsl #2
 2239 003c 5868     		ldr	r0, [r3, #4]
 2240              	.LVL226:
 2241              	.L141:
 587:lvgl/src/misc/lv_tlsf.c **** 	}
 2242              		.loc 1 587 10 view .LVU623
 2243              	.LBE7:
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2244              		.loc 1 589 2 is_stmt 1 view .LVU624
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2245              		.loc 1 589 2 view .LVU625
 2246 003e 00B9     		cbnz	r0, .L143
 2247              	.L144:
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2248              		.loc 1 589 2 discriminator 1 view .LVU626
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2249              		.loc 1 589 2 discriminator 1 view .LVU627
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2250              		.loc 1 589 2 discriminator 1 view .LVU628
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2251              		.loc 1 589 2 discriminator 1 view .LVU629
 2252 0040 FEE7     		b	.L144
 2253              	.L143:
 589:lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2254              		.loc 1 589 2 discriminator 2 view .LVU630
 590:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2255              		.loc 1 590 2 discriminator 2 view .LVU631
 590:lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2256              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU632
 2257 0042 FFF7FEFF 		bl	tlsf_ffs
 2258              	.LVL227:
 591:lvgl/src/misc/lv_tlsf.c **** 
 2259              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU633
 591:lvgl/src/misc/lv_tlsf.c **** 
 2260              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU634
 2261 0046 3060     		str	r0, [r6]
 594:lvgl/src/misc/lv_tlsf.c **** }
 2262              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU635
 594:lvgl/src/misc/lv_tlsf.c **** }
 2263              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU636
 2264 0048 00EB4413 		add	r3, r0, r4, lsl #5
 2265 004c 0E33     		adds	r3, r3, #14
 2266 004e 55F82300 		ldr	r0, [r5, r3, lsl #2]
 2267              	.LVL228:
 2268              	.L140:
 595:lvgl/src/misc/lv_tlsf.c **** 
 2269              		.loc 1 595 1 view .LVU637
 2270 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2271              	.LVL229:
 2272              	.L145:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 61


 2273              	.LBB8:
 582:lvgl/src/misc/lv_tlsf.c **** 		}
 2274              		.loc 1 582 11 view .LVU638
 2275 0054 0020     		movs	r0, #0
 2276              	.LVL230:
 582:lvgl/src/misc/lv_tlsf.c **** 		}
 2277              		.loc 1 582 11 view .LVU639
 2278 0056 FCE7     		b	.L140
 2279              	.LBE8:
 2280              		.cfi_endproc
 2281              	.LFE26:
 2283              		.section	.text.block_locate_free,"ax",%progbits
 2284              		.align	1
 2285              		.syntax unified
 2286              		.thumb
 2287              		.thumb_func
 2289              	block_locate_free:
 2290              	.LVL231:
 2291              	.LFB39:
 776:lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2292              		.loc 1 776 1 is_stmt 1 view -0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 8
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 776:lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2296              		.loc 1 776 1 is_stmt 0 view .LVU641
 2297 0000 70B5     		push	{r4, r5, r6, lr}
 2298              	.LCFI28:
 2299              		.cfi_def_cfa_offset 16
 2300              		.cfi_offset 4, -16
 2301              		.cfi_offset 5, -12
 2302              		.cfi_offset 6, -8
 2303              		.cfi_offset 14, -4
 2304 0002 82B0     		sub	sp, sp, #8
 2305              	.LCFI29:
 2306              		.cfi_def_cfa_offset 24
 777:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2307              		.loc 1 777 2 is_stmt 1 view .LVU642
 777:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2308              		.loc 1 777 6 is_stmt 0 view .LVU643
 2309 0004 0023     		movs	r3, #0
 2310 0006 0193     		str	r3, [sp, #4]
 777:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2311              		.loc 1 777 14 view .LVU644
 2312 0008 0093     		str	r3, [sp]
 778:lvgl/src/misc/lv_tlsf.c **** 
 2313              		.loc 1 778 2 is_stmt 1 view .LVU645
 2314              	.LVL232:
 780:lvgl/src/misc/lv_tlsf.c **** 	{
 2315              		.loc 1 780 2 view .LVU646
 780:lvgl/src/misc/lv_tlsf.c **** 	{
 2316              		.loc 1 780 5 is_stmt 0 view .LVU647
 2317 000a E1B1     		cbz	r1, .L151
 2318 000c 0446     		mov	r4, r0
 2319 000e 0E46     		mov	r6, r1
 782:lvgl/src/misc/lv_tlsf.c **** 		
 2320              		.loc 1 782 3 is_stmt 1 view .LVU648
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 62


 2321 0010 6A46     		mov	r2, sp
 2322 0012 01A9     		add	r1, sp, #4
 2323              	.LVL233:
 782:lvgl/src/misc/lv_tlsf.c **** 		
 2324              		.loc 1 782 3 is_stmt 0 view .LVU649
 2325 0014 3046     		mov	r0, r6
 2326              	.LVL234:
 782:lvgl/src/misc/lv_tlsf.c **** 		
 2327              		.loc 1 782 3 view .LVU650
 2328 0016 FFF7FEFF 		bl	mapping_search
 2329              	.LVL235:
 790:lvgl/src/misc/lv_tlsf.c **** 		{
 2330              		.loc 1 790 3 is_stmt 1 view .LVU651
 790:lvgl/src/misc/lv_tlsf.c **** 		{
 2331              		.loc 1 790 10 is_stmt 0 view .LVU652
 2332 001a 019B     		ldr	r3, [sp, #4]
 790:lvgl/src/misc/lv_tlsf.c **** 		{
 2333              		.loc 1 790 6 view .LVU653
 2334 001c 082B     		cmp	r3, #8
 2335 001e 16DC     		bgt	.L152
 792:lvgl/src/misc/lv_tlsf.c **** 		}
 2336              		.loc 1 792 4 is_stmt 1 view .LVU654
 792:lvgl/src/misc/lv_tlsf.c **** 		}
 2337              		.loc 1 792 12 is_stmt 0 view .LVU655
 2338 0020 6A46     		mov	r2, sp
 2339 0022 01A9     		add	r1, sp, #4
 2340 0024 2046     		mov	r0, r4
 2341 0026 FFF7FEFF 		bl	search_suitable_block
 2342              	.LVL236:
 796:lvgl/src/misc/lv_tlsf.c **** 	{
 2343              		.loc 1 796 2 is_stmt 1 view .LVU656
 796:lvgl/src/misc/lv_tlsf.c **** 	{
 2344              		.loc 1 796 5 is_stmt 0 view .LVU657
 2345 002a 0546     		mov	r5, r0
 2346 002c 60B1     		cbz	r0, .L147
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2347              		.loc 1 798 3 is_stmt 1 view .LVU658
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2348              		.loc 1 798 3 view .LVU659
 2349 002e FFF7FEFF 		bl	block_size
 2350              	.LVL237:
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2351              		.loc 1 798 3 is_stmt 0 view .LVU660
 2352 0032 B042     		cmp	r0, r6
 2353 0034 00D2     		bcs	.L149
 2354              	.L150:
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2355              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU661
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2356              		.loc 1 798 3 discriminator 1 view .LVU662
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2357              		.loc 1 798 3 discriminator 1 view .LVU663
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2358              		.loc 1 798 3 discriminator 1 view .LVU664
 2359 0036 FEE7     		b	.L150
 2360              	.L149:
 798:lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 63


 2361              		.loc 1 798 3 discriminator 2 view .LVU665
 799:lvgl/src/misc/lv_tlsf.c **** 	}
 2362              		.loc 1 799 3 discriminator 2 view .LVU666
 2363 0038 009B     		ldr	r3, [sp]
 2364 003a 019A     		ldr	r2, [sp, #4]
 2365 003c 2946     		mov	r1, r5
 2366 003e 2046     		mov	r0, r4
 2367 0040 FFF7FEFF 		bl	remove_free_block
 2368              	.LVL238:
 2369 0044 00E0     		b	.L147
 2370              	.LVL239:
 2371              	.L151:
 778:lvgl/src/misc/lv_tlsf.c **** 
 2372              		.loc 1 778 18 is_stmt 0 view .LVU667
 2373 0046 0025     		movs	r5, #0
 2374              	.LVL240:
 2375              	.L147:
 803:lvgl/src/misc/lv_tlsf.c **** 
 2376              		.loc 1 803 1 view .LVU668
 2377 0048 2846     		mov	r0, r5
 2378 004a 02B0     		add	sp, sp, #8
 2379              	.LCFI30:
 2380              		.cfi_remember_state
 2381              		.cfi_def_cfa_offset 16
 2382              		@ sp needed
 2383 004c 70BD     		pop	{r4, r5, r6, pc}
 2384              	.LVL241:
 2385              	.L152:
 2386              	.LCFI31:
 2387              		.cfi_restore_state
 778:lvgl/src/misc/lv_tlsf.c **** 
 2388              		.loc 1 778 18 view .LVU669
 2389 004e 0025     		movs	r5, #0
 2390              	.LVL242:
 802:lvgl/src/misc/lv_tlsf.c **** }
 2391              		.loc 1 802 2 is_stmt 1 view .LVU670
 802:lvgl/src/misc/lv_tlsf.c **** }
 2392              		.loc 1 802 9 is_stmt 0 view .LVU671
 2393 0050 FAE7     		b	.L147
 2394              		.cfi_endproc
 2395              	.LFE39:
 2397              		.section	.text.lv_tlsf_check,"ax",%progbits
 2398              		.align	1
 2399              		.global	lv_tlsf_check
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2404              	lv_tlsf_check:
 2405              	.LVL243:
 2406              	.LFB43:
 867:lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2407              		.loc 1 867 1 is_stmt 1 view -0
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 8
 2410              		@ frame_needed = 0, uses_anonymous_args = 0
 867:lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2411              		.loc 1 867 1 is_stmt 0 view .LVU673
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 64


 2412 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2413              	.LCFI32:
 2414              		.cfi_def_cfa_offset 24
 2415              		.cfi_offset 4, -24
 2416              		.cfi_offset 5, -20
 2417              		.cfi_offset 6, -16
 2418              		.cfi_offset 7, -12
 2419              		.cfi_offset 8, -8
 2420              		.cfi_offset 14, -4
 2421 0004 82B0     		sub	sp, sp, #8
 2422              	.LCFI33:
 2423              		.cfi_def_cfa_offset 32
 2424 0006 0546     		mov	r5, r0
 868:lvgl/src/misc/lv_tlsf.c **** 
 2425              		.loc 1 868 2 is_stmt 1 view .LVU674
 870:lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 2426              		.loc 1 870 2 view .LVU675
 2427              	.LVL244:
 871:lvgl/src/misc/lv_tlsf.c **** 
 2428              		.loc 1 871 2 view .LVU676
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2429              		.loc 1 874 2 view .LVU677
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2430              		.loc 1 874 9 is_stmt 0 view .LVU678
 2431 0008 0026     		movs	r6, #0
 2432              	.LVL245:
 2433              	.L155:
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2434              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU679
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2435              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU680
 2436 000a 082E     		cmp	r6, #8
 2437 000c 4FDC     		bgt	.L182
 876:lvgl/src/misc/lv_tlsf.c **** 		{
 2438              		.loc 1 876 10 view .LVU681
 2439 000e 0027     		movs	r7, #0
 2440              	.L179:
 2441              	.LVL246:
 876:lvgl/src/misc/lv_tlsf.c **** 		{
 2442              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU682
 876:lvgl/src/misc/lv_tlsf.c **** 		{
 2443              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU683
 2444 0010 1F2F     		cmp	r7, #31
 2445 0012 4ADC     		bgt	.L183
 2446              	.LBB9:
 878:lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2447              		.loc 1 878 4 is_stmt 1 view .LVU684
 878:lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2448              		.loc 1 878 30 is_stmt 0 view .LVU685
 2449 0014 2A69     		ldr	r2, [r5, #16]
 878:lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2450              		.loc 1 878 48 view .LVU686
 2451 0016 0123     		movs	r3, #1
 2452 0018 03FA06FC 		lsl	ip, r3, r6
 2453              	.LVL247:
 879:lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2454              		.loc 1 879 4 is_stmt 1 view .LVU687
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 65


 879:lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2455              		.loc 1 879 42 is_stmt 0 view .LVU688
 2456 001c 311D     		adds	r1, r6, #4
 2457 001e 05EB8101 		add	r1, r5, r1, lsl #2
 2458 0022 4868     		ldr	r0, [r1, #4]
 2459              	.LVL248:
 880:lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2460              		.loc 1 880 4 is_stmt 1 view .LVU689
 880:lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2461              		.loc 1 880 37 is_stmt 0 view .LVU690
 2462 0024 BB40     		lsls	r3, r3, r7
 880:lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2463              		.loc 1 880 31 view .LVU691
 2464 0026 0340     		ands	r3, r3, r0
 2465              	.LVL249:
 881:lvgl/src/misc/lv_tlsf.c **** 
 2466              		.loc 1 881 4 is_stmt 1 view .LVU692
 881:lvgl/src/misc/lv_tlsf.c **** 
 2467              		.loc 1 881 26 is_stmt 0 view .LVU693
 2468 0028 07EB4611 		add	r1, r7, r6, lsl #5
 2469 002c 0E31     		adds	r1, r1, #14
 2470 002e 55F82140 		ldr	r4, [r5, r1, lsl #2]
 2471              	.LVL250:
 884:lvgl/src/misc/lv_tlsf.c **** 			{
 2472              		.loc 1 884 4 is_stmt 1 view .LVU694
 884:lvgl/src/misc/lv_tlsf.c **** 			{
 2473              		.loc 1 884 7 is_stmt 0 view .LVU695
 2474 0032 12EA0C0F 		tst	r2, ip
 2475 0036 00D1     		bne	.L156
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2476              		.loc 1 886 5 is_stmt 1 view .LVU696
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2477              		.loc 1 886 5 view .LVU697
 2478 0038 1BB9     		cbnz	r3, .L157
 2479              	.L156:
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2480              		.loc 1 886 60 discriminator 5 view .LVU698
 889:lvgl/src/misc/lv_tlsf.c **** 			{
 2481              		.loc 1 889 4 discriminator 5 view .LVU699
 889:lvgl/src/misc/lv_tlsf.c **** 			{
 2482              		.loc 1 889 7 is_stmt 0 discriminator 5 view .LVU700
 2483 003a 1BB9     		cbnz	r3, .L158
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2484              		.loc 1 891 5 is_stmt 1 view .LVU701
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2485              		.loc 1 891 5 view .LVU702
 2486 003c A542     		cmp	r5, r4
 2487 003e 32D0     		beq	.L159
 2488              	.L160:
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2489              		.loc 1 891 5 discriminator 2 view .LVU703
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2490              		.loc 1 891 5 discriminator 2 view .LVU704
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2491              		.loc 1 891 5 discriminator 2 view .LVU705
 891:lvgl/src/misc/lv_tlsf.c **** 				continue;
 2492              		.loc 1 891 5 discriminator 2 view .LVU706
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 66


 2493 0040 FEE7     		b	.L160
 2494              	.L157:
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2495              		.loc 1 886 5 discriminator 1 view .LVU707
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2496              		.loc 1 886 5 discriminator 1 view .LVU708
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2497              		.loc 1 886 5 discriminator 1 view .LVU709
 886:lvgl/src/misc/lv_tlsf.c **** 			}
 2498              		.loc 1 886 5 discriminator 1 view .LVU710
 2499 0042 FEE7     		b	.L157
 2500              	.L158:
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2501              		.loc 1 896 4 view .LVU711
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2502              		.loc 1 896 4 view .LVU712
 2503 0044 38B3     		cbz	r0, .L162
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2504              		.loc 1 896 4 discriminator 5 view .LVU713
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2505              		.loc 1 896 4 discriminator 5 view .LVU714
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2506              		.loc 1 896 64 discriminator 5 view .LVU715
 897:lvgl/src/misc/lv_tlsf.c **** 
 2507              		.loc 1 897 4 discriminator 5 view .LVU716
 897:lvgl/src/misc/lv_tlsf.c **** 
 2508              		.loc 1 897 4 discriminator 5 view .LVU717
 2509 0046 A542     		cmp	r5, r4
 2510 0048 26D0     		beq	.L164
 2511              	.LVL251:
 2512              	.L163:
 899:lvgl/src/misc/lv_tlsf.c **** 			{
 2513              		.loc 1 899 10 view .LVU718
 2514 004a A542     		cmp	r5, r4
 2515 004c 2BD0     		beq	.L159
 2516              	.LBB10:
 901:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 2517              		.loc 1 901 5 view .LVU719
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2518              		.loc 1 902 5 view .LVU720
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2519              		.loc 1 902 5 view .LVU721
 2520 004e 2046     		mov	r0, r4
 2521 0050 FFF7FEFF 		bl	block_is_free
 2522              	.LVL252:
 2523 0054 08B3     		cbz	r0, .L166
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2524              		.loc 1 902 5 discriminator 9 view .LVU722
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2525              		.loc 1 902 5 discriminator 9 view .LVU723
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2526              		.loc 1 902 64 discriminator 9 view .LVU724
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2527              		.loc 1 903 5 discriminator 9 view .LVU725
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2528              		.loc 1 903 5 discriminator 9 view .LVU726
 2529 0056 2046     		mov	r0, r4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 67


 2530 0058 FFF7FEFF 		bl	block_is_prev_free
 2531              	.LVL253:
 2532 005c F0B9     		cbnz	r0, .L168
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2533              		.loc 1 903 5 discriminator 5 view .LVU727
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2534              		.loc 1 903 5 discriminator 5 view .LVU728
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2535              		.loc 1 903 78 discriminator 5 view .LVU729
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2536              		.loc 1 904 5 discriminator 5 view .LVU730
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2537              		.loc 1 904 5 discriminator 5 view .LVU731
 2538 005e 2046     		mov	r0, r4
 2539 0060 FFF7FEFF 		bl	block_next
 2540              	.LVL254:
 2541 0064 8046     		mov	r8, r0
 2542 0066 FFF7FEFF 		bl	block_is_free
 2543              	.LVL255:
 2544 006a C0B9     		cbnz	r0, .L170
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2545              		.loc 1 904 5 discriminator 5 view .LVU732
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2546              		.loc 1 904 5 discriminator 5 view .LVU733
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2547              		.loc 1 904 85 discriminator 5 view .LVU734
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2548              		.loc 1 905 5 discriminator 5 view .LVU735
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2549              		.loc 1 905 5 discriminator 5 view .LVU736
 2550 006c 4046     		mov	r0, r8
 2551 006e FFF7FEFF 		bl	block_is_prev_free
 2552              	.LVL256:
 2553 0072 A8B1     		cbz	r0, .L172
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2554              		.loc 1 905 5 discriminator 9 view .LVU737
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2555              		.loc 1 905 5 discriminator 9 view .LVU738
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2556              		.loc 1 905 81 discriminator 9 view .LVU739
 906:lvgl/src/misc/lv_tlsf.c **** 
 2557              		.loc 1 906 5 discriminator 9 view .LVU740
 906:lvgl/src/misc/lv_tlsf.c **** 
 2558              		.loc 1 906 5 discriminator 9 view .LVU741
 2559 0074 2046     		mov	r0, r4
 2560 0076 FFF7FEFF 		bl	block_size
 2561              	.LVL257:
 2562 007a 0B28     		cmp	r0, #11
 2563 007c 11D9     		bls	.L174
 906:lvgl/src/misc/lv_tlsf.c **** 
 2564              		.loc 1 906 5 discriminator 9 view .LVU742
 906:lvgl/src/misc/lv_tlsf.c **** 
 2565              		.loc 1 906 5 discriminator 9 view .LVU743
 906:lvgl/src/misc/lv_tlsf.c **** 
 2566              		.loc 1 906 81 discriminator 9 view .LVU744
 908:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2567              		.loc 1 908 5 discriminator 9 view .LVU745
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 68


 2568 007e 01AA     		add	r2, sp, #4
 2569 0080 6946     		mov	r1, sp
 2570 0082 FFF7FEFF 		bl	mapping_insert
 2571              	.LVL258:
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2572              		.loc 1 909 5 discriminator 9 view .LVU746
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2573              		.loc 1 909 5 discriminator 9 view .LVU747
 2574 0086 009B     		ldr	r3, [sp]
 2575 0088 B342     		cmp	r3, r6
 2576 008a 0BD1     		bne	.L175
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2577              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU748
 2578 008c 019B     		ldr	r3, [sp, #4]
 2579 008e BB42     		cmp	r3, r7
 2580 0090 08D1     		bne	.L175
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2581              		.loc 1 909 5 is_stmt 1 discriminator 9 view .LVU749
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2582              		.loc 1 909 5 discriminator 9 view .LVU750
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2583              		.loc 1 909 76 discriminator 9 view .LVU751
 910:lvgl/src/misc/lv_tlsf.c **** 			}
 2584              		.loc 1 910 5 discriminator 9 view .LVU752
 910:lvgl/src/misc/lv_tlsf.c **** 			}
 2585              		.loc 1 910 11 is_stmt 0 discriminator 9 view .LVU753
 2586 0092 A468     		ldr	r4, [r4, #8]
 2587              	.LVL259:
 910:lvgl/src/misc/lv_tlsf.c **** 			}
 2588              		.loc 1 910 11 discriminator 9 view .LVU754
 2589 0094 D9E7     		b	.L163
 2590              	.LVL260:
 2591              	.L162:
 910:lvgl/src/misc/lv_tlsf.c **** 			}
 2592              		.loc 1 910 11 discriminator 9 view .LVU755
 2593              	.LBE10:
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2594              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU756
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2595              		.loc 1 896 4 discriminator 3 view .LVU757
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2596              		.loc 1 896 4 discriminator 3 view .LVU758
 896:lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2597              		.loc 1 896 4 discriminator 3 view .LVU759
 2598 0096 FEE7     		b	.L162
 2599              	.L164:
 897:lvgl/src/misc/lv_tlsf.c **** 
 2600              		.loc 1 897 4 discriminator 4 view .LVU760
 897:lvgl/src/misc/lv_tlsf.c **** 
 2601              		.loc 1 897 4 discriminator 4 view .LVU761
 897:lvgl/src/misc/lv_tlsf.c **** 
 2602              		.loc 1 897 4 discriminator 4 view .LVU762
 897:lvgl/src/misc/lv_tlsf.c **** 
 2603              		.loc 1 897 4 discriminator 4 view .LVU763
 2604 0098 FEE7     		b	.L164
 2605              	.LVL261:
 2606              	.L166:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 69


 2607              	.LBB11:
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2608              		.loc 1 902 5 discriminator 5 view .LVU764
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2609              		.loc 1 902 5 discriminator 5 view .LVU765
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2610              		.loc 1 902 5 discriminator 5 view .LVU766
 902:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2611              		.loc 1 902 5 discriminator 5 view .LVU767
 2612 009a FEE7     		b	.L166
 2613              	.L168:
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2614              		.loc 1 903 5 discriminator 6 view .LVU768
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2615              		.loc 1 903 5 discriminator 6 view .LVU769
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2616              		.loc 1 903 5 discriminator 6 view .LVU770
 903:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2617              		.loc 1 903 5 discriminator 6 view .LVU771
 2618 009c FEE7     		b	.L168
 2619              	.L170:
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2620              		.loc 1 904 5 discriminator 7 view .LVU772
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2621              		.loc 1 904 5 discriminator 7 view .LVU773
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2622              		.loc 1 904 5 discriminator 7 view .LVU774
 904:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2623              		.loc 1 904 5 discriminator 7 view .LVU775
 2624 009e FEE7     		b	.L170
 2625              	.L172:
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2626              		.loc 1 905 5 discriminator 8 view .LVU776
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2627              		.loc 1 905 5 discriminator 8 view .LVU777
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2628              		.loc 1 905 5 discriminator 8 view .LVU778
 905:lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2629              		.loc 1 905 5 discriminator 8 view .LVU779
 2630 00a0 FEE7     		b	.L172
 2631              	.L174:
 906:lvgl/src/misc/lv_tlsf.c **** 
 2632              		.loc 1 906 5 discriminator 9 view .LVU780
 906:lvgl/src/misc/lv_tlsf.c **** 
 2633              		.loc 1 906 5 discriminator 9 view .LVU781
 906:lvgl/src/misc/lv_tlsf.c **** 
 2634              		.loc 1 906 5 discriminator 9 view .LVU782
 906:lvgl/src/misc/lv_tlsf.c **** 
 2635              		.loc 1 906 5 discriminator 9 view .LVU783
 2636 00a2 FEE7     		b	.L174
 2637              	.L175:
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2638              		.loc 1 909 5 discriminator 10 view .LVU784
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2639              		.loc 1 909 5 discriminator 10 view .LVU785
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2640              		.loc 1 909 5 discriminator 10 view .LVU786
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 70


 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2641              		.loc 1 909 5 discriminator 10 view .LVU787
 2642 00a4 FEE7     		b	.L175
 2643              	.L159:
 909:lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2644              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU788
 2645              	.LBE11:
 2646              	.LBE9:
 876:lvgl/src/misc/lv_tlsf.c **** 		{
 2647              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU789
 2648 00a6 0137     		adds	r7, r7, #1
 2649              	.LVL262:
 876:lvgl/src/misc/lv_tlsf.c **** 		{
 2650              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU790
 2651 00a8 B2E7     		b	.L179
 2652              	.LVL263:
 2653              	.L183:
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2654              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU791
 2655 00aa 0136     		adds	r6, r6, #1
 2656              	.LVL264:
 874:lvgl/src/misc/lv_tlsf.c **** 	{
 2657              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU792
 2658 00ac ADE7     		b	.L155
 2659              	.LVL265:
 2660              	.L182:
 915:lvgl/src/misc/lv_tlsf.c **** }
 2661              		.loc 1 915 2 is_stmt 1 view .LVU793
 916:lvgl/src/misc/lv_tlsf.c **** 
 2662              		.loc 1 916 1 is_stmt 0 view .LVU794
 2663 00ae 0020     		movs	r0, #0
 2664 00b0 02B0     		add	sp, sp, #8
 2665              	.LCFI34:
 2666              		.cfi_def_cfa_offset 24
 2667              		@ sp needed
 2668 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 916:lvgl/src/misc/lv_tlsf.c **** 
 2669              		.loc 1 916 1 view .LVU795
 2670              		.cfi_endproc
 2671              	.LFE43:
 2673              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2674              		.align	1
 2675              		.global	lv_tlsf_walk_pool
 2676              		.syntax unified
 2677              		.thumb
 2678              		.thumb_func
 2680              	lv_tlsf_walk_pool:
 2681              	.LVL266:
 2682              	.LFB45:
 925:lvgl/src/misc/lv_tlsf.c **** 
 926:lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:lvgl/src/misc/lv_tlsf.c **** {
 2683              		.loc 1 927 1 is_stmt 1 view -0
 2684              		.cfi_startproc
 2685              		@ args = 0, pretend = 0, frame = 0
 2686              		@ frame_needed = 0, uses_anonymous_args = 0
 2687              		.loc 1 927 1 is_stmt 0 view .LVU797
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 71


 2688 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2689              	.LCFI35:
 2690              		.cfi_def_cfa_offset 24
 2691              		.cfi_offset 4, -24
 2692              		.cfi_offset 5, -20
 2693              		.cfi_offset 6, -16
 2694              		.cfi_offset 7, -12
 2695              		.cfi_offset 8, -8
 2696              		.cfi_offset 14, -4
 2697 0004 1746     		mov	r7, r2
 928:lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2698              		.loc 1 928 2 is_stmt 1 view .LVU798
 2699              		.loc 1 928 47 is_stmt 0 view .LVU799
 2700 0006 8846     		mov	r8, r1
 2701 0008 29B1     		cbz	r1, .L191
 2702              	.L185:
 2703              	.LVL267:
 929:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2704              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU800
 930:lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 2705              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU801
 2706 000a 6FF00301 		mvn	r1, #3
 2707              	.LVL268:
 2708              		.loc 1 930 3 discriminator 4 view .LVU802
 2709 000e FFF7FEFF 		bl	offset_to_block
 2710              	.LVL269:
 2711              		.loc 1 930 3 discriminator 4 view .LVU803
 2712 0012 0446     		mov	r4, r0
 2713              	.LVL270:
 931:lvgl/src/misc/lv_tlsf.c **** 
 932:lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 2714              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU804
 2715              		.loc 1 932 8 is_stmt 0 discriminator 4 view .LVU805
 2716 0014 18E0     		b	.L186
 2717              	.LVL271:
 2718              	.L191:
 928:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2719              		.loc 1 928 47 view .LVU806
 2720 0016 DFF84080 		ldr	r8, .L192
 2721 001a F6E7     		b	.L185
 2722              	.LVL272:
 2723              	.L188:
 933:lvgl/src/misc/lv_tlsf.c **** 	{
 934:lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 2724              		.loc 1 934 3 is_stmt 1 view .LVU807
 2725 001c 2046     		mov	r0, r4
 2726 001e FFF7FEFF 		bl	block_to_ptr
 2727              	.LVL273:
 2728 0022 0546     		mov	r5, r0
 2729 0024 2046     		mov	r0, r4
 2730 0026 FFF7FEFF 		bl	block_size
 2731              	.LVL274:
 2732 002a 0646     		mov	r6, r0
 935:lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 936:lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
 937:lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 2733              		.loc 1 937 5 is_stmt 0 view .LVU808
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 72


 2734 002c 2046     		mov	r0, r4
 2735 002e FFF7FEFF 		bl	block_is_free
 2736              	.LVL275:
 934:lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 2737              		.loc 1 934 3 view .LVU809
 2738 0032 3B46     		mov	r3, r7
 2739 0034 B0FA80F2 		clz	r2, r0
 2740 0038 5209     		lsrs	r2, r2, #5
 2741 003a 3146     		mov	r1, r6
 2742 003c 2846     		mov	r0, r5
 2743 003e C047     		blx	r8
 2744              	.LVL276:
 938:lvgl/src/misc/lv_tlsf.c **** 			user);
 939:lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
 2745              		.loc 1 939 3 is_stmt 1 view .LVU810
 2746              		.loc 1 939 11 is_stmt 0 view .LVU811
 2747 0040 2046     		mov	r0, r4
 2748 0042 FFF7FEFF 		bl	block_next
 2749              	.LVL277:
 2750 0046 0446     		mov	r4, r0
 2751              	.LVL278:
 2752              	.L186:
 932:lvgl/src/misc/lv_tlsf.c **** 	{
 2753              		.loc 1 932 8 is_stmt 1 view .LVU812
 2754 0048 24B1     		cbz	r4, .L184
 932:lvgl/src/misc/lv_tlsf.c **** 	{
 2755              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU813
 2756 004a 2046     		mov	r0, r4
 932:lvgl/src/misc/lv_tlsf.c **** 	{
 2757              		.loc 1 932 19 discriminator 1 view .LVU814
 2758 004c FFF7FEFF 		bl	block_is_last
 2759              	.LVL279:
 932:lvgl/src/misc/lv_tlsf.c **** 	{
 2760              		.loc 1 932 15 discriminator 1 view .LVU815
 2761 0050 0028     		cmp	r0, #0
 2762 0052 E3D0     		beq	.L188
 2763              	.L184:
 940:lvgl/src/misc/lv_tlsf.c **** 	}
 941:lvgl/src/misc/lv_tlsf.c **** }
 2764              		.loc 1 941 1 view .LVU816
 2765 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2766              	.LVL280:
 2767              	.L193:
 2768              		.loc 1 941 1 view .LVU817
 2769              		.align	2
 2770              	.L192:
 2771 0058 00000000 		.word	default_walker
 2772              		.cfi_endproc
 2773              	.LFE45:
 2775              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2776              		.align	1
 2777              		.global	lv_tlsf_block_size
 2778              		.syntax unified
 2779              		.thumb
 2780              		.thumb_func
 2782              	lv_tlsf_block_size:
 2783              	.LVL281:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 73


 2784              	.LFB46:
 942:lvgl/src/misc/lv_tlsf.c **** 
 943:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:lvgl/src/misc/lv_tlsf.c **** {
 2785              		.loc 1 944 1 is_stmt 1 view -0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 0
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
 945:lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2789              		.loc 1 945 2 view .LVU819
 946:lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2790              		.loc 1 946 2 view .LVU820
 2791              		.loc 1 946 5 is_stmt 0 view .LVU821
 2792 0000 28B1     		cbz	r0, .L196
 944:lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2793              		.loc 1 944 1 view .LVU822
 2794 0002 08B5     		push	{r3, lr}
 2795              	.LCFI36:
 2796              		.cfi_def_cfa_offset 8
 2797              		.cfi_offset 3, -8
 2798              		.cfi_offset 14, -4
 2799              	.LBB12:
 947:lvgl/src/misc/lv_tlsf.c **** 	{
 948:lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 2800              		.loc 1 948 3 is_stmt 1 view .LVU823
 2801              		.loc 1 948 33 is_stmt 0 view .LVU824
 2802 0004 FFF7FEFF 		bl	block_from_ptr
 2803              	.LVL282:
 949:lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 2804              		.loc 1 949 3 is_stmt 1 view .LVU825
 2805              		.loc 1 949 10 is_stmt 0 view .LVU826
 2806 0008 FFF7FEFF 		bl	block_size
 2807              	.LVL283:
 2808              		.loc 1 949 10 view .LVU827
 2809              	.LBE12:
 950:lvgl/src/misc/lv_tlsf.c **** 	}
 951:lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:lvgl/src/misc/lv_tlsf.c **** }
 2810              		.loc 1 952 1 view .LVU828
 2811 000c 08BD     		pop	{r3, pc}
 2812              	.LVL284:
 2813              	.L196:
 2814              	.LCFI37:
 2815              		.cfi_def_cfa_offset 0
 2816              		.cfi_restore 3
 2817              		.cfi_restore 14
 945:lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2818              		.loc 1 945 9 view .LVU829
 2819 000e 0020     		movs	r0, #0
 2820              	.LVL285:
 951:lvgl/src/misc/lv_tlsf.c **** }
 2821              		.loc 1 951 2 is_stmt 1 view .LVU830
 2822              		.loc 1 952 1 is_stmt 0 view .LVU831
 2823 0010 7047     		bx	lr
 2824              		.cfi_endproc
 2825              	.LFE46:
 2827              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 74


 2828              		.align	1
 2829              		.global	lv_tlsf_check_pool
 2830              		.syntax unified
 2831              		.thumb
 2832              		.thumb_func
 2834              	lv_tlsf_check_pool:
 2835              	.LVL286:
 2836              	.LFB47:
 953:lvgl/src/misc/lv_tlsf.c **** 
 954:lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:lvgl/src/misc/lv_tlsf.c **** {
 2837              		.loc 1 955 1 is_stmt 1 view -0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 8
 2840              		@ frame_needed = 0, uses_anonymous_args = 0
 2841              		.loc 1 955 1 is_stmt 0 view .LVU833
 2842 0000 00B5     		push	{lr}
 2843              	.LCFI38:
 2844              		.cfi_def_cfa_offset 4
 2845              		.cfi_offset 14, -4
 2846 0002 83B0     		sub	sp, sp, #12
 2847              	.LCFI39:
 2848              		.cfi_def_cfa_offset 16
 956:lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 2849              		.loc 1 957 2 is_stmt 1 view .LVU834
 2850              		.loc 1 957 14 is_stmt 0 view .LVU835
 2851 0004 0023     		movs	r3, #0
 2852 0006 0093     		str	r3, [sp]
 2853 0008 0193     		str	r3, [sp, #4]
 958:lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2854              		.loc 1 958 2 is_stmt 1 view .LVU836
 2855 000a 6A46     		mov	r2, sp
 2856 000c 0349     		ldr	r1, .L203
 2857 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2858              	.LVL287:
 959:lvgl/src/misc/lv_tlsf.c **** 
 960:lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 2859              		.loc 1 960 2 view .LVU837
 961:lvgl/src/misc/lv_tlsf.c **** }
 2860              		.loc 1 961 1 is_stmt 0 view .LVU838
 2861 0012 0198     		ldr	r0, [sp, #4]
 2862 0014 03B0     		add	sp, sp, #12
 2863              	.LCFI40:
 2864              		.cfi_def_cfa_offset 4
 2865              		@ sp needed
 2866 0016 5DF804FB 		ldr	pc, [sp], #4
 2867              	.L204:
 2868 001a 00BF     		.align	2
 2869              	.L203:
 2870 001c 00000000 		.word	integrity_walker
 2871              		.cfi_endproc
 2872              	.LFE47:
 2874              		.section	.text.lv_tlsf_size,"ax",%progbits
 2875              		.align	1
 2876              		.global	lv_tlsf_size
 2877              		.syntax unified
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 75


 2878              		.thumb
 2879              		.thumb_func
 2881              	lv_tlsf_size:
 2882              	.LFB48:
 962:lvgl/src/misc/lv_tlsf.c **** 
 963:lvgl/src/misc/lv_tlsf.c **** /*
 964:lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:lvgl/src/misc/lv_tlsf.c **** */
 967:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
 968:lvgl/src/misc/lv_tlsf.c **** {
 2883              		.loc 1 968 1 is_stmt 1 view -0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 0
 2886              		@ frame_needed = 0, uses_anonymous_args = 0
 2887              		@ link register save eliminated.
 969:lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 2888              		.loc 1 969 2 view .LVU840
 970:lvgl/src/misc/lv_tlsf.c **** }
 2889              		.loc 1 970 1 is_stmt 0 view .LVU841
 2890 0000 4FF49760 		mov	r0, #1208
 2891 0004 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE48:
 2895              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2896              		.align	1
 2897              		.global	lv_tlsf_align_size
 2898              		.syntax unified
 2899              		.thumb
 2900              		.thumb_func
 2902              	lv_tlsf_align_size:
 2903              	.LFB49:
 971:lvgl/src/misc/lv_tlsf.c **** 
 972:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:lvgl/src/misc/lv_tlsf.c **** {
 2904              		.loc 1 973 1 is_stmt 1 view -0
 2905              		.cfi_startproc
 2906              		@ args = 0, pretend = 0, frame = 0
 2907              		@ frame_needed = 0, uses_anonymous_args = 0
 2908              		@ link register save eliminated.
 974:lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 2909              		.loc 1 974 2 view .LVU843
 975:lvgl/src/misc/lv_tlsf.c **** }
 2910              		.loc 1 975 1 is_stmt 0 view .LVU844
 2911 0000 0420     		movs	r0, #4
 2912 0002 7047     		bx	lr
 2913              		.cfi_endproc
 2914              	.LFE49:
 2916              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2917              		.align	1
 2918              		.global	lv_tlsf_block_size_min
 2919              		.syntax unified
 2920              		.thumb
 2921              		.thumb_func
 2923              	lv_tlsf_block_size_min:
 2924              	.LFB50:
 976:lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 76


 977:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:lvgl/src/misc/lv_tlsf.c **** {
 2925              		.loc 1 978 1 is_stmt 1 view -0
 2926              		.cfi_startproc
 2927              		@ args = 0, pretend = 0, frame = 0
 2928              		@ frame_needed = 0, uses_anonymous_args = 0
 2929              		@ link register save eliminated.
 979:lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
 2930              		.loc 1 979 2 view .LVU846
 980:lvgl/src/misc/lv_tlsf.c **** }
 2931              		.loc 1 980 1 is_stmt 0 view .LVU847
 2932 0000 0C20     		movs	r0, #12
 2933 0002 7047     		bx	lr
 2934              		.cfi_endproc
 2935              	.LFE50:
 2937              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2938              		.align	1
 2939              		.global	lv_tlsf_block_size_max
 2940              		.syntax unified
 2941              		.thumb
 2942              		.thumb_func
 2944              	lv_tlsf_block_size_max:
 2945              	.LFB51:
 981:lvgl/src/misc/lv_tlsf.c **** 
 982:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:lvgl/src/misc/lv_tlsf.c **** {
 2946              		.loc 1 983 1 is_stmt 1 view -0
 2947              		.cfi_startproc
 2948              		@ args = 0, pretend = 0, frame = 0
 2949              		@ frame_needed = 0, uses_anonymous_args = 0
 2950              		@ link register save eliminated.
 984:lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 2951              		.loc 1 984 2 view .LVU849
 985:lvgl/src/misc/lv_tlsf.c **** }
 2952              		.loc 1 985 1 is_stmt 0 view .LVU850
 2953 0000 4FF40040 		mov	r0, #32768
 2954 0004 7047     		bx	lr
 2955              		.cfi_endproc
 2956              	.LFE51:
 2958              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 2959              		.align	1
 2960              		.global	lv_tlsf_pool_overhead
 2961              		.syntax unified
 2962              		.thumb
 2963              		.thumb_func
 2965              	lv_tlsf_pool_overhead:
 2966              	.LFB52:
 986:lvgl/src/misc/lv_tlsf.c **** 
 987:lvgl/src/misc/lv_tlsf.c **** /*
 988:lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 990:lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:lvgl/src/misc/lv_tlsf.c **** */
 992:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 993:lvgl/src/misc/lv_tlsf.c **** {
 2967              		.loc 1 993 1 is_stmt 1 view -0
 2968              		.cfi_startproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 77


 2969              		@ args = 0, pretend = 0, frame = 0
 2970              		@ frame_needed = 0, uses_anonymous_args = 0
 2971              		@ link register save eliminated.
 994:lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 2972              		.loc 1 994 2 view .LVU852
 995:lvgl/src/misc/lv_tlsf.c **** }
 2973              		.loc 1 995 1 is_stmt 0 view .LVU853
 2974 0000 0820     		movs	r0, #8
 2975 0002 7047     		bx	lr
 2976              		.cfi_endproc
 2977              	.LFE52:
 2979              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 2980              		.align	1
 2981              		.global	lv_tlsf_alloc_overhead
 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2986              	lv_tlsf_alloc_overhead:
 2987              	.LFB53:
 996:lvgl/src/misc/lv_tlsf.c **** 
 997:lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:lvgl/src/misc/lv_tlsf.c **** {
 2988              		.loc 1 998 1 is_stmt 1 view -0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 0
 2991              		@ frame_needed = 0, uses_anonymous_args = 0
 2992              		@ link register save eliminated.
 999:lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 2993              		.loc 1 999 2 view .LVU855
1000:lvgl/src/misc/lv_tlsf.c **** }
 2994              		.loc 1 1000 1 is_stmt 0 view .LVU856
 2995 0000 0420     		movs	r0, #4
 2996 0002 7047     		bx	lr
 2997              		.cfi_endproc
 2998              	.LFE53:
 3000              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3001              		.align	1
 3002              		.global	lv_tlsf_add_pool
 3003              		.syntax unified
 3004              		.thumb
 3005              		.thumb_func
 3007              	lv_tlsf_add_pool:
 3008              	.LVL288:
 3009              	.LFB54:
1001:lvgl/src/misc/lv_tlsf.c **** 
1002:lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:lvgl/src/misc/lv_tlsf.c **** {
 3010              		.loc 1 1003 1 is_stmt 1 view -0
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 0, uses_anonymous_args = 0
 3014              		.loc 1 1003 1 is_stmt 0 view .LVU858
 3015 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3016              	.LCFI41:
 3017              		.cfi_def_cfa_offset 24
 3018              		.cfi_offset 3, -24
 3019              		.cfi_offset 4, -20
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 78


 3020              		.cfi_offset 5, -16
 3021              		.cfi_offset 6, -12
 3022              		.cfi_offset 7, -8
 3023              		.cfi_offset 14, -4
 3024 0002 0746     		mov	r7, r0
 3025 0004 0C46     		mov	r4, r1
 3026 0006 1546     		mov	r5, r2
1004:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 3027              		.loc 1 1004 2 is_stmt 1 view .LVU859
1005:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 3028              		.loc 1 1005 2 view .LVU860
1006:lvgl/src/misc/lv_tlsf.c **** 
1007:lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 3029              		.loc 1 1007 2 view .LVU861
 3030              		.loc 1 1007 31 is_stmt 0 view .LVU862
 3031 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3032              	.LVL289:
1008:lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3033              		.loc 1 1008 2 is_stmt 1 view .LVU863
 3034              		.loc 1 1008 28 is_stmt 0 view .LVU864
 3035 000c 0421     		movs	r1, #4
 3036 000e 281A     		subs	r0, r5, r0
 3037              	.LVL290:
 3038              		.loc 1 1008 28 view .LVU865
 3039 0010 FFF7FEFF 		bl	align_down
 3040              	.LVL291:
1009:lvgl/src/misc/lv_tlsf.c **** 
1010:lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 3041              		.loc 1 1010 2 is_stmt 1 view .LVU866
 3042              		.loc 1 1010 5 is_stmt 0 view .LVU867
 3043 0014 14F0030F 		tst	r4, #3
 3044 0018 28D1     		bne	.L213
 3045 001a 0546     		mov	r5, r0
 3046              	.LVL292:
1011:lvgl/src/misc/lv_tlsf.c **** 	{
1012:lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:lvgl/src/misc/lv_tlsf.c **** 	}
1016:lvgl/src/misc/lv_tlsf.c **** 
1017:lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 3047              		.loc 1 1017 2 is_stmt 1 view .LVU868
 3048              		.loc 1 1017 34 is_stmt 0 view .LVU869
 3049 001c A0F10C02 		sub	r2, r0, #12
 3050              		.loc 1 1017 5 view .LVU870
 3051 0020 47F6F473 		movw	r3, #32756
 3052 0024 9A42     		cmp	r2, r3
 3053 0026 23D8     		bhi	.L214
1018:lvgl/src/misc/lv_tlsf.c **** 	{
1019:lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:lvgl/src/misc/lv_tlsf.c **** #else
1024:lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
1025:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 79


1027:lvgl/src/misc/lv_tlsf.c **** #endif
1028:lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:lvgl/src/misc/lv_tlsf.c **** 	}
1030:lvgl/src/misc/lv_tlsf.c **** 
1031:lvgl/src/misc/lv_tlsf.c **** 	/*
1032:lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:lvgl/src/misc/lv_tlsf.c **** 	*/
1036:lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3054              		.loc 1 1036 2 is_stmt 1 view .LVU871
 3055              		.loc 1 1036 10 is_stmt 0 view .LVU872
 3056 0028 6FF00301 		mvn	r1, #3
 3057 002c 2046     		mov	r0, r4
 3058              	.LVL293:
 3059              		.loc 1 1036 10 view .LVU873
 3060 002e FFF7FEFF 		bl	offset_to_block
 3061              	.LVL294:
 3062 0032 0646     		mov	r6, r0
 3063              	.LVL295:
1037:lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 3064              		.loc 1 1037 2 is_stmt 1 view .LVU874
 3065 0034 2946     		mov	r1, r5
 3066 0036 FFF7FEFF 		bl	block_set_size
 3067              	.LVL296:
1038:lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 3068              		.loc 1 1038 2 view .LVU875
 3069 003a 3046     		mov	r0, r6
 3070 003c FFF7FEFF 		bl	block_set_free
 3071              	.LVL297:
1039:lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 3072              		.loc 1 1039 2 view .LVU876
 3073 0040 3046     		mov	r0, r6
 3074 0042 FFF7FEFF 		bl	block_set_prev_used
 3075              	.LVL298:
1040:lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 3076              		.loc 1 1040 2 view .LVU877
 3077 0046 3146     		mov	r1, r6
 3078 0048 3846     		mov	r0, r7
 3079 004a FFF7FEFF 		bl	block_insert
 3080              	.LVL299:
1041:lvgl/src/misc/lv_tlsf.c **** 
1042:lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 3081              		.loc 1 1043 2 view .LVU878
 3082              		.loc 1 1043 9 is_stmt 0 view .LVU879
 3083 004e 3046     		mov	r0, r6
 3084 0050 FFF7FEFF 		bl	block_link_next
 3085              	.LVL300:
 3086 0054 0546     		mov	r5, r0
 3087              	.LVL301:
1044:lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 3088              		.loc 1 1044 2 is_stmt 1 view .LVU880
 3089 0056 0021     		movs	r1, #0
 3090 0058 FFF7FEFF 		bl	block_set_size
 3091              	.LVL302:
1045:lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 80


 3092              		.loc 1 1045 2 view .LVU881
 3093 005c 2846     		mov	r0, r5
 3094 005e FFF7FEFF 		bl	block_set_used
 3095              	.LVL303:
1046:lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 3096              		.loc 1 1046 2 view .LVU882
 3097 0062 2846     		mov	r0, r5
 3098 0064 FFF7FEFF 		bl	block_set_prev_free
 3099              	.LVL304:
1047:lvgl/src/misc/lv_tlsf.c **** 
1048:lvgl/src/misc/lv_tlsf.c **** 	return mem;
 3100              		.loc 1 1048 2 view .LVU883
 3101              		.loc 1 1048 9 is_stmt 0 view .LVU884
 3102 0068 2046     		mov	r0, r4
 3103              	.LVL305:
 3104              	.L211:
1049:lvgl/src/misc/lv_tlsf.c **** }
 3105              		.loc 1 1049 1 view .LVU885
 3106 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3107              	.LVL306:
 3108              	.L213:
1014:lvgl/src/misc/lv_tlsf.c **** 	}
 3109              		.loc 1 1014 10 view .LVU886
 3110 006c 0020     		movs	r0, #0
 3111              	.LVL307:
1014:lvgl/src/misc/lv_tlsf.c **** 	}
 3112              		.loc 1 1014 10 view .LVU887
 3113 006e FCE7     		b	.L211
 3114              	.LVL308:
 3115              	.L214:
1028:lvgl/src/misc/lv_tlsf.c **** 	}
 3116              		.loc 1 1028 10 view .LVU888
 3117 0070 0020     		movs	r0, #0
 3118              	.LVL309:
1028:lvgl/src/misc/lv_tlsf.c **** 	}
 3119              		.loc 1 1028 10 view .LVU889
 3120 0072 FAE7     		b	.L211
 3121              		.cfi_endproc
 3122              	.LFE54:
 3124              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3125              		.align	1
 3126              		.global	lv_tlsf_remove_pool
 3127              		.syntax unified
 3128              		.thumb
 3129              		.thumb_func
 3131              	lv_tlsf_remove_pool:
 3132              	.LVL310:
 3133              	.LFB55:
1050:lvgl/src/misc/lv_tlsf.c **** 
1051:lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:lvgl/src/misc/lv_tlsf.c **** {
 3134              		.loc 1 1052 1 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138              		.loc 1 1052 1 is_stmt 0 view .LVU891
 3139 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 81


 3140              	.LCFI42:
 3141              		.cfi_def_cfa_offset 16
 3142              		.cfi_offset 4, -16
 3143              		.cfi_offset 5, -12
 3144              		.cfi_offset 6, -8
 3145              		.cfi_offset 14, -4
 3146 0002 82B0     		sub	sp, sp, #8
 3147              	.LCFI43:
 3148              		.cfi_def_cfa_offset 24
 3149 0004 0546     		mov	r5, r0
 3150 0006 0846     		mov	r0, r1
 3151              	.LVL311:
1053:lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3152              		.loc 1 1053 2 is_stmt 1 view .LVU892
1054:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 3153              		.loc 1 1054 2 view .LVU893
 3154              		.loc 1 1054 26 is_stmt 0 view .LVU894
 3155 0008 6FF00301 		mvn	r1, #3
 3156              	.LVL312:
 3157              		.loc 1 1054 26 view .LVU895
 3158 000c FFF7FEFF 		bl	offset_to_block
 3159              	.LVL313:
 3160              		.loc 1 1054 26 view .LVU896
 3161 0010 0446     		mov	r4, r0
 3162              	.LVL314:
1055:lvgl/src/misc/lv_tlsf.c **** 
1056:lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3163              		.loc 1 1056 2 is_stmt 1 view .LVU897
 3164              		.loc 1 1056 6 is_stmt 0 view .LVU898
 3165 0012 0023     		movs	r3, #0
 3166 0014 0193     		str	r3, [sp, #4]
 3167              		.loc 1 1056 14 view .LVU899
 3168 0016 0093     		str	r3, [sp]
1057:lvgl/src/misc/lv_tlsf.c **** 
1058:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 3169              		.loc 1 1058 2 is_stmt 1 view .LVU900
 3170              		.loc 1 1058 2 view .LVU901
 3171 0018 FFF7FEFF 		bl	block_is_free
 3172              	.LVL315:
 3173              		.loc 1 1058 2 is_stmt 0 view .LVU902
 3174 001c 00B9     		cbnz	r0, .L217
 3175              	.L218:
 3176              		.loc 1 1058 2 is_stmt 1 discriminator 1 view .LVU903
 3177              		.loc 1 1058 2 discriminator 1 view .LVU904
 3178              		.loc 1 1058 2 discriminator 1 view .LVU905
 3179              		.loc 1 1058 2 discriminator 1 view .LVU906
 3180 001e FEE7     		b	.L218
 3181              	.L217:
 3182              		.loc 1 1058 2 discriminator 4 view .LVU907
1059:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3183              		.loc 1 1059 2 discriminator 4 view .LVU908
 3184              		.loc 1 1059 2 discriminator 4 view .LVU909
 3185 0020 2046     		mov	r0, r4
 3186 0022 FFF7FEFF 		bl	block_next
 3187              	.LVL316:
 3188 0026 0646     		mov	r6, r0
 3189 0028 FFF7FEFF 		bl	block_is_free
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 82


 3190              	.LVL317:
 3191 002c 00B1     		cbz	r0, .L219
 3192              	.L220:
 3193              		.loc 1 1059 2 discriminator 2 view .LVU910
 3194              		.loc 1 1059 2 discriminator 2 view .LVU911
 3195              		.loc 1 1059 2 discriminator 2 view .LVU912
 3196              		.loc 1 1059 2 discriminator 2 view .LVU913
 3197 002e FEE7     		b	.L220
 3198              	.L219:
 3199              		.loc 1 1059 2 discriminator 2 view .LVU914
1060:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3200              		.loc 1 1060 2 discriminator 2 view .LVU915
 3201              		.loc 1 1060 2 discriminator 2 view .LVU916
 3202 0030 3046     		mov	r0, r6
 3203 0032 FFF7FEFF 		bl	block_size
 3204              	.LVL318:
 3205 0036 00B1     		cbz	r0, .L221
 3206              	.L222:
 3207              		.loc 1 1060 2 discriminator 3 view .LVU917
 3208              		.loc 1 1060 2 discriminator 3 view .LVU918
 3209              		.loc 1 1060 2 discriminator 3 view .LVU919
 3210              		.loc 1 1060 2 discriminator 3 view .LVU920
 3211 0038 FEE7     		b	.L222
 3212              	.L221:
 3213              		.loc 1 1060 2 discriminator 2 view .LVU921
1061:lvgl/src/misc/lv_tlsf.c **** 
1062:lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 3214              		.loc 1 1062 2 discriminator 2 view .LVU922
 3215 003a 2046     		mov	r0, r4
 3216 003c FFF7FEFF 		bl	block_size
 3217              	.LVL319:
 3218 0040 6A46     		mov	r2, sp
 3219 0042 01A9     		add	r1, sp, #4
 3220 0044 FFF7FEFF 		bl	mapping_insert
 3221              	.LVL320:
1063:lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 3222              		.loc 1 1063 2 discriminator 2 view .LVU923
 3223 0048 009B     		ldr	r3, [sp]
 3224 004a 019A     		ldr	r2, [sp, #4]
 3225 004c 2146     		mov	r1, r4
 3226 004e 2846     		mov	r0, r5
 3227 0050 FFF7FEFF 		bl	remove_free_block
 3228              	.LVL321:
1064:lvgl/src/misc/lv_tlsf.c **** }
 3229              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU924
 3230 0054 02B0     		add	sp, sp, #8
 3231              	.LCFI44:
 3232              		.cfi_def_cfa_offset 16
 3233              		@ sp needed
 3234 0056 70BD     		pop	{r4, r5, r6, pc}
 3235              		.loc 1 1064 1 discriminator 2 view .LVU925
 3236              		.cfi_endproc
 3237              	.LFE55:
 3239              		.section	.text.lv_tlsf_create,"ax",%progbits
 3240              		.align	1
 3241              		.global	lv_tlsf_create
 3242              		.syntax unified
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 83


 3243              		.thumb
 3244              		.thumb_func
 3246              	lv_tlsf_create:
 3247              	.LVL322:
 3248              	.LFB56:
1065:lvgl/src/misc/lv_tlsf.c **** 
1066:lvgl/src/misc/lv_tlsf.c **** /*
1067:lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
1068:lvgl/src/misc/lv_tlsf.c **** */
1069:lvgl/src/misc/lv_tlsf.c **** 
1070:lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:lvgl/src/misc/lv_tlsf.c **** {
1073:lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:lvgl/src/misc/lv_tlsf.c **** 
1084:lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:lvgl/src/misc/lv_tlsf.c **** #endif
1089:lvgl/src/misc/lv_tlsf.c **** 
1090:lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:lvgl/src/misc/lv_tlsf.c **** 	{
1092:lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:lvgl/src/misc/lv_tlsf.c **** 	}
1094:lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:lvgl/src/misc/lv_tlsf.c **** }
1096:lvgl/src/misc/lv_tlsf.c **** #endif
1097:lvgl/src/misc/lv_tlsf.c **** 
1098:lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:lvgl/src/misc/lv_tlsf.c **** {
 3249              		.loc 1 1099 1 is_stmt 1 view -0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
1100:lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:lvgl/src/misc/lv_tlsf.c **** 	{
1103:lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:lvgl/src/misc/lv_tlsf.c **** 	}
1105:lvgl/src/misc/lv_tlsf.c **** #endif
1106:lvgl/src/misc/lv_tlsf.c **** 
1107:lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 3253              		.loc 1 1107 2 view .LVU927
 3254              		.loc 1 1107 5 is_stmt 0 view .LVU928
 3255 0000 10F0030F 		tst	r0, #3
 3256 0004 05D1     		bne	.L226
1099:lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 84


 3257              		.loc 1 1099 1 view .LVU929
 3258 0006 10B5     		push	{r4, lr}
 3259              	.LCFI45:
 3260              		.cfi_def_cfa_offset 8
 3261              		.cfi_offset 4, -8
 3262              		.cfi_offset 14, -4
 3263 0008 0446     		mov	r4, r0
1108:lvgl/src/misc/lv_tlsf.c **** 	{
1109:lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:lvgl/src/misc/lv_tlsf.c **** 	}
1113:lvgl/src/misc/lv_tlsf.c **** 
1114:lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 3264              		.loc 1 1114 2 is_stmt 1 view .LVU930
 3265 000a FFF7FEFF 		bl	control_constructor
 3266              	.LVL323:
1115:lvgl/src/misc/lv_tlsf.c **** 
1116:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 3267              		.loc 1 1116 2 view .LVU931
 3268              		.loc 1 1116 9 is_stmt 0 view .LVU932
 3269 000e 2046     		mov	r0, r4
1117:lvgl/src/misc/lv_tlsf.c **** }
 3270              		.loc 1 1117 1 view .LVU933
 3271 0010 10BD     		pop	{r4, pc}
 3272              	.LVL324:
 3273              	.L226:
 3274              	.LCFI46:
 3275              		.cfi_def_cfa_offset 0
 3276              		.cfi_restore 4
 3277              		.cfi_restore 14
1111:lvgl/src/misc/lv_tlsf.c **** 	}
 3278              		.loc 1 1111 10 view .LVU934
 3279 0012 0020     		movs	r0, #0
 3280              	.LVL325:
 3281              		.loc 1 1117 1 view .LVU935
 3282 0014 7047     		bx	lr
 3283              		.cfi_endproc
 3284              	.LFE56:
 3286              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3287              		.align	1
 3288              		.global	lv_tlsf_create_with_pool
 3289              		.syntax unified
 3290              		.thumb
 3291              		.thumb_func
 3293              	lv_tlsf_create_with_pool:
 3294              	.LVL326:
 3295              	.LFB57:
1118:lvgl/src/misc/lv_tlsf.c **** 
1119:lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:lvgl/src/misc/lv_tlsf.c **** {
 3296              		.loc 1 1120 1 is_stmt 1 view -0
 3297              		.cfi_startproc
 3298              		@ args = 0, pretend = 0, frame = 0
 3299              		@ frame_needed = 0, uses_anonymous_args = 0
 3300              		.loc 1 1120 1 is_stmt 0 view .LVU937
 3301 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 85


 3302              	.LCFI47:
 3303              		.cfi_def_cfa_offset 16
 3304              		.cfi_offset 4, -16
 3305              		.cfi_offset 5, -12
 3306              		.cfi_offset 6, -8
 3307              		.cfi_offset 14, -4
 3308 0002 0546     		mov	r5, r0
 3309 0004 0E46     		mov	r6, r1
1121:lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3310              		.loc 1 1121 2 is_stmt 1 view .LVU938
 3311              		.loc 1 1121 19 is_stmt 0 view .LVU939
 3312 0006 FFF7FEFF 		bl	lv_tlsf_create
 3313              	.LVL327:
 3314              		.loc 1 1121 19 view .LVU940
 3315 000a 0446     		mov	r4, r0
 3316              	.LVL328:
1122:lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3317              		.loc 1 1122 2 is_stmt 1 view .LVU941
 3318              		.loc 1 1122 38 is_stmt 0 view .LVU942
 3319 000c FFF7FEFF 		bl	lv_tlsf_size
 3320              	.LVL329:
 3321              		.loc 1 1122 2 view .LVU943
 3322 0010 321A     		subs	r2, r6, r0
 3323 0012 2918     		adds	r1, r5, r0
 3324 0014 2046     		mov	r0, r4
 3325 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3326              	.LVL330:
1123:lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 3327              		.loc 1 1123 2 is_stmt 1 view .LVU944
1124:lvgl/src/misc/lv_tlsf.c **** }
 3328              		.loc 1 1124 1 is_stmt 0 view .LVU945
 3329 001a 2046     		mov	r0, r4
 3330 001c 70BD     		pop	{r4, r5, r6, pc}
 3331              		.loc 1 1124 1 view .LVU946
 3332              		.cfi_endproc
 3333              	.LFE57:
 3335              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3336              		.align	1
 3337              		.global	lv_tlsf_destroy
 3338              		.syntax unified
 3339              		.thumb
 3340              		.thumb_func
 3342              	lv_tlsf_destroy:
 3343              	.LVL331:
 3344              	.LFB58:
1125:lvgl/src/misc/lv_tlsf.c **** 
1126:lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:lvgl/src/misc/lv_tlsf.c **** {
 3345              		.loc 1 1127 1 is_stmt 1 view -0
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 0
 3348              		@ frame_needed = 0, uses_anonymous_args = 0
 3349              		@ link register save eliminated.
1128:lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
1129:lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
 3350              		.loc 1 1129 2 view .LVU948
1130:lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 86


 3351              		.loc 1 1130 1 is_stmt 0 view .LVU949
 3352 0000 7047     		bx	lr
 3353              		.cfi_endproc
 3354              	.LFE58:
 3356              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3357              		.align	1
 3358              		.global	lv_tlsf_get_pool
 3359              		.syntax unified
 3360              		.thumb
 3361              		.thumb_func
 3363              	lv_tlsf_get_pool:
 3364              	.LVL332:
 3365              	.LFB59:
1131:lvgl/src/misc/lv_tlsf.c **** 
1132:lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:lvgl/src/misc/lv_tlsf.c **** {
 3366              		.loc 1 1133 1 is_stmt 1 view -0
 3367              		.cfi_startproc
 3368              		@ args = 0, pretend = 0, frame = 0
 3369              		@ frame_needed = 0, uses_anonymous_args = 0
 3370              		.loc 1 1133 1 is_stmt 0 view .LVU951
 3371 0000 10B5     		push	{r4, lr}
 3372              	.LCFI48:
 3373              		.cfi_def_cfa_offset 8
 3374              		.cfi_offset 4, -8
 3375              		.cfi_offset 14, -4
 3376 0002 0446     		mov	r4, r0
1134:lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 3377              		.loc 1 1134 2 is_stmt 1 view .LVU952
 3378              		.loc 1 1134 9 is_stmt 0 view .LVU953
 3379 0004 FFF7FEFF 		bl	lv_tlsf_size
 3380              	.LVL333:
1135:lvgl/src/misc/lv_tlsf.c **** }
 3381              		.loc 1 1135 1 view .LVU954
 3382 0008 2044     		add	r0, r0, r4
 3383 000a 10BD     		pop	{r4, pc}
 3384              		.loc 1 1135 1 view .LVU955
 3385              		.cfi_endproc
 3386              	.LFE59:
 3388              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3389              		.align	1
 3390              		.global	lv_tlsf_malloc
 3391              		.syntax unified
 3392              		.thumb
 3393              		.thumb_func
 3395              	lv_tlsf_malloc:
 3396              	.LVL334:
 3397              	.LFB60:
1136:lvgl/src/misc/lv_tlsf.c **** 
1137:lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:lvgl/src/misc/lv_tlsf.c **** {
 3398              		.loc 1 1138 1 is_stmt 1 view -0
 3399              		.cfi_startproc
 3400              		@ args = 0, pretend = 0, frame = 0
 3401              		@ frame_needed = 0, uses_anonymous_args = 0
 3402              		.loc 1 1138 1 is_stmt 0 view .LVU957
 3403 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 87


 3404              	.LCFI49:
 3405              		.cfi_def_cfa_offset 16
 3406              		.cfi_offset 3, -16
 3407              		.cfi_offset 4, -12
 3408              		.cfi_offset 5, -8
 3409              		.cfi_offset 14, -4
 3410 0002 0446     		mov	r4, r0
 3411 0004 0846     		mov	r0, r1
 3412              	.LVL335:
1139:lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3413              		.loc 1 1139 2 is_stmt 1 view .LVU958
1140:lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3414              		.loc 1 1140 2 view .LVU959
 3415              		.loc 1 1140 24 is_stmt 0 view .LVU960
 3416 0006 0421     		movs	r1, #4
 3417              	.LVL336:
 3418              		.loc 1 1140 24 view .LVU961
 3419 0008 FFF7FEFF 		bl	adjust_request_size
 3420              	.LVL337:
 3421              		.loc 1 1140 24 view .LVU962
 3422 000c 0546     		mov	r5, r0
 3423              	.LVL338:
1141:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 3424              		.loc 1 1141 2 is_stmt 1 view .LVU963
 3425              		.loc 1 1141 26 is_stmt 0 view .LVU964
 3426 000e 0146     		mov	r1, r0
 3427 0010 2046     		mov	r0, r4
 3428              	.LVL339:
 3429              		.loc 1 1141 26 view .LVU965
 3430 0012 FFF7FEFF 		bl	block_locate_free
 3431              	.LVL340:
 3432              		.loc 1 1141 26 view .LVU966
 3433 0016 0146     		mov	r1, r0
 3434              	.LVL341:
1142:lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3435              		.loc 1 1142 2 is_stmt 1 view .LVU967
 3436              		.loc 1 1142 9 is_stmt 0 view .LVU968
 3437 0018 2A46     		mov	r2, r5
 3438 001a 2046     		mov	r0, r4
 3439              	.LVL342:
 3440              		.loc 1 1142 9 view .LVU969
 3441 001c FFF7FEFF 		bl	block_prepare_used
 3442              	.LVL343:
1143:lvgl/src/misc/lv_tlsf.c **** }
 3443              		.loc 1 1143 1 view .LVU970
 3444 0020 38BD     		pop	{r3, r4, r5, pc}
 3445              		.loc 1 1143 1 view .LVU971
 3446              		.cfi_endproc
 3447              	.LFE60:
 3449              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3450              		.align	1
 3451              		.global	lv_tlsf_memalign
 3452              		.syntax unified
 3453              		.thumb
 3454              		.thumb_func
 3456              	lv_tlsf_memalign:
 3457              	.LVL344:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 88


 3458              	.LFB61:
1144:lvgl/src/misc/lv_tlsf.c **** 
1145:lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:lvgl/src/misc/lv_tlsf.c **** {
 3459              		.loc 1 1146 1 is_stmt 1 view -0
 3460              		.cfi_startproc
 3461              		@ args = 0, pretend = 0, frame = 0
 3462              		@ frame_needed = 0, uses_anonymous_args = 0
 3463              		.loc 1 1146 1 is_stmt 0 view .LVU973
 3464 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3465              	.LCFI50:
 3466              		.cfi_def_cfa_offset 24
 3467              		.cfi_offset 4, -24
 3468              		.cfi_offset 5, -20
 3469              		.cfi_offset 6, -16
 3470              		.cfi_offset 7, -12
 3471              		.cfi_offset 8, -8
 3472              		.cfi_offset 14, -4
 3473 0004 0646     		mov	r6, r0
 3474 0006 0C46     		mov	r4, r1
1147:lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3475              		.loc 1 1147 2 is_stmt 1 view .LVU974
 3476              	.LVL345:
1148:lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3477              		.loc 1 1148 2 view .LVU975
 3478              		.loc 1 1148 24 is_stmt 0 view .LVU976
 3479 0008 0421     		movs	r1, #4
 3480              	.LVL346:
 3481              		.loc 1 1148 24 view .LVU977
 3482 000a 1046     		mov	r0, r2
 3483              	.LVL347:
 3484              		.loc 1 1148 24 view .LVU978
 3485 000c FFF7FEFF 		bl	adjust_request_size
 3486              	.LVL348:
 3487              		.loc 1 1148 24 view .LVU979
 3488 0010 0546     		mov	r5, r0
 3489              	.LVL349:
1149:lvgl/src/misc/lv_tlsf.c **** 
1150:lvgl/src/misc/lv_tlsf.c **** 	/*
1151:lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:lvgl/src/misc/lv_tlsf.c **** 	*/
1158:lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 3490              		.loc 1 1158 2 is_stmt 1 view .LVU980
1159:lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3491              		.loc 1 1159 2 view .LVU981
 3492              		.loc 1 1159 58 is_stmt 0 view .LVU982
 3493 0012 2044     		add	r0, r0, r4
 3494              	.LVL350:
 3495              		.loc 1 1159 31 view .LVU983
 3496 0014 2146     		mov	r1, r4
 3497 0016 1030     		adds	r0, r0, #16
 3498 0018 FFF7FEFF 		bl	adjust_request_size
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 89


 3499              	.LVL351:
1160:lvgl/src/misc/lv_tlsf.c **** 
1161:lvgl/src/misc/lv_tlsf.c **** 	/*
1162:lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:lvgl/src/misc/lv_tlsf.c **** 	*/
1165:lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3500              		.loc 1 1165 2 is_stmt 1 view .LVU984
 3501              		.loc 1 1165 77 is_stmt 0 view .LVU985
 3502 001c 25B1     		cbz	r5, .L244
 3503 001e 0146     		mov	r1, r0
 3504              		.loc 1 1165 38 discriminator 1 view .LVU986
 3505 0020 042C     		cmp	r4, #4
 3506 0022 02D8     		bhi	.L239
 3507              		.loc 1 1165 77 view .LVU987
 3508 0024 2946     		mov	r1, r5
 3509 0026 00E0     		b	.L239
 3510              	.L244:
 3511              		.loc 1 1165 77 view .LVU988
 3512 0028 2946     		mov	r1, r5
 3513              	.L239:
 3514              	.LVL352:
1166:lvgl/src/misc/lv_tlsf.c **** 
1167:lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 3515              		.loc 1 1167 2 is_stmt 1 discriminator 6 view .LVU989
 3516              		.loc 1 1167 26 is_stmt 0 discriminator 6 view .LVU990
 3517 002a 3046     		mov	r0, r6
 3518              	.LVL353:
 3519              		.loc 1 1167 26 discriminator 6 view .LVU991
 3520 002c FFF7FEFF 		bl	block_locate_free
 3521              	.LVL354:
1168:lvgl/src/misc/lv_tlsf.c **** 
1169:lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3522              		.loc 1 1170 2 is_stmt 1 discriminator 6 view .LVU992
 3523              		.loc 1 1170 2 discriminator 6 view .LVU993
 3524              		.loc 1 1170 2 discriminator 6 view .LVU994
1171:lvgl/src/misc/lv_tlsf.c **** 
1172:lvgl/src/misc/lv_tlsf.c **** 	if (block)
 3525              		.loc 1 1172 2 discriminator 6 view .LVU995
 3526              		.loc 1 1172 5 is_stmt 0 discriminator 6 view .LVU996
 3527 0030 0746     		mov	r7, r0
 3528 0032 F8B1     		cbz	r0, .L240
 3529              	.LBB13:
1173:lvgl/src/misc/lv_tlsf.c **** 	{
1174:lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 3530              		.loc 1 1174 3 is_stmt 1 view .LVU997
 3531              		.loc 1 1174 15 is_stmt 0 view .LVU998
 3532 0034 FFF7FEFF 		bl	block_to_ptr
 3533              	.LVL355:
 3534              		.loc 1 1174 15 view .LVU999
 3535 0038 8046     		mov	r8, r0
 3536              	.LVL356:
1175:lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
 3537              		.loc 1 1175 3 is_stmt 1 view .LVU1000
 3538              		.loc 1 1175 19 is_stmt 0 view .LVU1001
 3539 003a 2146     		mov	r1, r4
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 90


 3540 003c FFF7FEFF 		bl	align_ptr
 3541              	.LVL357:
1176:lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 3542              		.loc 1 1176 3 is_stmt 1 view .LVU1002
 3543              		.loc 1 1176 16 is_stmt 0 view .LVU1003
 3544 0040 A0EB0802 		sub	r2, r0, r8
 3545              	.LVL358:
1177:lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:lvgl/src/misc/lv_tlsf.c **** 
1179:lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 3546              		.loc 1 1180 3 is_stmt 1 view .LVU1004
 3547              		.loc 1 1180 11 is_stmt 0 view .LVU1005
 3548 0044 531E     		subs	r3, r2, #1
 3549              		.loc 1 1180 6 view .LVU1006
 3550 0046 0E2B     		cmp	r3, #14
 3551 0048 03D9     		bls	.L246
 3552              	.L241:
1181:lvgl/src/misc/lv_tlsf.c **** 		{
1182:lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:lvgl/src/misc/lv_tlsf.c **** 
1187:lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:lvgl/src/misc/lv_tlsf.c **** 		}
1191:lvgl/src/misc/lv_tlsf.c **** 
1192:lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 3553              		.loc 1 1192 3 is_stmt 1 view .LVU1007
 3554              		.loc 1 1192 6 is_stmt 0 view .LVU1008
 3555 004a 9AB1     		cbz	r2, .L240
1193:lvgl/src/misc/lv_tlsf.c **** 		{
1194:lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 3556              		.loc 1 1194 4 is_stmt 1 view .LVU1009
 3557              		.loc 1 1194 4 view .LVU1010
 3558 004c 0F2A     		cmp	r2, #15
 3559 004e 0CD8     		bhi	.L242
 3560              	.L243:
 3561              		.loc 1 1194 4 discriminator 2 view .LVU1011
 3562              		.loc 1 1194 4 discriminator 2 view .LVU1012
 3563              		.loc 1 1194 4 discriminator 2 view .LVU1013
 3564              		.loc 1 1194 4 discriminator 2 view .LVU1014
 3565 0050 FEE7     		b	.L243
 3566              	.L246:
 3567              	.LBB14:
1182:lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3568              		.loc 1 1182 4 view .LVU1015
1182:lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3569              		.loc 1 1182 17 is_stmt 0 view .LVU1016
 3570 0052 C2F11002 		rsb	r2, r2, #16
 3571              	.LVL359:
1183:lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
 3572              		.loc 1 1183 4 is_stmt 1 view .LVU1017
1184:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 3573              		.loc 1 1184 4 view .LVU1018
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 91


1187:lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3574              		.loc 1 1187 4 view .LVU1019
1187:lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3575              		.loc 1 1187 14 is_stmt 0 view .LVU1020
 3576 0056 2146     		mov	r1, r4
 3577 0058 9442     		cmp	r4, r2
 3578 005a 2CBF     		ite	cs
 3579 005c 0019     		addcs	r0, r0, r4
 3580 005e 8018     		addcc	r0, r0, r2
 3581              	.LVL360:
1187:lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3582              		.loc 1 1187 14 view .LVU1021
 3583 0060 FFF7FEFF 		bl	align_ptr
 3584              	.LVL361:
1188:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3585              		.loc 1 1188 4 is_stmt 1 view .LVU1022
1188:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3586              		.loc 1 1188 10 is_stmt 0 view .LVU1023
 3587 0064 A0EB0802 		sub	r2, r0, r8
 3588              	.LVL362:
1188:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3589              		.loc 1 1188 10 view .LVU1024
 3590 0068 EFE7     		b	.L241
 3591              	.L242:
1188:lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3592              		.loc 1 1188 10 view .LVU1025
 3593              	.LBE14:
 3594              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1026
1195:lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 3595              		.loc 1 1195 4 discriminator 2 view .LVU1027
 3596              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1028
 3597 006a 3946     		mov	r1, r7
 3598 006c 3046     		mov	r0, r6
 3599              	.LVL363:
 3600              		.loc 1 1195 12 discriminator 2 view .LVU1029
 3601 006e FFF7FEFF 		bl	block_trim_free_leading
 3602              	.LVL364:
 3603              		.loc 1 1195 12 discriminator 2 view .LVU1030
 3604 0072 0746     		mov	r7, r0
 3605              	.LVL365:
 3606              	.L240:
 3607              		.loc 1 1195 12 discriminator 2 view .LVU1031
 3608              	.LBE13:
1196:lvgl/src/misc/lv_tlsf.c **** 		}
1197:lvgl/src/misc/lv_tlsf.c **** 	}
1198:lvgl/src/misc/lv_tlsf.c **** 
1199:lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3609              		.loc 1 1199 2 is_stmt 1 view .LVU1032
 3610              		.loc 1 1199 9 is_stmt 0 view .LVU1033
 3611 0074 2A46     		mov	r2, r5
 3612 0076 3946     		mov	r1, r7
 3613 0078 3046     		mov	r0, r6
 3614 007a FFF7FEFF 		bl	block_prepare_used
 3615              	.LVL366:
1200:lvgl/src/misc/lv_tlsf.c **** }
 3616              		.loc 1 1200 1 view .LVU1034
 3617 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 92


 3618              		.loc 1 1200 1 view .LVU1035
 3619              		.cfi_endproc
 3620              	.LFE61:
 3622              		.section	.text.lv_tlsf_free,"ax",%progbits
 3623              		.align	1
 3624              		.global	lv_tlsf_free
 3625              		.syntax unified
 3626              		.thumb
 3627              		.thumb_func
 3629              	lv_tlsf_free:
 3630              	.LVL367:
 3631              	.LFB62:
1201:lvgl/src/misc/lv_tlsf.c **** 
1202:lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:lvgl/src/misc/lv_tlsf.c **** {
 3632              		.loc 1 1203 1 is_stmt 1 view -0
 3633              		.cfi_startproc
 3634              		@ args = 0, pretend = 0, frame = 0
 3635              		@ frame_needed = 0, uses_anonymous_args = 0
1204:lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3636              		.loc 1 1205 2 view .LVU1037
 3637              		.loc 1 1205 5 is_stmt 0 view .LVU1038
 3638 0000 C9B1     		cbz	r1, .L252
1203:lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 3639              		.loc 1 1203 1 view .LVU1039
 3640 0002 38B5     		push	{r3, r4, r5, lr}
 3641              	.LCFI51:
 3642              		.cfi_def_cfa_offset 16
 3643              		.cfi_offset 3, -16
 3644              		.cfi_offset 4, -12
 3645              		.cfi_offset 5, -8
 3646              		.cfi_offset 14, -4
 3647 0004 0446     		mov	r4, r0
 3648 0006 0846     		mov	r0, r1
 3649              	.LVL368:
 3650              	.LBB15:
1206:lvgl/src/misc/lv_tlsf.c **** 	{
1207:lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 3651              		.loc 1 1207 3 is_stmt 1 view .LVU1040
1208:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3652              		.loc 1 1208 3 view .LVU1041
 3653              		.loc 1 1208 27 is_stmt 0 view .LVU1042
 3654 0008 FFF7FEFF 		bl	block_from_ptr
 3655              	.LVL369:
 3656              		.loc 1 1208 27 view .LVU1043
 3657 000c 0546     		mov	r5, r0
 3658              	.LVL370:
1209:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3659              		.loc 1 1209 3 is_stmt 1 view .LVU1044
 3660              		.loc 1 1209 3 view .LVU1045
 3661 000e FFF7FEFF 		bl	block_is_free
 3662              	.LVL371:
 3663              		.loc 1 1209 3 is_stmt 0 view .LVU1046
 3664 0012 00B1     		cbz	r0, .L249
 3665              	.L250:
 3666              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1047
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 93


 3667              		.loc 1 1209 3 discriminator 1 view .LVU1048
 3668              		.loc 1 1209 3 discriminator 1 view .LVU1049
 3669              		.loc 1 1209 3 discriminator 1 view .LVU1050
 3670 0014 FEE7     		b	.L250
 3671              	.L249:
 3672              		.loc 1 1209 3 discriminator 2 view .LVU1051
1210:lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 3673              		.loc 1 1210 3 discriminator 2 view .LVU1052
 3674 0016 2846     		mov	r0, r5
 3675 0018 FFF7FEFF 		bl	block_mark_as_free
 3676              	.LVL372:
1211:lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 3677              		.loc 1 1211 3 discriminator 2 view .LVU1053
 3678              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1054
 3679 001c 2946     		mov	r1, r5
 3680 001e 2046     		mov	r0, r4
 3681 0020 FFF7FEFF 		bl	block_merge_prev
 3682              	.LVL373:
 3683 0024 0146     		mov	r1, r0
 3684              	.LVL374:
1212:lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 3685              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1055
 3686              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1056
 3687 0026 2046     		mov	r0, r4
 3688              	.LVL375:
 3689              		.loc 1 1212 11 discriminator 2 view .LVU1057
 3690 0028 FFF7FEFF 		bl	block_merge_next
 3691              	.LVL376:
 3692              		.loc 1 1212 11 discriminator 2 view .LVU1058
 3693 002c 0146     		mov	r1, r0
 3694              	.LVL377:
1213:lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 3695              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1059
 3696 002e 2046     		mov	r0, r4
 3697              	.LVL378:
 3698              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1060
 3699 0030 FFF7FEFF 		bl	block_insert
 3700              	.LVL379:
 3701              		.loc 1 1213 3 discriminator 2 view .LVU1061
 3702              	.LBE15:
1214:lvgl/src/misc/lv_tlsf.c **** 	}
1215:lvgl/src/misc/lv_tlsf.c **** }
 3703              		.loc 1 1215 1 discriminator 2 view .LVU1062
 3704 0034 38BD     		pop	{r3, r4, r5, pc}
 3705              	.LVL380:
 3706              	.L252:
 3707              	.LCFI52:
 3708              		.cfi_def_cfa_offset 0
 3709              		.cfi_restore 3
 3710              		.cfi_restore 4
 3711              		.cfi_restore 5
 3712              		.cfi_restore 14
 3713              		.loc 1 1215 1 discriminator 2 view .LVU1063
 3714 0036 7047     		bx	lr
 3715              		.cfi_endproc
 3716              	.LFE62:
 3718              		.section	.text.lv_tlsf_realloc,"ax",%progbits
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 94


 3719              		.align	1
 3720              		.global	lv_tlsf_realloc
 3721              		.syntax unified
 3722              		.thumb
 3723              		.thumb_func
 3725              	lv_tlsf_realloc:
 3726              	.LVL381:
 3727              	.LFB63:
1216:lvgl/src/misc/lv_tlsf.c **** 
1217:lvgl/src/misc/lv_tlsf.c **** /*
1218:lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1221:lvgl/src/misc/lv_tlsf.c **** **
1222:lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:lvgl/src/misc/lv_tlsf.c **** */
1230:lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:lvgl/src/misc/lv_tlsf.c **** {
 3728              		.loc 1 1231 1 is_stmt 1 view -0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 0
 3731              		@ frame_needed = 0, uses_anonymous_args = 0
 3732              		.loc 1 1231 1 is_stmt 0 view .LVU1065
 3733 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3734              	.LCFI53:
 3735              		.cfi_def_cfa_offset 40
 3736              		.cfi_offset 3, -40
 3737              		.cfi_offset 4, -36
 3738              		.cfi_offset 5, -32
 3739              		.cfi_offset 6, -28
 3740              		.cfi_offset 7, -24
 3741              		.cfi_offset 8, -20
 3742              		.cfi_offset 9, -16
 3743              		.cfi_offset 10, -12
 3744              		.cfi_offset 11, -8
 3745              		.cfi_offset 14, -4
 3746 0004 0546     		mov	r5, r0
 3747 0006 1446     		mov	r4, r2
1232:lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3748              		.loc 1 1232 2 is_stmt 1 view .LVU1066
 3749              	.LVL382:
1233:lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 3750              		.loc 1 1233 2 view .LVU1067
1234:lvgl/src/misc/lv_tlsf.c **** 
1235:lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
 3751              		.loc 1 1236 2 view .LVU1068
 3752              		.loc 1 1236 5 is_stmt 0 view .LVU1069
 3753 0008 8946     		mov	r9, r1
 3754 000a 01B1     		cbz	r1, .L256
 3755              		.loc 1 1236 10 discriminator 1 view .LVU1070
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 95


 3756 000c F2B1     		cbz	r2, .L265
 3757              	.L256:
1237:lvgl/src/misc/lv_tlsf.c **** 	{
1238:lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:lvgl/src/misc/lv_tlsf.c **** 	}
1240:lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 3758              		.loc 1 1241 7 is_stmt 1 view .LVU1071
 3759              		.loc 1 1241 10 is_stmt 0 view .LVU1072
 3760 000e B9F1000F 		cmp	r9, #0
 3761 0012 1FD0     		beq	.L266
 3762              	.LBB16:
1242:lvgl/src/misc/lv_tlsf.c **** 	{
1243:lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:lvgl/src/misc/lv_tlsf.c **** 	}
1245:lvgl/src/misc/lv_tlsf.c **** 	else
1246:lvgl/src/misc/lv_tlsf.c **** 	{
1247:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3763              		.loc 1 1247 3 is_stmt 1 view .LVU1073
 3764              		.loc 1 1247 27 is_stmt 0 view .LVU1074
 3765 0014 4846     		mov	r0, r9
 3766              	.LVL383:
 3767              		.loc 1 1247 27 view .LVU1075
 3768 0016 FFF7FEFF 		bl	block_from_ptr
 3769              	.LVL384:
 3770              		.loc 1 1247 27 view .LVU1076
 3771 001a 0646     		mov	r6, r0
 3772              	.LVL385:
1248:lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 3773              		.loc 1 1248 3 is_stmt 1 view .LVU1077
 3774              		.loc 1 1248 26 is_stmt 0 view .LVU1078
 3775 001c FFF7FEFF 		bl	block_next
 3776              	.LVL386:
 3777              		.loc 1 1248 26 view .LVU1079
 3778 0020 8246     		mov	r10, r0
 3779              	.LVL387:
1249:lvgl/src/misc/lv_tlsf.c **** 
1250:lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 3780              		.loc 1 1250 3 is_stmt 1 view .LVU1080
 3781              		.loc 1 1250 26 is_stmt 0 view .LVU1081
 3782 0022 3046     		mov	r0, r6
 3783              	.LVL388:
 3784              		.loc 1 1250 26 view .LVU1082
 3785 0024 FFF7FEFF 		bl	block_size
 3786              	.LVL389:
 3787 0028 8046     		mov	r8, r0
 3788              	.LVL390:
1251:lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 3789              		.loc 1 1251 3 is_stmt 1 view .LVU1083
 3790              		.loc 1 1251 37 is_stmt 0 view .LVU1084
 3791 002a 5046     		mov	r0, r10
 3792              	.LVL391:
 3793              		.loc 1 1251 37 view .LVU1085
 3794 002c FFF7FEFF 		bl	block_size
 3795              	.LVL392:
 3796              		.loc 1 1251 35 view .LVU1086
 3797 0030 00EB0803 		add	r3, r0, r8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 96


 3798              		.loc 1 1251 16 view .LVU1087
 3799 0034 03F1040B 		add	fp, r3, #4
 3800              	.LVL393:
1252:lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3801              		.loc 1 1252 3 is_stmt 1 view .LVU1088
 3802              		.loc 1 1252 25 is_stmt 0 view .LVU1089
 3803 0038 0421     		movs	r1, #4
 3804 003a 2046     		mov	r0, r4
 3805 003c FFF7FEFF 		bl	adjust_request_size
 3806              	.LVL394:
 3807 0040 0746     		mov	r7, r0
 3808              	.LVL395:
1253:lvgl/src/misc/lv_tlsf.c **** 
1254:lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3809              		.loc 1 1254 3 is_stmt 1 view .LVU1090
 3810              		.loc 1 1254 3 view .LVU1091
 3811 0042 3046     		mov	r0, r6
 3812              	.LVL396:
 3813              		.loc 1 1254 3 is_stmt 0 view .LVU1092
 3814 0044 FFF7FEFF 		bl	block_is_free
 3815              	.LVL397:
 3816 0048 60B1     		cbz	r0, .L259
 3817              	.L260:
 3818              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1093
 3819              		.loc 1 1254 3 discriminator 1 view .LVU1094
 3820              		.loc 1 1254 3 discriminator 1 view .LVU1095
 3821              		.loc 1 1254 3 discriminator 1 view .LVU1096
 3822 004a FEE7     		b	.L260
 3823              	.LVL398:
 3824              	.L265:
 3825              		.loc 1 1254 3 is_stmt 0 discriminator 1 view .LVU1097
 3826              	.LBE16:
1238:lvgl/src/misc/lv_tlsf.c **** 	}
 3827              		.loc 1 1238 3 is_stmt 1 view .LVU1098
 3828 004c FFF7FEFF 		bl	lv_tlsf_free
 3829              	.LVL399:
1233:lvgl/src/misc/lv_tlsf.c **** 
 3830              		.loc 1 1233 8 is_stmt 0 view .LVU1099
 3831 0050 0026     		movs	r6, #0
1238:lvgl/src/misc/lv_tlsf.c **** 	}
 3832              		.loc 1 1238 3 view .LVU1100
 3833 0052 04E0     		b	.L255
 3834              	.LVL400:
 3835              	.L266:
1243:lvgl/src/misc/lv_tlsf.c **** 	}
 3836              		.loc 1 1243 3 is_stmt 1 view .LVU1101
1243:lvgl/src/misc/lv_tlsf.c **** 	}
 3837              		.loc 1 1243 7 is_stmt 0 view .LVU1102
 3838 0054 2146     		mov	r1, r4
 3839              	.LVL401:
1243:lvgl/src/misc/lv_tlsf.c **** 	}
 3840              		.loc 1 1243 7 view .LVU1103
 3841 0056 2846     		mov	r0, r5
 3842              	.LVL402:
1243:lvgl/src/misc/lv_tlsf.c **** 	}
 3843              		.loc 1 1243 7 view .LVU1104
 3844 0058 FFF7FEFF 		bl	lv_tlsf_malloc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 97


 3845              	.LVL403:
1243:lvgl/src/misc/lv_tlsf.c **** 	}
 3846              		.loc 1 1243 7 view .LVU1105
 3847 005c 0646     		mov	r6, r0
 3848              	.LVL404:
 3849              	.L255:
1255:lvgl/src/misc/lv_tlsf.c **** 
1256:lvgl/src/misc/lv_tlsf.c **** 		/*
1257:lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:lvgl/src/misc/lv_tlsf.c **** 		*/
1260:lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
1261:lvgl/src/misc/lv_tlsf.c **** 		{
1262:lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
1263:lvgl/src/misc/lv_tlsf.c **** 			if (p)
1264:lvgl/src/misc/lv_tlsf.c **** 			{
1265:lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
1266:lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
1267:lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
1268:lvgl/src/misc/lv_tlsf.c **** 			}
1269:lvgl/src/misc/lv_tlsf.c **** 		}
1270:lvgl/src/misc/lv_tlsf.c **** 		else
1271:lvgl/src/misc/lv_tlsf.c **** 		{
1272:lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
1274:lvgl/src/misc/lv_tlsf.c **** 			{
1275:lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:lvgl/src/misc/lv_tlsf.c **** 			}
1278:lvgl/src/misc/lv_tlsf.c **** 
1279:lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
1281:lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
1282:lvgl/src/misc/lv_tlsf.c **** 		}
1283:lvgl/src/misc/lv_tlsf.c **** 	}
1284:lvgl/src/misc/lv_tlsf.c **** 
1285:lvgl/src/misc/lv_tlsf.c **** 	return p;
1286:lvgl/src/misc/lv_tlsf.c **** }
 3850              		.loc 1 1286 1 view .LVU1106
 3851 005e 3046     		mov	r0, r6
 3852 0060 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3853              	.LVL405:
 3854              	.L259:
 3855              	.LBB18:
1254:lvgl/src/misc/lv_tlsf.c **** 
 3856              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1107
1260:lvgl/src/misc/lv_tlsf.c **** 		{
 3857              		.loc 1 1260 3 discriminator 2 view .LVU1108
1260:lvgl/src/misc/lv_tlsf.c **** 		{
 3858              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1109
 3859 0064 B845     		cmp	r8, r7
 3860 0066 18D2     		bcs	.L261
1260:lvgl/src/misc/lv_tlsf.c **** 		{
 3861              		.loc 1 1260 29 discriminator 1 view .LVU1110
 3862 0068 5046     		mov	r0, r10
 3863 006a FFF7FEFF 		bl	block_is_free
 3864              	.LVL406:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 98


1260:lvgl/src/misc/lv_tlsf.c **** 		{
 3865              		.loc 1 1260 24 discriminator 1 view .LVU1111
 3866 006e 08B1     		cbz	r0, .L262
1260:lvgl/src/misc/lv_tlsf.c **** 		{
 3867              		.loc 1 1260 49 discriminator 2 view .LVU1112
 3868 0070 BB45     		cmp	fp, r7
 3869 0072 12D2     		bcs	.L261
 3870              	.L262:
1262:lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3871              		.loc 1 1262 4 is_stmt 1 view .LVU1113
1262:lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3872              		.loc 1 1262 8 is_stmt 0 view .LVU1114
 3873 0074 2146     		mov	r1, r4
 3874 0076 2846     		mov	r0, r5
 3875 0078 FFF7FEFF 		bl	lv_tlsf_malloc
 3876              	.LVL407:
1263:lvgl/src/misc/lv_tlsf.c **** 			{
 3877              		.loc 1 1263 4 is_stmt 1 view .LVU1115
1263:lvgl/src/misc/lv_tlsf.c **** 			{
 3878              		.loc 1 1263 7 is_stmt 0 view .LVU1116
 3879 007c 0646     		mov	r6, r0
 3880              	.LVL408:
1263:lvgl/src/misc/lv_tlsf.c **** 			{
 3881              		.loc 1 1263 7 view .LVU1117
 3882 007e 0028     		cmp	r0, #0
 3883 0080 EDD0     		beq	.L255
 3884              	.LBB17:
1265:lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 3885              		.loc 1 1265 5 is_stmt 1 view .LVU1118
 3886              	.LVL409:
1266:lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 3887              		.loc 1 1266 5 view .LVU1119
 3888 0082 2246     		mov	r2, r4
 3889 0084 4445     		cmp	r4, r8
 3890 0086 28BF     		it	cs
 3891 0088 4246     		movcs	r2, r8
 3892 008a 4946     		mov	r1, r9
 3893 008c FFF7FEFF 		bl	lv_memcpy
 3894              	.LVL410:
1267:lvgl/src/misc/lv_tlsf.c **** 			}
 3895              		.loc 1 1267 5 view .LVU1120
 3896 0090 4946     		mov	r1, r9
 3897 0092 2846     		mov	r0, r5
 3898 0094 FFF7FEFF 		bl	lv_tlsf_free
 3899              	.LVL411:
 3900 0098 E1E7     		b	.L255
 3901              	.LVL412:
 3902              	.L261:
1267:lvgl/src/misc/lv_tlsf.c **** 			}
 3903              		.loc 1 1267 5 is_stmt 0 view .LVU1121
 3904              	.LBE17:
1273:lvgl/src/misc/lv_tlsf.c **** 			{
 3905              		.loc 1 1273 4 is_stmt 1 view .LVU1122
1273:lvgl/src/misc/lv_tlsf.c **** 			{
 3906              		.loc 1 1273 7 is_stmt 0 view .LVU1123
 3907 009a B845     		cmp	r8, r7
 3908 009c 06D3     		bcc	.L267
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 99


 3909              	.L263:
1280:lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
 3910              		.loc 1 1280 4 is_stmt 1 view .LVU1124
 3911 009e 3A46     		mov	r2, r7
 3912 00a0 3146     		mov	r1, r6
 3913 00a2 2846     		mov	r0, r5
 3914 00a4 FFF7FEFF 		bl	block_trim_used
 3915              	.LVL413:
1281:lvgl/src/misc/lv_tlsf.c **** 		}
 3916              		.loc 1 1281 4 view .LVU1125
1281:lvgl/src/misc/lv_tlsf.c **** 		}
 3917              		.loc 1 1281 6 is_stmt 0 view .LVU1126
 3918 00a8 4E46     		mov	r6, r9
 3919              	.LVL414:
1281:lvgl/src/misc/lv_tlsf.c **** 		}
 3920              		.loc 1 1281 6 view .LVU1127
 3921              	.LBE18:
1285:lvgl/src/misc/lv_tlsf.c **** }
 3922              		.loc 1 1285 2 is_stmt 1 view .LVU1128
1285:lvgl/src/misc/lv_tlsf.c **** }
 3923              		.loc 1 1285 9 is_stmt 0 view .LVU1129
 3924 00aa D8E7     		b	.L255
 3925              	.LVL415:
 3926              	.L267:
 3927              	.LBB19:
1275:lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 3928              		.loc 1 1275 5 is_stmt 1 view .LVU1130
 3929 00ac 3146     		mov	r1, r6
 3930 00ae 2846     		mov	r0, r5
 3931 00b0 FFF7FEFF 		bl	block_merge_next
 3932              	.LVL416:
1276:lvgl/src/misc/lv_tlsf.c **** 			}
 3933              		.loc 1 1276 5 view .LVU1131
 3934 00b4 3046     		mov	r0, r6
 3935 00b6 FFF7FEFF 		bl	block_mark_as_used
 3936              	.LVL417:
 3937 00ba F0E7     		b	.L263
 3938              	.LBE19:
 3939              		.cfi_endproc
 3940              	.LFE63:
 3942              		.text
 3943              	.Letext0:
 3944              		.file 2 "e:\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\std
 3945              		.file 3 "lvgl/src/misc/lv_tlsf.h"
 3946              		.file 4 "lvgl/src/misc/lv_mem.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 100


DEFINED SYMBOLS
                            *ABS*:00000000 lv_tlsf.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:20     .text.block_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:25     .text.block_size:00000000 block_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:45     .text.block_set_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:50     .text.block_set_size:00000000 block_set_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:77     .text.block_is_last:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:82     .text.block_is_last:00000000 block_is_last
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:107    .text.block_is_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:112    .text.block_is_free:00000000 block_is_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:131    .text.block_set_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:136    .text.block_set_free:00000000 block_set_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:155    .text.block_set_used:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:160    .text.block_set_used:00000000 block_set_used
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:179    .text.block_is_prev_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:184    .text.block_is_prev_free:00000000 block_is_prev_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:203    .text.block_set_prev_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:208    .text.block_set_prev_free:00000000 block_set_prev_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:227    .text.block_set_prev_used:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:232    .text.block_set_prev_used:00000000 block_set_prev_used
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:251    .text.block_from_ptr:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:256    .text.block_from_ptr:00000000 block_from_ptr
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:274    .text.block_to_ptr:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:279    .text.block_to_ptr:00000000 block_to_ptr
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:297    .text.offset_to_block:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:302    .text.offset_to_block:00000000 offset_to_block
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:320    .text.block_prev:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:325    .text.block_prev:00000000 block_prev
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:362    .text.block_next:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:367    .text.block_next:00000000 block_next
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:423    .text.block_link_next:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:428    .text.block_link_next:00000000 block_link_next
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:457    .text.block_mark_as_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:462    .text.block_mark_as_free:00000000 block_mark_as_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:494    .text.block_mark_as_used:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:499    .text.block_mark_as_used:00000000 block_mark_as_used
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:531    .text.align_up:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:536    .text.align_up:00000000 align_up
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:573    .text.align_down:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:578    .text.align_down:00000000 align_down
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:612    .text.align_ptr:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:617    .text.align_ptr:00000000 align_ptr
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:656    .text.adjust_request_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:661    .text.adjust_request_size:00000000 adjust_request_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:716    .text.remove_free_block:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:721    .text.remove_free_block:00000000 remove_free_block
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:827    .text.insert_free_block:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:832    .text.insert_free_block:00000000 insert_free_block
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:947    .text.block_can_split:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:952    .text.block_can_split:00000000 block_can_split
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:984    .text.block_split:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:989    .text.block_split:00000000 block_split
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1104   .text.block_absorb:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1109   .text.block_absorb:00000000 block_absorb
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1164   .text.control_constructor:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1169   .text.control_constructor:00000000 control_constructor
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1233   .text.integrity_walker:00000000 $t
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 101


C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1238   .text.integrity_walker:00000000 integrity_walker
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1331   .text.default_walker:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1336   .text.default_walker:00000000 default_walker
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1352   .text.tlsf_fls:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1357   .text.tlsf_fls:00000000 tlsf_fls
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1392   .text.mapping_insert:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1397   .text.mapping_insert:00000000 mapping_insert
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1474   .text.block_insert:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1479   .text.block_insert:00000000 block_insert
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1528   .text.block_trim_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1533   .text.block_trim_free:00000000 block_trim_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1613   .text.block_prepare_used:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1618   .text.block_prepare_used:00000000 block_prepare_used
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1675   .text.block_trim_free_leading:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1680   .text.block_trim_free_leading:00000000 block_trim_free_leading
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1749   .text.block_remove:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1754   .text.block_remove:00000000 block_remove
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1803   .text.block_merge_prev:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1808   .text.block_merge_prev:00000000 block_merge_prev
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1894   .text.block_merge_next:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1899   .text.block_merge_next:00000000 block_merge_next
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1979   .text.block_trim_used:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:1984   .text.block_trim_used:00000000 block_trim_used
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2067   .text.mapping_search:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2072   .text.mapping_search:00000000 mapping_search
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2127   .text.tlsf_ffs:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2132   .text.tlsf_ffs:00000000 tlsf_ffs
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2157   .text.search_suitable_block:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2162   .text.search_suitable_block:00000000 search_suitable_block
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2284   .text.block_locate_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2289   .text.block_locate_free:00000000 block_locate_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2398   .text.lv_tlsf_check:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2404   .text.lv_tlsf_check:00000000 lv_tlsf_check
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2674   .text.lv_tlsf_walk_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2680   .text.lv_tlsf_walk_pool:00000000 lv_tlsf_walk_pool
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2771   .text.lv_tlsf_walk_pool:00000058 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2776   .text.lv_tlsf_block_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2782   .text.lv_tlsf_block_size:00000000 lv_tlsf_block_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2828   .text.lv_tlsf_check_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2834   .text.lv_tlsf_check_pool:00000000 lv_tlsf_check_pool
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2870   .text.lv_tlsf_check_pool:0000001c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2875   .text.lv_tlsf_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2881   .text.lv_tlsf_size:00000000 lv_tlsf_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2896   .text.lv_tlsf_align_size:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2902   .text.lv_tlsf_align_size:00000000 lv_tlsf_align_size
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2917   .text.lv_tlsf_block_size_min:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2923   .text.lv_tlsf_block_size_min:00000000 lv_tlsf_block_size_min
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2938   .text.lv_tlsf_block_size_max:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2944   .text.lv_tlsf_block_size_max:00000000 lv_tlsf_block_size_max
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2959   .text.lv_tlsf_pool_overhead:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2965   .text.lv_tlsf_pool_overhead:00000000 lv_tlsf_pool_overhead
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2980   .text.lv_tlsf_alloc_overhead:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:2986   .text.lv_tlsf_alloc_overhead:00000000 lv_tlsf_alloc_overhead
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3001   .text.lv_tlsf_add_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3007   .text.lv_tlsf_add_pool:00000000 lv_tlsf_add_pool
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3125   .text.lv_tlsf_remove_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3131   .text.lv_tlsf_remove_pool:00000000 lv_tlsf_remove_pool
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s 			page 102


C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3240   .text.lv_tlsf_create:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3246   .text.lv_tlsf_create:00000000 lv_tlsf_create
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3287   .text.lv_tlsf_create_with_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3293   .text.lv_tlsf_create_with_pool:00000000 lv_tlsf_create_with_pool
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3336   .text.lv_tlsf_destroy:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3342   .text.lv_tlsf_destroy:00000000 lv_tlsf_destroy
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3357   .text.lv_tlsf_get_pool:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3363   .text.lv_tlsf_get_pool:00000000 lv_tlsf_get_pool
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3389   .text.lv_tlsf_malloc:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3395   .text.lv_tlsf_malloc:00000000 lv_tlsf_malloc
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3450   .text.lv_tlsf_memalign:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3456   .text.lv_tlsf_memalign:00000000 lv_tlsf_memalign
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3623   .text.lv_tlsf_free:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3629   .text.lv_tlsf_free:00000000 lv_tlsf_free
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3719   .text.lv_tlsf_realloc:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccWo2A25.s:3725   .text.lv_tlsf_realloc:00000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
