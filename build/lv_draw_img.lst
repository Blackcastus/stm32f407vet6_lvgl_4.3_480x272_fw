ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_draw_img.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_cleanup,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	draw_cleanup:
  26              	.LVL0:
  27              	.LFB156:
  28              		.file 1 "lvgl/src/draw/lv_draw_img.c"
   1:lvgl/src/draw/lv_draw_img.c **** /**
   2:lvgl/src/draw/lv_draw_img.c ****  * @file lv_draw_img.c
   3:lvgl/src/draw/lv_draw_img.c ****  *
   4:lvgl/src/draw/lv_draw_img.c ****  */
   5:lvgl/src/draw/lv_draw_img.c **** 
   6:lvgl/src/draw/lv_draw_img.c **** /*********************
   7:lvgl/src/draw/lv_draw_img.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_img.c ****  *********************/
   9:lvgl/src/draw/lv_draw_img.c **** #include "lv_draw_img.h"
  10:lvgl/src/draw/lv_draw_img.c **** #include "lv_img_cache.h"
  11:lvgl/src/draw/lv_draw_img.c **** #include "../hal/lv_hal_disp.h"
  12:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_log.h"
  13:lvgl/src/draw/lv_draw_img.c **** #include "../core/lv_refr.h"
  14:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_mem.h"
  15:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_math.h"
  16:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D
  17:lvgl/src/draw/lv_draw_img.c ****     #include "../gpu/lv_gpu_stm32_dma2d.h"
  18:lvgl/src/draw/lv_draw_img.c **** #elif LV_USE_GPU_NXP_PXP
  19:lvgl/src/draw/lv_draw_img.c ****     #include "../gpu/lv_gpu_nxp_pxp.h"
  20:lvgl/src/draw/lv_draw_img.c **** #endif
  21:lvgl/src/draw/lv_draw_img.c **** 
  22:lvgl/src/draw/lv_draw_img.c **** /*********************
  23:lvgl/src/draw/lv_draw_img.c ****  *      DEFINES
  24:lvgl/src/draw/lv_draw_img.c ****  *********************/
  25:lvgl/src/draw/lv_draw_img.c **** 
  26:lvgl/src/draw/lv_draw_img.c **** /**********************
  27:lvgl/src/draw/lv_draw_img.c ****  *      TYPEDEFS
  28:lvgl/src/draw/lv_draw_img.c ****  **********************/
  29:lvgl/src/draw/lv_draw_img.c **** 
  30:lvgl/src/draw/lv_draw_img.c **** /**********************
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 2


  31:lvgl/src/draw/lv_draw_img.c ****  *  STATIC PROTOTYPES
  32:lvgl/src/draw/lv_draw_img.c ****  **********************/
  33:lvgl/src/draw/lv_draw_img.c **** LV_ATTRIBUTE_FAST_MEM static lv_res_t lv_img_draw_core(const lv_area_t * coords, const lv_area_t * 
  34:lvgl/src/draw/lv_draw_img.c ****                                                        const void * src,
  35:lvgl/src/draw/lv_draw_img.c ****                                                        const lv_draw_img_dsc_t * draw_dsc);
  36:lvgl/src/draw/lv_draw_img.c **** 
  37:lvgl/src/draw/lv_draw_img.c **** LV_ATTRIBUTE_FAST_MEM static void lv_draw_map(const lv_area_t * map_area, const lv_area_t * clip_ar
  38:lvgl/src/draw/lv_draw_img.c ****                                               const uint8_t * map_p,
  39:lvgl/src/draw/lv_draw_img.c ****                                               const lv_draw_img_dsc_t * draw_dsc,
  40:lvgl/src/draw/lv_draw_img.c ****                                               bool chroma_key, bool alpha_byte);
  41:lvgl/src/draw/lv_draw_img.c **** 
  42:lvgl/src/draw/lv_draw_img.c **** static void show_error(const lv_area_t * coords, const lv_area_t * clip_area, const char * msg);
  43:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache);
  44:lvgl/src/draw/lv_draw_img.c **** 
  45:lvgl/src/draw/lv_draw_img.c **** /**********************
  46:lvgl/src/draw/lv_draw_img.c ****  *  STATIC VARIABLES
  47:lvgl/src/draw/lv_draw_img.c ****  **********************/
  48:lvgl/src/draw/lv_draw_img.c **** 
  49:lvgl/src/draw/lv_draw_img.c **** /**********************
  50:lvgl/src/draw/lv_draw_img.c ****  *      MACROS
  51:lvgl/src/draw/lv_draw_img.c ****  **********************/
  52:lvgl/src/draw/lv_draw_img.c **** 
  53:lvgl/src/draw/lv_draw_img.c **** /**********************
  54:lvgl/src/draw/lv_draw_img.c ****  *   GLOBAL FUNCTIONS
  55:lvgl/src/draw/lv_draw_img.c ****  **********************/
  56:lvgl/src/draw/lv_draw_img.c **** 
  57:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)
  58:lvgl/src/draw/lv_draw_img.c **** {
  59:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
  60:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
  61:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
  62:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
  63:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
  64:lvgl/src/draw/lv_draw_img.c **** }
  65:lvgl/src/draw/lv_draw_img.c **** 
  66:lvgl/src/draw/lv_draw_img.c **** /**
  67:lvgl/src/draw/lv_draw_img.c ****  * Draw an image
  68:lvgl/src/draw/lv_draw_img.c ****  * @param coords the coordinates of the image
  69:lvgl/src/draw/lv_draw_img.c ****  * @param mask the image will be drawn only in this area
  70:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to a lv_color_t array which contains the pixels of the image
  71:lvgl/src/draw/lv_draw_img.c ****  * @param dsc pointer to an initialized `lv_draw_img_dsc_t` variable
  72:lvgl/src/draw/lv_draw_img.c ****  */
  73:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img(const lv_area_t * coords, const lv_area_t * mask, const void * src, const lv_draw_
  74:lvgl/src/draw/lv_draw_img.c **** {
  75:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
  76:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
  77:lvgl/src/draw/lv_draw_img.c ****         show_error(coords, mask, "No\ndata");
  78:lvgl/src/draw/lv_draw_img.c ****         return;
  79:lvgl/src/draw/lv_draw_img.c ****     }
  80:lvgl/src/draw/lv_draw_img.c **** 
  81:lvgl/src/draw/lv_draw_img.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  82:lvgl/src/draw/lv_draw_img.c **** 
  83:lvgl/src/draw/lv_draw_img.c ****     lv_res_t res;
  84:lvgl/src/draw/lv_draw_img.c ****     res = lv_img_draw_core(coords, mask, src, dsc);
  85:lvgl/src/draw/lv_draw_img.c **** 
  86:lvgl/src/draw/lv_draw_img.c ****     if(res == LV_RES_INV) {
  87:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 3


  88:lvgl/src/draw/lv_draw_img.c ****         show_error(coords, mask, "No\ndata");
  89:lvgl/src/draw/lv_draw_img.c ****         return;
  90:lvgl/src/draw/lv_draw_img.c ****     }
  91:lvgl/src/draw/lv_draw_img.c **** }
  92:lvgl/src/draw/lv_draw_img.c **** 
  93:lvgl/src/draw/lv_draw_img.c **** /**
  94:lvgl/src/draw/lv_draw_img.c ****  * Get the pixel size of a color format in bits
  95:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
  96:lvgl/src/draw/lv_draw_img.c ****  * @return the pixel size in bits
  97:lvgl/src/draw/lv_draw_img.c ****  */
  98:lvgl/src/draw/lv_draw_img.c **** uint8_t lv_img_cf_get_px_size(lv_img_cf_t cf)
  99:lvgl/src/draw/lv_draw_img.c **** {
 100:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
 101:lvgl/src/draw/lv_draw_img.c **** 
 102:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 103:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 104:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW:
 105:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 106:lvgl/src/draw/lv_draw_img.c ****             break;
 107:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR:
 108:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 109:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_COLOR_SIZE;
 110:lvgl/src/draw/lv_draw_img.c ****             break;
 111:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 112:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE << 3;
 113:lvgl/src/draw/lv_draw_img.c ****             break;
 114:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 115:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 116:lvgl/src/draw/lv_draw_img.c ****             px_size = 1;
 117:lvgl/src/draw/lv_draw_img.c ****             break;
 118:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 119:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 120:lvgl/src/draw/lv_draw_img.c ****             px_size = 2;
 121:lvgl/src/draw/lv_draw_img.c ****             break;
 122:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 123:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 124:lvgl/src/draw/lv_draw_img.c ****             px_size = 4;
 125:lvgl/src/draw/lv_draw_img.c ****             break;
 126:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 127:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 128:lvgl/src/draw/lv_draw_img.c ****             px_size = 8;
 129:lvgl/src/draw/lv_draw_img.c ****             break;
 130:lvgl/src/draw/lv_draw_img.c ****         default:
 131:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 132:lvgl/src/draw/lv_draw_img.c ****             break;
 133:lvgl/src/draw/lv_draw_img.c ****     }
 134:lvgl/src/draw/lv_draw_img.c **** 
 135:lvgl/src/draw/lv_draw_img.c ****     return px_size;
 136:lvgl/src/draw/lv_draw_img.c **** }
 137:lvgl/src/draw/lv_draw_img.c **** 
 138:lvgl/src/draw/lv_draw_img.c **** /**
 139:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format is chroma keyed or not
 140:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 141:lvgl/src/draw/lv_draw_img.c ****  * @return true: chroma keyed; false: not chroma keyed
 142:lvgl/src/draw/lv_draw_img.c ****  */
 143:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_is_chroma_keyed(lv_img_cf_t cf)
 144:lvgl/src/draw/lv_draw_img.c **** {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 4


 145:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 146:lvgl/src/draw/lv_draw_img.c **** 
 147:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 148:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 149:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_CHROMA_KEYED:
 150:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 151:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 152:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 153:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 154:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = true;
 155:lvgl/src/draw/lv_draw_img.c ****             break;
 156:lvgl/src/draw/lv_draw_img.c **** 
 157:lvgl/src/draw/lv_draw_img.c ****         default:
 158:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = false;
 159:lvgl/src/draw/lv_draw_img.c ****             break;
 160:lvgl/src/draw/lv_draw_img.c ****     }
 161:lvgl/src/draw/lv_draw_img.c **** 
 162:lvgl/src/draw/lv_draw_img.c ****     return is_chroma_keyed;
 163:lvgl/src/draw/lv_draw_img.c **** }
 164:lvgl/src/draw/lv_draw_img.c **** 
 165:lvgl/src/draw/lv_draw_img.c **** /**
 166:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format has alpha channel or not
 167:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 168:lvgl/src/draw/lv_draw_img.c ****  * @return true: has alpha channel; false: doesn't have alpha channel
 169:lvgl/src/draw/lv_draw_img.c ****  */
 170:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_has_alpha(lv_img_cf_t cf)
 171:lvgl/src/draw/lv_draw_img.c **** {
 172:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 173:lvgl/src/draw/lv_draw_img.c **** 
 174:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 175:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 176:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_ALPHA:
 177:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 178:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 179:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 180:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 181:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 182:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 183:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 184:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 185:lvgl/src/draw/lv_draw_img.c ****             has_alpha = true;
 186:lvgl/src/draw/lv_draw_img.c ****             break;
 187:lvgl/src/draw/lv_draw_img.c ****         default:
 188:lvgl/src/draw/lv_draw_img.c ****             has_alpha = false;
 189:lvgl/src/draw/lv_draw_img.c ****             break;
 190:lvgl/src/draw/lv_draw_img.c ****     }
 191:lvgl/src/draw/lv_draw_img.c **** 
 192:lvgl/src/draw/lv_draw_img.c ****     return has_alpha;
 193:lvgl/src/draw/lv_draw_img.c **** }
 194:lvgl/src/draw/lv_draw_img.c **** 
 195:lvgl/src/draw/lv_draw_img.c **** /**
 196:lvgl/src/draw/lv_draw_img.c ****  * Get the type of an image source
 197:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to an image source:
 198:lvgl/src/draw/lv_draw_img.c ****  *  - pointer to an 'lv_img_t' variable (image stored internally and compiled into the code)
 199:lvgl/src/draw/lv_draw_img.c ****  *  - a path to a file (e.g. "S:/folder/image.bin")
 200:lvgl/src/draw/lv_draw_img.c ****  *  - or a symbol (e.g. LV_SYMBOL_CLOSE)
 201:lvgl/src/draw/lv_draw_img.c ****  * @return type of the image source LV_IMG_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 5


 202:lvgl/src/draw/lv_draw_img.c ****  */
 203:lvgl/src/draw/lv_draw_img.c **** lv_img_src_t lv_img_src_get_type(const void * src)
 204:lvgl/src/draw/lv_draw_img.c **** {
 205:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 206:lvgl/src/draw/lv_draw_img.c **** 
 207:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) return img_src_type;
 208:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 209:lvgl/src/draw/lv_draw_img.c **** 
 210:lvgl/src/draw/lv_draw_img.c ****     /*The first byte shows the type of the image source*/
 211:lvgl/src/draw/lv_draw_img.c ****     if(u8_p[0] >= 0x20 && u8_p[0] <= 0x7F) {
 212:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 213:lvgl/src/draw/lv_draw_img.c ****     }
 214:lvgl/src/draw/lv_draw_img.c ****     else if(u8_p[0] >= 0x80) {
 215:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_SYMBOL; /*Symbols begins after 0x7F*/
 216:lvgl/src/draw/lv_draw_img.c ****     }
 217:lvgl/src/draw/lv_draw_img.c ****     else {
 218:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_VARIABLE; /*`lv_img_dsc_t` is draw to the first byte < 0x20*/
 219:lvgl/src/draw/lv_draw_img.c ****     }
 220:lvgl/src/draw/lv_draw_img.c **** 
 221:lvgl/src/draw/lv_draw_img.c ****     if(LV_IMG_SRC_UNKNOWN == img_src_type) {
 222:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("lv_img_src_get_type: unknown image type");
 223:lvgl/src/draw/lv_draw_img.c ****     }
 224:lvgl/src/draw/lv_draw_img.c **** 
 225:lvgl/src/draw/lv_draw_img.c ****     return img_src_type;
 226:lvgl/src/draw/lv_draw_img.c **** }
 227:lvgl/src/draw/lv_draw_img.c **** 
 228:lvgl/src/draw/lv_draw_img.c **** /**********************
 229:lvgl/src/draw/lv_draw_img.c ****  *   STATIC FUNCTIONS
 230:lvgl/src/draw/lv_draw_img.c ****  **********************/
 231:lvgl/src/draw/lv_draw_img.c **** 
 232:lvgl/src/draw/lv_draw_img.c **** LV_ATTRIBUTE_FAST_MEM static lv_res_t lv_img_draw_core(const lv_area_t * coords, const lv_area_t * 
 233:lvgl/src/draw/lv_draw_img.c ****                                                        const void * src,
 234:lvgl/src/draw/lv_draw_img.c ****                                                        const lv_draw_img_dsc_t * draw_dsc)
 235:lvgl/src/draw/lv_draw_img.c **** {
 236:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 237:lvgl/src/draw/lv_draw_img.c **** 
 238:lvgl/src/draw/lv_draw_img.c ****     _lv_img_cache_entry_t * cdsc = _lv_img_cache_open(src, draw_dsc->recolor, draw_dsc->frame_id);
 239:lvgl/src/draw/lv_draw_img.c **** 
 240:lvgl/src/draw/lv_draw_img.c ****     if(cdsc == NULL) return LV_RES_INV;
 241:lvgl/src/draw/lv_draw_img.c **** 
 242:lvgl/src/draw/lv_draw_img.c ****     bool chroma_keyed = lv_img_cf_is_chroma_keyed(cdsc->dec_dsc.header.cf);
 243:lvgl/src/draw/lv_draw_img.c ****     bool alpha_byte   = lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf);
 244:lvgl/src/draw/lv_draw_img.c **** 
 245:lvgl/src/draw/lv_draw_img.c ****     if(cdsc->dec_dsc.error_msg != NULL) {
 246:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 247:lvgl/src/draw/lv_draw_img.c **** 
 248:lvgl/src/draw/lv_draw_img.c ****         show_error(coords, clip_area, cdsc->dec_dsc.error_msg);
 249:lvgl/src/draw/lv_draw_img.c ****     }
 250:lvgl/src/draw/lv_draw_img.c ****     /*The decoder could open the image and gave the entire uncompressed image.
 251:lvgl/src/draw/lv_draw_img.c ****      *Just draw it!*/
 252:lvgl/src/draw/lv_draw_img.c ****     else if(cdsc->dec_dsc.img_data) {
 253:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 254:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 255:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 256:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 257:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 258:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 6


 259:lvgl/src/draw/lv_draw_img.c ****             _lv_img_buf_get_transformed_area(&map_area_rot, w, h, draw_dsc->angle, draw_dsc->zoom, 
 260:lvgl/src/draw/lv_draw_img.c **** 
 261:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x1 += coords->x1;
 262:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 263:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 264:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 265:lvgl/src/draw/lv_draw_img.c ****         }
 266:lvgl/src/draw/lv_draw_img.c **** 
 267:lvgl/src/draw/lv_draw_img.c ****         lv_area_t mask_com; /*Common area of mask and coords*/
 268:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 269:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, clip_area, &map_area_rot);
 270:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 271:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 272:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 273:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 274:lvgl/src/draw/lv_draw_img.c ****         }
 275:lvgl/src/draw/lv_draw_img.c **** 
 276:lvgl/src/draw/lv_draw_img.c ****         lv_draw_map(coords, &mask_com, cdsc->dec_dsc.img_data, draw_dsc, chroma_keyed, alpha_byte);
 277:lvgl/src/draw/lv_draw_img.c ****     }
 278:lvgl/src/draw/lv_draw_img.c ****     /*The whole uncompressed image is not available. Try to read it line-by-line*/
 279:lvgl/src/draw/lv_draw_img.c ****     else {
 280:lvgl/src/draw/lv_draw_img.c ****         lv_area_t mask_com; /*Common area of mask and coords*/
 281:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 282:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, clip_area, coords);
 283:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 284:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 285:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 286:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 287:lvgl/src/draw/lv_draw_img.c ****         }
 288:lvgl/src/draw/lv_draw_img.c **** 
 289:lvgl/src/draw/lv_draw_img.c ****         int32_t width = lv_area_get_width(&mask_com);
 290:lvgl/src/draw/lv_draw_img.c **** 
 291:lvgl/src/draw/lv_draw_img.c ****         uint8_t  * buf = lv_mem_buf_get(lv_area_get_width(&mask_com) *
 292:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 293:lvgl/src/draw/lv_draw_img.c **** 
 294:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 295:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 296:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 297:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 298:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 299:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 300:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 301:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 302:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 303:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area, &line);
 304:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 305:lvgl/src/draw/lv_draw_img.c **** 
 306:lvgl/src/draw/lv_draw_img.c ****             read_res = lv_img_decoder_read_line(&cdsc->dec_dsc, x, y, width, buf);
 307:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 308:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 309:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 310:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 311:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
 312:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 313:lvgl/src/draw/lv_draw_img.c ****             }
 314:lvgl/src/draw/lv_draw_img.c **** 
 315:lvgl/src/draw/lv_draw_img.c ****             lv_draw_map(&line, &mask_line, buf, draw_dsc, chroma_keyed, alpha_byte);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 7


 316:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 317:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 318:lvgl/src/draw/lv_draw_img.c ****             y++;
 319:lvgl/src/draw/lv_draw_img.c ****         }
 320:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 321:lvgl/src/draw/lv_draw_img.c ****     }
 322:lvgl/src/draw/lv_draw_img.c **** 
 323:lvgl/src/draw/lv_draw_img.c ****     draw_cleanup(cdsc);
 324:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 325:lvgl/src/draw/lv_draw_img.c **** }
 326:lvgl/src/draw/lv_draw_img.c **** 
 327:lvgl/src/draw/lv_draw_img.c **** /**
 328:lvgl/src/draw/lv_draw_img.c ****  * Draw a color map to the display (image)
 329:lvgl/src/draw/lv_draw_img.c ****  * @param cords_p coordinates the color map
 330:lvgl/src/draw/lv_draw_img.c ****  * @param mask_p the map will drawn only on this area  (truncated to draw_buf area)
 331:lvgl/src/draw/lv_draw_img.c ****  * @param map_p pointer to a lv_color_t array
 332:lvgl/src/draw/lv_draw_img.c ****  * @param draw_dsc pointer to an initialized `lv_draw_img_dsc_t` variable
 333:lvgl/src/draw/lv_draw_img.c ****  * @param chroma_keyed true: enable transparency of LV_IMG_LV_COLOR_TRANSP color pixels
 334:lvgl/src/draw/lv_draw_img.c ****  * @param alpha_byte true: extra alpha byte is inserted for every pixel
 335:lvgl/src/draw/lv_draw_img.c ****  */
 336:lvgl/src/draw/lv_draw_img.c **** LV_ATTRIBUTE_FAST_MEM static void lv_draw_map(const lv_area_t * map_area, const lv_area_t * clip_ar
 337:lvgl/src/draw/lv_draw_img.c ****                                               const uint8_t * map_p,
 338:lvgl/src/draw/lv_draw_img.c ****                                               const lv_draw_img_dsc_t * draw_dsc,
 339:lvgl/src/draw/lv_draw_img.c ****                                               bool chroma_key, bool alpha_byte)
 340:lvgl/src/draw/lv_draw_img.c **** {
 341:lvgl/src/draw/lv_draw_img.c ****     /*Use the clip area as draw area*/
 342:lvgl/src/draw/lv_draw_img.c ****     lv_area_t draw_area;
 343:lvgl/src/draw/lv_draw_img.c ****     lv_area_copy(&draw_area, clip_area);
 344:lvgl/src/draw/lv_draw_img.c **** 
 345:lvgl/src/draw/lv_draw_img.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 346:lvgl/src/draw/lv_draw_img.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 347:lvgl/src/draw/lv_draw_img.c ****     const lv_area_t * disp_area = &draw_buf->area;
 348:lvgl/src/draw/lv_draw_img.c **** 
 349:lvgl/src/draw/lv_draw_img.c ****     /*Now `draw_area` has absolute coordinates.
 350:lvgl/src/draw/lv_draw_img.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 351:lvgl/src/draw/lv_draw_img.c ****     draw_area.x1 -= disp_area->x1;
 352:lvgl/src/draw/lv_draw_img.c ****     draw_area.y1 -= disp_area->y1;
 353:lvgl/src/draw/lv_draw_img.c ****     draw_area.x2 -= disp_area->x1;
 354:lvgl/src/draw/lv_draw_img.c ****     draw_area.y2 -= disp_area->y1;
 355:lvgl/src/draw/lv_draw_img.c **** 
 356:lvgl/src/draw/lv_draw_img.c ****     uint8_t other_mask_cnt = lv_draw_mask_get_cnt();
 357:lvgl/src/draw/lv_draw_img.c **** 
 358:lvgl/src/draw/lv_draw_img.c ****     /*The simplest case just copy the pixels into the draw_buf*/
 359:lvgl/src/draw/lv_draw_img.c ****     if(other_mask_cnt == 0 && draw_dsc->angle == 0 && draw_dsc->zoom == LV_IMG_ZOOM_NONE &&
 360:lvgl/src/draw/lv_draw_img.c ****        chroma_key == false && alpha_byte == false && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 361:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 362:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 363:lvgl/src/draw/lv_draw_img.c ****     }
 364:lvgl/src/draw/lv_draw_img.c **** 
 365:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_NXP_PXP
 366:lvgl/src/draw/lv_draw_img.c ****     /*Simple case without masking and transformations*/
 367:lvgl/src/draw/lv_draw_img.c ****     else if(other_mask_cnt == 0 && draw_dsc->angle == 0 && draw_dsc->zoom == LV_IMG_ZOOM_NONE && al
 368:lvgl/src/draw/lv_draw_img.c ****             chroma_key == true && draw_dsc->recolor_opa == LV_OPA_TRANSP) { /*copy with color keyin
 369:lvgl/src/draw/lv_draw_img.c ****         lv_gpu_nxp_pxp_enable_color_key();
 370:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 371:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 372:lvgl/src/draw/lv_draw_img.c ****         lv_gpu_nxp_pxp_disable_color_key();
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 8


 373:lvgl/src/draw/lv_draw_img.c ****     }
 374:lvgl/src/draw/lv_draw_img.c ****     else if(other_mask_cnt == 0 && draw_dsc->angle == 0 && draw_dsc->zoom == LV_IMG_ZOOM_NONE && al
 375:lvgl/src/draw/lv_draw_img.c ****             chroma_key == false && draw_dsc->recolor_opa != LV_OPA_TRANSP) { /*copy with recolor (+
 376:lvgl/src/draw/lv_draw_img.c ****         lv_gpu_nxp_pxp_enable_recolor(draw_dsc->recolor, draw_dsc->recolor_opa);
 377:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 378:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 379:lvgl/src/draw/lv_draw_img.c ****         lv_gpu_nxp_pxp_disable_recolor();
 380:lvgl/src/draw/lv_draw_img.c ****     }
 381:lvgl/src/draw/lv_draw_img.c **** #endif
 382:lvgl/src/draw/lv_draw_img.c ****     /*In the other cases every pixel need to be checked one-by-one*/
 383:lvgl/src/draw/lv_draw_img.c ****     else {
 384:lvgl/src/draw/lv_draw_img.c **** //#if LV_DRAW_COMPLEX
 385:lvgl/src/draw/lv_draw_img.c ****         /*The pixel size in byte is different if an alpha byte is added too*/
 386:lvgl/src/draw/lv_draw_img.c ****         uint8_t px_size_byte = alpha_byte ? LV_IMG_PX_SIZE_ALPHA_BYTE : sizeof(lv_color_t);
 387:lvgl/src/draw/lv_draw_img.c **** 
 388:lvgl/src/draw/lv_draw_img.c ****         /*Go to the first displayed pixel of the map*/
 389:lvgl/src/draw/lv_draw_img.c ****         int32_t map_w = lv_area_get_width(map_area);
 390:lvgl/src/draw/lv_draw_img.c ****         const uint8_t * map_buf_tmp = map_p;
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += map_w * (draw_area.y1 - (map_area->y1 - disp_area->y1)) * px_size_byte;
 392:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 393:lvgl/src/draw/lv_draw_img.c **** 
 394:lvgl/src/draw/lv_draw_img.c ****         lv_color_t c;
 395:lvgl/src/draw/lv_draw_img.c ****         lv_color_t chroma_keyed_color = LV_COLOR_CHROMA_KEY;
 396:lvgl/src/draw/lv_draw_img.c ****         uint32_t px_i = 0;
 397:lvgl/src/draw/lv_draw_img.c **** 
 398:lvgl/src/draw/lv_draw_img.c ****         const uint8_t * map_px;
 399:lvgl/src/draw/lv_draw_img.c **** 
 400:lvgl/src/draw/lv_draw_img.c ****         lv_area_t blend_area;
 401:lvgl/src/draw/lv_draw_img.c ****         blend_area.x1 = draw_area.x1 + disp_area->x1;
 402:lvgl/src/draw/lv_draw_img.c ****         blend_area.x2 = blend_area.x1 + lv_area_get_width(&draw_area) - 1;
 403:lvgl/src/draw/lv_draw_img.c ****         blend_area.y1 = disp_area->y1 + draw_area.y1;
 404:lvgl/src/draw/lv_draw_img.c ****         blend_area.y2 = blend_area.y1;
 405:lvgl/src/draw/lv_draw_img.c **** 
 406:lvgl/src/draw/lv_draw_img.c ****         lv_coord_t draw_area_h = lv_area_get_height(&draw_area);
 407:lvgl/src/draw/lv_draw_img.c ****         lv_coord_t draw_area_w = lv_area_get_width(&draw_area);
 408:lvgl/src/draw/lv_draw_img.c **** 
 409:lvgl/src/draw/lv_draw_img.c ****         bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 410:lvgl/src/draw/lv_draw_img.c ****         /*Simple ARGB image. Handle it as special case because it's very common*/
 411:lvgl/src/draw/lv_draw_img.c ****         if(other_mask_cnt == 0 && !transform && !chroma_key && draw_dsc->recolor_opa == LV_OPA_TRAN
 412:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 413:lvgl/src/draw/lv_draw_img.c ****             /*Blend ARGB images directly*/
 414:lvgl/src/draw/lv_draw_img.c ****             if(lv_area_get_size(&draw_area) > 240) {
 415:lvgl/src/draw/lv_draw_img.c ****                 int32_t disp_w = lv_area_get_width(disp_area);
 416:lvgl/src/draw/lv_draw_img.c ****                 lv_color_t * disp_buf = draw_buf->buf_act;
 417:lvgl/src/draw/lv_draw_img.c ****                 lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area.y1 + draw_area.x1;
 418:lvgl/src/draw/lv_draw_img.c ****                 lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, (const lv_color_t *)map_buf_tmp, d
 419:lvgl/src/draw/lv_draw_img.c ****                                          draw_area_h);
 420:lvgl/src/draw/lv_draw_img.c ****                 return;
 421:lvgl/src/draw/lv_draw_img.c ****             }
 422:lvgl/src/draw/lv_draw_img.c **** #endif
 423:lvgl/src/draw/lv_draw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(disp);
 424:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 425:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 426:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 427:lvgl/src/draw/lv_draw_img.c **** 
 428:lvgl/src/draw/lv_draw_img.c ****             int32_t x;
 429:lvgl/src/draw/lv_draw_img.c ****             int32_t y;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 9


 430:lvgl/src/draw/lv_draw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 431:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 432:lvgl/src/draw/lv_draw_img.c ****                 for(x = 0; x < draw_area_w; x++, map_px += px_size_byte, px_i++) {
 433:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 434:lvgl/src/draw/lv_draw_img.c ****                     mask_buf[px_i] = px_opa;
 435:lvgl/src/draw/lv_draw_img.c ****                     if(px_opa) {
 436:lvgl/src/draw/lv_draw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 437:lvgl/src/draw/lv_draw_img.c ****                         map2[px_i].full =  map_px[0];
 438:lvgl/src/draw/lv_draw_img.c **** #elif LV_COLOR_DEPTH == 16
 439:lvgl/src/draw/lv_draw_img.c ****                         map2[px_i].full =  map_px[0] + (map_px[1] << 8);
 440:lvgl/src/draw/lv_draw_img.c **** #elif LV_COLOR_DEPTH == 32
 441:lvgl/src/draw/lv_draw_img.c ****                         map2[px_i].full =  *((uint32_t *)map_px);
 442:lvgl/src/draw/lv_draw_img.c **** #endif
 443:lvgl/src/draw/lv_draw_img.c ****                     }
 444:lvgl/src/draw/lv_draw_img.c **** #if LV_COLOR_DEPTH == 32
 445:lvgl/src/draw/lv_draw_img.c ****                     map2[px_i].ch.alpha = 0xFF;
 446:lvgl/src/draw/lv_draw_img.c **** #endif
 447:lvgl/src/draw/lv_draw_img.c ****                 }
 448:lvgl/src/draw/lv_draw_img.c **** 
 449:lvgl/src/draw/lv_draw_img.c ****                 map_buf_tmp += map_w * px_size_byte;
 450:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 451:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 452:lvgl/src/draw/lv_draw_img.c ****                 }
 453:lvgl/src/draw/lv_draw_img.c ****                 else {
 454:lvgl/src/draw/lv_draw_img.c ****                     _lv_blend_map(clip_area, &blend_area, map2, mask_buf, LV_DRAW_MASK_RES_CHANGED,
 455:lvgl/src/draw/lv_draw_img.c **** 
 456:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y1 = blend_area.y2 + 1;
 457:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 458:lvgl/src/draw/lv_draw_img.c **** 
 459:lvgl/src/draw/lv_draw_img.c ****                     px_i = 0;
 460:lvgl/src/draw/lv_draw_img.c ****                 }
 461:lvgl/src/draw/lv_draw_img.c ****             }
 462:lvgl/src/draw/lv_draw_img.c ****             /*Flush the last part*/
 463:lvgl/src/draw/lv_draw_img.c ****             if(blend_area.y1 != blend_area.y2) {
 464:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 465:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, LV_DRAW_MASK_RES_CHANGED, dra
 466:lvgl/src/draw/lv_draw_img.c ****             }
 467:lvgl/src/draw/lv_draw_img.c **** 
 468:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(mask_buf);
 469:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(map2);
 470:lvgl/src/draw/lv_draw_img.c ****         }
 471:lvgl/src/draw/lv_draw_img.c ****         /*Most complicated case: transform or other mask or chroma keyed*/
 472:lvgl/src/draw/lv_draw_img.c ****         else {
 473:lvgl/src/draw/lv_draw_img.c ****             /*Build the image and a mask line-by-line*/
 474:lvgl/src/draw/lv_draw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(disp);
 475:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 476:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 477:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 478:lvgl/src/draw/lv_draw_img.c **** 
 479:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 480:lvgl/src/draw/lv_draw_img.c ****             lv_img_transform_dsc_t trans_dsc;
 481:lvgl/src/draw/lv_draw_img.c ****             lv_memset_00(&trans_dsc, sizeof(lv_img_transform_dsc_t));
 482:lvgl/src/draw/lv_draw_img.c ****             if(transform) {
 483:lvgl/src/draw/lv_draw_img.c ****                 lv_img_cf_t cf = LV_IMG_CF_TRUE_COLOR;
 484:lvgl/src/draw/lv_draw_img.c ****                 if(alpha_byte) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 485:lvgl/src/draw/lv_draw_img.c ****                 else if(chroma_key) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 486:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 10


 487:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.angle = draw_dsc->angle;
 488:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 489:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src = map_p;
 490:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_w = map_w;
 491:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(map_area);;
 492:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.cf = cf;
 493:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 494:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 495:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 496:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 497:lvgl/src/draw/lv_draw_img.c **** 
 498:lvgl/src/draw/lv_draw_img.c ****                 _lv_img_buf_transform_init(&trans_dsc);
 499:lvgl/src/draw/lv_draw_img.c ****             }
 500:lvgl/src/draw/lv_draw_img.c **** #endif
 501:lvgl/src/draw/lv_draw_img.c ****             uint16_t recolor_premult[3] = {0};
 502:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t recolor_opa_inv = 255 - draw_dsc->recolor_opa;
 503:lvgl/src/draw/lv_draw_img.c ****             if(draw_dsc->recolor_opa != 0) {
 504:lvgl/src/draw/lv_draw_img.c ****                 lv_color_premult(draw_dsc->recolor, draw_dsc->recolor_opa, recolor_premult);
 505:lvgl/src/draw/lv_draw_img.c ****             }
 506:lvgl/src/draw/lv_draw_img.c **** 
 507:lvgl/src/draw/lv_draw_img.c ****             lv_draw_mask_res_t mask_res;
 508:lvgl/src/draw/lv_draw_img.c ****             mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 509:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 510:lvgl/src/draw/lv_draw_img.c **** 
 511:lvgl/src/draw/lv_draw_img.c ****             /*Prepare the `mask_buf`if there are other masks*/
 512:lvgl/src/draw/lv_draw_img.c ****             if(other_mask_cnt) {
 513:lvgl/src/draw/lv_draw_img.c ****                 lv_memset_ff(mask_buf, mask_buf_size);
 514:lvgl/src/draw/lv_draw_img.c ****             }
 515:lvgl/src/draw/lv_draw_img.c **** 
 516:lvgl/src/draw/lv_draw_img.c ****             int32_t x;
 517:lvgl/src/draw/lv_draw_img.c ****             int32_t y;
 518:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 519:lvgl/src/draw/lv_draw_img.c ****             int32_t rot_y = disp_area->y1 + draw_area.y1 - map_area->y1;
 520:lvgl/src/draw/lv_draw_img.c **** #endif
 521:lvgl/src/draw/lv_draw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 522:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 523:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 524:lvgl/src/draw/lv_draw_img.c ****                 uint32_t px_i_start = px_i;
 525:lvgl/src/draw/lv_draw_img.c ****                 int32_t rot_x = disp_area->x1 + draw_area.x1 - map_area->x1;
 526:lvgl/src/draw/lv_draw_img.c **** #endif
 527:lvgl/src/draw/lv_draw_img.c **** 
 528:lvgl/src/draw/lv_draw_img.c ****                 for(x = 0; x < draw_area_w; x++, map_px += px_size_byte, px_i++) {
 529:lvgl/src/draw/lv_draw_img.c **** 
 530:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 531:lvgl/src/draw/lv_draw_img.c ****                     if(transform) {
 532:lvgl/src/draw/lv_draw_img.c **** 
 533:lvgl/src/draw/lv_draw_img.c ****                         /*Transform*/
 534:lvgl/src/draw/lv_draw_img.c ****                         bool ret;
 535:lvgl/src/draw/lv_draw_img.c ****                         ret = _lv_img_buf_transform(&trans_dsc, rot_x + x, rot_y + y);
 536:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 537:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = LV_OPA_TRANSP;
 538:lvgl/src/draw/lv_draw_img.c ****                             continue;
 539:lvgl/src/draw/lv_draw_img.c ****                         }
 540:lvgl/src/draw/lv_draw_img.c ****                         else {
 541:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = trans_dsc.res.opa;
 542:lvgl/src/draw/lv_draw_img.c ****                             c.full = trans_dsc.res.color.full;
 543:lvgl/src/draw/lv_draw_img.c ****                         }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 11


 544:lvgl/src/draw/lv_draw_img.c ****                     }
 545:lvgl/src/draw/lv_draw_img.c ****                     /*No transform*/
 546:lvgl/src/draw/lv_draw_img.c ****                     else
 547:lvgl/src/draw/lv_draw_img.c **** #endif
 548:lvgl/src/draw/lv_draw_img.c ****                     {
 549:lvgl/src/draw/lv_draw_img.c ****                         if(alpha_byte) {
 550:lvgl/src/draw/lv_draw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 551:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = px_opa;
 552:lvgl/src/draw/lv_draw_img.c ****                             if(px_opa == 0) {
 553:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 554:lvgl/src/draw/lv_draw_img.c ****                                 map2[px_i].full = 0;
 555:lvgl/src/draw/lv_draw_img.c **** #endif
 556:lvgl/src/draw/lv_draw_img.c ****                                 continue;
 557:lvgl/src/draw/lv_draw_img.c ****                             }
 558:lvgl/src/draw/lv_draw_img.c ****                         }
 559:lvgl/src/draw/lv_draw_img.c ****                         else {
 560:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = 0xFF;
 561:lvgl/src/draw/lv_draw_img.c ****                         }
 562:lvgl/src/draw/lv_draw_img.c **** 
 563:lvgl/src/draw/lv_draw_img.c **** #if LV_COLOR_DEPTH == 1
 564:lvgl/src/draw/lv_draw_img.c ****                         c.full = map_px[0];
 565:lvgl/src/draw/lv_draw_img.c **** #elif LV_COLOR_DEPTH == 8
 566:lvgl/src/draw/lv_draw_img.c ****                         c.full =  map_px[0];
 567:lvgl/src/draw/lv_draw_img.c **** #elif LV_COLOR_DEPTH == 16
 568:lvgl/src/draw/lv_draw_img.c ****                         c.full =  map_px[0] + (map_px[1] << 8);
 569:lvgl/src/draw/lv_draw_img.c **** #elif LV_COLOR_DEPTH == 32
 570:lvgl/src/draw/lv_draw_img.c ****                         c.full =  *((uint32_t *)map_px);
 571:lvgl/src/draw/lv_draw_img.c ****                         c.ch.alpha = 0xFF;
 572:lvgl/src/draw/lv_draw_img.c **** #endif
 573:lvgl/src/draw/lv_draw_img.c ****                         if(chroma_key) {
 574:lvgl/src/draw/lv_draw_img.c ****                             if(c.full == chroma_keyed_color.full) {
 575:lvgl/src/draw/lv_draw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 576:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 577:lvgl/src/draw/lv_draw_img.c ****                                 map2[px_i].full = 0;
 578:lvgl/src/draw/lv_draw_img.c **** #endif
 579:lvgl/src/draw/lv_draw_img.c ****                                 continue;
 580:lvgl/src/draw/lv_draw_img.c ****                             }
 581:lvgl/src/draw/lv_draw_img.c ****                         }
 582:lvgl/src/draw/lv_draw_img.c **** 
 583:lvgl/src/draw/lv_draw_img.c ****                     }
 584:lvgl/src/draw/lv_draw_img.c ****                     if(draw_dsc->recolor_opa != 0) {
 585:lvgl/src/draw/lv_draw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 586:lvgl/src/draw/lv_draw_img.c ****                     }
 587:lvgl/src/draw/lv_draw_img.c **** 
 588:lvgl/src/draw/lv_draw_img.c ****                     map2[px_i].full = c.full;
 589:lvgl/src/draw/lv_draw_img.c ****                 }
 590:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 591:lvgl/src/draw/lv_draw_img.c ****                 /*Apply the masks if any*/
 592:lvgl/src/draw/lv_draw_img.c ****                 if(other_mask_cnt) {
 593:lvgl/src/draw/lv_draw_img.c ****                     lv_draw_mask_res_t mask_res_sub;
 594:lvgl/src/draw/lv_draw_img.c ****                     mask_res_sub = lv_draw_mask_apply(mask_buf + px_i_start, draw_area.x1 + draw_bu
 595:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 596:lvgl/src/draw/lv_draw_img.c ****                     if(mask_res_sub == LV_DRAW_MASK_RES_TRANSP) {
 597:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_00(mask_buf + px_i_start, lv_area_get_width(&draw_area));
 598:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 599:lvgl/src/draw/lv_draw_img.c ****                     }
 600:lvgl/src/draw/lv_draw_img.c ****                     else if(mask_res_sub == LV_DRAW_MASK_RES_CHANGED) {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 12


 601:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 602:lvgl/src/draw/lv_draw_img.c ****                     }
 603:lvgl/src/draw/lv_draw_img.c ****                 }
 604:lvgl/src/draw/lv_draw_img.c **** #endif
 605:lvgl/src/draw/lv_draw_img.c **** 
 606:lvgl/src/draw/lv_draw_img.c ****                 map_buf_tmp += map_w * px_size_byte;
 607:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 608:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 609:lvgl/src/draw/lv_draw_img.c ****                 }
 610:lvgl/src/draw/lv_draw_img.c ****                 else {
 611:lvgl/src/draw/lv_draw_img.c **** 
 612:lvgl/src/draw/lv_draw_img.c ****                     _lv_blend_map(clip_area, &blend_area, map2, mask_buf, mask_res, draw_dsc->opa, 
 613:lvgl/src/draw/lv_draw_img.c **** 
 614:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y1 = blend_area.y2 + 1;
 615:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 616:lvgl/src/draw/lv_draw_img.c **** 
 617:lvgl/src/draw/lv_draw_img.c ****                     px_i = 0;
 618:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 619:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 620:lvgl/src/draw/lv_draw_img.c **** 
 621:lvgl/src/draw/lv_draw_img.c ****                     /*Prepare the `mask_buf`if there are other masks*/
 622:lvgl/src/draw/lv_draw_img.c ****                     if(other_mask_cnt) {
 623:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_ff(mask_buf, mask_buf_size);
 624:lvgl/src/draw/lv_draw_img.c ****                     }
 625:lvgl/src/draw/lv_draw_img.c ****                 }
 626:lvgl/src/draw/lv_draw_img.c ****             }
 627:lvgl/src/draw/lv_draw_img.c **** 
 628:lvgl/src/draw/lv_draw_img.c ****             /*Flush the last part*/
 629:lvgl/src/draw/lv_draw_img.c ****             if(blend_area.y1 != blend_area.y2) {
 630:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 631:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, mask_res, draw_dsc->opa, draw
 632:lvgl/src/draw/lv_draw_img.c ****             }
 633:lvgl/src/draw/lv_draw_img.c **** 
 634:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(mask_buf);
 635:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(map2);
 636:lvgl/src/draw/lv_draw_img.c ****         }
 637:lvgl/src/draw/lv_draw_img.c ****     }
 638:lvgl/src/draw/lv_draw_img.c **** }
 639:lvgl/src/draw/lv_draw_img.c **** 
 640:lvgl/src/draw/lv_draw_img.c **** static void show_error(const lv_area_t * coords, const lv_area_t * clip_area, const char * msg)
 641:lvgl/src/draw/lv_draw_img.c **** {
 642:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
 643:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
 644:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
 645:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(coords, clip_area, &rect_dsc);
 646:lvgl/src/draw/lv_draw_img.c **** 
 647:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_t label_dsc;
 648:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 649:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(coords, clip_area, &label_dsc, msg, NULL);
 650:lvgl/src/draw/lv_draw_img.c **** }
 651:lvgl/src/draw/lv_draw_img.c **** 
 652:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache)
 653:lvgl/src/draw/lv_draw_img.c **** {
  29              		.loc 1 653 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 13


  33              		.loc 1 653 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 654:lvgl/src/draw/lv_draw_img.c ****     /*Automatically close images with no caching*/
 655:lvgl/src/draw/lv_draw_img.c **** #if LV_IMG_CACHE_DEF_SIZE == 0
 656:lvgl/src/draw/lv_draw_img.c ****     lv_img_decoder_close(&cache->dec_dsc);
  39              		.loc 1 656 5 is_stmt 1 view .LVU2
  40 0002 FFF7FEFF 		bl	lv_img_decoder_close
  41              	.LVL1:
 657:lvgl/src/draw/lv_draw_img.c **** #else
 658:lvgl/src/draw/lv_draw_img.c ****     LV_UNUSED(cache);
 659:lvgl/src/draw/lv_draw_img.c **** #endif
 660:lvgl/src/draw/lv_draw_img.c **** }
  42              		.loc 1 660 1 is_stmt 0 view .LVU3
  43 0006 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
  45              	.LFE156:
  47              		.section	.text.lv_draw_map,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	lv_draw_map:
  55              	.LVL2:
  56              	.LFB154:
 340:lvgl/src/draw/lv_draw_img.c ****     /*Use the clip area as draw area*/
  57              		.loc 1 340 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 8, pretend = 0, frame = 192
  60              		@ frame_needed = 0, uses_anonymous_args = 0
 340:lvgl/src/draw/lv_draw_img.c ****     /*Use the clip area as draw area*/
  61              		.loc 1 340 1 is_stmt 0 view .LVU5
  62 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 36
  65              		.cfi_offset 4, -36
  66              		.cfi_offset 5, -32
  67              		.cfi_offset 6, -28
  68              		.cfi_offset 7, -24
  69              		.cfi_offset 8, -20
  70              		.cfi_offset 9, -16
  71              		.cfi_offset 10, -12
  72              		.cfi_offset 11, -8
  73              		.cfi_offset 14, -4
  74 0004 B5B0     		sub	sp, sp, #212
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 248
  77 0006 1190     		str	r0, [sp, #68]
  78 0008 1791     		str	r1, [sp, #92]
  79 000a 1546     		mov	r5, r2
  80 000c 1E46     		mov	r6, r3
  81 000e 0793     		str	r3, [sp, #28]
  82 0010 9DF8F800 		ldrb	r0, [sp, #248]	@ zero_extendqisi2
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 14


  83              	.LVL3:
 340:lvgl/src/draw/lv_draw_img.c ****     /*Use the clip area as draw area*/
  84              		.loc 1 340 1 view .LVU6
  85 0014 0B90     		str	r0, [sp, #44]
  86 0016 9DF8FC00 		ldrb	r0, [sp, #252]	@ zero_extendqisi2
  87 001a 0990     		str	r0, [sp, #36]
 342:lvgl/src/draw/lv_draw_img.c ****     lv_area_copy(&draw_area, clip_area);
  88              		.loc 1 342 5 is_stmt 1 view .LVU7
 343:lvgl/src/draw/lv_draw_img.c **** 
  89              		.loc 1 343 5 view .LVU8
  90              	.LVL4:
  91              	.LBB101:
  92              	.LBI101:
  93              		.file 2 "lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_area.h **** #include <string.h>
  18:lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
  19:lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/draw/../misc/lv_area.h **** 
  21:lvgl/src/draw/../misc/lv_area.h **** /*********************
  22:lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  23:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  24:lvgl/src/draw/../misc/lv_area.h **** 
  25:lvgl/src/draw/../misc/lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:lvgl/src/draw/../misc/lv_area.h **** 
  27:lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  28:lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  29:lvgl/src/draw/../misc/lv_area.h **** #else
  30:lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  31:lvgl/src/draw/../misc/lv_area.h **** #endif
  32:lvgl/src/draw/../misc/lv_area.h **** 
  33:lvgl/src/draw/../misc/lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:lvgl/src/draw/../misc/lv_area.h **** 
  37:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  39:lvgl/src/draw/../misc/lv_area.h **** 
  40:lvgl/src/draw/../misc/lv_area.h **** /**********************
  41:lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  42:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  43:lvgl/src/draw/../misc/lv_area.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 15


  44:lvgl/src/draw/../misc/lv_area.h **** /**
  45:lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  46:lvgl/src/draw/../misc/lv_area.h ****  */
  47:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  48:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  49:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  50:lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  51:lvgl/src/draw/../misc/lv_area.h **** 
  52:lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  53:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  54:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  55:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  56:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  57:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  58:lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  59:lvgl/src/draw/../misc/lv_area.h **** 
  60:lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  61:lvgl/src/draw/../misc/lv_area.h **** enum {
  62:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  65:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  72:lvgl/src/draw/../misc/lv_area.h **** 
  73:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  76:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  79:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:lvgl/src/draw/../misc/lv_area.h **** };
  86:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  87:lvgl/src/draw/../misc/lv_area.h **** 
  88:lvgl/src/draw/../misc/lv_area.h **** enum {
  89:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  96:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:lvgl/src/draw/../misc/lv_area.h **** };
  98:lvgl/src/draw/../misc/lv_area.h **** 
  99:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
 100:lvgl/src/draw/../misc/lv_area.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 16


 101:lvgl/src/draw/../misc/lv_area.h **** /**********************
 102:lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/draw/../misc/lv_area.h ****  **********************/
 104:lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
 107:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 108:lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
 109:lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 110:lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 111:lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 112:lvgl/src/draw/../misc/lv_area.h ****  */
 113:lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:lvgl/src/draw/../misc/lv_area.h **** 
 115:lvgl/src/draw/../misc/lv_area.h **** /**
 116:lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 117:lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 118:lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 119:lvgl/src/draw/../misc/lv_area.h ****  */
 120:lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  94              		.loc 2 120 20 view .LVU9
  95              	.LBB102:
 121:lvgl/src/draw/../misc/lv_area.h **** {
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
  96              		.loc 2 122 5 view .LVU10
  97              		.loc 2 122 19 is_stmt 0 view .LVU11
  98 001c B1F90030 		ldrsh	r3, [r1]
  99              	.LVL5:
 100              		.loc 2 122 14 view .LVU12
 101 0020 ADF8C830 		strh	r3, [sp, #200]	@ movhi
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 102              		.loc 2 123 5 is_stmt 1 view .LVU13
 103              		.loc 2 123 19 is_stmt 0 view .LVU14
 104 0024 B1F90230 		ldrsh	r3, [r1, #2]
 105              		.loc 2 123 14 view .LVU15
 106 0028 ADF8CA30 		strh	r3, [sp, #202]	@ movhi
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 107              		.loc 2 124 5 is_stmt 1 view .LVU16
 108              		.loc 2 124 19 is_stmt 0 view .LVU17
 109 002c B1F90430 		ldrsh	r3, [r1, #4]
 110              		.loc 2 124 14 view .LVU18
 111 0030 ADF8CC30 		strh	r3, [sp, #204]	@ movhi
 125:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 112              		.loc 2 125 5 is_stmt 1 view .LVU19
 113              		.loc 2 125 19 is_stmt 0 view .LVU20
 114 0034 B1F90630 		ldrsh	r3, [r1, #6]
 115              		.loc 2 125 14 view .LVU21
 116 0038 ADF8CE30 		strh	r3, [sp, #206]	@ movhi
 117              	.LVL6:
 118              		.loc 2 125 14 view .LVU22
 119              	.LBE102:
 120              	.LBE101:
 345:lvgl/src/draw/lv_draw_img.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 121              		.loc 1 345 5 is_stmt 1 view .LVU23
 345:lvgl/src/draw/lv_draw_img.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 122              		.loc 1 345 24 is_stmt 0 view .LVU24
 123 003c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 17


 124              	.LVL7:
 345:lvgl/src/draw/lv_draw_img.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 125              		.loc 1 345 24 view .LVU25
 126 0040 0446     		mov	r4, r0
 127              	.LVL8:
 346:lvgl/src/draw/lv_draw_img.c ****     const lv_area_t * disp_area = &draw_buf->area;
 128              		.loc 1 346 5 is_stmt 1 view .LVU26
 346:lvgl/src/draw/lv_draw_img.c ****     const lv_area_t * disp_area = &draw_buf->area;
 129              		.loc 1 346 37 is_stmt 0 view .LVU27
 130 0042 FFF7FEFF 		bl	lv_disp_get_draw_buf
 131              	.LVL9:
 346:lvgl/src/draw/lv_draw_img.c ****     const lv_area_t * disp_area = &draw_buf->area;
 132              		.loc 1 346 37 view .LVU28
 133 0046 0F90     		str	r0, [sp, #60]
 134              	.LVL10:
 347:lvgl/src/draw/lv_draw_img.c **** 
 135              		.loc 1 347 5 is_stmt 1 view .LVU29
 351:lvgl/src/draw/lv_draw_img.c ****     draw_area.y1 -= disp_area->y1;
 136              		.loc 1 351 5 view .LVU30
 351:lvgl/src/draw/lv_draw_img.c ****     draw_area.y1 -= disp_area->y1;
 137              		.loc 1 351 30 is_stmt 0 view .LVU31
 138 0048 018A     		ldrh	r1, [r0, #16]
 351:lvgl/src/draw/lv_draw_img.c ****     draw_area.y1 -= disp_area->y1;
 139              		.loc 1 351 18 view .LVU32
 140 004a BDF8C830 		ldrh	r3, [sp, #200]
 141 004e 5B1A     		subs	r3, r3, r1
 142 0050 ADF8C830 		strh	r3, [sp, #200]	@ movhi
 352:lvgl/src/draw/lv_draw_img.c ****     draw_area.x2 -= disp_area->x1;
 143              		.loc 1 352 5 is_stmt 1 view .LVU33
 352:lvgl/src/draw/lv_draw_img.c ****     draw_area.x2 -= disp_area->x1;
 144              		.loc 1 352 30 is_stmt 0 view .LVU34
 145 0054 428A     		ldrh	r2, [r0, #18]
 352:lvgl/src/draw/lv_draw_img.c ****     draw_area.x2 -= disp_area->x1;
 146              		.loc 1 352 18 view .LVU35
 147 0056 BDF8CA30 		ldrh	r3, [sp, #202]
 148 005a 9B1A     		subs	r3, r3, r2
 149 005c ADF8CA30 		strh	r3, [sp, #202]	@ movhi
 353:lvgl/src/draw/lv_draw_img.c ****     draw_area.y2 -= disp_area->y1;
 150              		.loc 1 353 5 is_stmt 1 view .LVU36
 353:lvgl/src/draw/lv_draw_img.c ****     draw_area.y2 -= disp_area->y1;
 151              		.loc 1 353 18 is_stmt 0 view .LVU37
 152 0060 BDF8CC30 		ldrh	r3, [sp, #204]
 153 0064 5B1A     		subs	r3, r3, r1
 154 0066 ADF8CC30 		strh	r3, [sp, #204]	@ movhi
 354:lvgl/src/draw/lv_draw_img.c **** 
 155              		.loc 1 354 5 is_stmt 1 view .LVU38
 354:lvgl/src/draw/lv_draw_img.c **** 
 156              		.loc 1 354 18 is_stmt 0 view .LVU39
 157 006a BDF8CE30 		ldrh	r3, [sp, #206]
 158 006e 9B1A     		subs	r3, r3, r2
 159 0070 ADF8CE30 		strh	r3, [sp, #206]	@ movhi
 356:lvgl/src/draw/lv_draw_img.c **** 
 160              		.loc 1 356 5 is_stmt 1 view .LVU40
 356:lvgl/src/draw/lv_draw_img.c **** 
 161              		.loc 1 356 30 is_stmt 0 view .LVU41
 162 0074 FFF7FEFF 		bl	lv_draw_mask_get_cnt
 163              	.LVL11:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 18


 359:lvgl/src/draw/lv_draw_img.c ****        chroma_key == false && alpha_byte == false && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 164              		.loc 1 359 5 is_stmt 1 view .LVU42
 359:lvgl/src/draw/lv_draw_img.c ****        chroma_key == false && alpha_byte == false && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 165              		.loc 1 359 7 is_stmt 0 view .LVU43
 166 0078 1090     		str	r0, [sp, #64]
 167 007a 18B9     		cbnz	r0, .L4
 359:lvgl/src/draw/lv_draw_img.c ****        chroma_key == false && alpha_byte == false && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 168              		.loc 1 359 52 discriminator 1 view .LVU44
 169 007c 3368     		ldr	r3, [r6]
 170 007e B3F1807F 		cmp	r3, #16777216
 171 0082 7FD0     		beq	.L51
 172              	.L4:
 173              	.LBB103:
 386:lvgl/src/draw/lv_draw_img.c **** 
 174              		.loc 1 386 9 is_stmt 1 view .LVU45
 175              	.LVL12:
 389:lvgl/src/draw/lv_draw_img.c ****         const uint8_t * map_buf_tmp = map_p;
 176              		.loc 1 389 9 view .LVU46
 177              	.LBB104:
 178              	.LBI104:
 126:lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 130:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:lvgl/src/draw/../misc/lv_area.h ****  */
 133:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 179              		.loc 2 133 26 view .LVU47
 180              	.LBB105:
 134:lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 181              		.loc 2 135 5 view .LVU48
 182              		.loc 2 135 31 is_stmt 0 view .LVU49
 183 0084 1198     		ldr	r0, [sp, #68]
 184              	.LVL13:
 185              		.loc 2 135 31 view .LVU50
 186 0086 8288     		ldrh	r2, [r0, #4]
 187              		.loc 2 135 44 view .LVU51
 188 0088 B0F90030 		ldrsh	r3, [r0]
 189 008c 99B2     		uxth	r1, r3
 190              		.loc 2 135 36 view .LVU52
 191 008e 521A     		subs	r2, r2, r1
 192 0090 92B2     		uxth	r2, r2
 193              		.loc 2 135 49 view .LVU53
 194 0092 0132     		adds	r2, r2, #1
 195              		.loc 2 135 12 view .LVU54
 196 0094 16B2     		sxth	r6, r2
 197              	.LVL14:
 198              		.loc 2 135 12 view .LVU55
 199 0096 1596     		str	r6, [sp, #84]
 200              	.LVL15:
 201              		.loc 2 135 12 view .LVU56
 202              	.LBE105:
 203              	.LBE104:
 390:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += map_w * (draw_area.y1 - (map_area->y1 - disp_area->y1)) * px_size_byte;
 204              		.loc 1 390 9 is_stmt 1 view .LVU57
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 19


 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 205              		.loc 1 391 9 view .LVU58
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 206              		.loc 1 391 42 is_stmt 0 view .LVU59
 207 0098 BDF9CA10 		ldrsh	r1, [sp, #202]
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 208              		.loc 1 391 57 view .LVU60
 209 009c B0F902C0 		ldrsh	ip, [r0, #2]
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 210              		.loc 1 391 73 view .LVU61
 211 00a0 0F9A     		ldr	r2, [sp, #60]
 212 00a2 B2F91220 		ldrsh	r2, [r2, #18]
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 213              		.loc 1 391 62 view .LVU62
 214 00a6 ACEB020C 		sub	ip, ip, r2
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 215              		.loc 1 391 46 view .LVU63
 216 00aa A1EB0C0C 		sub	ip, r1, ip
 391:lvgl/src/draw/lv_draw_img.c ****         map_buf_tmp += (draw_area.x1 - (map_area->x1 - disp_area->x1)) * px_size_byte;
 217              		.loc 1 391 30 view .LVU64
 218 00ae 06FB0CFC 		mul	ip, r6, ip
 219              	.LVL16:
 392:lvgl/src/draw/lv_draw_img.c **** 
 220              		.loc 1 392 9 is_stmt 1 view .LVU65
 392:lvgl/src/draw/lv_draw_img.c **** 
 221              		.loc 1 392 34 is_stmt 0 view .LVU66
 222 00b2 BDF9C800 		ldrsh	r0, [sp, #200]
 392:lvgl/src/draw/lv_draw_img.c **** 
 223              		.loc 1 392 65 view .LVU67
 224 00b6 0F9E     		ldr	r6, [sp, #60]
 225              	.LVL17:
 392:lvgl/src/draw/lv_draw_img.c **** 
 226              		.loc 1 392 65 view .LVU68
 227 00b8 B6F91060 		ldrsh	r6, [r6, #16]
 392:lvgl/src/draw/lv_draw_img.c **** 
 228              		.loc 1 392 54 view .LVU69
 229 00bc 9B1B     		subs	r3, r3, r6
 392:lvgl/src/draw/lv_draw_img.c **** 
 230              		.loc 1 392 38 view .LVU70
 231 00be C31A     		subs	r3, r0, r3
 392:lvgl/src/draw/lv_draw_img.c **** 
 232              		.loc 1 392 72 view .LVU71
 233 00c0 9B00     		lsls	r3, r3, #2
 392:lvgl/src/draw/lv_draw_img.c **** 
 234              		.loc 1 392 21 view .LVU72
 235 00c2 03EB8C03 		add	r3, r3, ip, lsl #2
 236 00c6 EB18     		adds	r3, r5, r3
 237 00c8 0C93     		str	r3, [sp, #48]
 238              	.LVL18:
 394:lvgl/src/draw/lv_draw_img.c ****         lv_color_t chroma_keyed_color = LV_COLOR_CHROMA_KEY;
 239              		.loc 1 394 9 is_stmt 1 view .LVU73
 395:lvgl/src/draw/lv_draw_img.c ****         uint32_t px_i = 0;
 240              		.loc 1 395 9 view .LVU74
 241              	.LBB106:
 242              	.LBI106:
 243              		.file 3 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 20


   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/src/draw/../misc/lv_color.h **** enum {
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/src/draw/../misc/lv_color.h **** 
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 21


  59:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/src/draw/../misc/lv_color.h **** #endif
 100:lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/src/draw/../misc/lv_color.h **** #else
 115:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 22


 116:lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/src/draw/../misc/lv_color.h **** 
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 23


 173:lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/../misc/lv_color.h ****     struct {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 24


 230:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 25


 287:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/src/draw/../misc/lv_color.h ****     else {
 328:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/src/draw/../misc/lv_color.h ****     }
 330:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 343:lvgl/src/draw/../misc/lv_color.h ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 26


 344:lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/src/draw/../misc/lv_color.h ****     else
 353:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/src/draw/../misc/lv_color.h ****     else
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 27


 401:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 28


 458:lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 462:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 463:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 464:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 465:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 467:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 468:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 469:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 470:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 471:lvgl/src/draw/../misc/lv_color.h **** #else
 472:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 473:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 474:lvgl/src/draw/../misc/lv_color.h **** #endif
 475:lvgl/src/draw/../misc/lv_color.h **** 
 476:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 477:lvgl/src/draw/../misc/lv_color.h **** }
 478:lvgl/src/draw/../misc/lv_color.h **** 
 479:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 480:lvgl/src/draw/../misc/lv_color.h **** {
 481:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 482:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 483:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 484:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 485:lvgl/src/draw/../misc/lv_color.h **** #else
 486:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 487:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 488:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 489:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 490:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 491:lvgl/src/draw/../misc/lv_color.h **** #endif
 492:lvgl/src/draw/../misc/lv_color.h **** 
 493:lvgl/src/draw/../misc/lv_color.h **** }
 494:lvgl/src/draw/../misc/lv_color.h **** 
 495:lvgl/src/draw/../misc/lv_color.h **** /**
 496:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 500:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 502:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl/src/draw/../misc/lv_color.h ****  */
 504:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl/src/draw/../misc/lv_color.h **** {
 506:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 507:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 513:lvgl/src/draw/../misc/lv_color.h **** #else
 514:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 29


 515:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 516:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 517:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 519:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 521:lvgl/src/draw/../misc/lv_color.h **** #endif
 522:lvgl/src/draw/../misc/lv_color.h **** 
 523:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 524:lvgl/src/draw/../misc/lv_color.h **** }
 525:lvgl/src/draw/../misc/lv_color.h **** 
 526:lvgl/src/draw/../misc/lv_color.h **** /**
 527:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 529:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 530:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 531:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 532:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 533:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 534:lvgl/src/draw/../misc/lv_color.h ****  */
 535:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 536:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 537:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 538:lvgl/src/draw/../misc/lv_color.h **** {
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 540:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 546:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 551:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 552:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 553:lvgl/src/draw/../misc/lv_color.h ****     }
 554:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 555:lvgl/src/draw/../misc/lv_color.h ****     else {
 556:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 558:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 559:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 560:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 563:lvgl/src/draw/../misc/lv_color.h **** 
 564:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 565:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 566:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 567:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 568:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 569:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 570:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 571:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 30


 572:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 573:lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 574:lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 575:lvgl/src/draw/../misc/lv_color.h ****                     ;
 576:lvgl/src/draw/../misc/lv_color.h ****             }
 577:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 578:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 579:lvgl/src/draw/../misc/lv_color.h **** 
 580:lvgl/src/draw/../misc/lv_color.h ****         }
 581:lvgl/src/draw/../misc/lv_color.h **** 
 582:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 583:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 584:lvgl/src/draw/../misc/lv_color.h ****     }
 585:lvgl/src/draw/../misc/lv_color.h **** }
 586:lvgl/src/draw/../misc/lv_color.h **** 
 587:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 588:lvgl/src/draw/../misc/lv_color.h **** 
 589:lvgl/src/draw/../misc/lv_color.h **** /**
 590:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 591:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 592:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 593:lvgl/src/draw/../misc/lv_color.h ****  */
 594:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 597:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 598:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 599:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 600:lvgl/src/draw/../misc/lv_color.h **** }
 601:lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 603:lvgl/src/draw/../misc/lv_color.h **** {
 604:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 605:lvgl/src/draw/../misc/lv_color.h **** }
 606:lvgl/src/draw/../misc/lv_color.h **** 
 607:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 244              		.loc 3 607 26 view .LVU75
 245              	.LBE106:
 246              	.LBE103:
 608:lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 247              		.loc 3 609 5 view .LVU76
 248              	.LBB146:
 249              	.LBB109:
 250              	.LBB107:
 251              	.LBI107:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 252              		.loc 3 602 26 view .LVU77
 253              	.LBB108:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 254              		.loc 3 604 5 view .LVU78
 604:lvgl/src/draw/../misc/lv_color.h **** }
 255              		.loc 3 604 12 is_stmt 0 view .LVU79
 256 00ca 0023     		movs	r3, #0
 257              	.LVL19:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 258              		.loc 3 604 12 view .LVU80
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 31


 259 00cc 6FF30703 		bfc	r3, #0, #8
 260 00d0 43F47F43 		orr	r3, r3, #65280
 261 00d4 6FF31743 		bfc	r3, #16, #8
 262              	.LVL20:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 263              		.loc 3 604 12 view .LVU81
 264 00d8 43F07F43 		orr	r3, r3, #-16777216
 265              	.LVL21:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 266              		.loc 3 604 12 view .LVU82
 267 00dc 0E93     		str	r3, [sp, #56]
 268              	.LVL22:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 269              		.loc 3 604 12 view .LVU83
 270              	.LBE108:
 271              	.LBE107:
 272              	.LBE109:
 396:lvgl/src/draw/lv_draw_img.c **** 
 273              		.loc 1 396 9 is_stmt 1 view .LVU84
 398:lvgl/src/draw/lv_draw_img.c **** 
 274              		.loc 1 398 9 view .LVU85
 400:lvgl/src/draw/lv_draw_img.c ****         blend_area.x1 = draw_area.x1 + disp_area->x1;
 275              		.loc 1 400 9 view .LVU86
 401:lvgl/src/draw/lv_draw_img.c ****         blend_area.x2 = blend_area.x1 + lv_area_get_width(&draw_area) - 1;
 276              		.loc 1 401 9 view .LVU87
 401:lvgl/src/draw/lv_draw_img.c ****         blend_area.x2 = blend_area.x1 + lv_area_get_width(&draw_area) - 1;
 277              		.loc 1 401 34 is_stmt 0 view .LVU88
 278 00de 1FFA80FC 		uxth	ip, r0
 401:lvgl/src/draw/lv_draw_img.c ****         blend_area.x2 = blend_area.x1 + lv_area_get_width(&draw_area) - 1;
 279              		.loc 1 401 38 view .LVU89
 280 00e2 1CFA86F6 		uxtah	r6, ip, r6
 281 00e6 B0B2     		uxth	r0, r6
 401:lvgl/src/draw/lv_draw_img.c ****         blend_area.x2 = blend_area.x1 + lv_area_get_width(&draw_area) - 1;
 282              		.loc 1 401 23 view .LVU90
 283 00e8 ADF86C60 		strh	r6, [sp, #108]	@ movhi
 402:lvgl/src/draw/lv_draw_img.c ****         blend_area.y1 = disp_area->y1 + draw_area.y1;
 284              		.loc 1 402 9 is_stmt 1 view .LVU91
 285              	.LVL23:
 286              	.LBB110:
 287              	.LBI110:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 288              		.loc 2 133 26 view .LVU92
 289              	.LBB111:
 290              		.loc 2 135 5 view .LVU93
 291              		.loc 2 135 31 is_stmt 0 view .LVU94
 292 00ec BDF8CC30 		ldrh	r3, [sp, #204]
 293              	.LVL24:
 294              		.loc 2 135 36 view .LVU95
 295 00f0 A3EB0C03 		sub	r3, r3, ip
 296 00f4 9BB2     		uxth	r3, r3
 297              		.loc 2 135 49 view .LVU96
 298 00f6 0133     		adds	r3, r3, #1
 299              		.loc 2 135 12 view .LVU97
 300 00f8 0FFA83FB 		sxth	fp, r3
 301              	.LVL25:
 302              		.loc 2 135 12 view .LVU98
 303              	.LBE111:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 32


 304              	.LBE110:
 402:lvgl/src/draw/lv_draw_img.c ****         blend_area.y1 = disp_area->y1 + draw_area.y1;
 305              		.loc 1 402 39 view .LVU99
 306 00fc 10FA83F3 		uxtah	r3, r0, r3
 307 0100 9BB2     		uxth	r3, r3
 402:lvgl/src/draw/lv_draw_img.c ****         blend_area.y1 = disp_area->y1 + draw_area.y1;
 308              		.loc 1 402 71 view .LVU100
 309 0102 013B     		subs	r3, r3, #1
 402:lvgl/src/draw/lv_draw_img.c ****         blend_area.y1 = disp_area->y1 + draw_area.y1;
 310              		.loc 1 402 23 view .LVU101
 311 0104 ADF87030 		strh	r3, [sp, #112]	@ movhi
 403:lvgl/src/draw/lv_draw_img.c ****         blend_area.y2 = blend_area.y1;
 312              		.loc 1 403 9 is_stmt 1 view .LVU102
 403:lvgl/src/draw/lv_draw_img.c ****         blend_area.y2 = blend_area.y1;
 313              		.loc 1 403 50 is_stmt 0 view .LVU103
 314 0108 89B2     		uxth	r1, r1
 403:lvgl/src/draw/lv_draw_img.c ****         blend_area.y2 = blend_area.y1;
 315              		.loc 1 403 39 view .LVU104
 316 010a 11FA82F3 		uxtah	r3, r1, r2
 317 010e 1BB2     		sxth	r3, r3
 403:lvgl/src/draw/lv_draw_img.c ****         blend_area.y2 = blend_area.y1;
 318              		.loc 1 403 23 view .LVU105
 319 0110 ADF86E30 		strh	r3, [sp, #110]	@ movhi
 404:lvgl/src/draw/lv_draw_img.c **** 
 320              		.loc 1 404 9 is_stmt 1 view .LVU106
 404:lvgl/src/draw/lv_draw_img.c **** 
 321              		.loc 1 404 23 is_stmt 0 view .LVU107
 322 0114 ADF87230 		strh	r3, [sp, #114]	@ movhi
 406:lvgl/src/draw/lv_draw_img.c ****         lv_coord_t draw_area_w = lv_area_get_width(&draw_area);
 323              		.loc 1 406 9 is_stmt 1 view .LVU108
 324              	.LVL26:
 325              	.LBB112:
 326              	.LBI112:
 136:lvgl/src/draw/../misc/lv_area.h **** }
 137:lvgl/src/draw/../misc/lv_area.h **** 
 138:lvgl/src/draw/../misc/lv_area.h **** /**
 139:lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 140:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 141:lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:lvgl/src/draw/../misc/lv_area.h ****  */
 143:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 327              		.loc 2 143 26 view .LVU109
 328              	.LBB113:
 144:lvgl/src/draw/../misc/lv_area.h **** {
 145:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 329              		.loc 2 145 5 view .LVU110
 330              		.loc 2 145 31 is_stmt 0 view .LVU111
 331 0118 BDF8CE30 		ldrh	r3, [sp, #206]
 332              		.loc 2 145 36 view .LVU112
 333 011c 5B1A     		subs	r3, r3, r1
 334 011e 9BB2     		uxth	r3, r3
 335              		.loc 2 145 49 view .LVU113
 336 0120 0133     		adds	r3, r3, #1
 337              		.loc 2 145 12 view .LVU114
 338 0122 1BB2     		sxth	r3, r3
 339 0124 1393     		str	r3, [sp, #76]
 340              	.LVL27:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 33


 341              		.loc 2 145 12 view .LVU115
 342              	.LBE113:
 343              	.LBE112:
 407:lvgl/src/draw/lv_draw_img.c **** 
 344              		.loc 1 407 9 is_stmt 1 view .LVU116
 407:lvgl/src/draw/lv_draw_img.c **** 
 345              		.loc 1 407 9 is_stmt 0 view .LVU117
 346              	.LBE146:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 347              		.loc 2 135 5 is_stmt 1 view .LVU118
 348              	.LBB147:
 409:lvgl/src/draw/lv_draw_img.c ****         /*Simple ARGB image. Handle it as special case because it's very common*/
 349              		.loc 1 409 9 view .LVU119
 409:lvgl/src/draw/lv_draw_img.c ****         /*Simple ARGB image. Handle it as special case because it's very common*/
 350              		.loc 1 409 47 is_stmt 0 view .LVU120
 351 0126 079B     		ldr	r3, [sp, #28]
 352 0128 1B68     		ldr	r3, [r3]
 353 012a 1493     		str	r3, [sp, #80]
 354              	.LVL28:
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 355              		.loc 1 411 9 is_stmt 1 view .LVU121
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 356              		.loc 1 411 11 is_stmt 0 view .LVU122
 357 012c 109A     		ldr	r2, [sp, #64]
 358 012e 12B9     		cbnz	r2, .L6
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 359              		.loc 1 411 32 discriminator 1 view .LVU123
 360 0130 B3F1807F 		cmp	r3, #16777216
 361 0134 43D0     		beq	.L52
 362              	.LVL29:
 363              	.L6:
 364              	.LBB114:
 474:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 365              		.loc 1 474 13 is_stmt 1 view .LVU124
 474:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 366              		.loc 1 474 43 is_stmt 0 view .LVU125
 367 0136 2046     		mov	r0, r4
 368 0138 FFF7FEFF 		bl	lv_disp_get_hor_res
 369              	.LVL30:
 474:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 370              		.loc 1 474 43 view .LVU126
 371 013c 0446     		mov	r4, r0
 372              	.LVL31:
 474:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 373              		.loc 1 474 22 view .LVU127
 374 013e 1290     		str	r0, [sp, #72]
 375              	.LVL32:
 475:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 376              		.loc 1 475 13 is_stmt 1 view .LVU128
 475:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 377              		.loc 1 475 38 is_stmt 0 view .LVU129
 378 0140 32A8     		add	r0, sp, #200
 379              	.LVL33:
 475:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 380              		.loc 1 475 38 view .LVU130
 381 0142 FFF7FEFF 		bl	lv_area_get_size
 382              	.LVL34:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 34


 475:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 383              		.loc 1 475 87 view .LVU131
 384 0146 A042     		cmp	r0, r4
 385 0148 40F2C980 		bls	.L53
 386              	.L16:
 387              	.LVL35:
 476:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 388              		.loc 1 476 13 is_stmt 1 discriminator 4 view .LVU132
 476:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 389              		.loc 1 476 33 is_stmt 0 discriminator 4 view .LVU133
 390 014c 129C     		ldr	r4, [sp, #72]
 391              	.LVL36:
 476:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 392              		.loc 1 476 33 discriminator 4 view .LVU134
 393 014e A000     		lsls	r0, r4, #2
 394 0150 FFF7FEFF 		bl	lv_mem_buf_get
 395              	.LVL37:
 396 0154 0690     		str	r0, [sp, #24]
 397              	.LVL38:
 477:lvgl/src/draw/lv_draw_img.c **** 
 398              		.loc 1 477 13 is_stmt 1 discriminator 4 view .LVU135
 477:lvgl/src/draw/lv_draw_img.c **** 
 399              		.loc 1 477 35 is_stmt 0 discriminator 4 view .LVU136
 400 0156 2046     		mov	r0, r4
 401              	.LVL39:
 477:lvgl/src/draw/lv_draw_img.c **** 
 402              		.loc 1 477 35 discriminator 4 view .LVU137
 403 0158 FFF7FEFF 		bl	lv_mem_buf_get
 404              	.LVL40:
 405 015c 8046     		mov	r8, r0
 406              	.LVL41:
 480:lvgl/src/draw/lv_draw_img.c ****             lv_memset_00(&trans_dsc, sizeof(lv_img_transform_dsc_t));
 407              		.loc 1 480 13 is_stmt 1 discriminator 4 view .LVU138
 481:lvgl/src/draw/lv_draw_img.c ****             if(transform) {
 408              		.loc 1 481 13 discriminator 4 view .LVU139
 409 015e 5421     		movs	r1, #84
 410 0160 1DA8     		add	r0, sp, #116
 411              	.LVL42:
 481:lvgl/src/draw/lv_draw_img.c ****             if(transform) {
 412              		.loc 1 481 13 is_stmt 0 discriminator 4 view .LVU140
 413 0162 FFF7FEFF 		bl	lv_memset_00
 414              	.LVL43:
 482:lvgl/src/draw/lv_draw_img.c ****                 lv_img_cf_t cf = LV_IMG_CF_TRUE_COLOR;
 415              		.loc 1 482 13 is_stmt 1 discriminator 4 view .LVU141
 482:lvgl/src/draw/lv_draw_img.c ****                 lv_img_cf_t cf = LV_IMG_CF_TRUE_COLOR;
 416              		.loc 1 482 15 is_stmt 0 discriminator 4 view .LVU142
 417 0166 149B     		ldr	r3, [sp, #80]
 418 0168 B3F1807F 		cmp	r3, #16777216
 419 016c 00F0E580 		beq	.L17
 420              	.LBB115:
 483:lvgl/src/draw/lv_draw_img.c ****                 if(alpha_byte) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 421              		.loc 1 483 17 is_stmt 1 view .LVU143
 422              	.LVL44:
 484:lvgl/src/draw/lv_draw_img.c ****                 else if(chroma_key) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 423              		.loc 1 484 17 view .LVU144
 484:lvgl/src/draw/lv_draw_img.c ****                 else if(chroma_key) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 424              		.loc 1 484 19 is_stmt 0 view .LVU145
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 35


 425 0170 099B     		ldr	r3, [sp, #36]
 426 0172 002B     		cmp	r3, #0
 427 0174 40F0B880 		bne	.L40
 485:lvgl/src/draw/lv_draw_img.c **** 
 428              		.loc 1 485 22 is_stmt 1 view .LVU146
 485:lvgl/src/draw/lv_draw_img.c **** 
 429              		.loc 1 485 24 is_stmt 0 view .LVU147
 430 0178 0B9B     		ldr	r3, [sp, #44]
 431 017a 002B     		cmp	r3, #0
 432 017c 40F00681 		bne	.L41
 483:lvgl/src/draw/lv_draw_img.c ****                 if(alpha_byte) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 433              		.loc 1 483 29 view .LVU148
 434 0180 0421     		movs	r1, #4
 435 0182 B2E0     		b	.L18
 436              	.LVL45:
 437              	.L51:
 483:lvgl/src/draw/lv_draw_img.c ****                 if(alpha_byte) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 438              		.loc 1 483 29 view .LVU149
 439              	.LBE115:
 440              	.LBE114:
 441              	.LBE147:
 359:lvgl/src/draw/lv_draw_img.c ****        chroma_key == false && alpha_byte == false && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 442              		.loc 1 359 90 discriminator 2 view .LVU150
 443 0184 0B9B     		ldr	r3, [sp, #44]
 444 0186 002B     		cmp	r3, #0
 445 0188 7FF47CAF 		bne	.L4
 360:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 446              		.loc 1 360 28 view .LVU151
 447 018c 099B     		ldr	r3, [sp, #36]
 448 018e 002B     		cmp	r3, #0
 449 0190 7FF478AF 		bne	.L4
 360:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 450              		.loc 1 360 62 discriminator 1 view .LVU152
 451 0194 079B     		ldr	r3, [sp, #28]
 452 0196 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 360:lvgl/src/draw/lv_draw_img.c ****         _lv_blend_map(clip_area, map_area, (lv_color_t *)map_p, NULL, LV_DRAW_MASK_RES_FULL_COVER, 
 453              		.loc 1 360 51 discriminator 1 view .LVU153
 454 0198 002B     		cmp	r3, #0
 455 019a 7FF473AF 		bne	.L4
 361:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 456              		.loc 1 361 9 is_stmt 1 view .LVU154
 362:lvgl/src/draw/lv_draw_img.c ****     }
 457              		.loc 1 362 31 is_stmt 0 view .LVU155
 458 019e 079A     		ldr	r2, [sp, #28]
 459 01a0 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 460 01a2 03F00F03 		and	r3, r3, #15
 361:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 461              		.loc 1 361 9 view .LVU156
 462 01a6 0293     		str	r3, [sp, #8]
 463 01a8 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 464 01aa 0193     		str	r3, [sp, #4]
 465 01ac 0123     		movs	r3, #1
 466 01ae 0093     		str	r3, [sp]
 467 01b0 0023     		movs	r3, #0
 468 01b2 2A46     		mov	r2, r5
 469 01b4 1199     		ldr	r1, [sp, #68]
 470 01b6 1798     		ldr	r0, [sp, #92]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 36


 471              	.LVL46:
 361:lvgl/src/draw/lv_draw_img.c ****                       draw_dsc->blend_mode);
 472              		.loc 1 361 9 view .LVU157
 473 01b8 FFF7FEFF 		bl	_lv_blend_map
 474              	.LVL47:
 475 01bc 14E2     		b	.L3
 476              	.LVL48:
 477              	.L52:
 478              	.LBB148:
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 479              		.loc 1 411 46 discriminator 2 view .LVU158
 480 01be 0B9B     		ldr	r3, [sp, #44]
 481              	.LVL49:
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 482              		.loc 1 411 46 discriminator 2 view .LVU159
 483 01c0 002B     		cmp	r3, #0
 484 01c2 B8D1     		bne	.L6
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 485              		.loc 1 411 72 discriminator 3 view .LVU160
 486 01c4 079B     		ldr	r3, [sp, #28]
 487 01c6 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 488              		.loc 1 411 61 discriminator 3 view .LVU161
 489 01c8 002B     		cmp	r3, #0
 490 01ca B4D1     		bne	.L6
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 491              		.loc 1 411 103 discriminator 4 view .LVU162
 492 01cc 099B     		ldr	r3, [sp, #36]
 493 01ce 002B     		cmp	r3, #0
 494 01d0 B1D0     		beq	.L6
 495              	.LBB136:
 423:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 496              		.loc 1 423 13 is_stmt 1 view .LVU163
 423:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 497              		.loc 1 423 43 is_stmt 0 view .LVU164
 498 01d2 2046     		mov	r0, r4
 499 01d4 FFF7FEFF 		bl	lv_disp_get_hor_res
 500              	.LVL50:
 423:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 501              		.loc 1 423 43 view .LVU165
 502 01d8 0446     		mov	r4, r0
 503              	.LVL51:
 423:lvgl/src/draw/lv_draw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 504              		.loc 1 423 22 view .LVU166
 505 01da 0746     		mov	r7, r0
 506              	.LVL52:
 424:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 507              		.loc 1 424 13 is_stmt 1 view .LVU167
 424:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 508              		.loc 1 424 38 is_stmt 0 view .LVU168
 509 01dc 32A8     		add	r0, sp, #200
 510              	.LVL53:
 424:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 511              		.loc 1 424 38 view .LVU169
 512 01de FFF7FEFF 		bl	lv_area_get_size
 513              	.LVL54:
 424:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 37


 514              		.loc 1 424 98 view .LVU170
 515 01e2 A042     		cmp	r0, r4
 516 01e4 10D9     		bls	.L54
 517              	.L7:
 518              	.LVL55:
 425:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 519              		.loc 1 425 13 is_stmt 1 discriminator 4 view .LVU171
 425:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 520              		.loc 1 425 33 is_stmt 0 discriminator 4 view .LVU172
 521 01e6 B800     		lsls	r0, r7, #2
 522 01e8 FFF7FEFF 		bl	lv_mem_buf_get
 523              	.LVL56:
 524 01ec 0446     		mov	r4, r0
 525              	.LVL57:
 426:lvgl/src/draw/lv_draw_img.c **** 
 526              		.loc 1 426 13 is_stmt 1 discriminator 4 view .LVU173
 426:lvgl/src/draw/lv_draw_img.c **** 
 527              		.loc 1 426 35 is_stmt 0 discriminator 4 view .LVU174
 528 01ee 3846     		mov	r0, r7
 529              	.LVL58:
 426:lvgl/src/draw/lv_draw_img.c **** 
 530              		.loc 1 426 35 discriminator 4 view .LVU175
 531 01f0 FFF7FEFF 		bl	lv_mem_buf_get
 532              	.LVL59:
 533 01f4 0546     		mov	r5, r0
 534              	.LVL60:
 428:lvgl/src/draw/lv_draw_img.c ****             int32_t y;
 535              		.loc 1 428 13 is_stmt 1 discriminator 4 view .LVU176
 429:lvgl/src/draw/lv_draw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 536              		.loc 1 429 13 discriminator 4 view .LVU177
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 537              		.loc 1 430 13 discriminator 4 view .LVU178
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 538              		.loc 1 430 19 is_stmt 0 discriminator 4 view .LVU179
 539 01f6 0026     		movs	r6, #0
 540              	.LBE136:
 396:lvgl/src/draw/lv_draw_img.c **** 
 541              		.loc 1 396 18 discriminator 4 view .LVU180
 542 01f8 3346     		mov	r3, r6
 543 01fa DDF83080 		ldr	r8, [sp, #48]
 544 01fe DDF85490 		ldr	r9, [sp, #84]
 545 0202 DDF81CA0 		ldr	r10, [sp, #28]
 546              	.LBB141:
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 547              		.loc 1 430 13 discriminator 4 view .LVU181
 548 0206 2AE0     		b	.L8
 549              	.LVL61:
 550              	.L54:
 424:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 551              		.loc 1 424 100 discriminator 1 view .LVU182
 552 0208 32A8     		add	r0, sp, #200
 553 020a FFF7FEFF 		bl	lv_area_get_size
 554              	.LVL62:
 555 020e 0746     		mov	r7, r0
 556 0210 E9E7     		b	.L7
 557              	.LVL63:
 558              	.L9:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 38


 559              	.LBB137:
 445:lvgl/src/draw/lv_draw_img.c **** #endif
 560              		.loc 1 445 21 is_stmt 1 discriminator 2 view .LVU183
 445:lvgl/src/draw/lv_draw_img.c **** #endif
 561              		.loc 1 445 25 is_stmt 0 discriminator 2 view .LVU184
 562 0212 04EB8300 		add	r0, r4, r3, lsl #2
 445:lvgl/src/draw/lv_draw_img.c **** #endif
 563              		.loc 1 445 41 discriminator 2 view .LVU185
 564 0216 4FF0FF0C 		mov	ip, #255
 565 021a 80F803C0 		strb	ip, [r0, #3]
 566              	.LBE137:
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 567              		.loc 1 432 45 is_stmt 1 discriminator 2 view .LVU186
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 568              		.loc 1 432 46 is_stmt 0 discriminator 2 view .LVU187
 569 021e 0131     		adds	r1, r1, #1
 570              	.LVL64:
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 571              		.loc 1 432 57 discriminator 2 view .LVU188
 572 0220 0432     		adds	r2, r2, #4
 573              	.LVL65:
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 574              		.loc 1 432 78 discriminator 2 view .LVU189
 575 0222 0133     		adds	r3, r3, #1
 576              	.LVL66:
 577              	.L13:
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 578              		.loc 1 432 28 is_stmt 1 discriminator 1 view .LVU190
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 579              		.loc 1 432 17 is_stmt 0 discriminator 1 view .LVU191
 580 0224 8B45     		cmp	fp, r1
 581 0226 07DD     		ble	.L55
 582              	.LBB138:
 433:lvgl/src/draw/lv_draw_img.c ****                     mask_buf[px_i] = px_opa;
 583              		.loc 1 433 21 is_stmt 1 view .LVU192
 433:lvgl/src/draw/lv_draw_img.c ****                     mask_buf[px_i] = px_opa;
 584              		.loc 1 433 30 is_stmt 0 view .LVU193
 585 0228 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 586              	.LVL67:
 434:lvgl/src/draw/lv_draw_img.c ****                     if(px_opa) {
 587              		.loc 1 434 21 is_stmt 1 view .LVU194
 434:lvgl/src/draw/lv_draw_img.c ****                     if(px_opa) {
 588              		.loc 1 434 36 is_stmt 0 view .LVU195
 589 022a E854     		strb	r0, [r5, r3]
 435:lvgl/src/draw/lv_draw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 590              		.loc 1 435 21 is_stmt 1 view .LVU196
 435:lvgl/src/draw/lv_draw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 591              		.loc 1 435 23 is_stmt 0 view .LVU197
 592 022c 0028     		cmp	r0, #0
 593 022e F0D0     		beq	.L9
 441:lvgl/src/draw/lv_draw_img.c **** #endif
 594              		.loc 1 441 25 is_stmt 1 view .LVU198
 441:lvgl/src/draw/lv_draw_img.c **** #endif
 595              		.loc 1 441 44 is_stmt 0 view .LVU199
 596 0230 1068     		ldr	r0, [r2]
 597              	.LVL68:
 441:lvgl/src/draw/lv_draw_img.c **** #endif
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 39


 598              		.loc 1 441 41 view .LVU200
 599 0232 44F82300 		str	r0, [r4, r3, lsl #2]
 600              	.LVL69:
 441:lvgl/src/draw/lv_draw_img.c **** #endif
 601              		.loc 1 441 41 view .LVU201
 602 0236 ECE7     		b	.L9
 603              	.L55:
 441:lvgl/src/draw/lv_draw_img.c **** #endif
 604              		.loc 1 441 41 view .LVU202
 605              	.LBE138:
 449:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 606              		.loc 1 449 17 is_stmt 1 view .LVU203
 449:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 607              		.loc 1 449 29 is_stmt 0 view .LVU204
 608 0238 08EB8908 		add	r8, r8, r9, lsl #2
 609              	.LVL70:
 450:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 610              		.loc 1 450 17 is_stmt 1 view .LVU205
 611              	.LBB139:
 612              	.LBI139:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 613              		.loc 2 133 26 view .LVU206
 614              	.LBB140:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 615              		.loc 2 135 5 view .LVU207
 135:lvgl/src/draw/../misc/lv_area.h **** }
 616              		.loc 2 135 31 is_stmt 0 view .LVU208
 617 023c BDF8CC20 		ldrh	r2, [sp, #204]
 618              	.LVL71:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 619              		.loc 2 135 44 view .LVU209
 620 0240 BDF8C810 		ldrh	r1, [sp, #200]
 621              	.LVL72:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 622              		.loc 2 135 36 view .LVU210
 623 0244 521A     		subs	r2, r2, r1
 624 0246 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 625              		.loc 2 135 49 view .LVU211
 626 0248 0132     		adds	r2, r2, #1
 627              	.LVL73:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 628              		.loc 2 135 49 view .LVU212
 629              	.LBE140:
 630              	.LBE139:
 450:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 631              		.loc 1 450 25 view .LVU213
 632 024a 03FA82F2 		sxtah	r2, r3, r2
 450:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 633              		.loc 1 450 19 view .LVU214
 634 024e BA42     		cmp	r2, r7
 635 0250 0BD2     		bcs	.L11
 451:lvgl/src/draw/lv_draw_img.c ****                 }
 636              		.loc 1 451 21 is_stmt 1 view .LVU215
 451:lvgl/src/draw/lv_draw_img.c ****                 }
 637              		.loc 1 451 31 is_stmt 0 view .LVU216
 638 0252 BDF97220 		ldrsh	r2, [sp, #114]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 40


 451:lvgl/src/draw/lv_draw_img.c ****                 }
 639              		.loc 1 451 35 view .LVU217
 640 0256 0132     		adds	r2, r2, #1
 641 0258 ADF87220 		strh	r2, [sp, #114]	@ movhi
 642              	.LVL74:
 643              	.L12:
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 644              		.loc 1 430 41 is_stmt 1 discriminator 2 view .LVU218
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 645              		.loc 1 430 42 is_stmt 0 discriminator 2 view .LVU219
 646 025c 0136     		adds	r6, r6, #1
 647              	.LVL75:
 648              	.L8:
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 649              		.loc 1 430 24 is_stmt 1 discriminator 1 view .LVU220
 430:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 650              		.loc 1 430 13 is_stmt 0 discriminator 1 view .LVU221
 651 025e 139A     		ldr	r2, [sp, #76]
 652 0260 B242     		cmp	r2, r6
 653 0262 1CDD     		ble	.L56
 431:lvgl/src/draw/lv_draw_img.c ****                 for(x = 0; x < draw_area_w; x++, map_px += px_size_byte, px_i++) {
 654              		.loc 1 431 24 view .LVU222
 655 0264 4246     		mov	r2, r8
 432:lvgl/src/draw/lv_draw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 656              		.loc 1 432 23 view .LVU223
 657 0266 0021     		movs	r1, #0
 658 0268 DCE7     		b	.L13
 659              	.L11:
 454:lvgl/src/draw/lv_draw_img.c **** 
 660              		.loc 1 454 21 is_stmt 1 view .LVU224
 454:lvgl/src/draw/lv_draw_img.c **** 
 661              		.loc 1 454 124 is_stmt 0 view .LVU225
 662 026a 9AF80E30 		ldrb	r3, [r10, #14]	@ zero_extendqisi2
 663              	.LVL76:
 454:lvgl/src/draw/lv_draw_img.c **** 
 664              		.loc 1 454 124 view .LVU226
 665 026e 03F00F03 		and	r3, r3, #15
 454:lvgl/src/draw/lv_draw_img.c **** 
 666              		.loc 1 454 21 view .LVU227
 667 0272 0293     		str	r3, [sp, #8]
 668 0274 9AF80D30 		ldrb	r3, [r10, #13]	@ zero_extendqisi2
 669 0278 0193     		str	r3, [sp, #4]
 670 027a 0223     		movs	r3, #2
 671 027c 0093     		str	r3, [sp]
 672 027e 2B46     		mov	r3, r5
 673 0280 2246     		mov	r2, r4
 674 0282 1BA9     		add	r1, sp, #108
 675 0284 1798     		ldr	r0, [sp, #92]
 676 0286 FFF7FEFF 		bl	_lv_blend_map
 677              	.LVL77:
 456:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 678              		.loc 1 456 21 is_stmt 1 view .LVU228
 456:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 679              		.loc 1 456 47 is_stmt 0 view .LVU229
 680 028a BDF87230 		ldrh	r3, [sp, #114]
 456:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 681              		.loc 1 456 51 view .LVU230
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 41


 682 028e 0133     		adds	r3, r3, #1
 683 0290 1BB2     		sxth	r3, r3
 456:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 684              		.loc 1 456 35 view .LVU231
 685 0292 ADF86E30 		strh	r3, [sp, #110]	@ movhi
 457:lvgl/src/draw/lv_draw_img.c **** 
 686              		.loc 1 457 21 is_stmt 1 view .LVU232
 457:lvgl/src/draw/lv_draw_img.c **** 
 687              		.loc 1 457 35 is_stmt 0 view .LVU233
 688 0296 ADF87230 		strh	r3, [sp, #114]	@ movhi
 459:lvgl/src/draw/lv_draw_img.c ****                 }
 689              		.loc 1 459 21 is_stmt 1 view .LVU234
 690              	.LVL78:
 459:lvgl/src/draw/lv_draw_img.c ****                 }
 691              		.loc 1 459 26 is_stmt 0 view .LVU235
 692 029a 0023     		movs	r3, #0
 693 029c DEE7     		b	.L12
 694              	.LVL79:
 695              	.L56:
 463:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 696              		.loc 1 463 13 is_stmt 1 view .LVU236
 463:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 697              		.loc 1 463 26 is_stmt 0 view .LVU237
 698 029e BDF96E20 		ldrsh	r2, [sp, #110]
 463:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 699              		.loc 1 463 43 view .LVU238
 700 02a2 BDF97230 		ldrsh	r3, [sp, #114]
 701              	.LVL80:
 463:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 702              		.loc 1 463 15 view .LVU239
 703 02a6 9A42     		cmp	r2, r3
 704 02a8 06D1     		bne	.L57
 705              	.L14:
 468:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(map2);
 706              		.loc 1 468 13 is_stmt 1 view .LVU240
 707 02aa 2846     		mov	r0, r5
 708 02ac FFF7FEFF 		bl	lv_mem_buf_release
 709              	.LVL81:
 469:lvgl/src/draw/lv_draw_img.c ****         }
 710              		.loc 1 469 13 view .LVU241
 711 02b0 2046     		mov	r0, r4
 712 02b2 FFF7FEFF 		bl	lv_mem_buf_release
 713              	.LVL82:
 714              	.LBE141:
 411:lvgl/src/draw/lv_draw_img.c **** #if LV_USE_GPU_STM32_DMA2D && LV_COLOR_DEPTH == 32
 715              		.loc 1 411 118 is_stmt 0 view .LVU242
 716 02b6 97E1     		b	.L3
 717              	.L57:
 718              	.LBB142:
 464:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, LV_DRAW_MASK_RES_CHANGED, dra
 719              		.loc 1 464 17 is_stmt 1 view .LVU243
 464:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, LV_DRAW_MASK_RES_CHANGED, dra
 720              		.loc 1 464 30 is_stmt 0 view .LVU244
 721 02b8 013B     		subs	r3, r3, #1
 722 02ba ADF87230 		strh	r3, [sp, #114]	@ movhi
 465:lvgl/src/draw/lv_draw_img.c ****             }
 723              		.loc 1 465 17 is_stmt 1 view .LVU245
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 42


 465:lvgl/src/draw/lv_draw_img.c ****             }
 724              		.loc 1 465 120 is_stmt 0 view .LVU246
 725 02be 079A     		ldr	r2, [sp, #28]
 726 02c0 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 727 02c2 03F00F03 		and	r3, r3, #15
 465:lvgl/src/draw/lv_draw_img.c ****             }
 728              		.loc 1 465 17 view .LVU247
 729 02c6 0293     		str	r3, [sp, #8]
 730 02c8 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 731 02ca 0193     		str	r3, [sp, #4]
 732 02cc 0223     		movs	r3, #2
 733 02ce 0093     		str	r3, [sp]
 734 02d0 2B46     		mov	r3, r5
 735 02d2 2246     		mov	r2, r4
 736 02d4 1BA9     		add	r1, sp, #108
 737 02d6 1798     		ldr	r0, [sp, #92]
 738 02d8 FFF7FEFF 		bl	_lv_blend_map
 739              	.LVL83:
 740 02dc E5E7     		b	.L14
 741              	.LVL84:
 742              	.L53:
 465:lvgl/src/draw/lv_draw_img.c ****             }
 743              		.loc 1 465 17 view .LVU248
 744              	.LBE142:
 745              	.LBB143:
 475:lvgl/src/draw/lv_draw_img.c ****             lv_color_t * map2 = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 746              		.loc 1 475 89 discriminator 1 view .LVU249
 747 02de 32A8     		add	r0, sp, #200
 748 02e0 FFF7FEFF 		bl	lv_area_get_size
 749              	.LVL85:
 750 02e4 1290     		str	r0, [sp, #72]
 751 02e6 31E7     		b	.L16
 752              	.LVL86:
 753              	.L40:
 754              	.LBB118:
 484:lvgl/src/draw/lv_draw_img.c ****                 else if(chroma_key) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 755              		.loc 1 484 35 view .LVU250
 756 02e8 0521     		movs	r1, #5
 757              	.L18:
 758              	.LVL87:
 487:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 759              		.loc 1 487 17 is_stmt 1 view .LVU251
 487:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 760              		.loc 1 487 47 is_stmt 0 view .LVU252
 761 02ea 0798     		ldr	r0, [sp, #28]
 762 02ec B0F90030 		ldrsh	r3, [r0]
 487:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 763              		.loc 1 487 37 view .LVU253
 764 02f0 ADF88030 		strh	r3, [sp, #128]	@ movhi
 488:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src = map_p;
 765              		.loc 1 488 17 is_stmt 1 view .LVU254
 488:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src = map_p;
 766              		.loc 1 488 46 is_stmt 0 view .LVU255
 767 02f4 4388     		ldrh	r3, [r0, #2]
 488:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src = map_p;
 768              		.loc 1 488 36 view .LVU256
 769 02f6 ADF88230 		strh	r3, [sp, #130]	@ movhi
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 43


 489:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_w = map_w;
 770              		.loc 1 489 17 is_stmt 1 view .LVU257
 489:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_w = map_w;
 771              		.loc 1 489 35 is_stmt 0 view .LVU258
 772 02fa 1D95     		str	r5, [sp, #116]
 490:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(map_area);;
 773              		.loc 1 490 17 is_stmt 1 view .LVU259
 490:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(map_area);;
 774              		.loc 1 490 37 is_stmt 0 view .LVU260
 775 02fc 159B     		ldr	r3, [sp, #84]
 776 02fe ADF87830 		strh	r3, [sp, #120]	@ movhi
 491:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.cf = cf;
 777              		.loc 1 491 17 is_stmt 1 view .LVU261
 778              	.LVL88:
 779              	.LBB116:
 780              	.LBI116:
 143:lvgl/src/draw/../misc/lv_area.h **** {
 781              		.loc 2 143 26 view .LVU262
 782              	.LBB117:
 783              		.loc 2 145 5 view .LVU263
 784              		.loc 2 145 31 is_stmt 0 view .LVU264
 785 0302 119A     		ldr	r2, [sp, #68]
 786 0304 D388     		ldrh	r3, [r2, #6]
 787              		.loc 2 145 44 view .LVU265
 788 0306 5288     		ldrh	r2, [r2, #2]
 789              		.loc 2 145 36 view .LVU266
 790 0308 9B1A     		subs	r3, r3, r2
 791 030a 9BB2     		uxth	r3, r3
 792              		.loc 2 145 49 view .LVU267
 793 030c 0133     		adds	r3, r3, #1
 794              	.LVL89:
 795              		.loc 2 145 49 view .LVU268
 796              	.LBE117:
 797              	.LBE116:
 491:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.cf = cf;
 798              		.loc 1 491 37 view .LVU269
 799 030e ADF87A30 		strh	r3, [sp, #122]	@ movhi
 491:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.cf = cf;
 800              		.loc 1 491 68 is_stmt 1 view .LVU270
 492:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 801              		.loc 1 492 17 view .LVU271
 492:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 802              		.loc 1 492 34 is_stmt 0 view .LVU272
 803 0312 8DF88810 		strb	r1, [sp, #136]
 493:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 804              		.loc 1 493 17 is_stmt 1 view .LVU273
 493:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 805              		.loc 1 493 56 is_stmt 0 view .LVU274
 806 0316 B0F90430 		ldrsh	r3, [r0, #4]
 493:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 807              		.loc 1 493 39 view .LVU275
 808 031a ADF87C30 		strh	r3, [sp, #124]	@ movhi
 494:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 809              		.loc 1 494 17 is_stmt 1 view .LVU276
 494:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 810              		.loc 1 494 56 is_stmt 0 view .LVU277
 811 031e B0F90630 		ldrsh	r3, [r0, #6]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 44


 494:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 812              		.loc 1 494 39 view .LVU278
 813 0322 ADF87E30 		strh	r3, [sp, #126]	@ movhi
 495:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 814              		.loc 1 495 17 is_stmt 1 view .LVU279
 495:lvgl/src/draw/lv_draw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 815              		.loc 1 495 37 is_stmt 0 view .LVU280
 816 0326 8368     		ldr	r3, [r0, #8]
 817 0328 2193     		str	r3, [sp, #132]
 496:lvgl/src/draw/lv_draw_img.c **** 
 818              		.loc 1 496 17 is_stmt 1 view .LVU281
 496:lvgl/src/draw/lv_draw_img.c **** 
 819              		.loc 1 496 51 is_stmt 0 view .LVU282
 820 032a 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 821 032c C3F30003 		ubfx	r3, r3, #0, #1
 496:lvgl/src/draw/lv_draw_img.c **** 
 822              		.loc 1 496 41 view .LVU283
 823 0330 8DF88930 		strb	r3, [sp, #137]
 498:lvgl/src/draw/lv_draw_img.c ****             }
 824              		.loc 1 498 17 is_stmt 1 view .LVU284
 825 0334 1DA8     		add	r0, sp, #116
 826 0336 FFF7FEFF 		bl	_lv_img_buf_transform_init
 827              	.LVL90:
 828              	.L17:
 498:lvgl/src/draw/lv_draw_img.c ****             }
 829              		.loc 1 498 17 is_stmt 0 view .LVU285
 830              	.LBE118:
 501:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t recolor_opa_inv = 255 - draw_dsc->recolor_opa;
 831              		.loc 1 501 13 is_stmt 1 view .LVU286
 501:lvgl/src/draw/lv_draw_img.c ****             lv_opa_t recolor_opa_inv = 255 - draw_dsc->recolor_opa;
 832              		.loc 1 501 22 is_stmt 0 view .LVU287
 833 033a 0023     		movs	r3, #0
 834 033c 1993     		str	r3, [sp, #100]
 835 033e ADF86830 		strh	r3, [sp, #104]	@ movhi
 502:lvgl/src/draw/lv_draw_img.c ****             if(draw_dsc->recolor_opa != 0) {
 836              		.loc 1 502 13 is_stmt 1 view .LVU288
 502:lvgl/src/draw/lv_draw_img.c ****             if(draw_dsc->recolor_opa != 0) {
 837              		.loc 1 502 54 is_stmt 0 view .LVU289
 838 0342 079A     		ldr	r2, [sp, #28]
 839 0344 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 502:lvgl/src/draw/lv_draw_img.c ****             if(draw_dsc->recolor_opa != 0) {
 840              		.loc 1 502 22 view .LVU290
 841 0346 6FEA0309 		mvn	r9, r3
 842 034a 5FFA89F9 		uxtb	r9, r9
 843              	.LVL91:
 503:lvgl/src/draw/lv_draw_img.c ****                 lv_color_premult(draw_dsc->recolor, draw_dsc->recolor_opa, recolor_premult);
 844              		.loc 1 503 13 is_stmt 1 view .LVU291
 503:lvgl/src/draw/lv_draw_img.c ****                 lv_color_premult(draw_dsc->recolor, draw_dsc->recolor_opa, recolor_premult);
 845              		.loc 1 503 15 is_stmt 0 view .LVU292
 846 034e 8BB1     		cbz	r3, .L19
 504:lvgl/src/draw/lv_draw_img.c ****             }
 847              		.loc 1 504 17 is_stmt 1 view .LVU293
 848 0350 9268     		ldr	r2, [r2, #8]
 849              	.LVL92:
 850              	.LBB119:
 851              	.LBI119:
 479:lvgl/src/draw/../misc/lv_color.h **** {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 45


 852              		.loc 3 479 42 view .LVU294
 853              	.LBB120:
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 854              		.loc 3 482 5 view .LVU295
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 855              		.loc 3 482 25 is_stmt 0 view .LVU296
 856 0352 C2F30741 		ubfx	r1, r2, #16, #8
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 857              		.loc 3 482 43 view .LVU297
 858 0356 03FB01F1 		mul	r1, r3, r1
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 859              		.loc 3 482 12 view .LVU298
 860 035a ADF86410 		strh	r1, [sp, #100]	@ movhi
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 861              		.loc 3 483 5 is_stmt 1 view .LVU299
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 862              		.loc 3 483 25 is_stmt 0 view .LVU300
 863 035e C2F30721 		ubfx	r1, r2, #8, #8
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 864              		.loc 3 483 43 view .LVU301
 865 0362 03FB01F1 		mul	r1, r3, r1
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 866              		.loc 3 483 12 view .LVU302
 867 0366 ADF86610 		strh	r1, [sp, #102]	@ movhi
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 868              		.loc 3 484 5 is_stmt 1 view .LVU303
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 869              		.loc 3 484 25 is_stmt 0 view .LVU304
 870 036a D2B2     		uxtb	r2, r2
 871              	.LVL93:
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 872              		.loc 3 484 43 view .LVU305
 873 036c 02FB03F3 		mul	r3, r2, r3
 874              	.LVL94:
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 875              		.loc 3 484 12 view .LVU306
 876 0370 ADF86830 		strh	r3, [sp, #104]	@ movhi
 877              	.LVL95:
 878              	.L19:
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 879              		.loc 3 484 12 view .LVU307
 880              	.LBE120:
 881              	.LBE119:
 507:lvgl/src/draw/lv_draw_img.c ****             mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 882              		.loc 1 507 13 is_stmt 1 view .LVU308
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 883              		.loc 1 508 13 view .LVU309
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 884              		.loc 1 508 22 is_stmt 0 view .LVU310
 885 0374 099B     		ldr	r3, [sp, #36]
 886 0376 5BB9     		cbnz	r3, .L42
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 887              		.loc 1 508 36 discriminator 2 view .LVU311
 888 0378 0B9B     		ldr	r3, [sp, #44]
 889 037a E3B9     		cbnz	r3, .L43
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 890              		.loc 1 508 69 discriminator 4 view .LVU312
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 46


 891 037c 079B     		ldr	r3, [sp, #28]
 892 037e 1B68     		ldr	r3, [r3]
 893 0380 B3F1807F 		cmp	r3, #16777216
 894 0384 1AD0     		beq	.L44
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 895              		.loc 1 508 22 view .LVU313
 896 0386 0223     		movs	r3, #2
 897 0388 1693     		str	r3, [sp, #88]
 898 038a 03E0     		b	.L20
 899              	.LVL96:
 900              	.L41:
 901              	.LBB121:
 485:lvgl/src/draw/lv_draw_img.c **** 
 902              		.loc 1 485 40 view .LVU314
 903 038c 0621     		movs	r1, #6
 904 038e ACE7     		b	.L18
 905              	.LVL97:
 906              	.L42:
 485:lvgl/src/draw/lv_draw_img.c **** 
 907              		.loc 1 485 40 view .LVU315
 908              	.LBE121:
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 909              		.loc 1 508 22 view .LVU316
 910 0390 0223     		movs	r3, #2
 911 0392 1693     		str	r3, [sp, #88]
 912              	.L20:
 913              	.LVL98:
 512:lvgl/src/draw/lv_draw_img.c ****                 lv_memset_ff(mask_buf, mask_buf_size);
 914              		.loc 1 512 13 is_stmt 1 discriminator 8 view .LVU317
 512:lvgl/src/draw/lv_draw_img.c ****                 lv_memset_ff(mask_buf, mask_buf_size);
 915              		.loc 1 512 15 is_stmt 0 discriminator 8 view .LVU318
 916 0394 109B     		ldr	r3, [sp, #64]
 917 0396 A3B9     		cbnz	r3, .L58
 918              	.L21:
 516:lvgl/src/draw/lv_draw_img.c ****             int32_t y;
 919              		.loc 1 516 13 is_stmt 1 view .LVU319
 517:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 920              		.loc 1 517 13 view .LVU320
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 921              		.loc 1 519 13 view .LVU321
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 922              		.loc 1 519 38 is_stmt 0 view .LVU322
 923 0398 0F9B     		ldr	r3, [sp, #60]
 924 039a B3F91230 		ldrsh	r3, [r3, #18]
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 925              		.loc 1 519 54 view .LVU323
 926 039e BDF9CA20 		ldrsh	r2, [sp, #202]
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 927              		.loc 1 519 43 view .LVU324
 928 03a2 1344     		add	r3, r3, r2
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 929              		.loc 1 519 68 view .LVU325
 930 03a4 119A     		ldr	r2, [sp, #68]
 931 03a6 B2F90220 		ldrsh	r2, [r2, #2]
 519:lvgl/src/draw/lv_draw_img.c **** #endif
 932              		.loc 1 519 21 view .LVU326
 933 03aa 9B1A     		subs	r3, r3, r2
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 47


 934 03ac 0A93     		str	r3, [sp, #40]
 935              	.LVL99:
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 936              		.loc 1 521 13 is_stmt 1 view .LVU327
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 937              		.loc 1 521 19 is_stmt 0 view .LVU328
 938 03ae 0023     		movs	r3, #0
 939              	.LVL100:
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 940              		.loc 1 521 19 view .LVU329
 941 03b0 0593     		str	r3, [sp, #20]
 942              	.LBE143:
 396:lvgl/src/draw/lv_draw_img.c **** 
 943              		.loc 1 396 18 view .LVU330
 944 03b2 0D93     		str	r3, [sp, #52]
 945              	.LBB144:
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 946              		.loc 1 521 13 view .LVU331
 947 03b4 92E0     		b	.L22
 948              	.LVL101:
 949              	.L43:
 508:lvgl/src/draw/lv_draw_img.c ****                         draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MA
 950              		.loc 1 508 22 view .LVU332
 951 03b6 0223     		movs	r3, #2
 952 03b8 1693     		str	r3, [sp, #88]
 953 03ba EBE7     		b	.L20
 954              	.L44:
 955 03bc 0123     		movs	r3, #1
 956 03be 1693     		str	r3, [sp, #88]
 957 03c0 E8E7     		b	.L20
 958              	.LVL102:
 959              	.L58:
 513:lvgl/src/draw/lv_draw_img.c ****             }
 960              		.loc 1 513 17 is_stmt 1 view .LVU333
 961 03c2 1299     		ldr	r1, [sp, #72]
 962 03c4 4046     		mov	r0, r8
 963 03c6 FFF7FEFF 		bl	lv_memset_ff
 964              	.LVL103:
 965 03ca E5E7     		b	.L21
 966              	.LVL104:
 967              	.L61:
 968              	.LBB122:
 969              	.LBB123:
 534:lvgl/src/draw/lv_draw_img.c ****                         ret = _lv_img_buf_transform(&trans_dsc, rot_x + x, rot_y + y);
 970              		.loc 1 534 25 view .LVU334
 535:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 971              		.loc 1 535 25 view .LVU335
 535:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 972              		.loc 1 535 71 is_stmt 0 view .LVU336
 973 03cc 089B     		ldr	r3, [sp, #32]
 974              	.LVL105:
 535:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 975              		.loc 1 535 71 view .LVU337
 976 03ce 5919     		adds	r1, r3, r5
 535:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 977              		.loc 1 535 82 view .LVU338
 978 03d0 0A9B     		ldr	r3, [sp, #40]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 48


 979 03d2 059A     		ldr	r2, [sp, #20]
 980 03d4 9A18     		adds	r2, r3, r2
 535:lvgl/src/draw/lv_draw_img.c ****                         if(ret == false) {
 981              		.loc 1 535 31 view .LVU339
 982 03d6 12B2     		sxth	r2, r2
 983 03d8 09B2     		sxth	r1, r1
 984 03da 1DA8     		add	r0, sp, #116
 985 03dc FFF7FEFF 		bl	_lv_img_buf_transform
 986              	.LVL106:
 536:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = LV_OPA_TRANSP;
 987              		.loc 1 536 25 is_stmt 1 view .LVU340
 536:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = LV_OPA_TRANSP;
 988              		.loc 1 536 27 is_stmt 0 view .LVU341
 989 03e0 0028     		cmp	r0, #0
 990 03e2 48D0     		beq	.L59
 541:lvgl/src/draw/lv_draw_img.c ****                             c.full = trans_dsc.res.color.full;
 991              		.loc 1 541 29 is_stmt 1 view .LVU342
 541:lvgl/src/draw/lv_draw_img.c ****                             c.full = trans_dsc.res.color.full;
 992              		.loc 1 541 59 is_stmt 0 view .LVU343
 993 03e4 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 541:lvgl/src/draw/lv_draw_img.c ****                             c.full = trans_dsc.res.color.full;
 994              		.loc 1 541 44 view .LVU344
 995 03e8 08F80430 		strb	r3, [r8, r4]
 542:lvgl/src/draw/lv_draw_img.c ****                         }
 996              		.loc 1 542 29 is_stmt 1 view .LVU345
 542:lvgl/src/draw/lv_draw_img.c ****                         }
 997              		.loc 1 542 57 is_stmt 0 view .LVU346
 998 03ec 239B     		ldr	r3, [sp, #140]
 999              	.LVL107:
 1000              	.L27:
 542:lvgl/src/draw/lv_draw_img.c ****                         }
 1001              		.loc 1 542 57 view .LVU347
 1002              	.LBE123:
 584:lvgl/src/draw/lv_draw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 1003              		.loc 1 584 21 is_stmt 1 view .LVU348
 584:lvgl/src/draw/lv_draw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 1004              		.loc 1 584 32 is_stmt 0 view .LVU349
 1005 03ee 079A     		ldr	r2, [sp, #28]
 1006              	.LVL108:
 584:lvgl/src/draw/lv_draw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 1007              		.loc 1 584 32 view .LVU350
 1008 03f0 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 584:lvgl/src/draw/lv_draw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 1009              		.loc 1 584 23 view .LVU351
 1010 03f2 5AB3     		cbz	r2, .L30
 585:lvgl/src/draw/lv_draw_img.c ****                     }
 1011              		.loc 1 585 25 is_stmt 1 view .LVU352
 1012              	.LVL109:
 1013              	.LBB124:
 1014              	.LBI124:
 504:lvgl/src/draw/../misc/lv_color.h **** {
 1015              		.loc 3 504 48 view .LVU353
 1016              	.LBB125:
 506:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1017              		.loc 3 506 5 view .LVU354
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1018              		.loc 3 509 5 view .LVU355
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 49


 1019 03f4 BDF86420 		ldrh	r2, [sp, #100]
 1020 03f8 C3F30741 		ubfx	r1, r3, #16, #8
 1021 03fc 09FB0122 		mla	r2, r9, r1, r2
 1022 0400 02EB0221 		add	r1, r2, r2, lsl #8
 1023 0404 02EBC112 		add	r2, r2, r1, lsl #7
 1024 0408 C2F3C752 		ubfx	r2, r2, #23, #8
 1025 040c 62F31747 		bfi	r7, r2, #16, #8
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1026              		.loc 3 510 5 view .LVU356
 1027 0410 BDF86620 		ldrh	r2, [sp, #102]
 1028 0414 C3F30721 		ubfx	r1, r3, #8, #8
 1029 0418 01FB0922 		mla	r2, r1, r9, r2
 1030 041c 02EB0221 		add	r1, r2, r2, lsl #8
 1031 0420 02EBC112 		add	r2, r2, r1, lsl #7
 1032 0424 C2F3C752 		ubfx	r2, r2, #23, #8
 1033 0428 62F30F27 		bfi	r7, r2, #8, #8
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1034              		.loc 3 511 5 view .LVU357
 1035 042c BDF86820 		ldrh	r2, [sp, #104]
 1036 0430 DBB2     		uxtb	r3, r3
 1037              	.LVL110:
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1038              		.loc 3 511 5 is_stmt 0 view .LVU358
 1039 0432 03FB0923 		mla	r3, r3, r9, r2
 1040 0436 03EB0322 		add	r2, r3, r3, lsl #8
 1041 043a 03EBC213 		add	r3, r3, r2, lsl #7
 1042 043e C3F3C753 		ubfx	r3, r3, #23, #8
 1043 0442 63F30707 		bfi	r7, r3, #0, #8
 512:lvgl/src/draw/../misc/lv_color.h **** #else
 1044              		.loc 3 512 5 is_stmt 1 view .LVU359
 1045 0446 47F07F47 		orr	r7, r7, #-16777216
 1046              	.LVL111:
 523:lvgl/src/draw/../misc/lv_color.h **** }
 1047              		.loc 3 523 5 view .LVU360
 523:lvgl/src/draw/../misc/lv_color.h **** }
 1048              		.loc 3 523 5 is_stmt 0 view .LVU361
 1049 044a 3B46     		mov	r3, r7
 1050              	.LVL112:
 1051              	.L30:
 523:lvgl/src/draw/../misc/lv_color.h **** }
 1052              		.loc 3 523 5 view .LVU362
 1053              	.LBE125:
 1054              	.LBE124:
 588:lvgl/src/draw/lv_draw_img.c ****                 }
 1055              		.loc 1 588 21 is_stmt 1 view .LVU363
 588:lvgl/src/draw/lv_draw_img.c ****                 }
 1056              		.loc 1 588 37 is_stmt 0 view .LVU364
 1057 044c 069A     		ldr	r2, [sp, #24]
 1058 044e 42F82430 		str	r3, [r2, r4, lsl #2]
 1059              	.L26:
 528:lvgl/src/draw/lv_draw_img.c **** 
 1060              		.loc 1 528 45 is_stmt 1 discriminator 2 view .LVU365
 528:lvgl/src/draw/lv_draw_img.c **** 
 1061              		.loc 1 528 46 is_stmt 0 discriminator 2 view .LVU366
 1062 0452 0135     		adds	r5, r5, #1
 1063              	.LVL113:
 528:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 50


 1064              		.loc 1 528 57 discriminator 2 view .LVU367
 1065 0454 0436     		adds	r6, r6, #4
 1066              	.LVL114:
 528:lvgl/src/draw/lv_draw_img.c **** 
 1067              		.loc 1 528 78 discriminator 2 view .LVU368
 1068 0456 0134     		adds	r4, r4, #1
 1069              	.LVL115:
 1070              	.L23:
 528:lvgl/src/draw/lv_draw_img.c **** 
 1071              		.loc 1 528 28 is_stmt 1 discriminator 1 view .LVU369
 528:lvgl/src/draw/lv_draw_img.c **** 
 1072              		.loc 1 528 17 is_stmt 0 discriminator 1 view .LVU370
 1073 0458 AB45     		cmp	fp, r5
 1074 045a 23DD     		ble	.L60
 531:lvgl/src/draw/lv_draw_img.c **** 
 1075              		.loc 1 531 21 is_stmt 1 view .LVU371
 531:lvgl/src/draw/lv_draw_img.c **** 
 1076              		.loc 1 531 23 is_stmt 0 view .LVU372
 1077 045c BAF1807F 		cmp	r10, #16777216
 1078 0460 B4D1     		bne	.L61
 549:lvgl/src/draw/lv_draw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 1079              		.loc 1 549 25 is_stmt 1 view .LVU373
 549:lvgl/src/draw/lv_draw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 1080              		.loc 1 549 27 is_stmt 0 view .LVU374
 1081 0462 099B     		ldr	r3, [sp, #36]
 1082              	.LVL116:
 549:lvgl/src/draw/lv_draw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 1083              		.loc 1 549 27 view .LVU375
 1084 0464 5BB1     		cbz	r3, .L28
 1085              	.LBB126:
 550:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = px_opa;
 1086              		.loc 1 550 29 is_stmt 1 view .LVU376
 550:lvgl/src/draw/lv_draw_img.c ****                             mask_buf[px_i] = px_opa;
 1087              		.loc 1 550 38 is_stmt 0 view .LVU377
 1088 0466 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 1089              	.LVL117:
 551:lvgl/src/draw/lv_draw_img.c ****                             if(px_opa == 0) {
 1090              		.loc 1 551 29 is_stmt 1 view .LVU378
 551:lvgl/src/draw/lv_draw_img.c ****                             if(px_opa == 0) {
 1091              		.loc 1 551 44 is_stmt 0 view .LVU379
 1092 0468 08F80430 		strb	r3, [r8, r4]
 552:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 1093              		.loc 1 552 29 is_stmt 1 view .LVU380
 552:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 1094              		.loc 1 552 31 is_stmt 0 view .LVU381
 1095 046c 53B9     		cbnz	r3, .L29
 554:lvgl/src/draw/lv_draw_img.c **** #endif
 1096              		.loc 1 554 33 is_stmt 1 view .LVU382
 554:lvgl/src/draw/lv_draw_img.c **** #endif
 1097              		.loc 1 554 49 is_stmt 0 view .LVU383
 1098 046e 069A     		ldr	r2, [sp, #24]
 1099 0470 42F82430 		str	r3, [r2, r4, lsl #2]
 556:lvgl/src/draw/lv_draw_img.c ****                             }
 1100              		.loc 1 556 33 is_stmt 1 view .LVU384
 1101 0474 EDE7     		b	.L26
 1102              	.LVL118:
 1103              	.L59:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 51


 556:lvgl/src/draw/lv_draw_img.c ****                             }
 1104              		.loc 1 556 33 is_stmt 0 view .LVU385
 1105              	.LBE126:
 1106              	.LBB127:
 537:lvgl/src/draw/lv_draw_img.c ****                             continue;
 1107              		.loc 1 537 29 is_stmt 1 view .LVU386
 537:lvgl/src/draw/lv_draw_img.c ****                             continue;
 1108              		.loc 1 537 44 is_stmt 0 view .LVU387
 1109 0476 0023     		movs	r3, #0
 1110 0478 08F80430 		strb	r3, [r8, r4]
 538:lvgl/src/draw/lv_draw_img.c ****                         }
 1111              		.loc 1 538 29 is_stmt 1 view .LVU388
 1112 047c E9E7     		b	.L26
 1113              	.LVL119:
 1114              	.L28:
 538:lvgl/src/draw/lv_draw_img.c ****                         }
 1115              		.loc 1 538 29 is_stmt 0 view .LVU389
 1116              	.LBE127:
 560:lvgl/src/draw/lv_draw_img.c ****                         }
 1117              		.loc 1 560 29 is_stmt 1 view .LVU390
 560:lvgl/src/draw/lv_draw_img.c ****                         }
 1118              		.loc 1 560 44 is_stmt 0 view .LVU391
 1119 047e FF23     		movs	r3, #255
 1120 0480 08F80430 		strb	r3, [r8, r4]
 1121              	.L29:
 570:lvgl/src/draw/lv_draw_img.c ****                         c.ch.alpha = 0xFF;
 1122              		.loc 1 570 25 is_stmt 1 view .LVU392
 570:lvgl/src/draw/lv_draw_img.c ****                         c.ch.alpha = 0xFF;
 1123              		.loc 1 570 35 is_stmt 0 view .LVU393
 1124 0484 3368     		ldr	r3, [r6]
 571:lvgl/src/draw/lv_draw_img.c **** #endif
 1125              		.loc 1 571 25 is_stmt 1 view .LVU394
 1126              	.LVL120:
 571:lvgl/src/draw/lv_draw_img.c **** #endif
 1127              		.loc 1 571 36 is_stmt 0 view .LVU395
 1128 0486 43F07F43 		orr	r3, r3, #-16777216
 1129              	.LVL121:
 573:lvgl/src/draw/lv_draw_img.c ****                             if(c.full == chroma_keyed_color.full) {
 1130              		.loc 1 573 25 is_stmt 1 view .LVU396
 573:lvgl/src/draw/lv_draw_img.c ****                             if(c.full == chroma_keyed_color.full) {
 1131              		.loc 1 573 27 is_stmt 0 view .LVU397
 1132 048a 0B9A     		ldr	r2, [sp, #44]
 1133 048c 002A     		cmp	r2, #0
 1134 048e AED0     		beq	.L27
 574:lvgl/src/draw/lv_draw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1135              		.loc 1 574 29 is_stmt 1 view .LVU398
 574:lvgl/src/draw/lv_draw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1136              		.loc 1 574 31 is_stmt 0 view .LVU399
 1137 0490 0E9A     		ldr	r2, [sp, #56]
 1138              	.LVL122:
 574:lvgl/src/draw/lv_draw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1139              		.loc 1 574 31 view .LVU400
 1140 0492 9342     		cmp	r3, r2
 1141 0494 ABD1     		bne	.L27
 575:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 1142              		.loc 1 575 33 is_stmt 1 view .LVU401
 575:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 52


 1143              		.loc 1 575 48 is_stmt 0 view .LVU402
 1144 0496 0023     		movs	r3, #0
 1145              	.LVL123:
 575:lvgl/src/draw/lv_draw_img.c **** #if  LV_COLOR_DEPTH == 32
 1146              		.loc 1 575 48 view .LVU403
 1147 0498 08F80430 		strb	r3, [r8, r4]
 577:lvgl/src/draw/lv_draw_img.c **** #endif
 1148              		.loc 1 577 33 is_stmt 1 view .LVU404
 577:lvgl/src/draw/lv_draw_img.c **** #endif
 1149              		.loc 1 577 49 is_stmt 0 view .LVU405
 1150 049c 069A     		ldr	r2, [sp, #24]
 1151              	.LVL124:
 577:lvgl/src/draw/lv_draw_img.c **** #endif
 1152              		.loc 1 577 49 view .LVU406
 1153 049e 42F82430 		str	r3, [r2, r4, lsl #2]
 579:lvgl/src/draw/lv_draw_img.c ****                             }
 1154              		.loc 1 579 33 is_stmt 1 view .LVU407
 1155 04a2 D6E7     		b	.L26
 1156              	.LVL125:
 1157              	.L60:
 592:lvgl/src/draw/lv_draw_img.c ****                     lv_draw_mask_res_t mask_res_sub;
 1158              		.loc 1 592 17 view .LVU408
 592:lvgl/src/draw/lv_draw_img.c ****                     lv_draw_mask_res_t mask_res_sub;
 1159              		.loc 1 592 19 is_stmt 0 view .LVU409
 1160 04a4 109B     		ldr	r3, [sp, #64]
 1161              	.LVL126:
 592:lvgl/src/draw/lv_draw_img.c ****                     lv_draw_mask_res_t mask_res_sub;
 1162              		.loc 1 592 19 view .LVU410
 1163 04a6 83BB     		cbnz	r3, .L62
 1164              	.LVL127:
 1165              	.L32:
 606:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 1166              		.loc 1 606 17 is_stmt 1 view .LVU411
 606:lvgl/src/draw/lv_draw_img.c ****                 if(px_i + lv_area_get_width(&draw_area) < mask_buf_size) {
 1167              		.loc 1 606 29 is_stmt 0 view .LVU412
 1168 04a8 0C9B     		ldr	r3, [sp, #48]
 1169 04aa 159A     		ldr	r2, [sp, #84]
 1170 04ac 03EB8203 		add	r3, r3, r2, lsl #2
 1171 04b0 0C93     		str	r3, [sp, #48]
 1172              	.LVL128:
 607:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 1173              		.loc 1 607 17 is_stmt 1 view .LVU413
 1174              	.LBB128:
 1175              	.LBI128:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1176              		.loc 2 133 26 view .LVU414
 1177              	.LBB129:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1178              		.loc 2 135 5 view .LVU415
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1179              		.loc 2 135 31 is_stmt 0 view .LVU416
 1180 04b2 BDF8CC30 		ldrh	r3, [sp, #204]
 1181              	.LVL129:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1182              		.loc 2 135 44 view .LVU417
 1183 04b6 BDF8C820 		ldrh	r2, [sp, #200]
 135:lvgl/src/draw/../misc/lv_area.h **** }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 53


 1184              		.loc 2 135 36 view .LVU418
 1185 04ba 9B1A     		subs	r3, r3, r2
 1186 04bc 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1187              		.loc 2 135 49 view .LVU419
 1188 04be 0133     		adds	r3, r3, #1
 1189              	.LVL130:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1190              		.loc 2 135 49 view .LVU420
 1191              	.LBE129:
 1192              	.LBE128:
 607:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 1193              		.loc 1 607 25 view .LVU421
 1194 04c0 04FA83F3 		sxtah	r3, r4, r3
 607:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 ++;
 1195              		.loc 1 607 19 view .LVU422
 1196 04c4 129A     		ldr	r2, [sp, #72]
 1197 04c6 9342     		cmp	r3, r2
 1198 04c8 4CD2     		bcs	.L34
 608:lvgl/src/draw/lv_draw_img.c ****                 }
 1199              		.loc 1 608 21 is_stmt 1 view .LVU423
 608:lvgl/src/draw/lv_draw_img.c ****                 }
 1200              		.loc 1 608 31 is_stmt 0 view .LVU424
 1201 04ca BDF97230 		ldrsh	r3, [sp, #114]
 608:lvgl/src/draw/lv_draw_img.c ****                 }
 1202              		.loc 1 608 35 view .LVU425
 1203 04ce 0133     		adds	r3, r3, #1
 1204 04d0 ADF87230 		strh	r3, [sp, #114]	@ movhi
 1205 04d4 0D94     		str	r4, [sp, #52]
 1206              	.LVL131:
 1207              	.L35:
 608:lvgl/src/draw/lv_draw_img.c ****                 }
 1208              		.loc 1 608 35 view .LVU426
 1209              	.LBE122:
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 1210              		.loc 1 521 41 is_stmt 1 discriminator 2 view .LVU427
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 1211              		.loc 1 521 42 is_stmt 0 discriminator 2 view .LVU428
 1212 04d6 059B     		ldr	r3, [sp, #20]
 1213 04d8 0133     		adds	r3, r3, #1
 1214 04da 0593     		str	r3, [sp, #20]
 1215              	.LVL132:
 1216              	.L22:
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 1217              		.loc 1 521 24 is_stmt 1 discriminator 1 view .LVU429
 521:lvgl/src/draw/lv_draw_img.c ****                 map_px = map_buf_tmp;
 1218              		.loc 1 521 13 is_stmt 0 discriminator 1 view .LVU430
 1219 04dc 139B     		ldr	r3, [sp, #76]
 1220 04de 059A     		ldr	r2, [sp, #20]
 1221 04e0 9342     		cmp	r3, r2
 1222 04e2 75DD     		ble	.L63
 1223              	.LBB135:
 522:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 1224              		.loc 1 522 17 is_stmt 1 view .LVU431
 1225              	.LVL133:
 524:lvgl/src/draw/lv_draw_img.c ****                 int32_t rot_x = disp_area->x1 + draw_area.x1 - map_area->x1;
 1226              		.loc 1 524 17 view .LVU432
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 54


 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1227              		.loc 1 525 17 view .LVU433
 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1228              		.loc 1 525 42 is_stmt 0 view .LVU434
 1229 04e4 0F9B     		ldr	r3, [sp, #60]
 1230 04e6 B3F910A0 		ldrsh	r10, [r3, #16]
 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1231              		.loc 1 525 58 view .LVU435
 1232 04ea BDF9C830 		ldrsh	r3, [sp, #200]
 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1233              		.loc 1 525 47 view .LVU436
 1234 04ee 9A44     		add	r10, r10, r3
 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1235              		.loc 1 525 72 view .LVU437
 1236 04f0 119B     		ldr	r3, [sp, #68]
 1237 04f2 B3F90030 		ldrsh	r3, [r3]
 525:lvgl/src/draw/lv_draw_img.c **** #endif
 1238              		.loc 1 525 25 view .LVU438
 1239 04f6 AAEB030A 		sub	r10, r10, r3
 1240              	.LVL134:
 528:lvgl/src/draw/lv_draw_img.c **** 
 1241              		.loc 1 528 17 is_stmt 1 view .LVU439
 522:lvgl/src/draw/lv_draw_img.c **** #if LV_DRAW_COMPLEX
 1242              		.loc 1 522 24 is_stmt 0 view .LVU440
 1243 04fa 0C9E     		ldr	r6, [sp, #48]
 528:lvgl/src/draw/lv_draw_img.c **** 
 1244              		.loc 1 528 17 view .LVU441
 1245 04fc 0D9C     		ldr	r4, [sp, #52]
 528:lvgl/src/draw/lv_draw_img.c **** 
 1246              		.loc 1 528 23 view .LVU442
 1247 04fe 0025     		movs	r5, #0
 1248 0500 CDF820A0 		str	r10, [sp, #32]
 1249 0504 DDF850A0 		ldr	r10, [sp, #80]
 1250              	.LVL135:
 528:lvgl/src/draw/lv_draw_img.c **** 
 1251              		.loc 1 528 17 view .LVU443
 1252 0508 A6E7     		b	.L23
 1253              	.LVL136:
 1254              	.L62:
 1255              	.LBB130:
 593:lvgl/src/draw/lv_draw_img.c ****                     mask_res_sub = lv_draw_mask_apply(mask_buf + px_i_start, draw_area.x1 + draw_bu
 1256              		.loc 1 593 21 is_stmt 1 view .LVU444
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1257              		.loc 1 594 21 view .LVU445
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1258              		.loc 1 594 36 is_stmt 0 view .LVU446
 1259 050a 0D9B     		ldr	r3, [sp, #52]
 1260 050c 4344     		add	r3, r3, r8
 1261 050e 1D46     		mov	r5, r3
 1262              	.LVL137:
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1263              		.loc 1 594 87 view .LVU447
 1264 0510 BDF8C800 		ldrh	r0, [sp, #200]
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1265              		.loc 1 594 107 view .LVU448
 1266 0514 0F9B     		ldr	r3, [sp, #60]
 1267 0516 198A     		ldrh	r1, [r3, #16]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 55


 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1268              		.loc 1 594 91 view .LVU449
 1269 0518 0144     		add	r1, r1, r0
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1270              		.loc 1 594 125 view .LVU450
 1271 051a BDF8CA20 		ldrh	r2, [sp, #202]
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1272              		.loc 1 594 114 view .LVU451
 1273 051e 059E     		ldr	r6, [sp, #20]
 1274              	.LVL138:
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1275              		.loc 1 594 114 view .LVU452
 1276 0520 3244     		add	r2, r2, r6
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1277              		.loc 1 594 145 view .LVU453
 1278 0522 5B8A     		ldrh	r3, [r3, #18]
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1279              		.loc 1 594 129 view .LVU454
 1280 0524 13FA82F2 		uxtah	r2, r3, r2
 1281              	.LVL139:
 1282              	.LBB131:
 1283              	.LBI131:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1284              		.loc 2 133 26 is_stmt 1 view .LVU455
 1285              	.LBB132:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1286              		.loc 2 135 5 view .LVU456
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1287              		.loc 2 135 31 is_stmt 0 view .LVU457
 1288 0528 BDF8CC30 		ldrh	r3, [sp, #204]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1289              		.loc 2 135 36 view .LVU458
 1290 052c 1B1A     		subs	r3, r3, r0
 1291 052e 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1292              		.loc 2 135 49 view .LVU459
 1293 0530 0133     		adds	r3, r3, #1
 1294              	.LVL140:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1295              		.loc 2 135 49 view .LVU460
 1296              	.LBE132:
 1297              	.LBE131:
 594:lvgl/src/draw/lv_draw_img.c ****                                                       lv_area_get_width(&draw_area));
 1298              		.loc 1 594 36 view .LVU461
 1299 0532 1BB2     		sxth	r3, r3
 1300 0534 12B2     		sxth	r2, r2
 1301 0536 09B2     		sxth	r1, r1
 1302 0538 2846     		mov	r0, r5
 1303 053a FFF7FEFF 		bl	lv_draw_mask_apply
 1304              	.LVL141:
 596:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_00(mask_buf + px_i_start, lv_area_get_width(&draw_area));
 1305              		.loc 1 596 21 is_stmt 1 view .LVU462
 596:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_00(mask_buf + px_i_start, lv_area_get_width(&draw_area));
 1306              		.loc 1 596 23 is_stmt 0 view .LVU463
 1307 053e 18B1     		cbz	r0, .L64
 600:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 1308              		.loc 1 600 26 is_stmt 1 view .LVU464
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 56


 600:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 1309              		.loc 1 600 28 is_stmt 0 view .LVU465
 1310 0540 0228     		cmp	r0, #2
 1311 0542 B1D1     		bne	.L32
 601:lvgl/src/draw/lv_draw_img.c ****                     }
 1312              		.loc 1 601 34 view .LVU466
 1313 0544 1690     		str	r0, [sp, #88]
 1314              	.LVL142:
 601:lvgl/src/draw/lv_draw_img.c ****                     }
 1315              		.loc 1 601 34 view .LVU467
 1316 0546 AFE7     		b	.L32
 1317              	.LVL143:
 1318              	.L64:
 597:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 1319              		.loc 1 597 25 is_stmt 1 view .LVU468
 1320              	.LBB133:
 1321              	.LBI133:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1322              		.loc 2 133 26 view .LVU469
 1323              	.LBB134:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1324              		.loc 2 135 5 view .LVU470
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1325              		.loc 2 135 31 is_stmt 0 view .LVU471
 1326 0548 BDF8CC10 		ldrh	r1, [sp, #204]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1327              		.loc 2 135 44 view .LVU472
 1328 054c BDF8C830 		ldrh	r3, [sp, #200]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1329              		.loc 2 135 36 view .LVU473
 1330 0550 C91A     		subs	r1, r1, r3
 1331 0552 89B2     		uxth	r1, r1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1332              		.loc 2 135 49 view .LVU474
 1333 0554 0131     		adds	r1, r1, #1
 1334              	.LVL144:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1335              		.loc 2 135 49 view .LVU475
 1336              	.LBE134:
 1337              	.LBE133:
 597:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 1338              		.loc 1 597 25 view .LVU476
 1339 0556 09B2     		sxth	r1, r1
 1340 0558 2846     		mov	r0, r5
 1341              	.LVL145:
 597:lvgl/src/draw/lv_draw_img.c ****                         mask_res = LV_DRAW_MASK_RES_CHANGED;
 1342              		.loc 1 597 25 view .LVU477
 1343 055a FFF7FEFF 		bl	lv_memset_00
 1344              	.LVL146:
 598:lvgl/src/draw/lv_draw_img.c ****                     }
 1345              		.loc 1 598 25 is_stmt 1 view .LVU478
 598:lvgl/src/draw/lv_draw_img.c ****                     }
 1346              		.loc 1 598 34 is_stmt 0 view .LVU479
 1347 055e 0223     		movs	r3, #2
 1348 0560 1693     		str	r3, [sp, #88]
 1349 0562 A1E7     		b	.L32
 1350              	.LVL147:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 57


 1351              	.L34:
 598:lvgl/src/draw/lv_draw_img.c ****                     }
 1352              		.loc 1 598 34 view .LVU480
 1353              	.LBE130:
 612:lvgl/src/draw/lv_draw_img.c **** 
 1354              		.loc 1 612 21 is_stmt 1 view .LVU481
 612:lvgl/src/draw/lv_draw_img.c **** 
 1355              		.loc 1 612 108 is_stmt 0 view .LVU482
 1356 0564 079C     		ldr	r4, [sp, #28]
 1357              	.LVL148:
 612:lvgl/src/draw/lv_draw_img.c **** 
 1358              		.loc 1 612 108 view .LVU483
 1359 0566 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 1360 0568 03F00F03 		and	r3, r3, #15
 612:lvgl/src/draw/lv_draw_img.c **** 
 1361              		.loc 1 612 21 view .LVU484
 1362 056c 0293     		str	r3, [sp, #8]
 1363 056e 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 1364 0570 0193     		str	r3, [sp, #4]
 1365 0572 169B     		ldr	r3, [sp, #88]
 1366 0574 0093     		str	r3, [sp]
 1367 0576 4346     		mov	r3, r8
 1368 0578 069A     		ldr	r2, [sp, #24]
 1369 057a 1BA9     		add	r1, sp, #108
 1370 057c 1798     		ldr	r0, [sp, #92]
 1371 057e FFF7FEFF 		bl	_lv_blend_map
 1372              	.LVL149:
 614:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 1373              		.loc 1 614 21 is_stmt 1 view .LVU485
 614:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 1374              		.loc 1 614 47 is_stmt 0 view .LVU486
 1375 0582 BDF87230 		ldrh	r3, [sp, #114]
 614:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 1376              		.loc 1 614 51 view .LVU487
 1377 0586 0133     		adds	r3, r3, #1
 1378 0588 1BB2     		sxth	r3, r3
 614:lvgl/src/draw/lv_draw_img.c ****                     blend_area.y2 = blend_area.y1;
 1379              		.loc 1 614 35 view .LVU488
 1380 058a ADF86E30 		strh	r3, [sp, #110]	@ movhi
 615:lvgl/src/draw/lv_draw_img.c **** 
 1381              		.loc 1 615 21 is_stmt 1 view .LVU489
 615:lvgl/src/draw/lv_draw_img.c **** 
 1382              		.loc 1 615 35 is_stmt 0 view .LVU490
 1383 058e ADF87230 		strh	r3, [sp, #114]	@ movhi
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1384              		.loc 1 617 21 is_stmt 1 view .LVU491
 1385              	.LVL150:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1386              		.loc 1 618 21 view .LVU492
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1387              		.loc 1 618 30 is_stmt 0 view .LVU493
 1388 0592 099B     		ldr	r3, [sp, #36]
 1389 0594 43B9     		cbnz	r3, .L46
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1390              		.loc 1 618 44 discriminator 2 view .LVU494
 1391 0596 0B9B     		ldr	r3, [sp, #44]
 1392 0598 6BB9     		cbnz	r3, .L47
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 58


 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1393              		.loc 1 618 77 discriminator 4 view .LVU495
 1394 059a 2368     		ldr	r3, [r4]
 1395 059c B3F1807F 		cmp	r3, #16777216
 1396 05a0 0CD0     		beq	.L48
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1397              		.loc 1 618 30 view .LVU496
 1398 05a2 0223     		movs	r3, #2
 1399 05a4 1693     		str	r3, [sp, #88]
 1400              	.LVL151:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1401              		.loc 1 618 30 view .LVU497
 1402 05a6 01E0     		b	.L36
 1403              	.LVL152:
 1404              	.L46:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1405              		.loc 1 618 30 view .LVU498
 1406 05a8 0223     		movs	r3, #2
 1407 05aa 1693     		str	r3, [sp, #88]
 1408              	.LVL153:
 1409              	.L36:
 622:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_ff(mask_buf, mask_buf_size);
 1410              		.loc 1 622 21 is_stmt 1 discriminator 8 view .LVU499
 622:lvgl/src/draw/lv_draw_img.c ****                         lv_memset_ff(mask_buf, mask_buf_size);
 1411              		.loc 1 622 23 is_stmt 0 discriminator 8 view .LVU500
 1412 05ac 109B     		ldr	r3, [sp, #64]
 1413 05ae 43B9     		cbnz	r3, .L65
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1414              		.loc 1 617 26 view .LVU501
 1415 05b0 0023     		movs	r3, #0
 1416 05b2 0D93     		str	r3, [sp, #52]
 1417              	.LVL154:
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1418              		.loc 1 617 26 view .LVU502
 1419 05b4 8FE7     		b	.L35
 1420              	.LVL155:
 1421              	.L47:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1422              		.loc 1 618 30 view .LVU503
 1423 05b6 0223     		movs	r3, #2
 1424 05b8 1693     		str	r3, [sp, #88]
 1425              	.LVL156:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1426              		.loc 1 618 30 view .LVU504
 1427 05ba F7E7     		b	.L36
 1428              	.LVL157:
 1429              	.L48:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1430              		.loc 1 618 30 view .LVU505
 1431 05bc 0123     		movs	r3, #1
 1432 05be 1693     		str	r3, [sp, #88]
 1433              	.LVL158:
 618:lvgl/src/draw/lv_draw_img.c ****                                 draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : LV
 1434              		.loc 1 618 30 view .LVU506
 1435 05c0 F4E7     		b	.L36
 1436              	.LVL159:
 1437              	.L65:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 59


 623:lvgl/src/draw/lv_draw_img.c ****                     }
 1438              		.loc 1 623 25 is_stmt 1 view .LVU507
 1439 05c2 1299     		ldr	r1, [sp, #72]
 1440 05c4 4046     		mov	r0, r8
 1441 05c6 FFF7FEFF 		bl	lv_memset_ff
 1442              	.LVL160:
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1443              		.loc 1 617 26 is_stmt 0 view .LVU508
 1444 05ca 0023     		movs	r3, #0
 1445 05cc 0D93     		str	r3, [sp, #52]
 1446              	.LVL161:
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1447              		.loc 1 617 26 view .LVU509
 1448 05ce 82E7     		b	.L35
 1449              	.LVL162:
 1450              	.L63:
 617:lvgl/src/draw/lv_draw_img.c ****                     mask_res = (alpha_byte || chroma_key || draw_dsc->angle ||
 1451              		.loc 1 617 26 view .LVU510
 1452              	.LBE135:
 629:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 1453              		.loc 1 629 13 is_stmt 1 view .LVU511
 629:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 1454              		.loc 1 629 26 is_stmt 0 view .LVU512
 1455 05d0 BDF96E20 		ldrsh	r2, [sp, #110]
 1456              	.LVL163:
 629:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 1457              		.loc 1 629 43 view .LVU513
 1458 05d4 BDF97230 		ldrsh	r3, [sp, #114]
 629:lvgl/src/draw/lv_draw_img.c ****                 blend_area.y2--;
 1459              		.loc 1 629 15 view .LVU514
 1460 05d8 9A42     		cmp	r2, r3
 1461 05da 08D1     		bne	.L66
 1462              	.L38:
 634:lvgl/src/draw/lv_draw_img.c ****             lv_mem_buf_release(map2);
 1463              		.loc 1 634 13 is_stmt 1 view .LVU515
 1464 05dc 4046     		mov	r0, r8
 1465 05de FFF7FEFF 		bl	lv_mem_buf_release
 1466              	.LVL164:
 635:lvgl/src/draw/lv_draw_img.c ****         }
 1467              		.loc 1 635 13 view .LVU516
 1468 05e2 0698     		ldr	r0, [sp, #24]
 1469 05e4 FFF7FEFF 		bl	lv_mem_buf_release
 1470              	.LVL165:
 1471              	.L3:
 635:lvgl/src/draw/lv_draw_img.c ****         }
 1472              		.loc 1 635 13 is_stmt 0 view .LVU517
 1473              	.LBE144:
 1474              	.LBE148:
 638:lvgl/src/draw/lv_draw_img.c **** 
 1475              		.loc 1 638 1 view .LVU518
 1476 05e8 35B0     		add	sp, sp, #212
 1477              	.LCFI3:
 1478              		.cfi_remember_state
 1479              		.cfi_def_cfa_offset 36
 1480              		@ sp needed
 1481 05ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1482              	.LVL166:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 60


 1483              	.L66:
 1484              	.LCFI4:
 1485              		.cfi_restore_state
 1486              	.LBB149:
 1487              	.LBB145:
 630:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, mask_res, draw_dsc->opa, draw
 1488              		.loc 1 630 17 is_stmt 1 view .LVU519
 630:lvgl/src/draw/lv_draw_img.c ****                 _lv_blend_map(clip_area, &blend_area, map2, mask_buf, mask_res, draw_dsc->opa, draw
 1489              		.loc 1 630 30 is_stmt 0 view .LVU520
 1490 05ee 013B     		subs	r3, r3, #1
 1491 05f0 ADF87230 		strh	r3, [sp, #114]	@ movhi
 631:lvgl/src/draw/lv_draw_img.c ****             }
 1492              		.loc 1 631 17 is_stmt 1 view .LVU521
 631:lvgl/src/draw/lv_draw_img.c ****             }
 1493              		.loc 1 631 104 is_stmt 0 view .LVU522
 1494 05f4 079A     		ldr	r2, [sp, #28]
 1495 05f6 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 1496 05f8 03F00F03 		and	r3, r3, #15
 631:lvgl/src/draw/lv_draw_img.c ****             }
 1497              		.loc 1 631 17 view .LVU523
 1498 05fc 0293     		str	r3, [sp, #8]
 1499 05fe 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 1500 0600 0193     		str	r3, [sp, #4]
 1501 0602 169B     		ldr	r3, [sp, #88]
 1502 0604 0093     		str	r3, [sp]
 1503 0606 4346     		mov	r3, r8
 1504 0608 069A     		ldr	r2, [sp, #24]
 1505 060a 1BA9     		add	r1, sp, #108
 1506 060c 1798     		ldr	r0, [sp, #92]
 1507 060e FFF7FEFF 		bl	_lv_blend_map
 1508              	.LVL167:
 1509 0612 E3E7     		b	.L38
 1510              	.LBE145:
 1511              	.LBE149:
 1512              		.cfi_endproc
 1513              	.LFE154:
 1515              		.section	.text.show_error,"ax",%progbits
 1516              		.align	1
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
 1522              	show_error:
 1523              	.LVL168:
 1524              	.LFB155:
 641:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
 1525              		.loc 1 641 1 is_stmt 1 view -0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 104
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 641:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
 1529              		.loc 1 641 1 is_stmt 0 view .LVU525
 1530 0000 70B5     		push	{r4, r5, r6, lr}
 1531              	.LCFI5:
 1532              		.cfi_def_cfa_offset 16
 1533              		.cfi_offset 4, -16
 1534              		.cfi_offset 5, -12
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 61


 1535              		.cfi_offset 6, -8
 1536              		.cfi_offset 14, -4
 1537 0002 9CB0     		sub	sp, sp, #112
 1538              	.LCFI6:
 1539              		.cfi_def_cfa_offset 128
 1540 0004 0446     		mov	r4, r0
 1541 0006 0D46     		mov	r5, r1
 1542 0008 1646     		mov	r6, r2
 642:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
 1543              		.loc 1 642 5 is_stmt 1 view .LVU526
 643:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
 1544              		.loc 1 643 5 view .LVU527
 1545 000a 0BA8     		add	r0, sp, #44
 1546              	.LVL169:
 643:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
 1547              		.loc 1 643 5 is_stmt 0 view .LVU528
 1548 000c FFF7FEFF 		bl	lv_draw_rect_dsc_init
 1549              	.LVL170:
 644:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(coords, clip_area, &rect_dsc);
 1550              		.loc 1 644 5 is_stmt 1 view .LVU529
 1551              	.LBB150:
 1552              	.LBI150:
 610:lvgl/src/draw/../misc/lv_color.h **** }
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 613:lvgl/src/draw/../misc/lv_color.h **** {
 614:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 615:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 616:lvgl/src/draw/../misc/lv_color.h **** }
 617:lvgl/src/draw/../misc/lv_color.h **** 
 618:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 619:lvgl/src/draw/../misc/lv_color.h **** {
 620:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 621:lvgl/src/draw/../misc/lv_color.h **** }
 622:lvgl/src/draw/../misc/lv_color.h **** 
 623:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 624:lvgl/src/draw/../misc/lv_color.h **** //!
 625:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 626:lvgl/src/draw/../misc/lv_color.h **** 
 627:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 628:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 629:lvgl/src/draw/../misc/lv_color.h **** 
 630:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 631:lvgl/src/draw/../misc/lv_color.h **** 
 632:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 633:lvgl/src/draw/../misc/lv_color.h **** 
 634:lvgl/src/draw/../misc/lv_color.h **** /**
 635:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 636:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 637:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 638:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 639:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 640:lvgl/src/draw/../misc/lv_color.h ****  */
 641:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 642:lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/src/draw/../misc/lv_color.h **** /**
 644:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 62


 645:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 646:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 647:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 648:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 649:lvgl/src/draw/../misc/lv_color.h ****  */
 650:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 651:lvgl/src/draw/../misc/lv_color.h **** 
 652:lvgl/src/draw/../misc/lv_color.h **** /**
 653:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 654:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 655:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 656:lvgl/src/draw/../misc/lv_color.h ****  */
 657:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 658:lvgl/src/draw/../misc/lv_color.h **** 
 659:lvgl/src/draw/../misc/lv_color.h **** /**
 660:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 661:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 662:lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 664:lvgl/src/draw/../misc/lv_color.h **** {
 665:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 666:lvgl/src/draw/../misc/lv_color.h **** }
 667:lvgl/src/draw/../misc/lv_color.h **** 
 668:lvgl/src/draw/../misc/lv_color.h **** /**********************
 669:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 670:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 671:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 674:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 1553              		.loc 3 674 26 view .LVU530
 1554              	.LBE150:
 1555              		.loc 3 674 49 view .LVU531
 1556              	.LBB153:
 1557              	.LBB151:
 1558              	.LBI151:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 1559              		.loc 3 602 26 view .LVU532
 1560              	.LBB152:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1561              		.loc 3 604 5 view .LVU533
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1562              		.loc 3 604 12 is_stmt 0 view .LVU534
 1563 0010 4FF0FF33 		mov	r3, #-1
 1564              	.LVL171:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1565              		.loc 3 604 12 view .LVU535
 1566              	.LBE152:
 1567              	.LBE151:
 1568              	.LBE153:
 644:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(coords, clip_area, &rect_dsc);
 1569              		.loc 1 644 25 view .LVU536
 1570 0014 0C93     		str	r3, [sp, #48]
 645:lvgl/src/draw/lv_draw_img.c **** 
 1571              		.loc 1 645 5 is_stmt 1 view .LVU537
 1572 0016 0BAA     		add	r2, sp, #44
 1573 0018 2946     		mov	r1, r5
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 63


 1574 001a 2046     		mov	r0, r4
 1575 001c FFF7FEFF 		bl	lv_draw_rect
 1576              	.LVL172:
 647:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 1577              		.loc 1 647 5 view .LVU538
 648:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(coords, clip_area, &label_dsc, msg, NULL);
 1578              		.loc 1 648 5 view .LVU539
 1579 0020 02A8     		add	r0, sp, #8
 1580 0022 FFF7FEFF 		bl	lv_draw_label_dsc_init
 1581              	.LVL173:
 649:lvgl/src/draw/lv_draw_img.c **** }
 1582              		.loc 1 649 5 view .LVU540
 1583 0026 0023     		movs	r3, #0
 1584 0028 0093     		str	r3, [sp]
 1585 002a 3346     		mov	r3, r6
 1586 002c 02AA     		add	r2, sp, #8
 1587 002e 2946     		mov	r1, r5
 1588 0030 2046     		mov	r0, r4
 1589 0032 FFF7FEFF 		bl	lv_draw_label
 1590              	.LVL174:
 650:lvgl/src/draw/lv_draw_img.c **** 
 1591              		.loc 1 650 1 is_stmt 0 view .LVU541
 1592 0036 1CB0     		add	sp, sp, #112
 1593              	.LCFI7:
 1594              		.cfi_def_cfa_offset 16
 1595              		@ sp needed
 1596 0038 70BD     		pop	{r4, r5, r6, pc}
 650:lvgl/src/draw/lv_draw_img.c **** 
 1597              		.loc 1 650 1 view .LVU542
 1598              		.cfi_endproc
 1599              	.LFE155:
 1601              		.section	.text.lv_draw_img_dsc_init,"ax",%progbits
 1602              		.align	1
 1603              		.global	lv_draw_img_dsc_init
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu fpv4-sp-d16
 1609              	lv_draw_img_dsc_init:
 1610              	.LVL175:
 1611              	.LFB147:
  58:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 1612              		.loc 1 58 1 is_stmt 1 view -0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
  58:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 1616              		.loc 1 58 1 is_stmt 0 view .LVU544
 1617 0000 10B5     		push	{r4, lr}
 1618              	.LCFI8:
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 4, -8
 1621              		.cfi_offset 14, -4
 1622 0002 0446     		mov	r4, r0
  59:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
 1623              		.loc 1 59 5 is_stmt 1 view .LVU545
 1624 0004 1821     		movs	r1, #24
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 64


 1625 0006 FFF7FEFF 		bl	lv_memset_00
 1626              	.LVL176:
  60:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 1627              		.loc 1 60 5 view .LVU546
 1628              	.LBB154:
 1629              	.LBI154:
 675:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
 1630              		.loc 3 675 26 view .LVU547
 1631              	.LBE154:
 1632              		.loc 3 675 49 view .LVU548
 1633              	.LBB157:
 1634              	.LBB155:
 1635              	.LBI155:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 1636              		.loc 3 602 26 view .LVU549
 1637              	.LBB156:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1638              		.loc 3 604 5 view .LVU550
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1639              		.loc 3 604 12 is_stmt 0 view .LVU551
 1640 000a 0023     		movs	r3, #0
 1641 000c 6FF30703 		bfc	r3, #0, #8
 1642 0010 6FF30F23 		bfc	r3, #8, #8
 1643 0014 6FF31743 		bfc	r3, #16, #8
 1644 0018 43F07F43 		orr	r3, r3, #-16777216
 1645              	.LVL177:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 1646              		.loc 3 604 12 view .LVU552
 1647              	.LBE156:
 1648              	.LBE155:
 1649              	.LBE157:
  60:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 1650              		.loc 1 60 20 view .LVU553
 1651 001c A360     		str	r3, [r4, #8]
  61:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 1652              		.loc 1 61 5 is_stmt 1 view .LVU554
  61:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 1653              		.loc 1 61 14 is_stmt 0 view .LVU555
 1654 001e FF23     		movs	r3, #255
 1655 0020 6373     		strb	r3, [r4, #13]
  62:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 1656              		.loc 1 62 5 is_stmt 1 view .LVU556
  62:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 1657              		.loc 1 62 15 is_stmt 0 view .LVU557
 1658 0022 4FF48073 		mov	r3, #256
 1659 0026 6380     		strh	r3, [r4, #2]	@ movhi
  63:lvgl/src/draw/lv_draw_img.c **** }
 1660              		.loc 1 63 5 is_stmt 1 view .LVU558
  63:lvgl/src/draw/lv_draw_img.c **** }
 1661              		.loc 1 63 20 is_stmt 0 view .LVU559
 1662 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1663 002a 43F00103 		orr	r3, r3, #1
 1664 002e 2375     		strb	r3, [r4, #20]
  64:lvgl/src/draw/lv_draw_img.c **** 
 1665              		.loc 1 64 1 view .LVU560
 1666 0030 10BD     		pop	{r4, pc}
  64:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 65


 1667              		.loc 1 64 1 view .LVU561
 1668              		.cfi_endproc
 1669              	.LFE147:
 1671              		.section	.text.lv_img_cf_get_px_size,"ax",%progbits
 1672              		.align	1
 1673              		.global	lv_img_cf_get_px_size
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1677              		.fpu fpv4-sp-d16
 1679              	lv_img_cf_get_px_size:
 1680              	.LVL178:
 1681              	.LFB149:
  99:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
 1682              		.loc 1 99 1 is_stmt 1 view -0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 0
 1685              		@ frame_needed = 0, uses_anonymous_args = 0
 1686              		@ link register save eliminated.
 100:lvgl/src/draw/lv_draw_img.c **** 
 1687              		.loc 1 100 5 view .LVU563
 102:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 1688              		.loc 1 102 5 view .LVU564
 1689 0000 0438     		subs	r0, r0, #4
 1690              	.LVL179:
 102:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 1691              		.loc 1 102 5 is_stmt 0 view .LVU565
 1692 0002 0A28     		cmp	r0, #10
 1693 0004 07D8     		bhi	.L72
 1694 0006 DFE800F0 		tbb	[pc, r0]
 1695              	.L74:
 1696 000a 10       		.byte	(.L79-.L74)/2
 1697 000b 10       		.byte	(.L79-.L74)/2
 1698 000c 10       		.byte	(.L79-.L74)/2
 1699 000d 08       		.byte	(.L77-.L74)/2
 1700 000e 0A       		.byte	(.L76-.L74)/2
 1701 000f 0C       		.byte	(.L75-.L74)/2
 1702 0010 0E       		.byte	(.L73-.L74)/2
 1703 0011 08       		.byte	(.L77-.L74)/2
 1704 0012 0A       		.byte	(.L76-.L74)/2
 1705 0013 0C       		.byte	(.L75-.L74)/2
 1706 0014 0E       		.byte	(.L73-.L74)/2
 1707 0015 00       		.p2align 1
 1708              	.L72:
 109:lvgl/src/draw/lv_draw_img.c ****             break;
 1709              		.loc 1 109 21 view .LVU566
 1710 0016 0020     		movs	r0, #0
 1711 0018 7047     		bx	lr
 1712              	.L77:
 116:lvgl/src/draw/lv_draw_img.c ****             break;
 1713              		.loc 1 116 13 is_stmt 1 view .LVU567
 1714              	.LVL180:
 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 1715              		.loc 1 117 13 view .LVU568
 116:lvgl/src/draw/lv_draw_img.c ****             break;
 1716              		.loc 1 116 21 is_stmt 0 view .LVU569
 1717 001a 0120     		movs	r0, #1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 66


 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 1718              		.loc 1 117 13 view .LVU570
 1719 001c 7047     		bx	lr
 1720              	.LVL181:
 1721              	.L76:
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 1722              		.loc 1 120 13 is_stmt 1 view .LVU571
 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 1723              		.loc 1 121 13 view .LVU572
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 1724              		.loc 1 120 21 is_stmt 0 view .LVU573
 1725 001e 0220     		movs	r0, #2
 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 1726              		.loc 1 121 13 view .LVU574
 1727 0020 7047     		bx	lr
 1728              	.LVL182:
 1729              	.L75:
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 1730              		.loc 1 124 13 is_stmt 1 view .LVU575
 125:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 1731              		.loc 1 125 13 view .LVU576
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 1732              		.loc 1 124 21 is_stmt 0 view .LVU577
 1733 0022 0420     		movs	r0, #4
 125:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 1734              		.loc 1 125 13 view .LVU578
 1735 0024 7047     		bx	lr
 1736              	.LVL183:
 1737              	.L73:
 128:lvgl/src/draw/lv_draw_img.c ****             break;
 1738              		.loc 1 128 13 is_stmt 1 view .LVU579
 129:lvgl/src/draw/lv_draw_img.c ****         default:
 1739              		.loc 1 129 13 view .LVU580
 128:lvgl/src/draw/lv_draw_img.c ****             break;
 1740              		.loc 1 128 21 is_stmt 0 view .LVU581
 1741 0026 0820     		movs	r0, #8
 129:lvgl/src/draw/lv_draw_img.c ****         default:
 1742              		.loc 1 129 13 view .LVU582
 1743 0028 7047     		bx	lr
 1744              	.LVL184:
 1745              	.L79:
 109:lvgl/src/draw/lv_draw_img.c ****             break;
 1746              		.loc 1 109 21 view .LVU583
 1747 002a 2020     		movs	r0, #32
 1748              	.LVL185:
 135:lvgl/src/draw/lv_draw_img.c **** }
 1749              		.loc 1 135 5 is_stmt 1 view .LVU584
 136:lvgl/src/draw/lv_draw_img.c **** 
 1750              		.loc 1 136 1 is_stmt 0 view .LVU585
 1751 002c 7047     		bx	lr
 1752              		.cfi_endproc
 1753              	.LFE149:
 1755              		.section	.text.lv_img_cf_is_chroma_keyed,"ax",%progbits
 1756              		.align	1
 1757              		.global	lv_img_cf_is_chroma_keyed
 1758              		.syntax unified
 1759              		.thumb
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 67


 1760              		.thumb_func
 1761              		.fpu fpv4-sp-d16
 1763              	lv_img_cf_is_chroma_keyed:
 1764              	.LVL186:
 1765              	.LFB150:
 144:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 1766              		.loc 1 144 1 is_stmt 1 view -0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 145:lvgl/src/draw/lv_draw_img.c **** 
 1771              		.loc 1 145 5 view .LVU587
 147:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1772              		.loc 1 147 5 view .LVU588
 1773 0000 0328     		cmp	r0, #3
 1774 0002 06D0     		beq	.L82
 1775 0004 07D3     		bcc	.L83
 1776 0006 0638     		subs	r0, r0, #6
 1777              	.LVL187:
 147:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1778              		.loc 1 147 5 is_stmt 0 view .LVU589
 1779 0008 C0B2     		uxtb	r0, r0
 1780 000a 0428     		cmp	r0, #4
 1781 000c 05D9     		bls	.L84
 158:lvgl/src/draw/lv_draw_img.c ****             break;
 1782              		.loc 1 158 29 view .LVU590
 1783 000e 0020     		movs	r0, #0
 1784 0010 7047     		bx	lr
 1785              	.LVL188:
 1786              	.L82:
 147:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1787              		.loc 1 147 5 view .LVU591
 1788 0012 0120     		movs	r0, #1
 1789              	.LVL189:
 147:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1790              		.loc 1 147 5 view .LVU592
 1791 0014 7047     		bx	lr
 1792              	.LVL190:
 1793              	.L83:
 158:lvgl/src/draw/lv_draw_img.c ****             break;
 1794              		.loc 1 158 29 view .LVU593
 1795 0016 0020     		movs	r0, #0
 1796              	.LVL191:
 158:lvgl/src/draw/lv_draw_img.c ****             break;
 1797              		.loc 1 158 29 view .LVU594
 1798 0018 7047     		bx	lr
 1799              	.L84:
 147:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1800              		.loc 1 147 5 view .LVU595
 1801 001a 0120     		movs	r0, #1
 1802              	.LVL192:
 162:lvgl/src/draw/lv_draw_img.c **** }
 1803              		.loc 1 162 5 is_stmt 1 view .LVU596
 163:lvgl/src/draw/lv_draw_img.c **** 
 1804              		.loc 1 163 1 is_stmt 0 view .LVU597
 1805 001c 7047     		bx	lr
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 68


 1806              		.cfi_endproc
 1807              	.LFE150:
 1809              		.section	.text.lv_img_cf_has_alpha,"ax",%progbits
 1810              		.align	1
 1811              		.global	lv_img_cf_has_alpha
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu fpv4-sp-d16
 1817              	lv_img_cf_has_alpha:
 1818              	.LVL193:
 1819              	.LFB151:
 171:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 1820              		.loc 1 171 1 is_stmt 1 view -0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 172:lvgl/src/draw/lv_draw_img.c **** 
 1825              		.loc 1 172 5 view .LVU599
 174:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1826              		.loc 1 174 5 view .LVU600
 1827 0000 0E28     		cmp	r0, #14
 1828 0002 09D8     		bhi	.L87
 1829 0004 0123     		movs	r3, #1
 1830 0006 03FA00F0 		lsl	r0, r3, r0
 1831              	.LVL194:
 174:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1832              		.loc 1 174 5 is_stmt 0 view .LVU601
 1833 000a 47F6A473 		movw	r3, #32676
 1834 000e 1842     		tst	r0, r3
 1835 0010 14BF     		ite	ne
 1836 0012 0120     		movne	r0, #1
 1837 0014 0020     		moveq	r0, #0
 1838 0016 7047     		bx	lr
 1839              	.LVL195:
 1840              	.L87:
 188:lvgl/src/draw/lv_draw_img.c ****             break;
 1841              		.loc 1 188 23 view .LVU602
 1842 0018 0020     		movs	r0, #0
 1843              	.LVL196:
 192:lvgl/src/draw/lv_draw_img.c **** }
 1844              		.loc 1 192 5 is_stmt 1 view .LVU603
 193:lvgl/src/draw/lv_draw_img.c **** 
 1845              		.loc 1 193 1 is_stmt 0 view .LVU604
 1846 001a 7047     		bx	lr
 1847              		.cfi_endproc
 1848              	.LFE151:
 1850              		.section	.text.lv_img_draw_core,"ax",%progbits
 1851              		.align	1
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	lv_img_draw_core:
 1858              	.LVL197:
 1859              	.LFB153:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 69


 235:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 1860              		.loc 1 235 1 is_stmt 1 view -0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 40
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 235:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 1864              		.loc 1 235 1 is_stmt 0 view .LVU606
 1865 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1866              	.LCFI9:
 1867              		.cfi_def_cfa_offset 36
 1868              		.cfi_offset 4, -36
 1869              		.cfi_offset 5, -32
 1870              		.cfi_offset 6, -28
 1871              		.cfi_offset 7, -24
 1872              		.cfi_offset 8, -20
 1873              		.cfi_offset 9, -16
 1874              		.cfi_offset 10, -12
 1875              		.cfi_offset 11, -8
 1876              		.cfi_offset 14, -4
 1877 0004 8DB0     		sub	sp, sp, #52
 1878              	.LCFI10:
 1879              		.cfi_def_cfa_offset 88
 1880 0006 1C46     		mov	r4, r3
 236:lvgl/src/draw/lv_draw_img.c **** 
 1881              		.loc 1 236 5 is_stmt 1 view .LVU607
 236:lvgl/src/draw/lv_draw_img.c **** 
 1882              		.loc 1 236 16 is_stmt 0 view .LVU608
 1883 0008 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1884              	.LVL198:
 236:lvgl/src/draw/lv_draw_img.c **** 
 1885              		.loc 1 236 7 view .LVU609
 1886 000a 022B     		cmp	r3, #2
 1887 000c 03D8     		bhi	.L105
 236:lvgl/src/draw/lv_draw_img.c **** 
 1888              		.loc 1 236 44 view .LVU610
 1889 000e 0120     		movs	r0, #1
 1890              	.LVL199:
 1891              	.L89:
 325:lvgl/src/draw/lv_draw_img.c **** 
 1892              		.loc 1 325 1 view .LVU611
 1893 0010 0DB0     		add	sp, sp, #52
 1894              	.LCFI11:
 1895              		.cfi_remember_state
 1896              		.cfi_def_cfa_offset 36
 1897              		@ sp needed
 1898 0012 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1899              	.LVL200:
 1900              	.L105:
 1901              	.LCFI12:
 1902              		.cfi_restore_state
 325:lvgl/src/draw/lv_draw_img.c **** 
 1903              		.loc 1 325 1 view .LVU612
 1904 0016 0546     		mov	r5, r0
 1905 0018 0E46     		mov	r6, r1
 1906 001a 1046     		mov	r0, r2
 1907              	.LVL201:
 238:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 70


 1908              		.loc 1 238 5 is_stmt 1 view .LVU613
 238:lvgl/src/draw/lv_draw_img.c **** 
 1909              		.loc 1 238 36 is_stmt 0 view .LVU614
 1910 001c 2269     		ldr	r2, [r4, #16]
 1911              	.LVL202:
 238:lvgl/src/draw/lv_draw_img.c **** 
 1912              		.loc 1 238 36 view .LVU615
 1913 001e A168     		ldr	r1, [r4, #8]
 1914              	.LVL203:
 238:lvgl/src/draw/lv_draw_img.c **** 
 1915              		.loc 1 238 36 view .LVU616
 1916 0020 FFF7FEFF 		bl	_lv_img_cache_open
 1917              	.LVL204:
 240:lvgl/src/draw/lv_draw_img.c **** 
 1918              		.loc 1 240 5 is_stmt 1 view .LVU617
 240:lvgl/src/draw/lv_draw_img.c **** 
 1919              		.loc 1 240 7 is_stmt 0 view .LVU618
 1920 0024 0746     		mov	r7, r0
 1921 0026 0028     		cmp	r0, #0
 1922 0028 00F0EB80 		beq	.L103
 242:lvgl/src/draw/lv_draw_img.c ****     bool alpha_byte   = lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf);
 1923              		.loc 1 242 5 is_stmt 1 view .LVU619
 242:lvgl/src/draw/lv_draw_img.c ****     bool alpha_byte   = lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf);
 1924              		.loc 1 242 71 is_stmt 0 view .LVU620
 1925 002c 90F81490 		ldrb	r9, [r0, #20]	@ zero_extendqisi2
 1926 0030 09F01F09 		and	r9, r9, #31
 242:lvgl/src/draw/lv_draw_img.c ****     bool alpha_byte   = lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf);
 1927              		.loc 1 242 25 view .LVU621
 1928 0034 4846     		mov	r0, r9
 1929              	.LVL205:
 242:lvgl/src/draw/lv_draw_img.c ****     bool alpha_byte   = lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf);
 1930              		.loc 1 242 25 view .LVU622
 1931 0036 FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 1932              	.LVL206:
 1933 003a 8046     		mov	r8, r0
 1934              	.LVL207:
 243:lvgl/src/draw/lv_draw_img.c **** 
 1935              		.loc 1 243 5 is_stmt 1 view .LVU623
 243:lvgl/src/draw/lv_draw_img.c **** 
 1936              		.loc 1 243 25 is_stmt 0 view .LVU624
 1937 003c 4846     		mov	r0, r9
 1938 003e FFF7FEFF 		bl	lv_img_cf_has_alpha
 1939              	.LVL208:
 1940 0042 8146     		mov	r9, r0
 1941              	.LVL209:
 245:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1942              		.loc 1 245 5 is_stmt 1 view .LVU625
 245:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1943              		.loc 1 245 21 is_stmt 0 view .LVU626
 1944 0044 3A6A     		ldr	r2, [r7, #32]
 245:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1945              		.loc 1 245 7 view .LVU627
 1946 0046 42B1     		cbz	r2, .L90
 246:lvgl/src/draw/lv_draw_img.c **** 
 1947              		.loc 1 246 40 is_stmt 1 view .LVU628
 248:lvgl/src/draw/lv_draw_img.c ****     }
 1948              		.loc 1 248 9 view .LVU629
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 71


 1949 0048 3146     		mov	r1, r6
 1950 004a 2846     		mov	r0, r5
 1951 004c FFF7FEFF 		bl	show_error
 1952              	.LVL210:
 1953              	.L91:
 323:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 1954              		.loc 1 323 5 view .LVU630
 1955 0050 3846     		mov	r0, r7
 1956 0052 FFF7FEFF 		bl	draw_cleanup
 1957              	.LVL211:
 324:lvgl/src/draw/lv_draw_img.c **** }
 1958              		.loc 1 324 5 view .LVU631
 324:lvgl/src/draw/lv_draw_img.c **** }
 1959              		.loc 1 324 12 is_stmt 0 view .LVU632
 1960 0056 0120     		movs	r0, #1
 1961 0058 DAE7     		b	.L89
 1962              	.LVL212:
 1963              	.L90:
 252:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 1964              		.loc 1 252 10 is_stmt 1 view .LVU633
 252:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 1965              		.loc 1 252 26 is_stmt 0 view .LVU634
 1966 005a BB69     		ldr	r3, [r7, #24]
 252:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 1967              		.loc 1 252 12 view .LVU635
 1968 005c 002B     		cmp	r3, #0
 1969 005e 56D0     		beq	.L92
 1970              	.LBB158:
 253:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 1971              		.loc 1 253 9 is_stmt 1 view .LVU636
 254:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 1972              		.loc 1 254 9 view .LVU637
 1973              	.LVL213:
 1974              	.LBB159:
 1975              	.LBI159:
 120:lvgl/src/draw/../misc/lv_area.h **** {
 1976              		.loc 2 120 20 view .LVU638
 1977              	.LBB160:
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 1978              		.loc 2 122 5 view .LVU639
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 1979              		.loc 2 122 19 is_stmt 0 view .LVU640
 1980 0060 B5F90030 		ldrsh	r3, [r5]
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 1981              		.loc 2 122 14 view .LVU641
 1982 0064 ADF82030 		strh	r3, [sp, #32]	@ movhi
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 1983              		.loc 2 123 5 is_stmt 1 view .LVU642
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 1984              		.loc 2 123 19 is_stmt 0 view .LVU643
 1985 0068 B5F90230 		ldrsh	r3, [r5, #2]
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 1986              		.loc 2 123 14 view .LVU644
 1987 006c ADF82230 		strh	r3, [sp, #34]	@ movhi
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 1988              		.loc 2 124 5 is_stmt 1 view .LVU645
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 72


 1989              		.loc 2 124 19 is_stmt 0 view .LVU646
 1990 0070 B5F90430 		ldrsh	r3, [r5, #4]
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 1991              		.loc 2 124 14 view .LVU647
 1992 0074 ADF82430 		strh	r3, [sp, #36]	@ movhi
 125:lvgl/src/draw/../misc/lv_area.h **** }
 1993              		.loc 2 125 5 is_stmt 1 view .LVU648
 125:lvgl/src/draw/../misc/lv_area.h **** }
 1994              		.loc 2 125 19 is_stmt 0 view .LVU649
 1995 0078 B5F90630 		ldrsh	r3, [r5, #6]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 1996              		.loc 2 125 14 view .LVU650
 1997 007c ADF82630 		strh	r3, [sp, #38]	@ movhi
 1998              	.LVL214:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 1999              		.loc 2 125 14 view .LVU651
 2000              	.LBE160:
 2001              	.LBE159:
 255:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 2002              		.loc 1 255 9 is_stmt 1 view .LVU652
 255:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 2003              		.loc 1 255 28 is_stmt 0 view .LVU653
 2004 0080 2368     		ldr	r3, [r4]
 255:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 2005              		.loc 1 255 11 view .LVU654
 2006 0082 B3F1807F 		cmp	r3, #16777216
 2007 0086 11D1     		bne	.L106
 2008              	.L93:
 267:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 2009              		.loc 1 267 9 is_stmt 1 view .LVU655
 268:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, clip_area, &map_area_rot);
 2010              		.loc 1 268 9 view .LVU656
 269:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 2011              		.loc 1 269 9 view .LVU657
 269:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 2012              		.loc 1 269 20 is_stmt 0 view .LVU658
 2013 0088 08AA     		add	r2, sp, #32
 2014 008a 3146     		mov	r1, r6
 2015 008c 0AA8     		add	r0, sp, #40
 2016 008e FFF7FEFF 		bl	_lv_area_intersect
 2017              	.LVL215:
 271:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 2018              		.loc 1 271 9 is_stmt 1 view .LVU659
 271:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 2019              		.loc 1 271 11 is_stmt 0 view .LVU660
 2020 0092 0028     		cmp	r0, #0
 2021 0094 36D0     		beq	.L107
 276:lvgl/src/draw/lv_draw_img.c ****     }
 2022              		.loc 1 276 9 is_stmt 1 view .LVU661
 2023 0096 BA69     		ldr	r2, [r7, #24]
 2024 0098 CDF80490 		str	r9, [sp, #4]
 2025 009c CDF80080 		str	r8, [sp]
 2026 00a0 2346     		mov	r3, r4
 2027 00a2 0AA9     		add	r1, sp, #40
 2028 00a4 2846     		mov	r0, r5
 2029              	.LVL216:
 276:lvgl/src/draw/lv_draw_img.c ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 73


 2030              		.loc 1 276 9 is_stmt 0 view .LVU662
 2031 00a6 FFF7FEFF 		bl	lv_draw_map
 2032              	.LVL217:
 2033              	.LBE158:
 2034 00aa D1E7     		b	.L91
 2035              	.L106:
 2036              	.LBB166:
 2037              	.LBB161:
 256:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 2038              		.loc 1 256 13 is_stmt 1 view .LVU663
 2039              	.LVL218:
 2040              	.LBB162:
 2041              	.LBI162:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 2042              		.loc 2 133 26 view .LVU664
 2043              	.LBB163:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2044              		.loc 2 135 5 view .LVU665
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2045              		.loc 2 135 31 is_stmt 0 view .LVU666
 2046 00ac A988     		ldrh	r1, [r5, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2047              		.loc 2 135 44 view .LVU667
 2048 00ae 2B88     		ldrh	r3, [r5]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2049              		.loc 2 135 36 view .LVU668
 2050 00b0 C91A     		subs	r1, r1, r3
 2051 00b2 89B2     		uxth	r1, r1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2052              		.loc 2 135 49 view .LVU669
 2053 00b4 0131     		adds	r1, r1, #1
 2054              	.LVL219:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2055              		.loc 2 135 49 view .LVU670
 2056              	.LBE163:
 2057              	.LBE162:
 257:lvgl/src/draw/lv_draw_img.c **** 
 2058              		.loc 1 257 13 is_stmt 1 view .LVU671
 2059              	.LBB164:
 2060              	.LBI164:
 143:lvgl/src/draw/../misc/lv_area.h **** {
 2061              		.loc 2 143 26 view .LVU672
 2062              	.LBB165:
 2063              		.loc 2 145 5 view .LVU673
 2064              		.loc 2 145 31 is_stmt 0 view .LVU674
 2065 00b6 EA88     		ldrh	r2, [r5, #6]
 2066              		.loc 2 145 44 view .LVU675
 2067 00b8 6B88     		ldrh	r3, [r5, #2]
 2068              		.loc 2 145 36 view .LVU676
 2069 00ba D21A     		subs	r2, r2, r3
 2070 00bc 92B2     		uxth	r2, r2
 2071              		.loc 2 145 49 view .LVU677
 2072 00be 0132     		adds	r2, r2, #1
 2073              	.LVL220:
 2074              		.loc 2 145 49 view .LVU678
 2075              	.LBE165:
 2076              	.LBE164:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 74


 259:lvgl/src/draw/lv_draw_img.c **** 
 2077              		.loc 1 259 13 is_stmt 1 view .LVU679
 259:lvgl/src/draw/lv_draw_img.c **** 
 2078              		.loc 1 259 75 is_stmt 0 view .LVU680
 2079 00c0 2046     		mov	r0, r4
 259:lvgl/src/draw/lv_draw_img.c **** 
 2080              		.loc 1 259 13 view .LVU681
 2081 00c2 30F9043B 		ldrsh	r3, [r0], #4
 2082 00c6 0190     		str	r0, [sp, #4]
 2083 00c8 6088     		ldrh	r0, [r4, #2]
 2084 00ca 0090     		str	r0, [sp]
 2085 00cc 12B2     		sxth	r2, r2
 2086              	.LVL221:
 259:lvgl/src/draw/lv_draw_img.c **** 
 2087              		.loc 1 259 13 view .LVU682
 2088 00ce 09B2     		sxth	r1, r1
 2089              	.LVL222:
 259:lvgl/src/draw/lv_draw_img.c **** 
 2090              		.loc 1 259 13 view .LVU683
 2091 00d0 08A8     		add	r0, sp, #32
 2092 00d2 FFF7FEFF 		bl	_lv_img_buf_get_transformed_area
 2093              	.LVL223:
 261:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 2094              		.loc 1 261 13 is_stmt 1 view .LVU684
 261:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 2095              		.loc 1 261 38 is_stmt 0 view .LVU685
 2096 00d6 2A88     		ldrh	r2, [r5]
 261:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 2097              		.loc 1 261 29 view .LVU686
 2098 00d8 BDF82030 		ldrh	r3, [sp, #32]
 2099 00dc 1344     		add	r3, r3, r2
 2100 00de ADF82030 		strh	r3, [sp, #32]	@ movhi
 262:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 2101              		.loc 1 262 13 is_stmt 1 view .LVU687
 262:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 2102              		.loc 1 262 38 is_stmt 0 view .LVU688
 2103 00e2 6B88     		ldrh	r3, [r5, #2]
 262:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 2104              		.loc 1 262 29 view .LVU689
 2105 00e4 BDF82210 		ldrh	r1, [sp, #34]
 2106 00e8 1944     		add	r1, r1, r3
 2107 00ea ADF82210 		strh	r1, [sp, #34]	@ movhi
 263:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 2108              		.loc 1 263 13 is_stmt 1 view .LVU690
 263:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 2109              		.loc 1 263 29 is_stmt 0 view .LVU691
 2110 00ee BDF82410 		ldrh	r1, [sp, #36]
 2111 00f2 0A44     		add	r2, r2, r1
 2112 00f4 ADF82420 		strh	r2, [sp, #36]	@ movhi
 264:lvgl/src/draw/lv_draw_img.c ****         }
 2113              		.loc 1 264 13 is_stmt 1 view .LVU692
 264:lvgl/src/draw/lv_draw_img.c ****         }
 2114              		.loc 1 264 29 is_stmt 0 view .LVU693
 2115 00f8 BDF82620 		ldrh	r2, [sp, #38]
 2116 00fc 1344     		add	r3, r3, r2
 2117 00fe ADF82630 		strh	r3, [sp, #38]	@ movhi
 2118 0102 C1E7     		b	.L93
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 75


 2119              	.LVL224:
 2120              	.L107:
 264:lvgl/src/draw/lv_draw_img.c ****         }
 2121              		.loc 1 264 29 view .LVU694
 2122              	.LBE161:
 272:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 2123              		.loc 1 272 13 is_stmt 1 view .LVU695
 2124 0104 3846     		mov	r0, r7
 2125              	.LVL225:
 272:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 2126              		.loc 1 272 13 is_stmt 0 view .LVU696
 2127 0106 FFF7FEFF 		bl	draw_cleanup
 2128              	.LVL226:
 273:lvgl/src/draw/lv_draw_img.c ****         }
 2129              		.loc 1 273 13 is_stmt 1 view .LVU697
 273:lvgl/src/draw/lv_draw_img.c ****         }
 2130              		.loc 1 273 20 is_stmt 0 view .LVU698
 2131 010a 0120     		movs	r0, #1
 2132 010c 80E7     		b	.L89
 2133              	.L92:
 273:lvgl/src/draw/lv_draw_img.c ****         }
 2134              		.loc 1 273 20 view .LVU699
 2135              	.LBE166:
 2136              	.LBB167:
 280:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 2137              		.loc 1 280 9 is_stmt 1 view .LVU700
 281:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, clip_area, coords);
 2138              		.loc 1 281 9 view .LVU701
 282:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 2139              		.loc 1 282 9 view .LVU702
 282:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 2140              		.loc 1 282 20 is_stmt 0 view .LVU703
 2141 010e 2A46     		mov	r2, r5
 2142 0110 3146     		mov	r1, r6
 2143 0112 06A8     		add	r0, sp, #24
 2144 0114 FFF7FEFF 		bl	_lv_area_intersect
 2145              	.LVL227:
 284:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 2146              		.loc 1 284 9 is_stmt 1 view .LVU704
 284:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 2147              		.loc 1 284 11 is_stmt 0 view .LVU705
 2148 0118 80B3     		cbz	r0, .L108
 289:lvgl/src/draw/lv_draw_img.c **** 
 2149              		.loc 1 289 9 is_stmt 1 view .LVU706
 2150              	.LVL228:
 2151              	.LBB168:
 2152              	.LBI168:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 2153              		.loc 2 133 26 view .LVU707
 2154              	.LBB169:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2155              		.loc 2 135 5 view .LVU708
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2156              		.loc 2 135 31 is_stmt 0 view .LVU709
 2157 011a BDF81C30 		ldrh	r3, [sp, #28]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2158              		.loc 2 135 44 view .LVU710
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 76


 2159 011e BDF81820 		ldrh	r2, [sp, #24]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2160              		.loc 2 135 36 view .LVU711
 2161 0122 9B1A     		subs	r3, r3, r2
 2162 0124 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2163              		.loc 2 135 49 view .LVU712
 2164 0126 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2165              		.loc 2 135 12 view .LVU713
 2166 0128 1BB2     		sxth	r3, r3
 2167 012a 0593     		str	r3, [sp, #20]
 2168              	.LVL229:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2169              		.loc 2 135 12 view .LVU714
 2170              	.LBE169:
 2171              	.LBE168:
 291:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 2172              		.loc 1 291 9 is_stmt 1 view .LVU715
 291:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 2173              		.loc 1 291 9 is_stmt 0 view .LVU716
 2174              	.LBE167:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2175              		.loc 2 135 5 is_stmt 1 view .LVU717
 2176              	.LBB174:
 291:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 2177              		.loc 1 291 26 is_stmt 0 view .LVU718
 2178 012c 9800     		lsls	r0, r3, #2
 2179              	.LVL230:
 291:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 2180              		.loc 1 291 26 view .LVU719
 2181 012e FFF7FEFF 		bl	lv_mem_buf_get
 2182              	.LVL231:
 291:lvgl/src/draw/lv_draw_img.c ****                                          LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible 
 2183              		.loc 1 291 26 view .LVU720
 2184 0132 8346     		mov	fp, r0
 2185              	.LVL232:
 294:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 2186              		.loc 1 294 9 is_stmt 1 view .LVU721
 295:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 2187              		.loc 1 295 9 view .LVU722
 2188              	.LBB170:
 2189              	.LBI170:
 120:lvgl/src/draw/../misc/lv_area.h **** {
 2190              		.loc 2 120 20 view .LVU723
 2191              	.LBB171:
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 2192              		.loc 2 122 5 view .LVU724
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 2193              		.loc 2 122 19 is_stmt 0 view .LVU725
 2194 0134 BDF91830 		ldrsh	r3, [sp, #24]
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 2195              		.loc 2 122 14 view .LVU726
 2196 0138 ADF82030 		strh	r3, [sp, #32]	@ movhi
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 2197              		.loc 2 123 5 is_stmt 1 view .LVU727
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 77


 2198              		.loc 2 123 19 is_stmt 0 view .LVU728
 2199 013c BDF91A30 		ldrsh	r3, [sp, #26]
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 2200              		.loc 2 123 14 view .LVU729
 2201 0140 ADF82230 		strh	r3, [sp, #34]	@ movhi
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 2202              		.loc 2 124 5 is_stmt 1 view .LVU730
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 2203              		.loc 2 124 19 is_stmt 0 view .LVU731
 2204 0144 BDF91C30 		ldrsh	r3, [sp, #28]
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 2205              		.loc 2 124 14 view .LVU732
 2206 0148 ADF82430 		strh	r3, [sp, #36]	@ movhi
 125:lvgl/src/draw/../misc/lv_area.h **** }
 2207              		.loc 2 125 5 is_stmt 1 view .LVU733
 125:lvgl/src/draw/../misc/lv_area.h **** }
 2208              		.loc 2 125 19 is_stmt 0 view .LVU734
 2209 014c BDF91E30 		ldrsh	r3, [sp, #30]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 2210              		.loc 2 125 14 view .LVU735
 2211 0150 ADF82630 		strh	r3, [sp, #38]	@ movhi
 2212              	.LVL233:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 2213              		.loc 2 125 14 view .LVU736
 2214              	.LBE171:
 2215              	.LBE170:
 296:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 2216              		.loc 1 296 9 is_stmt 1 view .LVU737
 2217 0154 0121     		movs	r1, #1
 2218 0156 08A8     		add	r0, sp, #32
 2219              	.LVL234:
 296:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 2220              		.loc 1 296 9 is_stmt 0 view .LVU738
 2221 0158 FFF7FEFF 		bl	lv_area_set_height
 2222              	.LVL235:
 297:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 2223              		.loc 1 297 9 is_stmt 1 view .LVU739
 297:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 2224              		.loc 1 297 29 is_stmt 0 view .LVU740
 2225 015c BDF91830 		ldrsh	r3, [sp, #24]
 2226 0160 0393     		str	r3, [sp, #12]
 297:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 2227              		.loc 1 297 41 view .LVU741
 2228 0162 B5F90030 		ldrsh	r3, [r5]
 2229 0166 0493     		str	r3, [sp, #16]
 2230              	.LVL236:
 298:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 2231              		.loc 1 298 9 is_stmt 1 view .LVU742
 298:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 2232              		.loc 1 298 29 is_stmt 0 view .LVU743
 2233 0168 BDF91AA0 		ldrsh	r10, [sp, #26]
 298:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 2234              		.loc 1 298 41 view .LVU744
 2235 016c B5F90250 		ldrsh	r5, [r5, #2]
 2236              	.LVL237:
 298:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 2237              		.loc 1 298 17 view .LVU745
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 78


 2238 0170 AAEB0505 		sub	r5, r10, r5
 2239              	.LVL238:
 299:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 2240              		.loc 1 299 9 is_stmt 1 view .LVU746
 300:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 2241              		.loc 1 300 9 view .LVU747
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2242              		.loc 1 301 9 view .LVU748
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2243              		.loc 1 301 9 is_stmt 0 view .LVU749
 2244 0174 2346     		mov	r3, r4
 2245 0176 5C46     		mov	r4, fp
 2246              	.LVL239:
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2247              		.loc 1 301 9 view .LVU750
 2248 0178 9B46     		mov	fp, r3
 2249              	.LVL240:
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2250              		.loc 1 301 9 view .LVU751
 2251 017a 11E0     		b	.L97
 2252              	.LVL241:
 2253              	.L108:
 285:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 2254              		.loc 1 285 13 is_stmt 1 view .LVU752
 2255 017c 3846     		mov	r0, r7
 2256              	.LVL242:
 285:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 2257              		.loc 1 285 13 is_stmt 0 view .LVU753
 2258 017e FFF7FEFF 		bl	draw_cleanup
 2259              	.LVL243:
 286:lvgl/src/draw/lv_draw_img.c ****         }
 2260              		.loc 1 286 13 is_stmt 1 view .LVU754
 286:lvgl/src/draw/lv_draw_img.c ****         }
 2261              		.loc 1 286 20 is_stmt 0 view .LVU755
 2262 0182 0120     		movs	r0, #1
 2263 0184 44E7     		b	.L89
 2264              	.LVL244:
 2265              	.L110:
 2266              	.LBB172:
 308:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 2267              		.loc 1 308 17 is_stmt 1 view .LVU756
 2268 0186 3846     		mov	r0, r7
 2269              	.LVL245:
 308:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 2270              		.loc 1 308 17 is_stmt 0 view .LVU757
 2271 0188 FFF7FEFF 		bl	lv_img_decoder_close
 2272              	.LVL246:
 309:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 2273              		.loc 1 309 62 is_stmt 1 view .LVU758
 310:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
 2274              		.loc 1 310 17 view .LVU759
 2275 018c 2046     		mov	r0, r4
 2276 018e FFF7FEFF 		bl	lv_mem_buf_release
 2277              	.LVL247:
 311:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 2278              		.loc 1 311 17 view .LVU760
 2279 0192 3846     		mov	r0, r7
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 79


 2280 0194 FFF7FEFF 		bl	draw_cleanup
 2281              	.LVL248:
 312:lvgl/src/draw/lv_draw_img.c ****             }
 2282              		.loc 1 312 17 view .LVU761
 312:lvgl/src/draw/lv_draw_img.c ****             }
 2283              		.loc 1 312 24 is_stmt 0 view .LVU762
 2284 0198 0020     		movs	r0, #0
 2285 019a 39E7     		b	.L89
 2286              	.L99:
 312:lvgl/src/draw/lv_draw_img.c ****             }
 2287              		.loc 1 312 24 view .LVU763
 2288              	.LBE172:
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2289              		.loc 1 301 52 is_stmt 1 discriminator 2 view .LVU764
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2290              		.loc 1 301 55 is_stmt 0 discriminator 2 view .LVU765
 2291 019c 0AF1010A 		add	r10, r10, #1
 2292              	.LVL249:
 2293              	.L97:
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2294              		.loc 1 301 32 is_stmt 1 discriminator 1 view .LVU766
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2295              		.loc 1 301 47 is_stmt 0 discriminator 1 view .LVU767
 2296 01a0 BDF91E30 		ldrsh	r3, [sp, #30]
 301:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 2297              		.loc 1 301 9 discriminator 1 view .LVU768
 2298 01a4 5345     		cmp	r3, r10
 2299 01a6 28DB     		blt	.L109
 2300              	.LBB173:
 302:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area, &line);
 2301              		.loc 1 302 13 is_stmt 1 view .LVU769
 303:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 2302              		.loc 1 303 13 view .LVU770
 303:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 2303              		.loc 1 303 24 is_stmt 0 view .LVU771
 2304 01a8 08AA     		add	r2, sp, #32
 2305 01aa 3146     		mov	r1, r6
 2306 01ac 0AA8     		add	r0, sp, #40
 2307 01ae FFF7FEFF 		bl	_lv_area_intersect
 2308              	.LVL250:
 304:lvgl/src/draw/lv_draw_img.c **** 
 2309              		.loc 1 304 13 is_stmt 1 view .LVU772
 304:lvgl/src/draw/lv_draw_img.c **** 
 2310              		.loc 1 304 15 is_stmt 0 view .LVU773
 2311 01b2 0028     		cmp	r0, #0
 2312 01b4 F2D0     		beq	.L99
 306:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 2313              		.loc 1 306 13 is_stmt 1 view .LVU774
 306:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 2314              		.loc 1 306 24 is_stmt 0 view .LVU775
 2315 01b6 039B     		ldr	r3, [sp, #12]
 2316 01b8 049A     		ldr	r2, [sp, #16]
 2317 01ba 991A     		subs	r1, r3, r2
 2318 01bc 0094     		str	r4, [sp]
 2319 01be 059B     		ldr	r3, [sp, #20]
 2320 01c0 2AB2     		sxth	r2, r5
 2321 01c2 09B2     		sxth	r1, r1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 80


 2322 01c4 3846     		mov	r0, r7
 2323              	.LVL251:
 306:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 2324              		.loc 1 306 24 view .LVU776
 2325 01c6 FFF7FEFF 		bl	lv_img_decoder_read_line
 2326              	.LVL252:
 307:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 2327              		.loc 1 307 13 is_stmt 1 view .LVU777
 307:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 2328              		.loc 1 307 15 is_stmt 0 view .LVU778
 2329 01ca 0128     		cmp	r0, #1
 2330 01cc DBD1     		bne	.L110
 315:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 2331              		.loc 1 315 13 is_stmt 1 view .LVU779
 2332 01ce CDF80490 		str	r9, [sp, #4]
 2333 01d2 CDF80080 		str	r8, [sp]
 2334 01d6 5B46     		mov	r3, fp
 2335 01d8 2246     		mov	r2, r4
 2336 01da 0AA9     		add	r1, sp, #40
 2337 01dc 08A8     		add	r0, sp, #32
 2338              	.LVL253:
 315:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 2339              		.loc 1 315 13 is_stmt 0 view .LVU780
 2340 01de FFF7FEFF 		bl	lv_draw_map
 2341              	.LVL254:
 316:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 2342              		.loc 1 316 13 is_stmt 1 view .LVU781
 316:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 2343              		.loc 1 316 17 is_stmt 0 view .LVU782
 2344 01e2 BDF92230 		ldrsh	r3, [sp, #34]
 316:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 2345              		.loc 1 316 20 view .LVU783
 2346 01e6 0133     		adds	r3, r3, #1
 2347 01e8 ADF82230 		strh	r3, [sp, #34]	@ movhi
 317:lvgl/src/draw/lv_draw_img.c ****             y++;
 2348              		.loc 1 317 13 is_stmt 1 view .LVU784
 317:lvgl/src/draw/lv_draw_img.c ****             y++;
 2349              		.loc 1 317 17 is_stmt 0 view .LVU785
 2350 01ec BDF92630 		ldrsh	r3, [sp, #38]
 317:lvgl/src/draw/lv_draw_img.c ****             y++;
 2351              		.loc 1 317 20 view .LVU786
 2352 01f0 0133     		adds	r3, r3, #1
 2353 01f2 ADF82630 		strh	r3, [sp, #38]	@ movhi
 318:lvgl/src/draw/lv_draw_img.c ****         }
 2354              		.loc 1 318 13 is_stmt 1 view .LVU787
 318:lvgl/src/draw/lv_draw_img.c ****         }
 2355              		.loc 1 318 14 is_stmt 0 view .LVU788
 2356 01f6 0135     		adds	r5, r5, #1
 2357              	.LVL255:
 318:lvgl/src/draw/lv_draw_img.c ****         }
 2358              		.loc 1 318 14 view .LVU789
 2359 01f8 D0E7     		b	.L99
 2360              	.L109:
 318:lvgl/src/draw/lv_draw_img.c ****         }
 2361              		.loc 1 318 14 view .LVU790
 2362              	.LBE173:
 320:lvgl/src/draw/lv_draw_img.c ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 81


 2363              		.loc 1 320 9 is_stmt 1 view .LVU791
 2364 01fa 2046     		mov	r0, r4
 2365 01fc FFF7FEFF 		bl	lv_mem_buf_release
 2366              	.LVL256:
 2367 0200 26E7     		b	.L91
 2368              	.LVL257:
 2369              	.L103:
 320:lvgl/src/draw/lv_draw_img.c ****     }
 2370              		.loc 1 320 9 is_stmt 0 view .LVU792
 2371              	.LBE174:
 240:lvgl/src/draw/lv_draw_img.c **** 
 2372              		.loc 1 240 29 view .LVU793
 2373 0202 0020     		movs	r0, #0
 2374              	.LVL258:
 240:lvgl/src/draw/lv_draw_img.c **** 
 2375              		.loc 1 240 29 view .LVU794
 2376 0204 04E7     		b	.L89
 2377              		.cfi_endproc
 2378              	.LFE153:
 2380              		.section	.rodata.lv_draw_img.str1.4,"aMS",%progbits,1
 2381              		.align	2
 2382              	.LC0:
 2383 0000 4E6F0A64 		.ascii	"No\012data\000"
 2383      61746100 
 2384              		.section	.text.lv_draw_img,"ax",%progbits
 2385              		.align	1
 2386              		.global	lv_draw_img
 2387              		.syntax unified
 2388              		.thumb
 2389              		.thumb_func
 2390              		.fpu fpv4-sp-d16
 2392              	lv_draw_img:
 2393              	.LVL259:
 2394              	.LFB148:
  74:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 2395              		.loc 1 74 1 is_stmt 1 view -0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
  74:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 2399              		.loc 1 74 1 is_stmt 0 view .LVU796
 2400 0000 38B5     		push	{r3, r4, r5, lr}
 2401              	.LCFI13:
 2402              		.cfi_def_cfa_offset 16
 2403              		.cfi_offset 3, -16
 2404              		.cfi_offset 4, -12
 2405              		.cfi_offset 5, -8
 2406              		.cfi_offset 14, -4
 2407 0002 0546     		mov	r5, r0
 2408 0004 0C46     		mov	r4, r1
  75:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 2409              		.loc 1 75 5 is_stmt 1 view .LVU797
  75:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 2410              		.loc 1 75 7 is_stmt 0 view .LVU798
 2411 0006 1AB1     		cbz	r2, .L115
  81:lvgl/src/draw/lv_draw_img.c **** 
 2412              		.loc 1 81 5 is_stmt 1 view .LVU799
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 82


  81:lvgl/src/draw/lv_draw_img.c **** 
 2413              		.loc 1 81 11 is_stmt 0 view .LVU800
 2414 0008 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 2415              	.LVL260:
  81:lvgl/src/draw/lv_draw_img.c **** 
 2416              		.loc 1 81 7 view .LVU801
 2417 000a 0229     		cmp	r1, #2
 2418 000c 04D8     		bhi	.L116
 2419              	.LVL261:
 2420              	.L111:
  91:lvgl/src/draw/lv_draw_img.c **** 
 2421              		.loc 1 91 1 view .LVU802
 2422 000e 38BD     		pop	{r3, r4, r5, pc}
 2423              	.LVL262:
 2424              	.L115:
  76:lvgl/src/draw/lv_draw_img.c ****         show_error(coords, mask, "No\ndata");
 2425              		.loc 1 76 47 is_stmt 1 view .LVU803
  77:lvgl/src/draw/lv_draw_img.c ****         return;
 2426              		.loc 1 77 9 view .LVU804
 2427 0010 074A     		ldr	r2, .L117
 2428              	.LVL263:
  77:lvgl/src/draw/lv_draw_img.c ****         return;
 2429              		.loc 1 77 9 is_stmt 0 view .LVU805
 2430 0012 FFF7FEFF 		bl	show_error
 2431              	.LVL264:
  78:lvgl/src/draw/lv_draw_img.c ****     }
 2432              		.loc 1 78 9 is_stmt 1 view .LVU806
 2433 0016 FAE7     		b	.L111
 2434              	.LVL265:
 2435              	.L116:
  83:lvgl/src/draw/lv_draw_img.c ****     res = lv_img_draw_core(coords, mask, src, dsc);
 2436              		.loc 1 83 5 view .LVU807
  84:lvgl/src/draw/lv_draw_img.c **** 
 2437              		.loc 1 84 5 view .LVU808
  84:lvgl/src/draw/lv_draw_img.c **** 
 2438              		.loc 1 84 11 is_stmt 0 view .LVU809
 2439 0018 2146     		mov	r1, r4
 2440 001a 2846     		mov	r0, r5
 2441              	.LVL266:
  84:lvgl/src/draw/lv_draw_img.c **** 
 2442              		.loc 1 84 11 view .LVU810
 2443 001c FFF7FEFF 		bl	lv_img_draw_core
 2444              	.LVL267:
  86:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 2445              		.loc 1 86 5 is_stmt 1 view .LVU811
  86:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 2446              		.loc 1 86 7 is_stmt 0 view .LVU812
 2447 0020 0028     		cmp	r0, #0
 2448 0022 F4D1     		bne	.L111
  87:lvgl/src/draw/lv_draw_img.c ****         show_error(coords, mask, "No\ndata");
 2449              		.loc 1 87 40 is_stmt 1 view .LVU813
  88:lvgl/src/draw/lv_draw_img.c ****         return;
 2450              		.loc 1 88 9 view .LVU814
 2451 0024 024A     		ldr	r2, .L117
 2452 0026 2146     		mov	r1, r4
 2453 0028 2846     		mov	r0, r5
 2454              	.LVL268:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 83


  88:lvgl/src/draw/lv_draw_img.c ****         return;
 2455              		.loc 1 88 9 is_stmt 0 view .LVU815
 2456 002a FFF7FEFF 		bl	show_error
 2457              	.LVL269:
  89:lvgl/src/draw/lv_draw_img.c ****     }
 2458              		.loc 1 89 9 is_stmt 1 view .LVU816
 2459 002e EEE7     		b	.L111
 2460              	.L118:
 2461              		.align	2
 2462              	.L117:
 2463 0030 00000000 		.word	.LC0
 2464              		.cfi_endproc
 2465              	.LFE148:
 2467              		.section	.text.lv_img_src_get_type,"ax",%progbits
 2468              		.align	1
 2469              		.global	lv_img_src_get_type
 2470              		.syntax unified
 2471              		.thumb
 2472              		.thumb_func
 2473              		.fpu fpv4-sp-d16
 2475              	lv_img_src_get_type:
 2476              	.LVL270:
 2477              	.LFB152:
 204:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 2478              		.loc 1 204 1 view -0
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 0
 2481              		@ frame_needed = 0, uses_anonymous_args = 0
 2482              		@ link register save eliminated.
 205:lvgl/src/draw/lv_draw_img.c **** 
 2483              		.loc 1 205 5 view .LVU818
 207:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 2484              		.loc 1 207 5 view .LVU819
 207:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 2485              		.loc 1 207 7 is_stmt 0 view .LVU820
 2486 0000 60B1     		cbz	r0, .L121
 208:lvgl/src/draw/lv_draw_img.c **** 
 2487              		.loc 1 208 5 is_stmt 1 view .LVU821
 2488              	.LVL271:
 211:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 2489              		.loc 1 211 5 view .LVU822
 211:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 2490              		.loc 1 211 12 is_stmt 0 view .LVU823
 2491 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 211:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 2492              		.loc 1 211 24 view .LVU824
 2493 0004 A2F12003 		sub	r3, r2, #32
 2494 0008 DBB2     		uxtb	r3, r3
 211:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 2495              		.loc 1 211 7 view .LVU825
 2496 000a 5F2B     		cmp	r3, #95
 2497 000c 08D9     		bls	.L122
 214:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_SYMBOL; /*Symbols begins after 0x7F*/
 2498              		.loc 1 214 10 is_stmt 1 view .LVU826
 214:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_SYMBOL; /*Symbols begins after 0x7F*/
 2499              		.loc 1 214 12 is_stmt 0 view .LVU827
 2500 000e 12F0800F 		tst	r2, #128
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 84


 2501 0012 01D1     		bne	.L124
 218:lvgl/src/draw/lv_draw_img.c ****     }
 2502              		.loc 1 218 22 view .LVU828
 2503 0014 0020     		movs	r0, #0
 2504              	.LVL272:
 226:lvgl/src/draw/lv_draw_img.c **** 
 2505              		.loc 1 226 1 view .LVU829
 2506 0016 7047     		bx	lr
 2507              	.LVL273:
 2508              	.L124:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 2509              		.loc 1 215 22 view .LVU830
 2510 0018 0220     		movs	r0, #2
 2511              	.LVL274:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 2512              		.loc 1 215 22 view .LVU831
 2513 001a 7047     		bx	lr
 2514              	.LVL275:
 2515              	.L121:
 207:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 2516              		.loc 1 207 28 view .LVU832
 2517 001c 0320     		movs	r0, #3
 2518              	.LVL276:
 207:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 2519              		.loc 1 207 28 view .LVU833
 2520 001e 7047     		bx	lr
 2521              	.LVL277:
 2522              	.L122:
 212:lvgl/src/draw/lv_draw_img.c ****     }
 2523              		.loc 1 212 22 view .LVU834
 2524 0020 0120     		movs	r0, #1
 2525              	.LVL278:
 212:lvgl/src/draw/lv_draw_img.c ****     }
 2526              		.loc 1 212 22 view .LVU835
 2527 0022 7047     		bx	lr
 2528              		.cfi_endproc
 2529              	.LFE152:
 2531              		.text
 2532              	.Letext0:
 2533              		.file 4 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machin
 2534              		.file 5 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_s
 2535              		.file 6 "lvgl/src/draw/../misc/lv_types.h"
 2536              		.file 7 "lvgl/src/draw/lv_img_buf.h"
 2537              		.file 8 "lvgl/src/draw/lv_img_decoder.h"
 2538              		.file 9 "lvgl/src/draw/../misc/../font/lv_font.h"
 2539              		.file 10 "lvgl/src/draw/../misc/lv_txt.h"
 2540              		.file 11 "lvgl/src/draw/../misc/lv_bidi.h"
 2541              		.file 12 "lvgl/src/draw/../misc/lv_style.h"
 2542              		.file 13 "lvgl/src/draw/lv_draw_mask.h"
 2543              		.file 14 "lvgl/src/draw/lv_draw_img.h"
 2544              		.file 15 "lvgl/src/draw/lv_img_cache.h"
 2545              		.file 16 "lvgl/src/draw/../hal/../misc/lv_ll.h"
 2546              		.file 17 "lvgl/src/draw/../hal/../misc/lv_timer.h"
 2547              		.file 18 "lvgl/src/draw/../hal/lv_hal_disp.h"
 2548              		.file 19 "lvgl/src/draw/../core/lv_obj.h"
 2549              		.file 20 "lvgl/src/draw/../core/lv_group.h"
 2550              		.file 21 "lvgl/src/draw/../core/lv_obj_scroll.h"
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 85


 2551              		.file 22 "lvgl/src/draw/../core/lv_obj_style.h"
 2552              		.file 23 "lvgl/src/draw/../core/../draw/lv_draw_rect.h"
 2553              		.file 24 "lvgl/src/draw/../core/../draw/lv_draw_label.h"
 2554              		.file 25 "lvgl/src/draw/../core/lv_obj_class.h"
 2555              		.file 26 "lvgl/src/draw/../core/lv_event.h"
 2556              		.file 27 "lvgl/src/draw/../hal/../misc/lv_mem.h"
 2557              		.file 28 "lvgl/src/draw/lv_draw_blend.h"
 2558              		.file 29 "lvgl/src/draw/../core/lv_refr.h"
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s 			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_img.c
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:18     .text.draw_cleanup:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:25     .text.draw_cleanup:0000000000000000 draw_cleanup
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:48     .text.lv_draw_map:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:54     .text.lv_draw_map:0000000000000000 lv_draw_map
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1516   .text.show_error:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1522   .text.show_error:0000000000000000 show_error
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1602   .text.lv_draw_img_dsc_init:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1609   .text.lv_draw_img_dsc_init:0000000000000000 lv_draw_img_dsc_init
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1672   .text.lv_img_cf_get_px_size:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1679   .text.lv_img_cf_get_px_size:0000000000000000 lv_img_cf_get_px_size
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1696   .text.lv_img_cf_get_px_size:000000000000000a $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1756   .text.lv_img_cf_is_chroma_keyed:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1763   .text.lv_img_cf_is_chroma_keyed:0000000000000000 lv_img_cf_is_chroma_keyed
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1810   .text.lv_img_cf_has_alpha:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1817   .text.lv_img_cf_has_alpha:0000000000000000 lv_img_cf_has_alpha
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1851   .text.lv_img_draw_core:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1857   .text.lv_img_draw_core:0000000000000000 lv_img_draw_core
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2381   .rodata.lv_draw_img.str1.4:0000000000000000 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2385   .text.lv_draw_img:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2392   .text.lv_draw_img:0000000000000000 lv_draw_img
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2463   .text.lv_draw_img:0000000000000030 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2468   .text.lv_img_src_get_type:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:2475   .text.lv_img_src_get_type:0000000000000000 lv_img_src_get_type
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1707   .text.lv_img_cf_get_px_size:0000000000000015 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccTuEBg8.s:1707   .text.lv_img_cf_get_px_size:0000000000000016 $t

UNDEFINED SYMBOLS
lv_img_decoder_close
_lv_refr_get_disp_refreshing
lv_disp_get_draw_buf
lv_draw_mask_get_cnt
lv_disp_get_hor_res
lv_area_get_size
lv_mem_buf_get
lv_memset_00
_lv_blend_map
lv_mem_buf_release
_lv_img_buf_transform_init
lv_memset_ff
_lv_img_buf_transform
lv_draw_mask_apply
lv_draw_rect_dsc_init
lv_draw_rect
lv_draw_label_dsc_init
lv_draw_label
_lv_img_cache_open
_lv_area_intersect
_lv_img_buf_get_transformed_area
lv_area_set_height
lv_img_decoder_read_line
