ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"setup_scr_screen.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.setup_scr_screen.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 73637265 		.ascii	"screen1\000"
  22      656E3100 
  23              		.align	2
  24              	.LC1:
  25 0008 4E657874 		.ascii	"Next Screen\000"
  25      20536372 
  25      65656E00 
  26              		.align	2
  27              	.LC2:
  28 0014 53656E64 		.ascii	"Send\000"
  28      00
  29 0019 000000   		.align	2
  30              	.LC3:
  31 001c 00       		.ascii	"\000"
  32              		.section	.text.setup_scr_screen,"ax",%progbits
  33              		.align	1
  34              		.global	setup_scr_screen
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  39              	setup_scr_screen:
  40              	.LVL0:
  41              	.LFB187:
  42              		.file 1 "generated/setup_scr_screen.c"
   1:generated/setup_scr_screen.c **** /*
   2:generated/setup_scr_screen.c ****  * Copyright 2023 NXP
   3:generated/setup_scr_screen.c ****  * SPDX-License-Identifier: MIT
   4:generated/setup_scr_screen.c ****  * The auto-generated can only be used on NXP devices
   5:generated/setup_scr_screen.c ****  */
   6:generated/setup_scr_screen.c **** 
   7:generated/setup_scr_screen.c **** #include "lvgl.h"
   8:generated/setup_scr_screen.c **** #include <stdio.h>
   9:generated/setup_scr_screen.c **** #include "gui_guider.h"
  10:generated/setup_scr_screen.c **** #include "events_init.h"
  11:generated/setup_scr_screen.c **** #include "../custom/custom.h"
  12:generated/setup_scr_screen.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 2


  13:generated/setup_scr_screen.c **** 
  14:generated/setup_scr_screen.c **** void setup_scr_screen(lv_ui *ui){
  43              		.loc 1 14 33 view -0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
  47              		.loc 1 14 33 is_stmt 0 view .LVU1
  48 0000 70B5     		push	{r4, r5, r6, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 16
  51              		.cfi_offset 4, -16
  52              		.cfi_offset 5, -12
  53              		.cfi_offset 6, -8
  54              		.cfi_offset 14, -4
  55 0002 0446     		mov	r4, r0
  15:generated/setup_scr_screen.c **** 
  16:generated/setup_scr_screen.c **** 	//Write codes screen
  17:generated/setup_scr_screen.c **** 	ui->screen = lv_obj_create(NULL);
  56              		.loc 1 17 2 is_stmt 1 view .LVU2
  57              		.loc 1 17 15 is_stmt 0 view .LVU3
  58 0004 0020     		movs	r0, #0
  59              	.LVL1:
  60              		.loc 1 17 15 view .LVU4
  61 0006 FFF7FEFF 		bl	lv_obj_create
  62              	.LVL2:
  63              		.loc 1 17 13 view .LVU5
  64 000a 2060     		str	r0, [r4]
  18:generated/setup_scr_screen.c **** 	lv_obj_set_scrollbar_mode(ui->screen, LV_SCROLLBAR_MODE_OFF);
  65              		.loc 1 18 2 is_stmt 1 view .LVU6
  66 000c 0021     		movs	r1, #0
  67 000e FFF7FEFF 		bl	lv_obj_set_scrollbar_mode
  68              	.LVL3:
  19:generated/setup_scr_screen.c **** 
  20:generated/setup_scr_screen.c **** 	//Write style state: LV_STATE_DEFAULT for style_screen_main_main_default
  21:generated/setup_scr_screen.c **** 	static lv_style_t style_screen_main_main_default;
  69              		.loc 1 21 2 view .LVU7
  22:generated/setup_scr_screen.c **** 	if (style_screen_main_main_default.prop_cnt > 1)
  70              		.loc 1 22 2 view .LVU8
  71              		.loc 1 22 36 is_stmt 0 view .LVU9
  72 0012 DE4B     		ldr	r3, .L13
  73 0014 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  74              		.loc 1 22 5 view .LVU10
  75 0016 012B     		cmp	r3, #1
  76 0018 40F22482 		bls	.L2
  23:generated/setup_scr_screen.c **** 		lv_style_reset(&style_screen_main_main_default);
  77              		.loc 1 23 3 is_stmt 1 view .LVU11
  78 001c DB48     		ldr	r0, .L13
  79 001e FFF7FEFF 		bl	lv_style_reset
  80              	.LVL4:
  81              	.L3:
  24:generated/setup_scr_screen.c **** 	else
  25:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_main_main_default);
  26:generated/setup_scr_screen.c **** 	lv_style_set_bg_color(&style_screen_main_main_default, lv_color_make(0xff, 0xff, 0xff));
  82              		.loc 1 26 2 view .LVU12
  83              	.LBB70:
  84              	.LBI70:
  85              		.file 2 "lvgl/src/hal/../misc/lv_color.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 3


   1:lvgl/src/hal/../misc/lv_color.h **** /**
   2:lvgl/src/hal/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/hal/../misc/lv_color.h ****  *
   4:lvgl/src/hal/../misc/lv_color.h ****  */
   5:lvgl/src/hal/../misc/lv_color.h **** 
   6:lvgl/src/hal/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/hal/../misc/lv_color.h **** 
   9:lvgl/src/hal/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/hal/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/hal/../misc/lv_color.h **** #endif
  12:lvgl/src/hal/../misc/lv_color.h **** 
  13:lvgl/src/hal/../misc/lv_color.h **** /*********************
  14:lvgl/src/hal/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/hal/../misc/lv_color.h ****  *********************/
  16:lvgl/src/hal/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/hal/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/hal/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/src/hal/../misc/lv_color.h **** 
  20:lvgl/src/hal/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/src/hal/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/src/hal/../misc/lv_color.h **** #endif
  24:lvgl/src/hal/../misc/lv_color.h **** 
  25:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/src/hal/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/src/hal/../misc/lv_color.h **** #endif
  28:lvgl/src/hal/../misc/lv_color.h **** 
  29:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/src/hal/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/src/hal/../misc/lv_color.h **** #endif
  32:lvgl/src/hal/../misc/lv_color.h **** 
  33:lvgl/src/hal/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/src/hal/../misc/lv_color.h **** 
  35:lvgl/src/hal/../misc/lv_color.h **** /*********************
  36:lvgl/src/hal/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/src/hal/../misc/lv_color.h ****  *********************/
  38:lvgl/src/hal/../misc/lv_color.h **** 
  39:lvgl/src/hal/../misc/lv_color.h **** /**
  40:lvgl/src/hal/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/src/hal/../misc/lv_color.h ****  */
  42:lvgl/src/hal/../misc/lv_color.h **** enum {
  43:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/src/hal/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/src/hal/../misc/lv_color.h **** };
  57:lvgl/src/hal/../misc/lv_color.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 4


  58:lvgl/src/hal/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/src/hal/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/src/hal/../misc/lv_color.h **** 
  61:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/src/hal/../misc/lv_color.h **** #else
  70:lvgl/src/hal/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/src/hal/../misc/lv_color.h **** #endif
  72:lvgl/src/hal/../misc/lv_color.h **** 
  73:lvgl/src/hal/../misc/lv_color.h **** /**
  74:lvgl/src/hal/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/src/hal/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/src/hal/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/src/hal/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/src/hal/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/src/hal/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/src/hal/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/src/hal/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/src/hal/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/src/hal/../misc/lv_color.h **** #else
  86:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/src/hal/../misc/lv_color.h **** #endif
  88:lvgl/src/hal/../misc/lv_color.h **** #endif
  89:lvgl/src/hal/../misc/lv_color.h **** 
  90:lvgl/src/hal/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/src/hal/../misc/lv_color.h **** /**
  92:lvgl/src/hal/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/src/hal/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/src/hal/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/src/hal/../misc/lv_color.h **** */
  96:lvgl/src/hal/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/src/hal/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/src/hal/../misc/lv_color.h **** #endif
 100:lvgl/src/hal/../misc/lv_color.h **** #else
 101:lvgl/src/hal/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/src/hal/../misc/lv_color.h **** #endif
 104:lvgl/src/hal/../misc/lv_color.h **** #endif
 105:lvgl/src/hal/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/src/hal/../misc/lv_color.h **** 
 107:lvgl/src/hal/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/src/hal/../misc/lv_color.h **** #endif
 110:lvgl/src/hal/../misc/lv_color.h **** 
 111:lvgl/src/hal/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/src/hal/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/src/hal/../misc/lv_color.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 5


 115:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/src/hal/../misc/lv_color.h **** #endif
 117:lvgl/src/hal/../misc/lv_color.h **** 
 118:lvgl/src/hal/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/src/hal/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/src/hal/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/src/hal/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/src/hal/../misc/lv_color.h **** 
 127:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/src/hal/../misc/lv_color.h **** 
 132:lvgl/src/hal/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/src/hal/../misc/lv_color.h **** 
 135:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/src/hal/../misc/lv_color.h **** 
 140:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/src/hal/../misc/lv_color.h **** 
 145:lvgl/src/hal/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/src/hal/../misc/lv_color.h **** 
 148:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/src/hal/../misc/lv_color.h **** #else
 152:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/src/hal/../misc/lv_color.h **** #endif
 154:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/src/hal/../misc/lv_color.h **** 
 157:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/src/hal/../misc/lv_color.h **** #else
 161:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/src/hal/../misc/lv_color.h **** #endif
 163:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/src/hal/../misc/lv_color.h **** 
 166:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/src/hal/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/src/hal/../misc/lv_color.h **** #else
 170:lvgl/src/hal/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 6


 172:lvgl/src/hal/../misc/lv_color.h **** #endif
 173:lvgl/src/hal/../misc/lv_color.h **** 
 174:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/src/hal/../misc/lv_color.h **** 
 179:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/src/hal/../misc/lv_color.h **** 
 184:lvgl/src/hal/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/src/hal/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/src/hal/../misc/lv_color.h **** 
 187:lvgl/src/hal/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/src/hal/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/src/hal/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/src/hal/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/src/hal/../misc/lv_color.h **** 
 196:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/src/hal/../misc/lv_color.h **** 
 201:lvgl/src/hal/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/src/hal/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/src/hal/../misc/lv_color.h **** 
 204:lvgl/src/hal/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/src/hal/../misc/lv_color.h **** 
 206:lvgl/src/hal/../misc/lv_color.h **** /**********************
 207:lvgl/src/hal/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/src/hal/../misc/lv_color.h ****  **********************/
 209:lvgl/src/hal/../misc/lv_color.h **** 
 210:lvgl/src/hal/../misc/lv_color.h **** typedef union {
 211:lvgl/src/hal/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/src/hal/../misc/lv_color.h ****     union {
 213:lvgl/src/hal/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/src/hal/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/src/hal/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/src/hal/../misc/lv_color.h ****     } ch;
 217:lvgl/src/hal/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/src/hal/../misc/lv_color.h **** 
 219:lvgl/src/hal/../misc/lv_color.h **** typedef union {
 220:lvgl/src/hal/../misc/lv_color.h ****     struct {
 221:lvgl/src/hal/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/src/hal/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/src/hal/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/src/hal/../misc/lv_color.h ****     } ch;
 225:lvgl/src/hal/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/src/hal/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/src/hal/../misc/lv_color.h **** 
 228:lvgl/src/hal/../misc/lv_color.h **** typedef union {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 7


 229:lvgl/src/hal/../misc/lv_color.h ****     struct {
 230:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/src/hal/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/src/hal/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/src/hal/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/src/hal/../misc/lv_color.h **** #else
 235:lvgl/src/hal/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/src/hal/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/src/hal/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/src/hal/../misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/src/hal/../misc/lv_color.h **** #endif
 240:lvgl/src/hal/../misc/lv_color.h ****     } ch;
 241:lvgl/src/hal/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/src/hal/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/src/hal/../misc/lv_color.h **** 
 244:lvgl/src/hal/../misc/lv_color.h **** typedef union {
 245:lvgl/src/hal/../misc/lv_color.h ****     struct {
 246:lvgl/src/hal/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/src/hal/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/src/hal/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/src/hal/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/src/hal/../misc/lv_color.h ****     } ch;
 251:lvgl/src/hal/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/src/hal/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/src/hal/../misc/lv_color.h **** 
 254:lvgl/src/hal/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/src/hal/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/src/hal/../misc/lv_color.h **** 
 257:lvgl/src/hal/../misc/lv_color.h **** typedef struct {
 258:lvgl/src/hal/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/src/hal/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/src/hal/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/src/hal/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/src/hal/../misc/lv_color.h **** 
 263:lvgl/src/hal/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/src/hal/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/src/hal/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/src/hal/../misc/lv_color.h **** //! @endcond
 267:lvgl/src/hal/../misc/lv_color.h **** 
 268:lvgl/src/hal/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/src/hal/../misc/lv_color.h **** 
 270:lvgl/src/hal/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/src/hal/../misc/lv_color.h **** 
 272:lvgl/src/hal/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/src/hal/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/src/hal/../misc/lv_color.h ****     void * user_data;
 275:lvgl/src/hal/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/src/hal/../misc/lv_color.h **** 
 277:lvgl/src/hal/../misc/lv_color.h **** 
 278:lvgl/src/hal/../misc/lv_color.h **** typedef enum {
 279:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 8


 286:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/src/hal/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/src/hal/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/src/hal/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/src/hal/../misc/lv_color.h **** 
 302:lvgl/src/hal/../misc/lv_color.h **** /**********************
 303:lvgl/src/hal/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/src/hal/../misc/lv_color.h ****  **********************/
 305:lvgl/src/hal/../misc/lv_color.h **** 
 306:lvgl/src/hal/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/src/hal/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/src/hal/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/src/hal/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/src/hal/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/src/hal/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/src/hal/../misc/lv_color.h ****  *
 313:lvgl/src/hal/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/src/hal/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/src/hal/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/src/hal/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/src/hal/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/src/hal/../misc/lv_color.h ****  */
 319:lvgl/src/hal/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/src/hal/../misc/lv_color.h **** {
 321:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/src/hal/../misc/lv_color.h ****     return color.full;
 323:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/src/hal/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/src/hal/../misc/lv_color.h ****         return 1;
 326:lvgl/src/hal/../misc/lv_color.h ****     }
 327:lvgl/src/hal/../misc/lv_color.h ****     else {
 328:lvgl/src/hal/../misc/lv_color.h ****         return 0;
 329:lvgl/src/hal/../misc/lv_color.h ****     }
 330:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/src/hal/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/src/hal/../misc/lv_color.h ****         return 1;
 333:lvgl/src/hal/../misc/lv_color.h ****     }
 334:lvgl/src/hal/../misc/lv_color.h ****     else {
 335:lvgl/src/hal/../misc/lv_color.h ****         return 0;
 336:lvgl/src/hal/../misc/lv_color.h ****     }
 337:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/src/hal/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/src/hal/../misc/lv_color.h ****         return 1;
 340:lvgl/src/hal/../misc/lv_color.h ****     }
 341:lvgl/src/hal/../misc/lv_color.h ****     else {
 342:lvgl/src/hal/../misc/lv_color.h ****         return 0;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 9


 343:lvgl/src/hal/../misc/lv_color.h ****     }
 344:lvgl/src/hal/../misc/lv_color.h **** #endif
 345:lvgl/src/hal/../misc/lv_color.h **** }
 346:lvgl/src/hal/../misc/lv_color.h **** 
 347:lvgl/src/hal/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/src/hal/../misc/lv_color.h **** {
 349:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/src/hal/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/src/hal/../misc/lv_color.h ****         return 0;
 352:lvgl/src/hal/../misc/lv_color.h ****     else
 353:lvgl/src/hal/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/src/hal/../misc/lv_color.h ****     return color.full;
 356:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/src/hal/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 362:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/src/hal/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/hal/../misc/lv_color.h **** #endif
 369:lvgl/src/hal/../misc/lv_color.h **** }
 370:lvgl/src/hal/../misc/lv_color.h **** 
 371:lvgl/src/hal/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/src/hal/../misc/lv_color.h **** {
 373:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/src/hal/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/src/hal/../misc/lv_color.h ****         return 0;
 376:lvgl/src/hal/../misc/lv_color.h ****     else
 377:lvgl/src/hal/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/src/hal/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 384:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/src/hal/../misc/lv_color.h ****     return color.full;
 386:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/src/hal/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 392:lvgl/src/hal/../misc/lv_color.h **** #endif
 393:lvgl/src/hal/../misc/lv_color.h **** }
 394:lvgl/src/hal/../misc/lv_color.h **** 
 395:lvgl/src/hal/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/src/hal/../misc/lv_color.h **** {
 397:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/src/hal/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/src/hal/../misc/lv_color.h ****         return 0xFF000000;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 10


 400:lvgl/src/hal/../misc/lv_color.h ****     else
 401:lvgl/src/hal/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/src/hal/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 409:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/src/hal/../misc/lv_color.h ****     /**
 411:lvgl/src/hal/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/src/hal/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/src/hal/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/src/hal/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/src/hal/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/src/hal/../misc/lv_color.h ****      *
 417:lvgl/src/hal/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/src/hal/../misc/lv_color.h ****      *
 419:lvgl/src/hal/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/src/hal/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/src/hal/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/src/hal/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/src/hal/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/src/hal/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/src/hal/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/src/hal/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/src/hal/../misc/lv_color.h ****      *
 428:lvgl/src/hal/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/src/hal/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/src/hal/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/src/hal/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/src/hal/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/src/hal/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/src/hal/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/src/hal/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/src/hal/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/src/hal/../misc/lv_color.h ****      */
 438:lvgl/src/hal/../misc/lv_color.h **** 
 439:lvgl/src/hal/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/src/hal/../misc/lv_color.h ****     return ret.full;
 445:lvgl/src/hal/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/src/hal/../misc/lv_color.h ****     return color.full;
 447:lvgl/src/hal/../misc/lv_color.h **** #endif
 448:lvgl/src/hal/../misc/lv_color.h **** }
 449:lvgl/src/hal/../misc/lv_color.h **** 
 450:lvgl/src/hal/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/src/hal/../misc/lv_color.h **** 
 452:lvgl/src/hal/../misc/lv_color.h **** /**
 453:lvgl/src/hal/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/src/hal/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/src/hal/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/src/hal/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 11


 457:lvgl/src/hal/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/src/hal/../misc/lv_color.h ****  */
 459:lvgl/src/hal/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:lvgl/src/hal/../misc/lv_color.h **** {
 461:lvgl/src/hal/../misc/lv_color.h ****     lv_color_t ret;
 462:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 463:lvgl/src/hal/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 464:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 465:lvgl/src/hal/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 467:lvgl/src/hal/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 468:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 469:lvgl/src/hal/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 470:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 471:lvgl/src/hal/../misc/lv_color.h **** #else
 472:lvgl/src/hal/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 473:lvgl/src/hal/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 474:lvgl/src/hal/../misc/lv_color.h **** #endif
 475:lvgl/src/hal/../misc/lv_color.h **** 
 476:lvgl/src/hal/../misc/lv_color.h ****     return ret;
 477:lvgl/src/hal/../misc/lv_color.h **** }
 478:lvgl/src/hal/../misc/lv_color.h **** 
 479:lvgl/src/hal/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 480:lvgl/src/hal/../misc/lv_color.h **** {
 481:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 482:lvgl/src/hal/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 483:lvgl/src/hal/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 484:lvgl/src/hal/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 485:lvgl/src/hal/../misc/lv_color.h **** #else
 486:lvgl/src/hal/../misc/lv_color.h ****     (void) mix;
 487:lvgl/src/hal/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 488:lvgl/src/hal/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 489:lvgl/src/hal/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 490:lvgl/src/hal/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 491:lvgl/src/hal/../misc/lv_color.h **** #endif
 492:lvgl/src/hal/../misc/lv_color.h **** 
 493:lvgl/src/hal/../misc/lv_color.h **** }
 494:lvgl/src/hal/../misc/lv_color.h **** 
 495:lvgl/src/hal/../misc/lv_color.h **** /**
 496:lvgl/src/hal/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl/src/hal/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl/src/hal/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl/src/hal/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 500:lvgl/src/hal/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl/src/hal/../misc/lv_color.h ****  * @return the mixed color
 502:lvgl/src/hal/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl/src/hal/../misc/lv_color.h ****  */
 504:lvgl/src/hal/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl/src/hal/../misc/lv_color.h **** {
 506:lvgl/src/hal/../misc/lv_color.h ****     lv_color_t ret;
 507:lvgl/src/hal/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl/src/hal/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 510:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 511:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 512:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 513:lvgl/src/hal/../misc/lv_color.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 12


 514:lvgl/src/hal/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 515:lvgl/src/hal/../misc/lv_color.h ****     /*Restore color1*/
 516:lvgl/src/hal/../misc/lv_color.h ****     lv_color_t c1;
 517:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 519:lvgl/src/hal/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl/src/hal/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 521:lvgl/src/hal/../misc/lv_color.h **** #endif
 522:lvgl/src/hal/../misc/lv_color.h **** 
 523:lvgl/src/hal/../misc/lv_color.h ****     return ret;
 524:lvgl/src/hal/../misc/lv_color.h **** }
 525:lvgl/src/hal/../misc/lv_color.h **** 
 526:lvgl/src/hal/../misc/lv_color.h **** /**
 527:lvgl/src/hal/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 528:lvgl/src/hal/../misc/lv_color.h ****  * @param bg_color background color
 529:lvgl/src/hal/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 530:lvgl/src/hal/../misc/lv_color.h ****  * @param fg_color foreground color
 531:lvgl/src/hal/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 532:lvgl/src/hal/../misc/lv_color.h ****  * @param res_color the result color
 533:lvgl/src/hal/../misc/lv_color.h ****  * @param res_opa the result opacity
 534:lvgl/src/hal/../misc/lv_color.h ****  */
 535:lvgl/src/hal/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 536:lvgl/src/hal/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 537:lvgl/src/hal/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 538:lvgl/src/hal/../misc/lv_color.h **** {
 539:lvgl/src/hal/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 540:lvgl/src/hal/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 541:lvgl/src/hal/../misc/lv_color.h ****         res_color->full = fg_color.full;
 542:lvgl/src/hal/../misc/lv_color.h ****         *res_opa = fg_opa;
 543:lvgl/src/hal/../misc/lv_color.h ****     }
 544:lvgl/src/hal/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 545:lvgl/src/hal/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 546:lvgl/src/hal/../misc/lv_color.h ****         res_color->full = bg_color.full;
 547:lvgl/src/hal/../misc/lv_color.h ****         *res_opa = bg_opa;
 548:lvgl/src/hal/../misc/lv_color.h ****     }
 549:lvgl/src/hal/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 550:lvgl/src/hal/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 551:lvgl/src/hal/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 552:lvgl/src/hal/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 553:lvgl/src/hal/../misc/lv_color.h ****     }
 554:lvgl/src/hal/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 555:lvgl/src/hal/../misc/lv_color.h ****     else {
 556:lvgl/src/hal/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 557:lvgl/src/hal/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 558:lvgl/src/hal/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 559:lvgl/src/hal/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 560:lvgl/src/hal/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl/src/hal/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl/src/hal/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 563:lvgl/src/hal/../misc/lv_color.h **** 
 564:lvgl/src/hal/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 565:lvgl/src/hal/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 566:lvgl/src/hal/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 567:lvgl/src/hal/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 568:lvgl/src/hal/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 569:lvgl/src/hal/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 570:lvgl/src/hal/../misc/lv_color.h ****             /*Info:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 13


 571:lvgl/src/hal/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 572:lvgl/src/hal/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 573:lvgl/src/hal/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 574:lvgl/src/hal/../misc/lv_color.h ****                 while(1)
 575:lvgl/src/hal/../misc/lv_color.h ****                     ;
 576:lvgl/src/hal/../misc/lv_color.h ****             }
 577:lvgl/src/hal/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 578:lvgl/src/hal/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 579:lvgl/src/hal/../misc/lv_color.h **** 
 580:lvgl/src/hal/../misc/lv_color.h ****         }
 581:lvgl/src/hal/../misc/lv_color.h **** 
 582:lvgl/src/hal/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 583:lvgl/src/hal/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 584:lvgl/src/hal/../misc/lv_color.h ****     }
 585:lvgl/src/hal/../misc/lv_color.h **** }
 586:lvgl/src/hal/../misc/lv_color.h **** 
 587:lvgl/src/hal/../misc/lv_color.h **** //! @endcond
 588:lvgl/src/hal/../misc/lv_color.h **** 
 589:lvgl/src/hal/../misc/lv_color.h **** /**
 590:lvgl/src/hal/../misc/lv_color.h ****  * Get the brightness of a color
 591:lvgl/src/hal/../misc/lv_color.h ****  * @param color a color
 592:lvgl/src/hal/../misc/lv_color.h ****  * @return the brightness [0..255]
 593:lvgl/src/hal/../misc/lv_color.h ****  */
 594:lvgl/src/hal/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 595:lvgl/src/hal/../misc/lv_color.h **** {
 596:lvgl/src/hal/../misc/lv_color.h ****     lv_color32_t c32;
 597:lvgl/src/hal/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 598:lvgl/src/hal/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 599:lvgl/src/hal/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 600:lvgl/src/hal/../misc/lv_color.h **** }
 601:lvgl/src/hal/../misc/lv_color.h **** 
 602:lvgl/src/hal/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
  86              		.loc 2 602 26 view .LVU13
  87              	.LBB71:
 603:lvgl/src/hal/../misc/lv_color.h **** {
 604:lvgl/src/hal/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
  88              		.loc 2 604 5 view .LVU14
  89              		.loc 2 604 5 is_stmt 0 view .LVU15
  90              	.LBE71:
  91              	.LBE70:
  92              		.loc 1 26 2 view .LVU16
  93 0022 DA4D     		ldr	r5, .L13
  94 0024 4FF0FF31 		mov	r1, #-1	@ movhi
  95 0028 2846     		mov	r0, r5
  96 002a FFF7FEFF 		bl	lv_style_set_bg_color
  97              	.LVL5:
  27:generated/setup_scr_screen.c **** 	lv_style_set_bg_opa(&style_screen_main_main_default, 0);
  98              		.loc 1 27 2 is_stmt 1 view .LVU17
  99 002e 0021     		movs	r1, #0
 100 0030 2846     		mov	r0, r5
 101 0032 FFF7FEFF 		bl	lv_style_set_bg_opa
 102              	.LVL6:
  28:generated/setup_scr_screen.c **** 	lv_obj_add_style(ui->screen, &style_screen_main_main_default, LV_PART_MAIN|LV_STATE_DEFAULT);
 103              		.loc 1 28 2 view .LVU18
 104 0036 0022     		movs	r2, #0
 105 0038 2946     		mov	r1, r5
 106 003a 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 14


 107 003c FFF7FEFF 		bl	lv_obj_add_style
 108              	.LVL7:
  29:generated/setup_scr_screen.c **** 
  30:generated/setup_scr_screen.c **** 	//Write codes screen_label0
  31:generated/setup_scr_screen.c **** 	ui->screen_label0 = lv_label_create(ui->screen);
 109              		.loc 1 31 2 view .LVU19
 110              		.loc 1 31 22 is_stmt 0 view .LVU20
 111 0040 2068     		ldr	r0, [r4]
 112 0042 FFF7FEFF 		bl	lv_label_create
 113              	.LVL8:
 114              		.loc 1 31 20 view .LVU21
 115 0046 A060     		str	r0, [r4, #8]
  32:generated/setup_scr_screen.c **** 	lv_obj_set_pos(ui->screen_label0, 178, 228);
 116              		.loc 1 32 2 is_stmt 1 view .LVU22
 117 0048 E422     		movs	r2, #228
 118 004a B221     		movs	r1, #178
 119 004c FFF7FEFF 		bl	lv_obj_set_pos
 120              	.LVL9:
  33:generated/setup_scr_screen.c **** 	lv_obj_set_size(ui->screen_label0, 100, 20);
 121              		.loc 1 33 2 view .LVU23
 122 0050 1422     		movs	r2, #20
 123 0052 6421     		movs	r1, #100
 124 0054 A068     		ldr	r0, [r4, #8]
 125 0056 FFF7FEFF 		bl	lv_obj_set_size
 126              	.LVL10:
  34:generated/setup_scr_screen.c **** 	lv_obj_set_scrollbar_mode(ui->screen_label0, LV_SCROLLBAR_MODE_OFF);
 127              		.loc 1 34 2 view .LVU24
 128 005a 0021     		movs	r1, #0
 129 005c A068     		ldr	r0, [r4, #8]
 130 005e FFF7FEFF 		bl	lv_obj_set_scrollbar_mode
 131              	.LVL11:
  35:generated/setup_scr_screen.c **** 	lv_label_set_text(ui->screen_label0, "screen1");
 132              		.loc 1 35 2 view .LVU25
 133 0062 CB49     		ldr	r1, .L13+4
 134 0064 A068     		ldr	r0, [r4, #8]
 135 0066 FFF7FEFF 		bl	lv_label_set_text
 136              	.LVL12:
  36:generated/setup_scr_screen.c **** 	lv_label_set_long_mode(ui->screen_label0, LV_LABEL_LONG_WRAP);
 137              		.loc 1 36 2 view .LVU26
 138 006a 0021     		movs	r1, #0
 139 006c A068     		ldr	r0, [r4, #8]
 140 006e FFF7FEFF 		bl	lv_label_set_long_mode
 141              	.LVL13:
  37:generated/setup_scr_screen.c **** 
  38:generated/setup_scr_screen.c **** 	//Write style state: LV_STATE_DEFAULT for style_screen_label0_main_main_default
  39:generated/setup_scr_screen.c **** 	static lv_style_t style_screen_label0_main_main_default;
 142              		.loc 1 39 2 view .LVU27
  40:generated/setup_scr_screen.c **** 	if (style_screen_label0_main_main_default.prop_cnt > 1)
 143              		.loc 1 40 2 view .LVU28
 144              		.loc 1 40 43 is_stmt 0 view .LVU29
 145 0072 C84B     		ldr	r3, .L13+8
 146 0074 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 147              		.loc 1 40 5 view .LVU30
 148 0076 012B     		cmp	r3, #1
 149 0078 40F2F881 		bls	.L4
  41:generated/setup_scr_screen.c **** 		lv_style_reset(&style_screen_label0_main_main_default);
 150              		.loc 1 41 3 is_stmt 1 view .LVU31
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 15


 151 007c C548     		ldr	r0, .L13+8
 152 007e FFF7FEFF 		bl	lv_style_reset
 153              	.LVL14:
 154              	.L5:
  42:generated/setup_scr_screen.c **** 	else
  43:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_label0_main_main_default);
  44:generated/setup_scr_screen.c **** 	lv_style_set_radius(&style_screen_label0_main_main_default, 0);
 155              		.loc 1 44 2 view .LVU32
 156 0082 C44D     		ldr	r5, .L13+8
 157 0084 0021     		movs	r1, #0
 158 0086 2846     		mov	r0, r5
 159 0088 FFF7FEFF 		bl	lv_style_set_radius
 160              	.LVL15:
  45:generated/setup_scr_screen.c **** 	lv_style_set_bg_color(&style_screen_label0_main_main_default, lv_color_make(0xff, 0xff, 0xff));
 161              		.loc 1 45 2 view .LVU33
 162              	.LBB72:
 163              	.LBI72:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 164              		.loc 2 602 26 view .LVU34
 165              	.LBB73:
 166              		.loc 2 604 5 view .LVU35
 167              		.loc 2 604 5 is_stmt 0 view .LVU36
 168              	.LBE73:
 169              	.LBE72:
 170              		.loc 1 45 2 view .LVU37
 171 008c 4FF0FF31 		mov	r1, #-1	@ movhi
 172 0090 2846     		mov	r0, r5
 173 0092 FFF7FEFF 		bl	lv_style_set_bg_color
 174              	.LVL16:
  46:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_color(&style_screen_label0_main_main_default, lv_color_make(0xff, 0xff, 0xff)
 175              		.loc 1 46 2 is_stmt 1 view .LVU38
 176              	.LBB74:
 177              	.LBI74:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 178              		.loc 2 602 26 view .LVU39
 179              	.LBB75:
 180              		.loc 2 604 5 view .LVU40
 181              		.loc 2 604 5 is_stmt 0 view .LVU41
 182              	.LBE75:
 183              	.LBE74:
 184              		.loc 1 46 2 view .LVU42
 185 0096 4FF0FF31 		mov	r1, #-1	@ movhi
 186 009a 2846     		mov	r0, r5
 187 009c FFF7FEFF 		bl	lv_style_set_bg_grad_color
 188              	.LVL17:
  47:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_dir(&style_screen_label0_main_main_default, LV_GRAD_DIR_VER);
 189              		.loc 1 47 2 is_stmt 1 view .LVU43
 190 00a0 0121     		movs	r1, #1
 191 00a2 2846     		mov	r0, r5
 192 00a4 FFF7FEFF 		bl	lv_style_set_bg_grad_dir
 193              	.LVL18:
  48:generated/setup_scr_screen.c **** 	lv_style_set_bg_opa(&style_screen_label0_main_main_default, 0);
 194              		.loc 1 48 2 view .LVU44
 195 00a8 0021     		movs	r1, #0
 196 00aa 2846     		mov	r0, r5
 197 00ac FFF7FEFF 		bl	lv_style_set_bg_opa
 198              	.LVL19:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 16


  49:generated/setup_scr_screen.c **** 	lv_style_set_text_color(&style_screen_label0_main_main_default, lv_color_make(0x00, 0x00, 0x00));
 199              		.loc 1 49 2 view .LVU45
 200              	.LBB76:
 201              	.LBI76:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 202              		.loc 2 602 26 view .LVU46
 203              	.LBB77:
 204              		.loc 2 604 5 view .LVU47
 205              		.loc 2 604 5 is_stmt 0 view .LVU48
 206              	.LBE77:
 207              	.LBE76:
 208              		.loc 1 49 2 view .LVU49
 209 00b0 4FF00001 		mov	r1, #0	@ movhi
 210 00b4 2846     		mov	r0, r5
 211 00b6 FFF7FEFF 		bl	lv_style_set_text_color
 212              	.LVL20:
  50:generated/setup_scr_screen.c **** 	lv_style_set_text_font(&style_screen_label0_main_main_default, &lv_font_arial_12);
 213              		.loc 1 50 2 is_stmt 1 view .LVU50
 214 00ba B749     		ldr	r1, .L13+12
 215 00bc 2846     		mov	r0, r5
 216 00be FFF7FEFF 		bl	lv_style_set_text_font
 217              	.LVL21:
  51:generated/setup_scr_screen.c **** 	lv_style_set_text_letter_space(&style_screen_label0_main_main_default, 2);
 218              		.loc 1 51 2 view .LVU51
 219 00c2 0221     		movs	r1, #2
 220 00c4 2846     		mov	r0, r5
 221 00c6 FFF7FEFF 		bl	lv_style_set_text_letter_space
 222              	.LVL22:
  52:generated/setup_scr_screen.c **** 	lv_style_set_text_line_space(&style_screen_label0_main_main_default, 0);
 223              		.loc 1 52 2 view .LVU52
 224 00ca 0021     		movs	r1, #0
 225 00cc 2846     		mov	r0, r5
 226 00ce FFF7FEFF 		bl	lv_style_set_text_line_space
 227              	.LVL23:
  53:generated/setup_scr_screen.c **** 	lv_style_set_text_align(&style_screen_label0_main_main_default, LV_TEXT_ALIGN_CENTER);
 228              		.loc 1 53 2 view .LVU53
 229 00d2 0221     		movs	r1, #2
 230 00d4 2846     		mov	r0, r5
 231 00d6 FFF7FEFF 		bl	lv_style_set_text_align
 232              	.LVL24:
  54:generated/setup_scr_screen.c **** 	lv_style_set_pad_left(&style_screen_label0_main_main_default, 0);
 233              		.loc 1 54 2 view .LVU54
 234 00da 0021     		movs	r1, #0
 235 00dc 2846     		mov	r0, r5
 236 00de FFF7FEFF 		bl	lv_style_set_pad_left
 237              	.LVL25:
  55:generated/setup_scr_screen.c **** 	lv_style_set_pad_right(&style_screen_label0_main_main_default, 0);
 238              		.loc 1 55 2 view .LVU55
 239 00e2 0021     		movs	r1, #0
 240 00e4 2846     		mov	r0, r5
 241 00e6 FFF7FEFF 		bl	lv_style_set_pad_right
 242              	.LVL26:
  56:generated/setup_scr_screen.c **** 	lv_style_set_pad_top(&style_screen_label0_main_main_default, 0);
 243              		.loc 1 56 2 view .LVU56
 244 00ea 0021     		movs	r1, #0
 245 00ec 2846     		mov	r0, r5
 246 00ee FFF7FEFF 		bl	lv_style_set_pad_top
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 17


 247              	.LVL27:
  57:generated/setup_scr_screen.c **** 	lv_style_set_pad_bottom(&style_screen_label0_main_main_default, 0);
 248              		.loc 1 57 2 view .LVU57
 249 00f2 0021     		movs	r1, #0
 250 00f4 2846     		mov	r0, r5
 251 00f6 FFF7FEFF 		bl	lv_style_set_pad_bottom
 252              	.LVL28:
  58:generated/setup_scr_screen.c **** 	lv_obj_add_style(ui->screen_label0, &style_screen_label0_main_main_default, LV_PART_MAIN|LV_STATE_
 253              		.loc 1 58 2 view .LVU58
 254 00fa 0022     		movs	r2, #0
 255 00fc 2946     		mov	r1, r5
 256 00fe A068     		ldr	r0, [r4, #8]
 257 0100 FFF7FEFF 		bl	lv_obj_add_style
 258              	.LVL29:
  59:generated/setup_scr_screen.c **** 
  60:generated/setup_scr_screen.c **** 	//Write codes screen_btn1
  61:generated/setup_scr_screen.c **** 	ui->screen_btn1 = lv_btn_create(ui->screen);
 259              		.loc 1 61 2 view .LVU59
 260              		.loc 1 61 20 is_stmt 0 view .LVU60
 261 0104 2068     		ldr	r0, [r4]
 262 0106 FFF7FEFF 		bl	lv_btn_create
 263              	.LVL30:
 264              		.loc 1 61 18 view .LVU61
 265 010a E060     		str	r0, [r4, #12]
  62:generated/setup_scr_screen.c **** 	lv_obj_set_pos(ui->screen_btn1, 351, 223);
 266              		.loc 1 62 2 is_stmt 1 view .LVU62
 267 010c DF22     		movs	r2, #223
 268 010e 40F25F11 		movw	r1, #351
 269 0112 FFF7FEFF 		bl	lv_obj_set_pos
 270              	.LVL31:
  63:generated/setup_scr_screen.c **** 	lv_obj_set_size(ui->screen_btn1, 100, 25);
 271              		.loc 1 63 2 view .LVU63
 272 0116 1922     		movs	r2, #25
 273 0118 6421     		movs	r1, #100
 274 011a E068     		ldr	r0, [r4, #12]
 275 011c FFF7FEFF 		bl	lv_obj_set_size
 276              	.LVL32:
  64:generated/setup_scr_screen.c **** 	lv_obj_set_scrollbar_mode(ui->screen_btn1, LV_SCROLLBAR_MODE_OFF);
 277              		.loc 1 64 2 view .LVU64
 278 0120 0021     		movs	r1, #0
 279 0122 E068     		ldr	r0, [r4, #12]
 280 0124 FFF7FEFF 		bl	lv_obj_set_scrollbar_mode
 281              	.LVL33:
  65:generated/setup_scr_screen.c **** 
  66:generated/setup_scr_screen.c **** 	//Write style state: LV_STATE_DEFAULT for style_screen_btn1_main_main_default
  67:generated/setup_scr_screen.c **** 	static lv_style_t style_screen_btn1_main_main_default;
 282              		.loc 1 67 2 view .LVU65
  68:generated/setup_scr_screen.c **** 	if (style_screen_btn1_main_main_default.prop_cnt > 1)
 283              		.loc 1 68 2 view .LVU66
 284              		.loc 1 68 41 is_stmt 0 view .LVU67
 285 0128 9C4B     		ldr	r3, .L13+16
 286 012a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 287              		.loc 1 68 5 view .LVU68
 288 012c 012B     		cmp	r3, #1
 289 012e 40F2A181 		bls	.L6
  69:generated/setup_scr_screen.c **** 		lv_style_reset(&style_screen_btn1_main_main_default);
 290              		.loc 1 69 3 is_stmt 1 view .LVU69
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 18


 291 0132 9A48     		ldr	r0, .L13+16
 292 0134 FFF7FEFF 		bl	lv_style_reset
 293              	.LVL34:
 294              	.L7:
  70:generated/setup_scr_screen.c **** 	else
  71:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_btn1_main_main_default);
  72:generated/setup_scr_screen.c **** 	lv_style_set_radius(&style_screen_btn1_main_main_default, 50);
 295              		.loc 1 72 2 view .LVU70
 296 0138 984D     		ldr	r5, .L13+16
 297 013a 3221     		movs	r1, #50
 298 013c 2846     		mov	r0, r5
 299 013e FFF7FEFF 		bl	lv_style_set_radius
 300              	.LVL35:
  73:generated/setup_scr_screen.c **** 	lv_style_set_bg_color(&style_screen_btn1_main_main_default, lv_color_make(0xff, 0xff, 0xff));
 301              		.loc 1 73 2 view .LVU71
 302              	.LBB78:
 303              	.LBI78:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 304              		.loc 2 602 26 view .LVU72
 305              	.LBB79:
 306              		.loc 2 604 5 view .LVU73
 307              		.loc 2 604 5 is_stmt 0 view .LVU74
 308              	.LBE79:
 309              	.LBE78:
 310              		.loc 1 73 2 view .LVU75
 311 0142 4FF0FF31 		mov	r1, #-1	@ movhi
 312 0146 2846     		mov	r0, r5
 313 0148 FFF7FEFF 		bl	lv_style_set_bg_color
 314              	.LVL36:
  74:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_color(&style_screen_btn1_main_main_default, lv_color_make(0xff, 0xff, 0xff));
 315              		.loc 1 74 2 is_stmt 1 view .LVU76
 316              	.LBB80:
 317              	.LBI80:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 318              		.loc 2 602 26 view .LVU77
 319              	.LBB81:
 320              		.loc 2 604 5 view .LVU78
 321              		.loc 2 604 5 is_stmt 0 view .LVU79
 322              	.LBE81:
 323              	.LBE80:
 324              		.loc 1 74 2 view .LVU80
 325 014c 4FF0FF31 		mov	r1, #-1	@ movhi
 326 0150 2846     		mov	r0, r5
 327 0152 FFF7FEFF 		bl	lv_style_set_bg_grad_color
 328              	.LVL37:
  75:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_dir(&style_screen_btn1_main_main_default, LV_GRAD_DIR_VER);
 329              		.loc 1 75 2 is_stmt 1 view .LVU81
 330 0156 0121     		movs	r1, #1
 331 0158 2846     		mov	r0, r5
 332 015a FFF7FEFF 		bl	lv_style_set_bg_grad_dir
 333              	.LVL38:
  76:generated/setup_scr_screen.c **** 	lv_style_set_bg_opa(&style_screen_btn1_main_main_default, 255);
 334              		.loc 1 76 2 view .LVU82
 335 015e FF21     		movs	r1, #255
 336 0160 2846     		mov	r0, r5
 337 0162 FFF7FEFF 		bl	lv_style_set_bg_opa
 338              	.LVL39:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 19


  77:generated/setup_scr_screen.c **** 	lv_style_set_border_color(&style_screen_btn1_main_main_default, lv_color_make(0x01, 0xa2, 0xb1));
 339              		.loc 1 77 2 view .LVU83
 340              	.LBB82:
 341              	.LBI82:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 342              		.loc 2 602 26 view .LVU84
 343              	.LBB83:
 344              		.loc 2 604 5 view .LVU85
 345              		.loc 2 604 12 is_stmt 0 view .LVU86
 346 0166 4FF00001 		mov	r1, #0	@ movhi
 347 016a 1623     		movs	r3, #22
 348 016c 63F30401 		bfi	r1, r3, #0, #5
 349 0170 2823     		movs	r3, #40
 350 0172 63F34A11 		bfi	r1, r3, #5, #6
 351 0176 6FF3CF21 		bfc	r1, #11, #5
 352              	.LVL40:
 353              		.loc 2 604 12 view .LVU87
 354              	.LBE83:
 355              	.LBE82:
 356              		.loc 1 77 2 view .LVU88
 357 017a 2846     		mov	r0, r5
 358 017c FFF7FEFF 		bl	lv_style_set_border_color
 359              	.LVL41:
  78:generated/setup_scr_screen.c **** 	lv_style_set_border_width(&style_screen_btn1_main_main_default, 2);
 360              		.loc 1 78 2 is_stmt 1 view .LVU89
 361 0180 0221     		movs	r1, #2
 362 0182 2846     		mov	r0, r5
 363 0184 FFF7FEFF 		bl	lv_style_set_border_width
 364              	.LVL42:
  79:generated/setup_scr_screen.c **** 	lv_style_set_border_opa(&style_screen_btn1_main_main_default, 255);
 365              		.loc 1 79 2 view .LVU90
 366 0188 FF21     		movs	r1, #255
 367 018a 2846     		mov	r0, r5
 368 018c FFF7FEFF 		bl	lv_style_set_border_opa
 369              	.LVL43:
  80:generated/setup_scr_screen.c **** 	lv_style_set_text_color(&style_screen_btn1_main_main_default, lv_color_make(0x00, 0x00, 0x00));
 370              		.loc 1 80 2 view .LVU91
 371              	.LBB84:
 372              	.LBI84:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 373              		.loc 2 602 26 view .LVU92
 374              	.LBB85:
 375              		.loc 2 604 5 view .LVU93
 376              		.loc 2 604 5 is_stmt 0 view .LVU94
 377              	.LBE85:
 378              	.LBE84:
 379              		.loc 1 80 2 view .LVU95
 380 0190 4FF00001 		mov	r1, #0	@ movhi
 381 0194 2846     		mov	r0, r5
 382 0196 FFF7FEFF 		bl	lv_style_set_text_color
 383              	.LVL44:
  81:generated/setup_scr_screen.c **** 	lv_style_set_text_font(&style_screen_btn1_main_main_default, &lv_font_simsun_12);
 384              		.loc 1 81 2 is_stmt 1 view .LVU96
 385 019a 8149     		ldr	r1, .L13+20
 386 019c 2846     		mov	r0, r5
 387 019e FFF7FEFF 		bl	lv_style_set_text_font
 388              	.LVL45:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 20


  82:generated/setup_scr_screen.c **** 	lv_style_set_text_align(&style_screen_btn1_main_main_default, LV_TEXT_ALIGN_CENTER);
 389              		.loc 1 82 2 view .LVU97
 390 01a2 0221     		movs	r1, #2
 391 01a4 2846     		mov	r0, r5
 392 01a6 FFF7FEFF 		bl	lv_style_set_text_align
 393              	.LVL46:
  83:generated/setup_scr_screen.c **** 	lv_obj_add_style(ui->screen_btn1, &style_screen_btn1_main_main_default, LV_PART_MAIN|LV_STATE_DEFA
 394              		.loc 1 83 2 view .LVU98
 395 01aa 0022     		movs	r2, #0
 396 01ac 2946     		mov	r1, r5
 397 01ae E068     		ldr	r0, [r4, #12]
 398 01b0 FFF7FEFF 		bl	lv_obj_add_style
 399              	.LVL47:
  84:generated/setup_scr_screen.c **** 	ui->screen_btn1_label = lv_label_create(ui->screen_btn1);
 400              		.loc 1 84 2 view .LVU99
 401              		.loc 1 84 26 is_stmt 0 view .LVU100
 402 01b4 E068     		ldr	r0, [r4, #12]
 403 01b6 FFF7FEFF 		bl	lv_label_create
 404              	.LVL48:
 405              		.loc 1 84 24 view .LVU101
 406 01ba 2061     		str	r0, [r4, #16]
  85:generated/setup_scr_screen.c **** 	lv_label_set_text(ui->screen_btn1_label, "Next Screen");
 407              		.loc 1 85 2 is_stmt 1 view .LVU102
 408 01bc 7949     		ldr	r1, .L13+24
 409 01be FFF7FEFF 		bl	lv_label_set_text
 410              	.LVL49:
  86:generated/setup_scr_screen.c **** 	lv_obj_set_style_pad_all(ui->screen_btn1, 0, LV_STATE_DEFAULT);
 411              		.loc 1 86 2 view .LVU103
 412              		.loc 1 86 29 is_stmt 0 view .LVU104
 413 01c2 E568     		ldr	r5, [r4, #12]
 414              	.LVL50:
 415              	.LBB86:
 416              	.LBI86:
 417              		.file 3 "lvgl/src/core/lv_obj_style.h"
   1:lvgl/src/core/lv_obj_style.h **** /**
   2:lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:lvgl/src/core/lv_obj_style.h ****  *
   4:lvgl/src/core/lv_obj_style.h ****  */
   5:lvgl/src/core/lv_obj_style.h **** 
   6:lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:lvgl/src/core/lv_obj_style.h **** 
   9:lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:lvgl/src/core/lv_obj_style.h **** #endif
  12:lvgl/src/core/lv_obj_style.h **** 
  13:lvgl/src/core/lv_obj_style.h **** /*********************
  14:lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:lvgl/src/core/lv_obj_style.h ****  *********************/
  16:lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:lvgl/src/core/lv_obj_style.h **** 
  20:lvgl/src/core/lv_obj_style.h **** /*********************
  21:lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:lvgl/src/core/lv_obj_style.h ****  *********************/
  23:lvgl/src/core/lv_obj_style.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 21


  24:lvgl/src/core/lv_obj_style.h **** /**********************
  25:lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:lvgl/src/core/lv_obj_style.h ****  **********************/
  27:lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:lvgl/src/core/lv_obj_style.h **** 
  30:lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:lvgl/src/core/lv_obj_style.h **** 
  37:lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:lvgl/src/core/lv_obj_style.h **** 
  39:lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:lvgl/src/core/lv_obj_style.h **** 
  46:lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:lvgl/src/core/lv_obj_style.h **** #endif
  55:lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:lvgl/src/core/lv_obj_style.h **** 
  57:lvgl/src/core/lv_obj_style.h **** /**********************
  58:lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:lvgl/src/core/lv_obj_style.h ****  **********************/
  60:lvgl/src/core/lv_obj_style.h **** 
  61:lvgl/src/core/lv_obj_style.h **** /**
  62:lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:lvgl/src/core/lv_obj_style.h ****  */
  65:lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:lvgl/src/core/lv_obj_style.h **** 
  67:lvgl/src/core/lv_obj_style.h **** /**
  68:lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:lvgl/src/core/lv_obj_style.h ****  */
  75:lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:lvgl/src/core/lv_obj_style.h **** 
  77:lvgl/src/core/lv_obj_style.h **** /**
  78:lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 22


  81:lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:lvgl/src/core/lv_obj_style.h ****  */
  86:lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:lvgl/src/core/lv_obj_style.h **** 
  88:lvgl/src/core/lv_obj_style.h **** /**
  89:lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:lvgl/src/core/lv_obj_style.h ****  */
  92:lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:lvgl/src/core/lv_obj_style.h **** {
  94:lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:lvgl/src/core/lv_obj_style.h **** }
  96:lvgl/src/core/lv_obj_style.h **** 
  97:lvgl/src/core/lv_obj_style.h **** /**
  98:lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:lvgl/src/core/lv_obj_style.h ****  */
 102:lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:lvgl/src/core/lv_obj_style.h **** 
 104:lvgl/src/core/lv_obj_style.h **** /**
 105:lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:lvgl/src/core/lv_obj_style.h ****  */
 112:lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:lvgl/src/core/lv_obj_style.h **** 
 114:lvgl/src/core/lv_obj_style.h **** /**
 115:lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:lvgl/src/core/lv_obj_style.h ****  */
 119:lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:lvgl/src/core/lv_obj_style.h **** 
 121:lvgl/src/core/lv_obj_style.h **** /**
 122:lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:lvgl/src/core/lv_obj_style.h ****  */
 131:lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:lvgl/src/core/lv_obj_style.h **** 
 133:lvgl/src/core/lv_obj_style.h **** /**
 134:lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 23


 138:lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:lvgl/src/core/lv_obj_style.h ****  */
 141:lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:lvgl/src/core/lv_obj_style.h **** 
 143:lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:lvgl/src/core/lv_obj_style.h **** 
 145:lvgl/src/core/lv_obj_style.h **** /**
 146:lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:lvgl/src/core/lv_obj_style.h ****  */
 153:lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:lvgl/src/core/lv_obj_style.h **** 
 155:lvgl/src/core/lv_obj_style.h **** /**
 156:lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:lvgl/src/core/lv_obj_style.h ****  * @param part
 159:lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:lvgl/src/core/lv_obj_style.h ****  */
 163:lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:lvgl/src/core/lv_obj_style.h **** 
 165:lvgl/src/core/lv_obj_style.h **** /**
 166:lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:lvgl/src/core/lv_obj_style.h ****  * @return
 171:lvgl/src/core/lv_obj_style.h ****  */
 172:lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:lvgl/src/core/lv_obj_style.h **** 
 174:lvgl/src/core/lv_obj_style.h **** /**
 175:lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:lvgl/src/core/lv_obj_style.h ****  */
 180:lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:lvgl/src/core/lv_obj_style.h **** 
 182:lvgl/src/core/lv_obj_style.h **** /**
 183:lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:lvgl/src/core/lv_obj_style.h ****  */
 188:lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:lvgl/src/core/lv_obj_style.h **** 
 190:lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:lvgl/src/core/lv_obj_style.h **** 
 192:lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:lvgl/src/core/lv_obj_style.h **** 
 194:lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 24


 195:lvgl/src/core/lv_obj_style.h **** 
 196:lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 418              		.loc 3 196 20 is_stmt 1 view .LVU105
 419              	.LBB87:
 197:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 420              		.loc 3 197 5 view .LVU106
 421 01c4 0022     		movs	r2, #0
 422 01c6 1146     		mov	r1, r2
 423 01c8 2846     		mov	r0, r5
 424 01ca FFF7FEFF 		bl	lv_obj_set_style_pad_left
 425              	.LVL51:
 198:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 426              		.loc 3 198 5 view .LVU107
 427 01ce 0022     		movs	r2, #0
 428 01d0 1146     		mov	r1, r2
 429 01d2 2846     		mov	r0, r5
 430 01d4 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 431              	.LVL52:
 199:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 432              		.loc 3 199 5 view .LVU108
 433 01d8 0022     		movs	r2, #0
 434 01da 1146     		mov	r1, r2
 435 01dc 2846     		mov	r0, r5
 436 01de FFF7FEFF 		bl	lv_obj_set_style_pad_top
 437              	.LVL53:
 200:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 438              		.loc 3 200 5 view .LVU109
 439 01e2 0022     		movs	r2, #0
 440 01e4 1146     		mov	r1, r2
 441 01e6 2846     		mov	r0, r5
 442 01e8 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 443              	.LVL54:
 444              		.loc 3 200 5 is_stmt 0 view .LVU110
 445              	.LBE87:
 446              	.LBE86:
  87:generated/setup_scr_screen.c **** 	lv_obj_align(ui->screen_btn1_label, LV_ALIGN_CENTER, 0, 0);
 447              		.loc 1 87 2 is_stmt 1 view .LVU111
 448 01ec 0023     		movs	r3, #0
 449 01ee 1A46     		mov	r2, r3
 450 01f0 0921     		movs	r1, #9
 451 01f2 2069     		ldr	r0, [r4, #16]
 452 01f4 FFF7FEFF 		bl	lv_obj_align
 453              	.LVL55:
  88:generated/setup_scr_screen.c **** 
  89:generated/setup_scr_screen.c **** 	//Write codes screen_btn_2
  90:generated/setup_scr_screen.c **** 	ui->screen_btn_2 = lv_btn_create(ui->screen);
 454              		.loc 1 90 2 view .LVU112
 455              		.loc 1 90 21 is_stmt 0 view .LVU113
 456 01f8 2068     		ldr	r0, [r4]
 457 01fa FFF7FEFF 		bl	lv_btn_create
 458              	.LVL56:
 459              		.loc 1 90 19 view .LVU114
 460 01fe 6061     		str	r0, [r4, #20]
  91:generated/setup_scr_screen.c **** 	lv_obj_set_pos(ui->screen_btn_2, 190, 120);
 461              		.loc 1 91 2 is_stmt 1 view .LVU115
 462 0200 7822     		movs	r2, #120
 463 0202 BE21     		movs	r1, #190
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 25


 464 0204 FFF7FEFF 		bl	lv_obj_set_pos
 465              	.LVL57:
  92:generated/setup_scr_screen.c **** 	lv_obj_set_size(ui->screen_btn_2, 100, 25);
 466              		.loc 1 92 2 view .LVU116
 467 0208 1922     		movs	r2, #25
 468 020a 6421     		movs	r1, #100
 469 020c 6069     		ldr	r0, [r4, #20]
 470 020e FFF7FEFF 		bl	lv_obj_set_size
 471              	.LVL58:
  93:generated/setup_scr_screen.c **** 	lv_obj_set_scrollbar_mode(ui->screen_btn_2, LV_SCROLLBAR_MODE_OFF);
 472              		.loc 1 93 2 view .LVU117
 473 0212 0021     		movs	r1, #0
 474 0214 6069     		ldr	r0, [r4, #20]
 475 0216 FFF7FEFF 		bl	lv_obj_set_scrollbar_mode
 476              	.LVL59:
  94:generated/setup_scr_screen.c **** 
  95:generated/setup_scr_screen.c **** 	//Write style state: LV_STATE_DEFAULT for style_screen_btn_2_main_main_default
  96:generated/setup_scr_screen.c **** 	static lv_style_t style_screen_btn_2_main_main_default;
 477              		.loc 1 96 2 view .LVU118
  97:generated/setup_scr_screen.c **** 	if (style_screen_btn_2_main_main_default.prop_cnt > 1)
 478              		.loc 1 97 2 view .LVU119
 479              		.loc 1 97 42 is_stmt 0 view .LVU120
 480 021a 634B     		ldr	r3, .L13+28
 481 021c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 482              		.loc 1 97 5 view .LVU121
 483 021e 012B     		cmp	r3, #1
 484 0220 40F22C81 		bls	.L8
  98:generated/setup_scr_screen.c **** 		lv_style_reset(&style_screen_btn_2_main_main_default);
 485              		.loc 1 98 3 is_stmt 1 view .LVU122
 486 0224 6048     		ldr	r0, .L13+28
 487 0226 FFF7FEFF 		bl	lv_style_reset
 488              	.LVL60:
 489              	.L9:
  99:generated/setup_scr_screen.c **** 	else
 100:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_btn_2_main_main_default);
 101:generated/setup_scr_screen.c **** 	lv_style_set_radius(&style_screen_btn_2_main_main_default, 10);
 490              		.loc 1 101 2 view .LVU123
 491 022a 5F4D     		ldr	r5, .L13+28
 492 022c 0A21     		movs	r1, #10
 493 022e 2846     		mov	r0, r5
 494 0230 FFF7FEFF 		bl	lv_style_set_radius
 495              	.LVL61:
 102:generated/setup_scr_screen.c **** 	lv_style_set_bg_color(&style_screen_btn_2_main_main_default, lv_color_make(0x84, 0xc2, 0xf5));
 496              		.loc 1 102 2 view .LVU124
 497              	.LBB88:
 498              	.LBI88:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 499              		.loc 2 602 26 view .LVU125
 500              	.LBB89:
 501              		.loc 2 604 5 view .LVU126
 502              		.loc 2 604 12 is_stmt 0 view .LVU127
 503 0234 1E26     		movs	r6, #30
 504 0236 4FF00001 		mov	r1, #0	@ movhi
 505 023a 66F30401 		bfi	r1, r6, #0, #5
 506 023e 3023     		movs	r3, #48
 507 0240 63F34A11 		bfi	r1, r3, #5, #6
 508 0244 1023     		movs	r3, #16
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 26


 509 0246 63F3CF21 		bfi	r1, r3, #11, #5
 510              	.LVL62:
 511              		.loc 2 604 12 view .LVU128
 512              	.LBE89:
 513              	.LBE88:
 514              		.loc 1 102 2 view .LVU129
 515 024a 2846     		mov	r0, r5
 516 024c FFF7FEFF 		bl	lv_style_set_bg_color
 517              	.LVL63:
 103:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_color(&style_screen_btn_2_main_main_default, lv_color_make(0x21, 0x95, 0xf6))
 518              		.loc 1 103 2 is_stmt 1 view .LVU130
 519              	.LBB90:
 520              	.LBI90:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 521              		.loc 2 602 26 view .LVU131
 522              	.LBB91:
 523              		.loc 2 604 5 view .LVU132
 524              		.loc 2 604 12 is_stmt 0 view .LVU133
 525 0250 4FF00001 		mov	r1, #0	@ movhi
 526 0254 66F30401 		bfi	r1, r6, #0, #5
 527 0258 2523     		movs	r3, #37
 528 025a 63F34A11 		bfi	r1, r3, #5, #6
 529 025e 0423     		movs	r3, #4
 530 0260 63F3CF21 		bfi	r1, r3, #11, #5
 531              	.LVL64:
 532              		.loc 2 604 12 view .LVU134
 533              	.LBE91:
 534              	.LBE90:
 535              		.loc 1 103 2 view .LVU135
 536 0264 2846     		mov	r0, r5
 537 0266 FFF7FEFF 		bl	lv_style_set_bg_grad_color
 538              	.LVL65:
 104:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_dir(&style_screen_btn_2_main_main_default, LV_GRAD_DIR_NONE);
 539              		.loc 1 104 2 is_stmt 1 view .LVU136
 540 026a 0021     		movs	r1, #0
 541 026c 2846     		mov	r0, r5
 542 026e FFF7FEFF 		bl	lv_style_set_bg_grad_dir
 543              	.LVL66:
 105:generated/setup_scr_screen.c **** 	lv_style_set_bg_opa(&style_screen_btn_2_main_main_default, 255);
 544              		.loc 1 105 2 view .LVU137
 545 0272 FF21     		movs	r1, #255
 546 0274 2846     		mov	r0, r5
 547 0276 FFF7FEFF 		bl	lv_style_set_bg_opa
 548              	.LVL67:
 106:generated/setup_scr_screen.c **** 	lv_style_set_shadow_width(&style_screen_btn_2_main_main_default, 2);
 549              		.loc 1 106 2 view .LVU138
 550 027a 0221     		movs	r1, #2
 551 027c 2846     		mov	r0, r5
 552 027e FFF7FEFF 		bl	lv_style_set_shadow_width
 553              	.LVL68:
 107:generated/setup_scr_screen.c **** 	lv_style_set_shadow_color(&style_screen_btn_2_main_main_default, lv_color_make(0x64, 0x69, 0x6d));
 554              		.loc 1 107 2 view .LVU139
 555              	.LBB92:
 556              	.LBI92:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 557              		.loc 2 602 26 view .LVU140
 558              	.LBB93:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 27


 559              		.loc 2 604 5 view .LVU141
 560              		.loc 2 604 12 is_stmt 0 view .LVU142
 561 0282 4FF00001 		mov	r1, #0	@ movhi
 562 0286 0D23     		movs	r3, #13
 563 0288 63F30401 		bfi	r1, r3, #0, #5
 564 028c 1A23     		movs	r3, #26
 565 028e 63F34A11 		bfi	r1, r3, #5, #6
 566 0292 0C23     		movs	r3, #12
 567 0294 63F3CF21 		bfi	r1, r3, #11, #5
 568              	.LVL69:
 569              		.loc 2 604 12 view .LVU143
 570              	.LBE93:
 571              	.LBE92:
 572              		.loc 1 107 2 view .LVU144
 573 0298 2846     		mov	r0, r5
 574 029a FFF7FEFF 		bl	lv_style_set_shadow_color
 575              	.LVL70:
 108:generated/setup_scr_screen.c **** 	lv_style_set_shadow_opa(&style_screen_btn_2_main_main_default, 255);
 576              		.loc 1 108 2 is_stmt 1 view .LVU145
 577 029e FF21     		movs	r1, #255
 578 02a0 2846     		mov	r0, r5
 579 02a2 FFF7FEFF 		bl	lv_style_set_shadow_opa
 580              	.LVL71:
 109:generated/setup_scr_screen.c **** 	lv_style_set_shadow_spread(&style_screen_btn_2_main_main_default, 1);
 581              		.loc 1 109 2 view .LVU146
 582 02a6 0121     		movs	r1, #1
 583 02a8 2846     		mov	r0, r5
 584 02aa FFF7FEFF 		bl	lv_style_set_shadow_spread
 585              	.LVL72:
 110:generated/setup_scr_screen.c **** 	lv_style_set_shadow_ofs_x(&style_screen_btn_2_main_main_default, 2);
 586              		.loc 1 110 2 view .LVU147
 587 02ae 0221     		movs	r1, #2
 588 02b0 2846     		mov	r0, r5
 589 02b2 FFF7FEFF 		bl	lv_style_set_shadow_ofs_x
 590              	.LVL73:
 111:generated/setup_scr_screen.c **** 	lv_style_set_shadow_ofs_y(&style_screen_btn_2_main_main_default, 3);
 591              		.loc 1 111 2 view .LVU148
 592 02b6 0321     		movs	r1, #3
 593 02b8 2846     		mov	r0, r5
 594 02ba FFF7FEFF 		bl	lv_style_set_shadow_ofs_y
 595              	.LVL74:
 112:generated/setup_scr_screen.c **** 	lv_style_set_border_color(&style_screen_btn_2_main_main_default, lv_color_make(0x01, 0xa2, 0xb1));
 596              		.loc 1 112 2 view .LVU149
 597              	.LBB94:
 598              	.LBI94:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 599              		.loc 2 602 26 view .LVU150
 600              	.LBB95:
 601              		.loc 2 604 5 view .LVU151
 602              		.loc 2 604 12 is_stmt 0 view .LVU152
 603 02be 4FF00001 		mov	r1, #0	@ movhi
 604 02c2 1623     		movs	r3, #22
 605 02c4 63F30401 		bfi	r1, r3, #0, #5
 606 02c8 2823     		movs	r3, #40
 607 02ca 63F34A11 		bfi	r1, r3, #5, #6
 608 02ce 6FF3CF21 		bfc	r1, #11, #5
 609              	.LVL75:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 28


 610              		.loc 2 604 12 view .LVU153
 611              	.LBE95:
 612              	.LBE94:
 613              		.loc 1 112 2 view .LVU154
 614 02d2 2846     		mov	r0, r5
 615 02d4 FFF7FEFF 		bl	lv_style_set_border_color
 616              	.LVL76:
 113:generated/setup_scr_screen.c **** 	lv_style_set_border_width(&style_screen_btn_2_main_main_default, 2);
 617              		.loc 1 113 2 is_stmt 1 view .LVU155
 618 02d8 0221     		movs	r1, #2
 619 02da 2846     		mov	r0, r5
 620 02dc FFF7FEFF 		bl	lv_style_set_border_width
 621              	.LVL77:
 114:generated/setup_scr_screen.c **** 	lv_style_set_border_opa(&style_screen_btn_2_main_main_default, 255);
 622              		.loc 1 114 2 view .LVU156
 623 02e0 FF21     		movs	r1, #255
 624 02e2 2846     		mov	r0, r5
 625 02e4 FFF7FEFF 		bl	lv_style_set_border_opa
 626              	.LVL78:
 115:generated/setup_scr_screen.c **** 	lv_style_set_text_color(&style_screen_btn_2_main_main_default, lv_color_make(0xff, 0x00, 0x00));
 627              		.loc 1 115 2 view .LVU157
 628              	.LBB96:
 629              	.LBI96:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 630              		.loc 2 602 26 view .LVU158
 631              	.LBB97:
 632              		.loc 2 604 5 view .LVU159
 633              		.loc 2 604 5 is_stmt 0 view .LVU160
 634              	.LBE97:
 635              	.LBE96:
 636              		.loc 1 115 2 view .LVU161
 637 02e8 4FF60001 		movw	r1, 63488	@ movhi
 638 02ec 2846     		mov	r0, r5
 639 02ee FFF7FEFF 		bl	lv_style_set_text_color
 640              	.LVL79:
 116:generated/setup_scr_screen.c **** 	lv_style_set_text_font(&style_screen_btn_2_main_main_default, &lv_font_simsun_16);
 641              		.loc 1 116 2 is_stmt 1 view .LVU162
 642 02f2 2E49     		ldr	r1, .L13+32
 643 02f4 2846     		mov	r0, r5
 644 02f6 FFF7FEFF 		bl	lv_style_set_text_font
 645              	.LVL80:
 117:generated/setup_scr_screen.c **** 	lv_style_set_text_align(&style_screen_btn_2_main_main_default, LV_TEXT_ALIGN_CENTER);
 646              		.loc 1 117 2 view .LVU163
 647 02fa 0221     		movs	r1, #2
 648 02fc 2846     		mov	r0, r5
 649 02fe FFF7FEFF 		bl	lv_style_set_text_align
 650              	.LVL81:
 118:generated/setup_scr_screen.c **** 	lv_obj_add_style(ui->screen_btn_2, &style_screen_btn_2_main_main_default, LV_PART_MAIN|LV_STATE_DE
 651              		.loc 1 118 2 view .LVU164
 652 0302 0022     		movs	r2, #0
 653 0304 2946     		mov	r1, r5
 654 0306 6069     		ldr	r0, [r4, #20]
 655 0308 FFF7FEFF 		bl	lv_obj_add_style
 656              	.LVL82:
 119:generated/setup_scr_screen.c **** 	ui->screen_btn_2_label = lv_label_create(ui->screen_btn_2);
 657              		.loc 1 119 2 view .LVU165
 658              		.loc 1 119 27 is_stmt 0 view .LVU166
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 29


 659 030c 6069     		ldr	r0, [r4, #20]
 660 030e FFF7FEFF 		bl	lv_label_create
 661              	.LVL83:
 662              		.loc 1 119 25 view .LVU167
 663 0312 A061     		str	r0, [r4, #24]
 120:generated/setup_scr_screen.c **** 	lv_label_set_text(ui->screen_btn_2_label, "Send");
 664              		.loc 1 120 2 is_stmt 1 view .LVU168
 665 0314 2649     		ldr	r1, .L13+36
 666 0316 FFF7FEFF 		bl	lv_label_set_text
 667              	.LVL84:
 121:generated/setup_scr_screen.c **** 	lv_obj_set_style_pad_all(ui->screen_btn_2, 0, LV_STATE_DEFAULT);
 668              		.loc 1 121 2 view .LVU169
 669              		.loc 1 121 29 is_stmt 0 view .LVU170
 670 031a 6569     		ldr	r5, [r4, #20]
 671              	.LVL85:
 672              	.LBB98:
 673              	.LBI98:
 196:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 674              		.loc 3 196 20 is_stmt 1 view .LVU171
 675              	.LBB99:
 197:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 676              		.loc 3 197 5 view .LVU172
 677 031c 0022     		movs	r2, #0
 678 031e 1146     		mov	r1, r2
 679 0320 2846     		mov	r0, r5
 680 0322 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 681              	.LVL86:
 198:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 682              		.loc 3 198 5 view .LVU173
 683 0326 0022     		movs	r2, #0
 684 0328 1146     		mov	r1, r2
 685 032a 2846     		mov	r0, r5
 686 032c FFF7FEFF 		bl	lv_obj_set_style_pad_right
 687              	.LVL87:
 199:lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 688              		.loc 3 199 5 view .LVU174
 689 0330 0022     		movs	r2, #0
 690 0332 1146     		mov	r1, r2
 691 0334 2846     		mov	r0, r5
 692 0336 FFF7FEFF 		bl	lv_obj_set_style_pad_top
 693              	.LVL88:
 694              		.loc 3 200 5 view .LVU175
 695 033a 0022     		movs	r2, #0
 696 033c 1146     		mov	r1, r2
 697 033e 2846     		mov	r0, r5
 698 0340 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 699              	.LVL89:
 700              		.loc 3 200 5 is_stmt 0 view .LVU176
 701              	.LBE99:
 702              	.LBE98:
 122:generated/setup_scr_screen.c **** 	lv_obj_align(ui->screen_btn_2_label, LV_ALIGN_CENTER, 0, 0);
 703              		.loc 1 122 2 is_stmt 1 view .LVU177
 704 0344 0023     		movs	r3, #0
 705 0346 1A46     		mov	r2, r3
 706 0348 0921     		movs	r1, #9
 707 034a A069     		ldr	r0, [r4, #24]
 708 034c FFF7FEFF 		bl	lv_obj_align
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 30


 709              	.LVL90:
 123:generated/setup_scr_screen.c **** 
 124:generated/setup_scr_screen.c **** 	//Write codes screen_label_1
 125:generated/setup_scr_screen.c **** 	ui->screen_label_1 = lv_label_create(ui->screen);
 710              		.loc 1 125 2 view .LVU178
 711              		.loc 1 125 23 is_stmt 0 view .LVU179
 712 0350 2068     		ldr	r0, [r4]
 713 0352 FFF7FEFF 		bl	lv_label_create
 714              	.LVL91:
 715              		.loc 1 125 21 view .LVU180
 716 0356 E061     		str	r0, [r4, #28]
 126:generated/setup_scr_screen.c **** 	lv_obj_set_pos(ui->screen_label_1, 190, 38);
 717              		.loc 1 126 2 is_stmt 1 view .LVU181
 718 0358 2622     		movs	r2, #38
 719 035a BE21     		movs	r1, #190
 720 035c FFF7FEFF 		bl	lv_obj_set_pos
 721              	.LVL92:
 127:generated/setup_scr_screen.c **** 	lv_obj_set_size(ui->screen_label_1, 100, 32);
 722              		.loc 1 127 2 view .LVU182
 723 0360 2022     		movs	r2, #32
 724 0362 6421     		movs	r1, #100
 725 0364 E069     		ldr	r0, [r4, #28]
 726 0366 FFF7FEFF 		bl	lv_obj_set_size
 727              	.LVL93:
 128:generated/setup_scr_screen.c **** 	lv_obj_set_scrollbar_mode(ui->screen_label_1, LV_SCROLLBAR_MODE_OFF);
 728              		.loc 1 128 2 view .LVU183
 729 036a 0021     		movs	r1, #0
 730 036c E069     		ldr	r0, [r4, #28]
 731 036e FFF7FEFF 		bl	lv_obj_set_scrollbar_mode
 732              	.LVL94:
 129:generated/setup_scr_screen.c **** 	lv_label_set_text(ui->screen_label_1, "");
 733              		.loc 1 129 2 view .LVU184
 734 0372 1049     		ldr	r1, .L13+40
 735 0374 E069     		ldr	r0, [r4, #28]
 736 0376 FFF7FEFF 		bl	lv_label_set_text
 737              	.LVL95:
 130:generated/setup_scr_screen.c **** 	lv_label_set_long_mode(ui->screen_label_1, LV_LABEL_LONG_WRAP);
 738              		.loc 1 130 2 view .LVU185
 739 037a 0021     		movs	r1, #0
 740 037c E069     		ldr	r0, [r4, #28]
 741 037e FFF7FEFF 		bl	lv_label_set_long_mode
 742              	.LVL96:
 131:generated/setup_scr_screen.c **** 
 132:generated/setup_scr_screen.c **** 	//Write style state: LV_STATE_DEFAULT for style_screen_label_1_main_main_default
 133:generated/setup_scr_screen.c **** 	static lv_style_t style_screen_label_1_main_main_default;
 743              		.loc 1 133 2 view .LVU186
 134:generated/setup_scr_screen.c **** 	if (style_screen_label_1_main_main_default.prop_cnt > 1)
 744              		.loc 1 134 2 view .LVU187
 745              		.loc 1 134 44 is_stmt 0 view .LVU188
 746 0382 0D4B     		ldr	r3, .L13+44
 747 0384 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 748              		.loc 1 134 5 view .LVU189
 749 0386 012B     		cmp	r3, #1
 750 0388 7CD9     		bls	.L10
 751 038a 17E0     		b	.L14
 752              	.L15:
 753              		.align	2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 31


 754              	.L13:
 755 038c 00000000 		.word	.LANCHOR0
 756 0390 00000000 		.word	.LC0
 757 0394 00000000 		.word	.LANCHOR1
 758 0398 00000000 		.word	lv_font_arial_12
 759 039c 00000000 		.word	.LANCHOR2
 760 03a0 00000000 		.word	lv_font_simsun_12
 761 03a4 08000000 		.word	.LC1
 762 03a8 00000000 		.word	.LANCHOR3
 763 03ac 00000000 		.word	lv_font_simsun_16
 764 03b0 14000000 		.word	.LC2
 765 03b4 1C000000 		.word	.LC3
 766 03b8 00000000 		.word	.LANCHOR4
 767              	.L14:
 135:generated/setup_scr_screen.c **** 		lv_style_reset(&style_screen_label_1_main_main_default);
 768              		.loc 1 135 3 is_stmt 1 view .LVU190
 769 03bc 3348     		ldr	r0, .L16
 770 03be FFF7FEFF 		bl	lv_style_reset
 771              	.LVL97:
 772              	.L11:
 136:generated/setup_scr_screen.c **** 	else
 137:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_label_1_main_main_default);
 138:generated/setup_scr_screen.c **** 	lv_style_set_radius(&style_screen_label_1_main_main_default, 0);
 773              		.loc 1 138 2 view .LVU191
 774 03c2 324D     		ldr	r5, .L16
 775 03c4 0021     		movs	r1, #0
 776 03c6 2846     		mov	r0, r5
 777 03c8 FFF7FEFF 		bl	lv_style_set_radius
 778              	.LVL98:
 139:generated/setup_scr_screen.c **** 	lv_style_set_bg_color(&style_screen_label_1_main_main_default, lv_color_make(0xfa, 0xfa, 0xfa));
 779              		.loc 1 139 2 view .LVU192
 780              	.LBB100:
 781              	.LBI100:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 782              		.loc 2 602 26 view .LVU193
 783              	.LBB101:
 784              		.loc 2 604 5 view .LVU194
 785              		.loc 2 604 12 is_stmt 0 view .LVU195
 786 03cc 4FF01F01 		mov	r1, #31	@ movhi
 787 03d0 3E23     		movs	r3, #62
 788 03d2 63F34A11 		bfi	r1, r3, #5, #6
 789              	.LVL99:
 790              		.loc 2 604 12 view .LVU196
 791              	.LBE101:
 792              	.LBE100:
 793              		.loc 1 139 2 view .LVU197
 794 03d6 6FEA4151 		mvn	r1, r1, lsl #21
 795 03da 6FEA5151 		mvn	r1, r1, lsr #21
 796 03de 2846     		mov	r0, r5
 797 03e0 FFF7FEFF 		bl	lv_style_set_bg_color
 798              	.LVL100:
 140:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_color(&style_screen_label_1_main_main_default, lv_color_make(0x21, 0x95, 0xf6
 799              		.loc 1 140 2 is_stmt 1 view .LVU198
 800              	.LBB102:
 801              	.LBI102:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 802              		.loc 2 602 26 view .LVU199
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 32


 803              	.LBB103:
 804              		.loc 2 604 5 view .LVU200
 805              		.loc 2 604 12 is_stmt 0 view .LVU201
 806 03e4 4FF00001 		mov	r1, #0	@ movhi
 807 03e8 1E23     		movs	r3, #30
 808 03ea 63F30401 		bfi	r1, r3, #0, #5
 809 03ee 2523     		movs	r3, #37
 810 03f0 63F34A11 		bfi	r1, r3, #5, #6
 811 03f4 0426     		movs	r6, #4
 812 03f6 66F3CF21 		bfi	r1, r6, #11, #5
 813              	.LVL101:
 814              		.loc 2 604 12 view .LVU202
 815              	.LBE103:
 816              	.LBE102:
 817              		.loc 1 140 2 view .LVU203
 818 03fa 2846     		mov	r0, r5
 819 03fc FFF7FEFF 		bl	lv_style_set_bg_grad_color
 820              	.LVL102:
 141:generated/setup_scr_screen.c **** 	lv_style_set_bg_grad_dir(&style_screen_label_1_main_main_default, LV_GRAD_DIR_HOR);
 821              		.loc 1 141 2 is_stmt 1 view .LVU204
 822 0400 0221     		movs	r1, #2
 823 0402 2846     		mov	r0, r5
 824 0404 FFF7FEFF 		bl	lv_style_set_bg_grad_dir
 825              	.LVL103:
 142:generated/setup_scr_screen.c **** 	lv_style_set_bg_opa(&style_screen_label_1_main_main_default, 255);
 826              		.loc 1 142 2 view .LVU205
 827 0408 FF21     		movs	r1, #255
 828 040a 2846     		mov	r0, r5
 829 040c FFF7FEFF 		bl	lv_style_set_bg_opa
 830              	.LVL104:
 143:generated/setup_scr_screen.c **** 	lv_style_set_text_color(&style_screen_label_1_main_main_default, lv_color_make(0x00, 0x00, 0x00));
 831              		.loc 1 143 2 view .LVU206
 832              	.LBB104:
 833              	.LBI104:
 602:lvgl/src/hal/../misc/lv_color.h **** {
 834              		.loc 2 602 26 view .LVU207
 835              	.LBB105:
 836              		.loc 2 604 5 view .LVU208
 837              		.loc 2 604 5 is_stmt 0 view .LVU209
 838              	.LBE105:
 839              	.LBE104:
 840              		.loc 1 143 2 view .LVU210
 841 0410 4FF00001 		mov	r1, #0	@ movhi
 842 0414 2846     		mov	r0, r5
 843 0416 FFF7FEFF 		bl	lv_style_set_text_color
 844              	.LVL105:
 144:generated/setup_scr_screen.c **** 	lv_style_set_text_letter_space(&style_screen_label_1_main_main_default, 2);
 845              		.loc 1 144 2 is_stmt 1 view .LVU211
 846 041a 0221     		movs	r1, #2
 847 041c 2846     		mov	r0, r5
 848 041e FFF7FEFF 		bl	lv_style_set_text_letter_space
 849              	.LVL106:
 145:generated/setup_scr_screen.c **** 	lv_style_set_text_line_space(&style_screen_label_1_main_main_default, 4);
 850              		.loc 1 145 2 view .LVU212
 851 0422 3146     		mov	r1, r6
 852 0424 2846     		mov	r0, r5
 853 0426 FFF7FEFF 		bl	lv_style_set_text_line_space
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 33


 854              	.LVL107:
 146:generated/setup_scr_screen.c **** 	lv_style_set_text_align(&style_screen_label_1_main_main_default, LV_TEXT_ALIGN_CENTER);
 855              		.loc 1 146 2 view .LVU213
 856 042a 0221     		movs	r1, #2
 857 042c 2846     		mov	r0, r5
 858 042e FFF7FEFF 		bl	lv_style_set_text_align
 859              	.LVL108:
 147:generated/setup_scr_screen.c **** 	lv_style_set_pad_left(&style_screen_label_1_main_main_default, 5);
 860              		.loc 1 147 2 view .LVU214
 861 0432 0521     		movs	r1, #5
 862 0434 2846     		mov	r0, r5
 863 0436 FFF7FEFF 		bl	lv_style_set_pad_left
 864              	.LVL109:
 148:generated/setup_scr_screen.c **** 	lv_style_set_pad_right(&style_screen_label_1_main_main_default, 5);
 865              		.loc 1 148 2 view .LVU215
 866 043a 0521     		movs	r1, #5
 867 043c 2846     		mov	r0, r5
 868 043e FFF7FEFF 		bl	lv_style_set_pad_right
 869              	.LVL110:
 149:generated/setup_scr_screen.c **** 	lv_style_set_pad_top(&style_screen_label_1_main_main_default, 5);
 870              		.loc 1 149 2 view .LVU216
 871 0442 0521     		movs	r1, #5
 872 0444 2846     		mov	r0, r5
 873 0446 FFF7FEFF 		bl	lv_style_set_pad_top
 874              	.LVL111:
 150:generated/setup_scr_screen.c **** 	lv_style_set_pad_bottom(&style_screen_label_1_main_main_default, 5);
 875              		.loc 1 150 2 view .LVU217
 876 044a 0521     		movs	r1, #5
 877 044c 2846     		mov	r0, r5
 878 044e FFF7FEFF 		bl	lv_style_set_pad_bottom
 879              	.LVL112:
 151:generated/setup_scr_screen.c **** 	lv_obj_add_style(ui->screen_label_1, &style_screen_label_1_main_main_default, LV_PART_MAIN|LV_STAT
 880              		.loc 1 151 2 view .LVU218
 881 0452 0022     		movs	r2, #0
 882 0454 2946     		mov	r1, r5
 883 0456 E069     		ldr	r0, [r4, #28]
 884 0458 FFF7FEFF 		bl	lv_obj_add_style
 885              	.LVL113:
 152:generated/setup_scr_screen.c **** 
 153:generated/setup_scr_screen.c **** 	//Init events for screen
 154:generated/setup_scr_screen.c **** 	events_init_screen(ui);
 886              		.loc 1 154 2 view .LVU219
 887 045c 2046     		mov	r0, r4
 888 045e FFF7FEFF 		bl	events_init_screen
 889              	.LVL114:
 155:generated/setup_scr_screen.c **** }...
 890              		.loc 1 155 1 is_stmt 0 view .LVU220
 891 0462 70BD     		pop	{r4, r5, r6, pc}
 892              	.LVL115:
 893              	.L2:
  25:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_main_main_default);
 894              		.loc 1 25 3 is_stmt 1 view .LVU221
 895 0464 0A48     		ldr	r0, .L16+4
 896 0466 FFF7FEFF 		bl	lv_style_init
 897              	.LVL116:
 898 046a DAE5     		b	.L3
 899              	.L4:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 34


  43:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_label0_main_main_default);
 900              		.loc 1 43 3 view .LVU222
 901 046c 0948     		ldr	r0, .L16+8
 902 046e FFF7FEFF 		bl	lv_style_init
 903              	.LVL117:
 904 0472 06E6     		b	.L5
 905              	.L6:
  71:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_btn1_main_main_default);
 906              		.loc 1 71 3 view .LVU223
 907 0474 0848     		ldr	r0, .L16+12
 908 0476 FFF7FEFF 		bl	lv_style_init
 909              	.LVL118:
 910 047a 5DE6     		b	.L7
 911              	.L8:
 100:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_btn_2_main_main_default);
 912              		.loc 1 100 3 view .LVU224
 913 047c 0748     		ldr	r0, .L16+16
 914 047e FFF7FEFF 		bl	lv_style_init
 915              	.LVL119:
 916 0482 D2E6     		b	.L9
 917              	.L10:
 137:generated/setup_scr_screen.c **** 		lv_style_init(&style_screen_label_1_main_main_default);
 918              		.loc 1 137 3 view .LVU225
 919 0484 0148     		ldr	r0, .L16
 920 0486 FFF7FEFF 		bl	lv_style_init
 921              	.LVL120:
 922 048a 9AE7     		b	.L11
 923              	.L17:
 924              		.align	2
 925              	.L16:
 926 048c 00000000 		.word	.LANCHOR4
 927 0490 00000000 		.word	.LANCHOR0
 928 0494 00000000 		.word	.LANCHOR1
 929 0498 00000000 		.word	.LANCHOR2
 930 049c 00000000 		.word	.LANCHOR3
 931              		.cfi_endproc
 932              	.LFE187:
 934              		.section	.bss.style_screen_btn1_main_main_default.2,"aw",%nobits
 935              		.align	2
 936              		.set	.LANCHOR2,. + 0
 939              	style_screen_btn1_main_main_default.2:
 940 0000 00000000 		.space	8
 940      00000000 
 941              		.section	.bss.style_screen_btn_2_main_main_default.1,"aw",%nobits
 942              		.align	2
 943              		.set	.LANCHOR3,. + 0
 946              	style_screen_btn_2_main_main_default.1:
 947 0000 00000000 		.space	8
 947      00000000 
 948              		.section	.bss.style_screen_label0_main_main_default.3,"aw",%nobits
 949              		.align	2
 950              		.set	.LANCHOR1,. + 0
 953              	style_screen_label0_main_main_default.3:
 954 0000 00000000 		.space	8
 954      00000000 
 955              		.section	.bss.style_screen_label_1_main_main_default.0,"aw",%nobits
 956              		.align	2
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 35


 957              		.set	.LANCHOR4,. + 0
 960              	style_screen_label_1_main_main_default.0:
 961 0000 00000000 		.space	8
 961      00000000 
 962              		.section	.bss.style_screen_main_main_default.4,"aw",%nobits
 963              		.align	2
 964              		.set	.LANCHOR0,. + 0
 967              	style_screen_main_main_default.4:
 968 0000 00000000 		.space	8
 968      00000000 
 969              		.text
 970              	.Letext0:
 971              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 972              		.file 5 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 973              		.file 6 "lvgl/src/misc/lv_ll.h"
 974              		.file 7 "lvgl/src/hal/../misc/lv_area.h"
 975              		.file 8 "lvgl/src/core/lv_obj.h"
 976              		.file 9 "lvgl/src/core/lv_group.h"
 977              		.file 10 "lvgl/src/core/../misc/../font/lv_font.h"
 978              		.file 11 "lvgl/src/core/../misc/lv_txt.h"
 979              		.file 12 "lvgl/src/core/../misc/lv_style.h"
 980              		.file 13 "lvgl/src/core/lv_obj_scroll.h"
 981              		.file 14 "lvgl/src/core/lv_obj_class.h"
 982              		.file 15 "lvgl/src/core/lv_event.h"
 983              		.file 16 "lvgl/src/widgets/lv_label.h"
 984              		.file 17 "generated/../generated/guider_fonts/guider_fonts.h"
 985              		.file 18 "generated/gui_guider.h"
 986              		.file 19 "lvgl/src/core/lv_obj_style_gen.h"
 987              		.file 20 "lvgl/src/core/../misc/lv_style_gen.h"
 988              		.file 21 "lvgl/src/core/lv_obj_pos.h"
 989              		.file 22 "lvgl/src/widgets/lv_btn.h"
 990              		.file 23 "generated/events_init.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 setup_scr_screen.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:20     .rodata.setup_scr_screen.str1.4:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:33     .text.setup_scr_screen:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:39     .text.setup_scr_screen:00000000 setup_scr_screen
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:755    .text.setup_scr_screen:0000038c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:769    .text.setup_scr_screen:000003bc $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:926    .text.setup_scr_screen:0000048c $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:935    .bss.style_screen_btn1_main_main_default.2:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:939    .bss.style_screen_btn1_main_main_default.2:00000000 style_screen_btn1_main_main_default.2
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:942    .bss.style_screen_btn_2_main_main_default.1:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:946    .bss.style_screen_btn_2_main_main_default.1:00000000 style_screen_btn_2_main_main_default.1
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:949    .bss.style_screen_label0_main_main_default.3:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:953    .bss.style_screen_label0_main_main_default.3:00000000 style_screen_label0_main_main_default.3
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:956    .bss.style_screen_label_1_main_main_default.0:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:960    .bss.style_screen_label_1_main_main_default.0:00000000 style_screen_label_1_main_main_default.0
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:963    .bss.style_screen_main_main_default.4:00000000 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s:967    .bss.style_screen_main_main_default.4:00000000 style_screen_main_main_default.4

UNDEFINED SYMBOLS
lv_obj_create
lv_obj_set_scrollbar_mode
lv_style_reset
lv_style_set_bg_color
lv_style_set_bg_opa
lv_obj_add_style
lv_label_create
lv_obj_set_pos
lv_obj_set_size
lv_label_set_text
lv_label_set_long_mode
lv_style_set_radius
lv_style_set_bg_grad_color
lv_style_set_bg_grad_dir
lv_style_set_text_color
lv_style_set_text_font
lv_style_set_text_letter_space
lv_style_set_text_line_space
lv_style_set_text_align
lv_style_set_pad_left
lv_style_set_pad_right
lv_style_set_pad_top
lv_style_set_pad_bottom
lv_btn_create
lv_style_set_border_color
lv_style_set_border_width
lv_style_set_border_opa
lv_obj_set_style_pad_left
lv_obj_set_style_pad_right
lv_obj_set_style_pad_top
lv_obj_set_style_pad_bottom
lv_obj_align
lv_style_set_shadow_width
lv_style_set_shadow_color
lv_style_set_shadow_opa
lv_style_set_shadow_spread
lv_style_set_shadow_ofs_x
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccJhweC5.s 			page 37


lv_style_set_shadow_ofs_y
lv_font_arial_12
lv_font_simsun_12
lv_font_simsun_16
events_init_screen
lv_style_init
