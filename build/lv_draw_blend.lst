ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_draw_blend.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.map_blended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	map_blended:
  26              	.LVL0:
  27              	.LFB154:
  28              		.file 1 "lvgl/src/draw/lv_draw_blend.c"
   1:lvgl/src/draw/lv_draw_blend.c **** /**
   2:lvgl/src/draw/lv_draw_blend.c ****  * @file lv_draw_blend.c
   3:lvgl/src/draw/lv_draw_blend.c ****  *
   4:lvgl/src/draw/lv_draw_blend.c ****  */
   5:lvgl/src/draw/lv_draw_blend.c **** 
   6:lvgl/src/draw/lv_draw_blend.c **** /*********************
   7:lvgl/src/draw/lv_draw_blend.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_blend.c ****  *********************/
   9:lvgl/src/draw/lv_draw_blend.c **** #include "lv_draw_blend.h"
  10:lvgl/src/draw/lv_draw_blend.c **** #include "lv_img_decoder.h"
  11:lvgl/src/draw/lv_draw_blend.c **** #include "../misc/lv_math.h"
  12:lvgl/src/draw/lv_draw_blend.c **** #include "../hal/lv_hal_disp.h"
  13:lvgl/src/draw/lv_draw_blend.c **** #include "../core/lv_refr.h"
  14:lvgl/src/draw/lv_draw_blend.c **** 
  15:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
  16:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_pxp.h"
  17:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
  18:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_vglite.h"
  19:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
  20:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_stm32_dma2d.h"
  21:lvgl/src/draw/lv_draw_blend.c **** #endif
  22:lvgl/src/draw/lv_draw_blend.c **** 
  23:lvgl/src/draw/lv_draw_blend.c **** /*********************
  24:lvgl/src/draw/lv_draw_blend.c ****  *      DEFINES
  25:lvgl/src/draw/lv_draw_blend.c ****  *********************/
  26:lvgl/src/draw/lv_draw_blend.c **** #define GPU_SIZE_LIMIT      240
  27:lvgl/src/draw/lv_draw_blend.c **** 
  28:lvgl/src/draw/lv_draw_blend.c **** /**********************
  29:lvgl/src/draw/lv_draw_blend.c ****  *      TYPEDEFS
  30:lvgl/src/draw/lv_draw_blend.c ****  **********************/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 2


  31:lvgl/src/draw/lv_draw_blend.c **** 
  32:lvgl/src/draw/lv_draw_blend.c **** /**********************
  33:lvgl/src/draw/lv_draw_blend.c ****  *  STATIC PROTOTYPES
  34:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  35:lvgl/src/draw/lv_draw_blend.c **** 
  36:lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  37:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
  38:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  39:lvgl/src/draw/lv_draw_blend.c **** 
  40:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  41:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
  42:lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
  43:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  44:lvgl/src/draw/lv_draw_blend.c **** 
  45:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  46:lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
  47:lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
  48:lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  49:lvgl/src/draw/lv_draw_blend.c **** #endif
  50:lvgl/src/draw/lv_draw_blend.c **** 
  51:lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
  52:lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  53:lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  54:lvgl/src/draw/lv_draw_blend.c **** 
  55:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  56:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
  57:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
  58:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  59:lvgl/src/draw/lv_draw_blend.c **** 
  60:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  61:lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  62:lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  63:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  64:lvgl/src/draw/lv_draw_blend.c **** 
  65:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  66:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  67:lvgl/src/draw/lv_draw_blend.c **** #endif
  68:lvgl/src/draw/lv_draw_blend.c **** 
  69:lvgl/src/draw/lv_draw_blend.c **** /**********************
  70:lvgl/src/draw/lv_draw_blend.c ****  *  STATIC VARIABLES
  71:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  72:lvgl/src/draw/lv_draw_blend.c **** 
  73:lvgl/src/draw/lv_draw_blend.c **** /**********************
  74:lvgl/src/draw/lv_draw_blend.c ****  *      MACROS
  75:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  76:lvgl/src/draw/lv_draw_blend.c **** 
  77:lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX(out_x,  color)                                                         
  78:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  79:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  80:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  81:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  82:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  83:lvgl/src/draw/lv_draw_blend.c **** 
  84:lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX_SCR_TRANSP(out_x,  color)                                              
  85:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  86:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  87:lvgl/src/draw/lv_draw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(disp_buf_first[out_x], disp_bu
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 3


  88:lvgl/src/draw/lv_draw_blend.c ****                                                                         color, *mask_tmp_x, &disp_b
  89:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  90:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  91:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  92:lvgl/src/draw/lv_draw_blend.c **** 
  93:lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  94:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  95:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
  96:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
  97:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  98:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  99:lvgl/src/draw/lv_draw_blend.c **** 
 100:lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX_SCR_TRANSP(x)                        \
 101:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
 102:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
 103:lvgl/src/draw/lv_draw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_fi
 104:lvgl/src/draw/lv_draw_blend.c ****                                                                         map_buf_first[x], *mask_tmp
 105:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
 106:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
 107:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
 108:lvgl/src/draw/lv_draw_blend.c **** 
 109:lvgl/src/draw/lv_draw_blend.c **** /**********************
 110:lvgl/src/draw/lv_draw_blend.c ****  *   GLOBAL FUNCTIONS
 111:lvgl/src/draw/lv_draw_blend.c ****  **********************/
 112:lvgl/src/draw/lv_draw_blend.c **** 
 113:lvgl/src/draw/lv_draw_blend.c **** /**
 114:lvgl/src/draw/lv_draw_blend.c ****  * Fill and area in the display buffer.
 115:lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the fill to this area  (absolute coordinates)
 116:lvgl/src/draw/lv_draw_blend.c ****  * @param fill_area fill this area  (absolute coordinates) (should be clipped)
 117:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 118:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on the fill (uint8_t array with 0x00..0xff values).
 119:lvgl/src/draw/lv_draw_blend.c ****  *             Relative to fill area but its width is truncated to clip area.
 120:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 121:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 122:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 123:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 124:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 125:lvgl/src/draw/lv_draw_blend.c ****  */
 126:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,
 127:lvgl/src/draw/lv_draw_blend.c ****                                           lv_color_t color, lv_opa_t * mask, lv_draw_mask_res_t mas
 128:lvgl/src/draw/lv_draw_blend.c ****                                           lv_blend_mode_t mode)
 129:lvgl/src/draw/lv_draw_blend.c **** {
 130:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 131:lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 132:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 133:lvgl/src/draw/lv_draw_blend.c **** 
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 135:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 136:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 137:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 138:lvgl/src/draw/lv_draw_blend.c **** 
 139:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 140:lvgl/src/draw/lv_draw_blend.c **** 
 141:lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 142:lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 143:lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 144:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 4


 145:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 146:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 147:lvgl/src/draw/lv_draw_blend.c **** 
 148:lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 149:lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 153:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 154:lvgl/src/draw/lv_draw_blend.c **** 
 155:lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 156:lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0 && mask) {
 157:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 158:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 159:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 160:lvgl/src/draw/lv_draw_blend.c ****     }
 161:lvgl/src/draw/lv_draw_blend.c **** 
 162:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 163:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 164:lvgl/src/draw/lv_draw_blend.c ****     }
 165:lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 166:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 167:lvgl/src/draw/lv_draw_blend.c ****     }
 168:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 169:lvgl/src/draw/lv_draw_blend.c ****     else {
 170:lvgl/src/draw/lv_draw_blend.c ****         fill_blended(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res, mode);
 171:lvgl/src/draw/lv_draw_blend.c ****     }
 172:lvgl/src/draw/lv_draw_blend.c **** #endif
 173:lvgl/src/draw/lv_draw_blend.c **** }
 174:lvgl/src/draw/lv_draw_blend.c **** 
 175:lvgl/src/draw/lv_draw_blend.c **** /**
 176:lvgl/src/draw/lv_draw_blend.c ****  * Copy a map (image) to a display buffer.
 177:lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the map to this area (absolute coordinates)
 178:lvgl/src/draw/lv_draw_blend.c ****  * @param map_area area of the image  (absolute coordinates)
 179:lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf a pixels of the map (image)
 180:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 181:lvgl/src/draw/lv_draw_blend.c ****  *                Relative to map area but its width is truncated to clip area.
 182:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 183:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 184:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 185:lvgl/src/draw/lv_draw_blend.c ****  * @param opa  overall opacity in 0x00..0xff range
 186:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 187:lvgl/src/draw/lv_draw_blend.c ****  */
 188:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,
 189:lvgl/src/draw/lv_draw_blend.c ****                                          const lv_color_t * map_buf,
 190:lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t * mask, lv_draw_mask_res_t mask_res,
 191:lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t opa, lv_blend_mode_t mode)
 192:lvgl/src/draw/lv_draw_blend.c **** {
 193:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 194:lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 195:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 196:lvgl/src/draw/lv_draw_blend.c **** 
 197:lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 198:lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 199:lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 200:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 201:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 5


 202:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 203:lvgl/src/draw/lv_draw_blend.c **** 
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 205:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 206:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 207:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 208:lvgl/src/draw/lv_draw_blend.c **** 
 209:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 210:lvgl/src/draw/lv_draw_blend.c **** 
 211:lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 212:lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 216:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 217:lvgl/src/draw/lv_draw_blend.c **** 
 218:lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 219:lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0)
 220:lvgl/src/draw/lv_draw_blend.c ****     {
 221:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 222:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 223:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 224:lvgl/src/draw/lv_draw_blend.c ****     }
 225:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 226:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 227:lvgl/src/draw/lv_draw_blend.c ****     }
 228:lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 229:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 230:lvgl/src/draw/lv_draw_blend.c ****     }
 231:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 232:lvgl/src/draw/lv_draw_blend.c ****     else {
 233:lvgl/src/draw/lv_draw_blend.c ****         map_blended(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res, mode);
 234:lvgl/src/draw/lv_draw_blend.c ****     }
 235:lvgl/src/draw/lv_draw_blend.c **** #endif
 236:lvgl/src/draw/lv_draw_blend.c **** }
 237:lvgl/src/draw/lv_draw_blend.c **** 
 238:lvgl/src/draw/lv_draw_blend.c **** /**********************
 239:lvgl/src/draw/lv_draw_blend.c ****  *   STATIC FUNCTIONS
 240:lvgl/src/draw/lv_draw_blend.c ****  **********************/
 241:lvgl/src/draw/lv_draw_blend.c **** 
 242:lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 243:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
 244:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 245:lvgl/src/draw/lv_draw_blend.c **** {
 246:lvgl/src/draw/lv_draw_blend.c **** 
 247:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 248:lvgl/src/draw/lv_draw_blend.c **** 
 249:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 250:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 251:lvgl/src/draw/lv_draw_blend.c **** 
 252:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 253:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 254:lvgl/src/draw/lv_draw_blend.c **** 
 255:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 256:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 257:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 258:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 6


 259:lvgl/src/draw/lv_draw_blend.c ****             }
 260:lvgl/src/draw/lv_draw_blend.c ****         }
 261:lvgl/src/draw/lv_draw_blend.c ****     }
 262:lvgl/src/draw/lv_draw_blend.c ****     else {
 263:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 264:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 265:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 266:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 267:lvgl/src/draw/lv_draw_blend.c **** 
 268:lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 269:lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 270:lvgl/src/draw/lv_draw_blend.c **** 
 271:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 272:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 273:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 274:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 275:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 276:lvgl/src/draw/lv_draw_blend.c ****                 }
 277:lvgl/src/draw/lv_draw_blend.c ****             }
 278:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 279:lvgl/src/draw/lv_draw_blend.c ****         }
 280:lvgl/src/draw/lv_draw_blend.c ****     }
 281:lvgl/src/draw/lv_draw_blend.c **** }
 282:lvgl/src/draw/lv_draw_blend.c **** 
 283:lvgl/src/draw/lv_draw_blend.c **** /**
 284:lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color
 285:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 286:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 287:lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 288:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 289:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 290:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 291:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 292:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 293:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 294:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 295:lvgl/src/draw/lv_draw_blend.c ****  */
 296:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 297:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
 298:lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
 299:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 300:lvgl/src/draw/lv_draw_blend.c **** {
 301:lvgl/src/draw/lv_draw_blend.c **** 
 302:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 303:lvgl/src/draw/lv_draw_blend.c **** 
 304:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 305:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 306:lvgl/src/draw/lv_draw_blend.c **** 
 307:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 308:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 309:lvgl/src/draw/lv_draw_blend.c **** 
 310:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to the first pixel of the destination area*/
 311:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 312:lvgl/src/draw/lv_draw_blend.c **** 
 313:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 314:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 315:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 7


 316:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 317:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 318:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 319:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 320:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_SIZE_LIMIT) {
 321:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 322:lvgl/src/draw/lv_draw_blend.c ****                 return;
 323:lvgl/src/draw/lv_draw_blend.c ****             }
 324:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 325:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT) {
 326:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 327:lvgl/src/draw/lv_draw_blend.c ****                     return;
 328:lvgl/src/draw/lv_draw_blend.c ****                 }
 329:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 330:lvgl/src/draw/lv_draw_blend.c ****             }
 331:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 332:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 333:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_fill(disp_buf_first, disp_w, color, draw_area_w, draw_area_h);
 334:lvgl/src/draw/lv_draw_blend.c ****                 return;
 335:lvgl/src/draw/lv_draw_blend.c ****             }
 336:lvgl/src/draw/lv_draw_blend.c **** #endif
 337:lvgl/src/draw/lv_draw_blend.c **** 
 338:lvgl/src/draw/lv_draw_blend.c ****             if(disp->driver->gpu_fill_cb && lv_area_get_size(draw_area) > GPU_SIZE_LIMIT) {
 339:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 340:lvgl/src/draw/lv_draw_blend.c ****                 return;
 341:lvgl/src/draw/lv_draw_blend.c ****             }
 342:lvgl/src/draw/lv_draw_blend.c **** 
 343:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 344:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 345:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 346:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 347:lvgl/src/draw/lv_draw_blend.c ****             }
 348:lvgl/src/draw/lv_draw_blend.c ****         }
 349:lvgl/src/draw/lv_draw_blend.c ****         /*No mask with opacity*/
 350:lvgl/src/draw/lv_draw_blend.c ****         else {
 351:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 352:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT) {
 353:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 354:lvgl/src/draw/lv_draw_blend.c ****                 return;
 355:lvgl/src/draw/lv_draw_blend.c ****             }
 356:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 357:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT) {
 358:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 359:lvgl/src/draw/lv_draw_blend.c ****                     return;
 360:lvgl/src/draw/lv_draw_blend.c ****                 }
 361:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 362:lvgl/src/draw/lv_draw_blend.c ****             }
 363:lvgl/src/draw/lv_draw_blend.c **** #endif
 364:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 365:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 366:lvgl/src/draw/lv_draw_blend.c **** 
 367:lvgl/src/draw/lv_draw_blend.c ****             uint16_t color_premult[3];
 368:lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 369:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 370:lvgl/src/draw/lv_draw_blend.c **** 
 371:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 372:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 8


 373:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 374:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 375:lvgl/src/draw/lv_draw_blend.c **** 
 376:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 377:lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 378:lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 379:lvgl/src/draw/lv_draw_blend.c ****                                                     &last_res_color.ch.alpha);
 380:lvgl/src/draw/lv_draw_blend.c ****                         }
 381:lvgl/src/draw/lv_draw_blend.c ****                         else
 382:lvgl/src/draw/lv_draw_blend.c **** #endif
 383:lvgl/src/draw/lv_draw_blend.c ****                         {
 384:lvgl/src/draw/lv_draw_blend.c ****                             last_res_color = lv_color_mix_premult(color_premult, disp_buf_first[x],
 385:lvgl/src/draw/lv_draw_blend.c ****                         }
 386:lvgl/src/draw/lv_draw_blend.c ****                     }
 387:lvgl/src/draw/lv_draw_blend.c ****                     disp_buf_first[x] = last_res_color;
 388:lvgl/src/draw/lv_draw_blend.c ****                 }
 389:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 390:lvgl/src/draw/lv_draw_blend.c ****             }
 391:lvgl/src/draw/lv_draw_blend.c ****         }
 392:lvgl/src/draw/lv_draw_blend.c ****     }
 393:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 394:lvgl/src/draw/lv_draw_blend.c ****     else {
 395:lvgl/src/draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 396:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 397:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 398:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 399:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 400:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 401:lvgl/src/draw/lv_draw_blend.c **** 
 402:lvgl/src/draw/lv_draw_blend.c ****         int32_t x_end4 = draw_area_w - 4;
 403:lvgl/src/draw/lv_draw_blend.c **** 
 404:lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 405:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 406:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 407:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 408:lvgl/src/draw/lv_draw_blend.c **** #if 0
 409:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 410:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 411:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 412:lvgl/src/draw/lv_draw_blend.c **** #else
 413:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 414:lvgl/src/draw/lv_draw_blend.c **** #endif
 415:lvgl/src/draw/lv_draw_blend.c ****                 }
 416:lvgl/src/draw/lv_draw_blend.c **** #else
 417:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 418:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 419:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 420:lvgl/src/draw/lv_draw_blend.c **** #else
 421:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 422:lvgl/src/draw/lv_draw_blend.c **** #endif
 423:lvgl/src/draw/lv_draw_blend.c ****                 }
 424:lvgl/src/draw/lv_draw_blend.c **** 
 425:lvgl/src/draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 426:lvgl/src/draw/lv_draw_blend.c ****                 for(; x <= x_end4; x += 4) {
 427:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 428:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 9


 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 432:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 433:lvgl/src/draw/lv_draw_blend.c ****                         }
 434:lvgl/src/draw/lv_draw_blend.c ****                         else {
 435:lvgl/src/draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 436:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 437:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 438:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 1, color)
 439:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 2, color)
 440:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 3, color)
 441:lvgl/src/draw/lv_draw_blend.c **** #else
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x, color)
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 445:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 446:lvgl/src/draw/lv_draw_blend.c **** #endif
 447:lvgl/src/draw/lv_draw_blend.c ****                         }
 448:lvgl/src/draw/lv_draw_blend.c ****                     }
 449:lvgl/src/draw/lv_draw_blend.c ****                     mask32++;
 450:lvgl/src/draw/lv_draw_blend.c ****                 }
 451:lvgl/src/draw/lv_draw_blend.c **** 
 452:lvgl/src/draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 453:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 454:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 455:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 456:lvgl/src/draw/lv_draw_blend.c **** #else
 457:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 458:lvgl/src/draw/lv_draw_blend.c **** #endif
 459:lvgl/src/draw/lv_draw_blend.c ****                 }
 460:lvgl/src/draw/lv_draw_blend.c **** #endif
 461:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 462:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 463:lvgl/src/draw/lv_draw_blend.c ****             }
 464:lvgl/src/draw/lv_draw_blend.c ****         }
 465:lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 466:lvgl/src/draw/lv_draw_blend.c ****         else {
 467:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 468:lvgl/src/draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 469:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 470:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 471:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 472:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 473:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 474:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 475:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 476:lvgl/src/draw/lv_draw_blend.c ****                             if(disp->driver->screen_transp) {
 477:lvgl/src/draw/lv_draw_blend.c ****                                 lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alp
 478:lvgl/src/draw/lv_draw_blend.c ****                                                         &last_res_color.ch.alpha);
 479:lvgl/src/draw/lv_draw_blend.c ****                             }
 480:lvgl/src/draw/lv_draw_blend.c ****                             else
 481:lvgl/src/draw/lv_draw_blend.c **** #endif
 482:lvgl/src/draw/lv_draw_blend.c ****                             {
 483:lvgl/src/draw/lv_draw_blend.c ****                                 if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 484:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 485:lvgl/src/draw/lv_draw_blend.c ****                             }
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_mask = *mask_tmp_x;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 10


 487:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 488:lvgl/src/draw/lv_draw_blend.c ****                         }
 489:lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = last_res_color;
 490:lvgl/src/draw/lv_draw_blend.c ****                     }
 491:lvgl/src/draw/lv_draw_blend.c ****                     mask_tmp_x++;
 492:lvgl/src/draw/lv_draw_blend.c ****                 }
 493:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 494:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 495:lvgl/src/draw/lv_draw_blend.c ****             }
 496:lvgl/src/draw/lv_draw_blend.c ****         }
 497:lvgl/src/draw/lv_draw_blend.c ****     }
 498:lvgl/src/draw/lv_draw_blend.c **** }
 499:lvgl/src/draw/lv_draw_blend.c **** 
 500:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 501:lvgl/src/draw/lv_draw_blend.c **** /**
 502:lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color but apply blending algorithms
 503:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 504:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 505:lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 506:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 507:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 508:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 509:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 510:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 511:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 512:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 513:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 514:lvgl/src/draw/lv_draw_blend.c ****  */
 515:lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
 516:lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
 517:lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 518:lvgl/src/draw/lv_draw_blend.c **** {
 519:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 520:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 521:lvgl/src/draw/lv_draw_blend.c **** 
 522:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 523:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 524:lvgl/src/draw/lv_draw_blend.c **** 
 525:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 526:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 527:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 528:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 529:lvgl/src/draw/lv_draw_blend.c ****             break;
 530:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 531:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 532:lvgl/src/draw/lv_draw_blend.c ****             break;
 533:lvgl/src/draw/lv_draw_blend.c ****         default:
 534:lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 535:lvgl/src/draw/lv_draw_blend.c ****             return;
 536:lvgl/src/draw/lv_draw_blend.c ****     }
 537:lvgl/src/draw/lv_draw_blend.c **** 
 538:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 539:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 540:lvgl/src/draw/lv_draw_blend.c **** 
 541:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 542:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 543:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 11


 544:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 545:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 546:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 547:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 549:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 550:lvgl/src/draw/lv_draw_blend.c ****                 }
 551:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 552:lvgl/src/draw/lv_draw_blend.c ****             }
 553:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 554:lvgl/src/draw/lv_draw_blend.c ****         }
 555:lvgl/src/draw/lv_draw_blend.c ****     }
 556:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 557:lvgl/src/draw/lv_draw_blend.c ****     else {
 558:lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 559:lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 560:lvgl/src/draw/lv_draw_blend.c **** 
 561:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 562:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 563:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 564:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 565:lvgl/src/draw/lv_draw_blend.c **** 
 566:lvgl/src/draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 567:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 568:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 569:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 570:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 571:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 572:lvgl/src/draw/lv_draw_blend.c **** 
 573:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 574:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 576:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 577:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 578:lvgl/src/draw/lv_draw_blend.c **** 
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa_tmp);
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 581:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 582:lvgl/src/draw/lv_draw_blend.c ****                 }
 583:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 584:lvgl/src/draw/lv_draw_blend.c ****             }
 585:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 586:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 587:lvgl/src/draw/lv_draw_blend.c ****         }
 588:lvgl/src/draw/lv_draw_blend.c ****     }
 589:lvgl/src/draw/lv_draw_blend.c **** }
 590:lvgl/src/draw/lv_draw_blend.c **** #endif
 591:lvgl/src/draw/lv_draw_blend.c **** 
 592:lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
 593:lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 594:lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 595:lvgl/src/draw/lv_draw_blend.c **** 
 596:lvgl/src/draw/lv_draw_blend.c **** {
 597:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 598:lvgl/src/draw/lv_draw_blend.c **** 
 599:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 600:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 12


 601:lvgl/src/draw/lv_draw_blend.c **** 
 602:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 603:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 604:lvgl/src/draw/lv_draw_blend.c **** 
 605:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 606:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 607:lvgl/src/draw/lv_draw_blend.c **** 
 608:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 609:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 610:lvgl/src/draw/lv_draw_blend.c **** 
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 612:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 613:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 614:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 615:lvgl/src/draw/lv_draw_blend.c **** 
 616:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 617:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 618:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 619:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 620:lvgl/src/draw/lv_draw_blend.c ****             }
 621:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 622:lvgl/src/draw/lv_draw_blend.c ****         }
 623:lvgl/src/draw/lv_draw_blend.c ****     }
 624:lvgl/src/draw/lv_draw_blend.c ****     else {
 625:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 626:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 627:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 628:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 629:lvgl/src/draw/lv_draw_blend.c **** 
 630:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 631:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 632:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 633:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 634:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 635:lvgl/src/draw/lv_draw_blend.c ****                 }
 636:lvgl/src/draw/lv_draw_blend.c ****             }
 637:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 638:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 639:lvgl/src/draw/lv_draw_blend.c ****         }
 640:lvgl/src/draw/lv_draw_blend.c ****     }
 641:lvgl/src/draw/lv_draw_blend.c **** }
 642:lvgl/src/draw/lv_draw_blend.c **** 
 643:lvgl/src/draw/lv_draw_blend.c **** /**
 644:lvgl/src/draw/lv_draw_blend.c ****  * Copy an image to an area
 645:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 646:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 647:lvgl/src/draw/lv_draw_blend.c ****  * @param map_area coordinates of the map (image) to copy. (absolute coordinates)
 648:lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf the pixel of the image
 649:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 650:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 651:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 652:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 653:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 654:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 655:lvgl/src/draw/lv_draw_blend.c ****  */
 656:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 657:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 13


 658:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
 659:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 660:lvgl/src/draw/lv_draw_blend.c **** {
 661:lvgl/src/draw/lv_draw_blend.c **** 
 662:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 663:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 664:lvgl/src/draw/lv_draw_blend.c **** 
 665:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 666:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 667:lvgl/src/draw/lv_draw_blend.c **** 
 668:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 669:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 670:lvgl/src/draw/lv_draw_blend.c **** 
 671:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to first pixel to draw*/
 672:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 673:lvgl/src/draw/lv_draw_blend.c **** 
 674:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to first pixel to draw from the map*/
 675:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_first = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area
 676:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 677:lvgl/src/draw/lv_draw_blend.c **** 
 678:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 679:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 680:lvgl/src/draw/lv_draw_blend.c **** #endif
 681:lvgl/src/draw/lv_draw_blend.c **** 
 682:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 683:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 684:lvgl/src/draw/lv_draw_blend.c **** 
 685:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 686:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 687:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 688:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 689:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT) {
 690:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 691:lvgl/src/draw/lv_draw_blend.c ****                 return;
 692:lvgl/src/draw/lv_draw_blend.c ****             }
 693:lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 694:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT) {
 695:lvgl/src/draw/lv_draw_blend.c **** 
 696:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 697:lvgl/src/draw/lv_draw_blend.c **** 
 698:lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 699:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = draw_area_w;
 700:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = draw_area_h;
 701:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 702:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 703:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 704:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w - 1;
 705:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h - 1;
 706:lvgl/src/draw/lv_draw_blend.c **** 
 707:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 708:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 709:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 710:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 711:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 712:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 713:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w - 1;
 714:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h - 1;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 14


 715:lvgl/src/draw/lv_draw_blend.c **** 
 716:lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 717:lvgl/src/draw/lv_draw_blend.c **** 
 718:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 719:lvgl/src/draw/lv_draw_blend.c ****                     return;
 720:lvgl/src/draw/lv_draw_blend.c ****                 }
 721:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 722:lvgl/src/draw/lv_draw_blend.c ****             }
 723:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 724:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 725:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_copy(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, 
 726:lvgl/src/draw/lv_draw_blend.c ****                 return;
 727:lvgl/src/draw/lv_draw_blend.c ****             }
 728:lvgl/src/draw/lv_draw_blend.c **** #endif
 729:lvgl/src/draw/lv_draw_blend.c **** 
 730:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 731:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 732:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 733:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 734:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 735:lvgl/src/draw/lv_draw_blend.c ****             }
 736:lvgl/src/draw/lv_draw_blend.c ****         }
 737:lvgl/src/draw/lv_draw_blend.c ****         else {
 738:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 739:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT) {
 740:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 741:lvgl/src/draw/lv_draw_blend.c ****                 return;
 742:lvgl/src/draw/lv_draw_blend.c ****             }
 743:lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 744:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT) {
 745:lvgl/src/draw/lv_draw_blend.c **** 
 746:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 747:lvgl/src/draw/lv_draw_blend.c **** 
 748:lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 749:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = lv_area_get_width(map_area);
 750:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = lv_area_get_height(map_area);
 751:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 752:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 753:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 754:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w - 1;
 755:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h - 1;
 756:lvgl/src/draw/lv_draw_blend.c **** 
 757:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 758:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 759:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 760:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 761:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 762:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 763:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w - 1;
 764:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h - 1;
 765:lvgl/src/draw/lv_draw_blend.c **** 
 766:lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 767:lvgl/src/draw/lv_draw_blend.c **** 
 768:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 769:lvgl/src/draw/lv_draw_blend.c ****                     return;
 770:lvgl/src/draw/lv_draw_blend.c ****                 }
 771:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 15


 772:lvgl/src/draw/lv_draw_blend.c ****             }
 773:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 774:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 775:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, map_buf_first, opa, map_w, draw_ar
 776:lvgl/src/draw/lv_draw_blend.c ****                 return;
 777:lvgl/src/draw/lv_draw_blend.c ****             }
 778:lvgl/src/draw/lv_draw_blend.c **** #endif
 779:lvgl/src/draw/lv_draw_blend.c **** 
 780:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 781:lvgl/src/draw/lv_draw_blend.c **** 
 782:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 783:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 784:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 785:lvgl/src/draw/lv_draw_blend.c ****                     if(disp->driver->screen_transp) {
 786:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, map_
 787:lvgl/src/draw/lv_draw_blend.c ****                                                 &disp_buf_first[x].ch.alpha);
 788:lvgl/src/draw/lv_draw_blend.c ****                     }
 789:lvgl/src/draw/lv_draw_blend.c ****                     else
 790:lvgl/src/draw/lv_draw_blend.c **** #endif
 791:lvgl/src/draw/lv_draw_blend.c ****                     {
 792:lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], opa);
 793:lvgl/src/draw/lv_draw_blend.c ****                     }
 794:lvgl/src/draw/lv_draw_blend.c ****                 }
 795:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 796:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 797:lvgl/src/draw/lv_draw_blend.c ****             }
 798:lvgl/src/draw/lv_draw_blend.c ****         }
 799:lvgl/src/draw/lv_draw_blend.c ****     }
 800:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 801:lvgl/src/draw/lv_draw_blend.c ****     else {
 802:lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 803:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 804:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 805:lvgl/src/draw/lv_draw_blend.c **** 
 806:lvgl/src/draw/lv_draw_blend.c ****             int32_t x_end4 = draw_area_w - 4;
 807:lvgl/src/draw/lv_draw_blend.c **** 
 808:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 809:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 810:lvgl/src/draw/lv_draw_blend.c **** #if 0
 811:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 812:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 813:lvgl/src/draw/lv_draw_blend.c ****                 }
 814:lvgl/src/draw/lv_draw_blend.c **** #else
 815:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 816:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 817:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 818:lvgl/src/draw/lv_draw_blend.c **** #else
 819:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 820:lvgl/src/draw/lv_draw_blend.c **** #endif
 821:lvgl/src/draw/lv_draw_blend.c ****                 }
 822:lvgl/src/draw/lv_draw_blend.c **** 
 823:lvgl/src/draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 824:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < x_end4; x += 4) {
 825:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 826:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 16


 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 830:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 831:lvgl/src/draw/lv_draw_blend.c ****                         }
 832:lvgl/src/draw/lv_draw_blend.c ****                         else {
 833:lvgl/src/draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 834:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 835:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 836:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 1)
 837:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 2)
 838:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 3)
 839:lvgl/src/draw/lv_draw_blend.c **** #else
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 843:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 844:lvgl/src/draw/lv_draw_blend.c **** #endif
 845:lvgl/src/draw/lv_draw_blend.c ****                         }
 846:lvgl/src/draw/lv_draw_blend.c ****                     }
 847:lvgl/src/draw/lv_draw_blend.c ****                     mask32++;
 848:lvgl/src/draw/lv_draw_blend.c ****                 }
 849:lvgl/src/draw/lv_draw_blend.c **** 
 850:lvgl/src/draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 851:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 852:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 853:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 854:lvgl/src/draw/lv_draw_blend.c **** #else
 855:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 856:lvgl/src/draw/lv_draw_blend.c **** #endif
 857:lvgl/src/draw/lv_draw_blend.c ****                 }
 858:lvgl/src/draw/lv_draw_blend.c **** #endif
 859:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 860:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 861:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 862:lvgl/src/draw/lv_draw_blend.c ****             }
 863:lvgl/src/draw/lv_draw_blend.c ****         }
 864:lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 865:lvgl/src/draw/lv_draw_blend.c ****         else {
 866:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 867:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 868:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 869:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 870:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 871:lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 872:lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 873:lvgl/src/draw/lv_draw_blend.c ****                                                     &disp_buf_first[x].ch.alpha);
 874:lvgl/src/draw/lv_draw_blend.c ****                         }
 875:lvgl/src/draw/lv_draw_blend.c ****                         else
 876:lvgl/src/draw/lv_draw_blend.c **** #endif
 877:lvgl/src/draw/lv_draw_blend.c ****                         {
 878:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], o
 879:lvgl/src/draw/lv_draw_blend.c ****                         }
 880:lvgl/src/draw/lv_draw_blend.c ****                     }
 881:lvgl/src/draw/lv_draw_blend.c ****                 }
 882:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 883:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 884:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 885:lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 17


 886:lvgl/src/draw/lv_draw_blend.c ****         }
 887:lvgl/src/draw/lv_draw_blend.c ****     }
 888:lvgl/src/draw/lv_draw_blend.c **** }
 889:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 890:lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 891:lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 892:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 893:lvgl/src/draw/lv_draw_blend.c **** {
  29              		.loc 1 893 1 view -0
  30              		.cfi_startproc
  31              		@ args = 20, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 893 1 is_stmt 0 view .LVU1
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 85B0     		sub	sp, sp, #20
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 56
  49 0006 1746     		mov	r7, r2
  50 0008 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
  51 000c 9DF848E0 		ldrb	lr, [sp, #72]	@ zero_extendqisi2
 894:lvgl/src/draw/lv_draw_blend.c **** 
 895:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 896:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
  52              		.loc 1 896 5 is_stmt 1 view .LVU2
  53              	.LVL1:
  54              	.LBB69:
  55              	.LBI69:
  56              		.file 2 "lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_area.h **** #include <string.h>
  18:lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 18


  19:lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/draw/../misc/lv_area.h **** 
  21:lvgl/src/draw/../misc/lv_area.h **** /*********************
  22:lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  23:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  24:lvgl/src/draw/../misc/lv_area.h **** 
  25:lvgl/src/draw/../misc/lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:lvgl/src/draw/../misc/lv_area.h **** 
  27:lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  28:lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  29:lvgl/src/draw/../misc/lv_area.h **** #else
  30:lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  31:lvgl/src/draw/../misc/lv_area.h **** #endif
  32:lvgl/src/draw/../misc/lv_area.h **** 
  33:lvgl/src/draw/../misc/lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:lvgl/src/draw/../misc/lv_area.h **** 
  37:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  39:lvgl/src/draw/../misc/lv_area.h **** 
  40:lvgl/src/draw/../misc/lv_area.h **** /**********************
  41:lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  42:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  43:lvgl/src/draw/../misc/lv_area.h **** 
  44:lvgl/src/draw/../misc/lv_area.h **** /**
  45:lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  46:lvgl/src/draw/../misc/lv_area.h ****  */
  47:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  48:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  49:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  50:lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  51:lvgl/src/draw/../misc/lv_area.h **** 
  52:lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  53:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  54:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  55:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  56:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  57:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  58:lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  59:lvgl/src/draw/../misc/lv_area.h **** 
  60:lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  61:lvgl/src/draw/../misc/lv_area.h **** enum {
  62:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  65:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  72:lvgl/src/draw/../misc/lv_area.h **** 
  73:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 19


  76:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  79:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:lvgl/src/draw/../misc/lv_area.h **** };
  86:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  87:lvgl/src/draw/../misc/lv_area.h **** 
  88:lvgl/src/draw/../misc/lv_area.h **** enum {
  89:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  96:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:lvgl/src/draw/../misc/lv_area.h **** };
  98:lvgl/src/draw/../misc/lv_area.h **** 
  99:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
 100:lvgl/src/draw/../misc/lv_area.h **** 
 101:lvgl/src/draw/../misc/lv_area.h **** /**********************
 102:lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/draw/../misc/lv_area.h ****  **********************/
 104:lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
 107:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 108:lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
 109:lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 110:lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 111:lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 112:lvgl/src/draw/../misc/lv_area.h ****  */
 113:lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:lvgl/src/draw/../misc/lv_area.h **** 
 115:lvgl/src/draw/../misc/lv_area.h **** /**
 116:lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 117:lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 118:lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 119:lvgl/src/draw/../misc/lv_area.h ****  */
 120:lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 121:lvgl/src/draw/../misc/lv_area.h **** {
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 125:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 126:lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 130:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:lvgl/src/draw/../misc/lv_area.h ****  */
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 20


 133:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
  57              		.loc 2 133 26 view .LVU3
  58              	.LBB70:
 134:lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
  59              		.loc 2 135 5 view .LVU4
  60              		.loc 2 135 31 is_stmt 0 view .LVU5
  61 0010 8288     		ldrh	r2, [r0, #4]
  62              	.LVL2:
  63              		.loc 2 135 44 view .LVU6
  64 0012 B0F90040 		ldrsh	r4, [r0]
  65 0016 A5B2     		uxth	r5, r4
  66              		.loc 2 135 36 view .LVU7
  67 0018 521B     		subs	r2, r2, r5
  68 001a 92B2     		uxth	r2, r2
  69              		.loc 2 135 49 view .LVU8
  70 001c 0132     		adds	r2, r2, #1
  71              		.loc 2 135 12 view .LVU9
  72 001e 12B2     		sxth	r2, r2
  73 0020 0292     		str	r2, [sp, #8]
  74              	.LVL3:
  75              		.loc 2 135 12 view .LVU10
  76              	.LBE70:
  77              	.LBE69:
 897:lvgl/src/draw/lv_draw_blend.c **** 
 898:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 899:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
  78              		.loc 1 899 5 is_stmt 1 view .LVU11
  79              	.LBB71:
  80              	.LBI71:
 133:lvgl/src/draw/../misc/lv_area.h **** {
  81              		.loc 2 133 26 view .LVU12
  82              	.LBB72:
  83              		.loc 2 135 5 view .LVU13
  84              		.loc 2 135 31 is_stmt 0 view .LVU14
  85 0022 BD88     		ldrh	r5, [r7, #4]
  86              		.loc 2 135 44 view .LVU15
  87 0024 B7F90020 		ldrsh	r2, [r7]
  88              	.LVL4:
  89              		.loc 2 135 44 view .LVU16
  90 0028 96B2     		uxth	r6, r2
  91              		.loc 2 135 36 view .LVU17
  92 002a AD1B     		subs	r5, r5, r6
  93 002c ADB2     		uxth	r5, r5
  94              		.loc 2 135 49 view .LVU18
  95 002e 0135     		adds	r5, r5, #1
  96              		.loc 2 135 12 view .LVU19
  97 0030 2EB2     		sxth	r6, r5
  98 0032 0396     		str	r6, [sp, #12]
  99              	.LVL5:
 100              		.loc 2 135 12 view .LVU20
 101              	.LBE72:
 102              	.LBE71:
 900:lvgl/src/draw/lv_draw_blend.c **** 
 901:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 902:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 103              		.loc 1 902 5 is_stmt 1 view .LVU21
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 21


 104              	.LBB73:
 105              	.LBI73:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 106              		.loc 2 133 26 view .LVU22
 107              	.LBB74:
 108              		.loc 2 135 5 view .LVU23
 109              		.loc 2 135 31 is_stmt 0 view .LVU24
 110 0034 9D88     		ldrh	r5, [r3, #4]
 111              		.loc 2 135 44 view .LVU25
 112 0036 B3F900C0 		ldrsh	ip, [r3]
 113 003a 1FFA8CF6 		uxth	r6, ip
 114              		.loc 2 135 36 view .LVU26
 115 003e AD1B     		subs	r5, r5, r6
 116 0040 ADB2     		uxth	r5, r5
 117              		.loc 2 135 49 view .LVU27
 118 0042 0135     		adds	r5, r5, #1
 119              		.loc 2 135 12 view .LVU28
 120 0044 2EB2     		sxth	r6, r5
 121 0046 0196     		str	r6, [sp, #4]
 122              	.LVL6:
 123              		.loc 2 135 12 view .LVU29
 124              	.LBE74:
 125              	.LBE73:
 903:lvgl/src/draw/lv_draw_blend.c **** 
 904:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 905:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 126              		.loc 1 905 5 is_stmt 1 view .LVU30
 127              		.loc 1 905 62 is_stmt 0 view .LVU31
 128 0048 B7F90250 		ldrsh	r5, [r7, #2]
 129              		.loc 1 905 51 view .LVU32
 130 004c 0095     		str	r5, [sp]
 131 004e 2E46     		mov	r6, r5
 132              	.LVL7:
 133              		.loc 1 905 51 view .LVU33
 134 0050 029D     		ldr	r5, [sp, #8]
 135 0052 05FB06F6 		mul	r6, r5, r6
 136              		.loc 1 905 18 view .LVU34
 137 0056 01EB8606 		add	r6, r1, r6, lsl #2
 138              	.LVL8:
 906:lvgl/src/draw/lv_draw_blend.c **** 
 907:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 908:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 139              		.loc 1 908 5 is_stmt 1 view .LVU35
 140              		.loc 1 908 82 is_stmt 0 view .LVU36
 141 005a B3F90250 		ldrsh	r5, [r3, #2]
 142              		.loc 1 908 98 view .LVU37
 143 005e B0F90230 		ldrsh	r3, [r0, #2]
 144              	.LVL9:
 145              		.loc 1 908 87 view .LVU38
 146 0062 ED1A     		subs	r5, r5, r3
 147              		.loc 1 908 71 view .LVU39
 148 0064 009B     		ldr	r3, [sp]
 149 0066 5D1B     		subs	r5, r3, r5
 150              		.loc 1 908 54 view .LVU40
 151 0068 019B     		ldr	r3, [sp, #4]
 152 006a 03FB05F5 		mul	r5, r3, r5
 153              		.loc 1 908 24 view .LVU41
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 22


 154 006e 0E9B     		ldr	r3, [sp, #56]
 155 0070 03EB8505 		add	r5, r3, r5, lsl #2
 156              	.LVL10:
 909:lvgl/src/draw/lv_draw_blend.c **** 
 910:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 157              		.loc 1 910 5 is_stmt 1 view .LVU42
 911:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 158              		.loc 1 911 5 view .LVU43
 159 0074 BEF1010F 		cmp	lr, #1
 160 0078 0ED0     		beq	.L15
 161 007a BEF1020F 		cmp	lr, #2
 162 007e 5DD1     		bne	.L1
 912:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 913:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 914:lvgl/src/draw/lv_draw_blend.c ****             break;
 915:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 916:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 163              		.loc 1 916 22 is_stmt 0 view .LVU44
 164 0080 DFF8C0B0 		ldr	fp, .L21
 165              	.L2:
 166              	.LVL11:
 917:lvgl/src/draw/lv_draw_blend.c ****             break;
 918:lvgl/src/draw/lv_draw_blend.c ****         default:
 919:lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 920:lvgl/src/draw/lv_draw_blend.c ****             return;
 921:lvgl/src/draw/lv_draw_blend.c ****     }
 922:lvgl/src/draw/lv_draw_blend.c **** 
 923:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 167              		.loc 1 923 5 is_stmt 1 view .LVU45
 924:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 168              		.loc 1 924 5 view .LVU46
 925:lvgl/src/draw/lv_draw_blend.c **** 
 926:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 927:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 169              		.loc 1 927 5 view .LVU47
 170              		.loc 1 927 7 is_stmt 0 view .LVU48
 171 0084 9DF84430 		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 172 0088 012B     		cmp	r3, #1
 173 008a 08D0     		beq	.L18
 174              	.LBB75:
 928:lvgl/src/draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 929:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 930:lvgl/src/draw/lv_draw_blend.c **** 
 931:lvgl/src/draw/lv_draw_blend.c ****         /*The map will be indexed from `draw_area->x1` so compensate it.*/
 932:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 933:lvgl/src/draw/lv_draw_blend.c **** 
 934:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 935:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 936:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 937:lvgl/src/draw/lv_draw_blend.c ****             }
 938:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 939:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 940:lvgl/src/draw/lv_draw_blend.c ****         }
 941:lvgl/src/draw/lv_draw_blend.c ****     }
 942:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 943:lvgl/src/draw/lv_draw_blend.c ****     else {
 944:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 23


 945:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 946:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 947:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 175              		.loc 1 947 9 is_stmt 1 view .LVU49
 176              		.loc 1 947 26 is_stmt 0 view .LVU50
 177 008c 109B     		ldr	r3, [sp, #64]
 178 008e A3EB0209 		sub	r9, r3, r2
 179              	.LVL12:
 948:lvgl/src/draw/lv_draw_blend.c **** 
 949:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 180              		.loc 1 949 9 is_stmt 1 view .LVU51
 181              		.loc 1 949 21 is_stmt 0 view .LVU52
 182 0092 A5EB8208 		sub	r8, r5, r2, lsl #2
 183              	.LVL13:
 950:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 184              		.loc 1 950 9 is_stmt 1 view .LVU53
 185              		.loc 1 950 9 is_stmt 0 view .LVU54
 186 0096 49E0     		b	.L9
 187              	.LVL14:
 188              	.L15:
 189              		.loc 1 950 9 view .LVU55
 190              	.LBE75:
 911:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 191              		.loc 1 911 5 view .LVU56
 192 0098 DFF8ACB0 		ldr	fp, .L21+4
 193 009c F2E7     		b	.L2
 194              	.LVL15:
 195              	.L18:
 929:lvgl/src/draw/lv_draw_blend.c **** 
 196              		.loc 1 929 9 is_stmt 1 view .LVU57
 932:lvgl/src/draw/lv_draw_blend.c **** 
 197              		.loc 1 932 9 view .LVU58
 932:lvgl/src/draw/lv_draw_blend.c **** 
 198              		.loc 1 932 21 is_stmt 0 view .LVU59
 199 009e A4EB0C04 		sub	r4, r4, ip
 200 00a2 05EB8405 		add	r5, r5, r4, lsl #2
 201              	.LVL16:
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 202              		.loc 1 934 9 is_stmt 1 view .LVU60
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 203              		.loc 1 934 9 is_stmt 0 view .LVU61
 204 00a6 DDF80080 		ldr	r8, [sp]
 205 00aa DDF80890 		ldr	r9, [sp, #8]
 206 00ae 06E0     		b	.L5
 207              	.LVL17:
 208              	.L19:
 938:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 209              		.loc 1 938 13 is_stmt 1 discriminator 2 view .LVU62
 938:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 210              		.loc 1 938 26 is_stmt 0 discriminator 2 view .LVU63
 211 00b0 06EB8906 		add	r6, r6, r9, lsl #2
 212              	.LVL18:
 939:lvgl/src/draw/lv_draw_blend.c ****         }
 213              		.loc 1 939 13 is_stmt 1 discriminator 2 view .LVU64
 939:lvgl/src/draw/lv_draw_blend.c ****         }
 214              		.loc 1 939 25 is_stmt 0 discriminator 2 view .LVU65
 215 00b4 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 24


 216 00b6 05EB8305 		add	r5, r5, r3, lsl #2
 217              	.LVL19:
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 218              		.loc 1 934 52 is_stmt 1 discriminator 2 view .LVU66
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 219              		.loc 1 934 53 is_stmt 0 discriminator 2 view .LVU67
 220 00ba 08F10108 		add	r8, r8, #1
 221              	.LVL20:
 222              	.L5:
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 223              		.loc 1 934 32 is_stmt 1 discriminator 1 view .LVU68
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 224              		.loc 1 934 46 is_stmt 0 discriminator 1 view .LVU69
 225 00be B7F90630 		ldrsh	r3, [r7, #6]
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 226              		.loc 1 934 9 discriminator 1 view .LVU70
 227 00c2 4345     		cmp	r3, r8
 228 00c4 3ADB     		blt	.L1
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 229              		.loc 1 935 13 is_stmt 1 view .LVU71
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 230              		.loc 1 935 30 is_stmt 0 view .LVU72
 231 00c6 B7F90040 		ldrsh	r4, [r7]
 232              	.LVL21:
 233              	.L6:
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 234              		.loc 1 935 36 is_stmt 1 discriminator 1 view .LVU73
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 235              		.loc 1 935 50 is_stmt 0 discriminator 1 view .LVU74
 236 00ca B7F90430 		ldrsh	r3, [r7, #4]
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 237              		.loc 1 935 13 discriminator 1 view .LVU75
 238 00ce A342     		cmp	r3, r4
 239 00d0 EEDB     		blt	.L19
 936:lvgl/src/draw/lv_draw_blend.c ****             }
 240              		.loc 1 936 17 is_stmt 1 discriminator 3 view .LVU76
 936:lvgl/src/draw/lv_draw_blend.c ****             }
 241              		.loc 1 936 35 is_stmt 0 discriminator 3 view .LVU77
 242 00d2 5246     		mov	r2, r10
 243 00d4 56F82410 		ldr	r1, [r6, r4, lsl #2]
 244 00d8 55F82400 		ldr	r0, [r5, r4, lsl #2]
 245 00dc D847     		blx	fp
 246              	.LVL22:
 247 00de 46F82400 		str	r0, [r6, r4, lsl #2]
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 248              		.loc 1 935 56 is_stmt 1 discriminator 3 view .LVU78
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 249              		.loc 1 935 57 is_stmt 0 discriminator 3 view .LVU79
 250 00e2 0134     		adds	r4, r4, #1
 251              	.LVL23:
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 252              		.loc 1 935 57 discriminator 3 view .LVU80
 253 00e4 F1E7     		b	.L6
 254              	.LVL24:
 255              	.L16:
 256              	.LBB78:
 257              	.LBB76:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 25


 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 952:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 953:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 258              		.loc 1 953 26 view .LVU81
 259 00e6 5246     		mov	r2, r10
 260              	.L12:
 261              	.LVL25:
 954:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 262              		.loc 1 954 17 is_stmt 1 discriminator 4 view .LVU82
 263              		.loc 1 954 35 is_stmt 0 discriminator 4 view .LVU83
 264 00e8 56F82510 		ldr	r1, [r6, r5, lsl #2]
 265 00ec 58F82500 		ldr	r0, [r8, r5, lsl #2]
 266 00f0 D847     		blx	fp
 267              	.LVL26:
 268              		.loc 1 954 35 discriminator 4 view .LVU84
 269 00f2 46F82500 		str	r0, [r6, r5, lsl #2]
 270              	.L11:
 271              		.loc 1 954 35 discriminator 4 view .LVU85
 272              	.LBE76:
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 273              		.loc 1 951 56 is_stmt 1 discriminator 2 view .LVU86
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 274              		.loc 1 951 57 is_stmt 0 discriminator 2 view .LVU87
 275 00f6 0134     		adds	r4, r4, #1
 276              	.LVL27:
 277              	.L10:
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 278              		.loc 1 951 36 is_stmt 1 discriminator 1 view .LVU88
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 279              		.loc 1 951 50 is_stmt 0 discriminator 1 view .LVU89
 280 00f8 B7F90430 		ldrsh	r3, [r7, #4]
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 281              		.loc 1 951 13 discriminator 1 view .LVU90
 282 00fc A342     		cmp	r3, r4
 283 00fe 0ADB     		blt	.L20
 284              	.LBB77:
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 285              		.loc 1 952 17 is_stmt 1 view .LVU91
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 286              		.loc 1 952 28 is_stmt 0 view .LVU92
 287 0100 2546     		mov	r5, r4
 288 0102 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 289              		.loc 1 952 19 view .LVU93
 290 0106 002A     		cmp	r2, #0
 291 0108 F5D0     		beq	.L11
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 292              		.loc 1 953 17 is_stmt 1 view .LVU94
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 293              		.loc 1 953 26 is_stmt 0 view .LVU95
 294 010a FC2A     		cmp	r2, #252
 295 010c EBD8     		bhi	.L16
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 296              		.loc 1 953 76 discriminator 1 view .LVU96
 297 010e 02FB0AF2 		mul	r2, r2, r10
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 298              		.loc 1 953 26 discriminator 1 view .LVU97
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 26


 299 0112 120A     		lsrs	r2, r2, #8
 300 0114 E8E7     		b	.L12
 301              	.L20:
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 302              		.loc 1 953 26 discriminator 1 view .LVU98
 303              	.LBE77:
 955:lvgl/src/draw/lv_draw_blend.c ****             }
 956:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 304              		.loc 1 956 13 is_stmt 1 discriminator 2 view .LVU99
 305              		.loc 1 956 26 is_stmt 0 discriminator 2 view .LVU100
 306 0116 029B     		ldr	r3, [sp, #8]
 307 0118 06EB8306 		add	r6, r6, r3, lsl #2
 308              	.LVL28:
 957:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 309              		.loc 1 957 13 is_stmt 1 discriminator 2 view .LVU101
 310              		.loc 1 957 22 is_stmt 0 discriminator 2 view .LVU102
 311 011c 039B     		ldr	r3, [sp, #12]
 312 011e 9944     		add	r9, r9, r3
 313              	.LVL29:
 958:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 314              		.loc 1 958 13 is_stmt 1 discriminator 2 view .LVU103
 315              		.loc 1 958 25 is_stmt 0 discriminator 2 view .LVU104
 316 0120 019B     		ldr	r3, [sp, #4]
 317 0122 08EB8308 		add	r8, r8, r3, lsl #2
 318              	.LVL30:
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 319              		.loc 1 950 52 is_stmt 1 discriminator 2 view .LVU105
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 320              		.loc 1 950 53 is_stmt 0 discriminator 2 view .LVU106
 321 0126 009B     		ldr	r3, [sp]
 322 0128 0133     		adds	r3, r3, #1
 323 012a 0093     		str	r3, [sp]
 324              	.LVL31:
 325              	.L9:
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 326              		.loc 1 950 32 is_stmt 1 discriminator 1 view .LVU107
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 327              		.loc 1 950 46 is_stmt 0 discriminator 1 view .LVU108
 328 012c B7F90630 		ldrsh	r3, [r7, #6]
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 329              		.loc 1 950 9 discriminator 1 view .LVU109
 330 0130 009A     		ldr	r2, [sp]
 331 0132 9342     		cmp	r3, r2
 332 0134 02DB     		blt	.L1
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 333              		.loc 1 951 13 is_stmt 1 view .LVU110
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 334              		.loc 1 951 30 is_stmt 0 view .LVU111
 335 0136 B7F90040 		ldrsh	r4, [r7]
 336              	.LVL32:
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 337              		.loc 1 951 13 view .LVU112
 338 013a DDE7     		b	.L10
 339              	.LVL33:
 340              	.L1:
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 341              		.loc 1 951 13 view .LVU113
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 27


 342              	.LBE78:
 959:lvgl/src/draw/lv_draw_blend.c ****         }
 960:lvgl/src/draw/lv_draw_blend.c ****     }
 961:lvgl/src/draw/lv_draw_blend.c **** }
 343              		.loc 1 961 1 view .LVU114
 344 013c 05B0     		add	sp, sp, #20
 345              	.LCFI2:
 346              		.cfi_def_cfa_offset 36
 347              		@ sp needed
 348 013e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 349              	.LVL34:
 350              	.L22:
 351              		.loc 1 961 1 view .LVU115
 352 0142 00BF     		.align	2
 353              	.L21:
 354 0144 00000000 		.word	color_blend_true_color_subtractive
 355 0148 00000000 		.word	color_blend_true_color_additive
 356              		.cfi_endproc
 357              	.LFE154:
 359              		.section	.text.fill_set_px,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	fill_set_px:
 367              	.LVL35:
 368              	.LFB149:
 245:lvgl/src/draw/lv_draw_blend.c **** 
 369              		.loc 1 245 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 12, pretend = 0, frame = 16
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 245:lvgl/src/draw/lv_draw_blend.c **** 
 373              		.loc 1 245 1 is_stmt 0 view .LVU117
 374 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 375              	.LCFI3:
 376              		.cfi_def_cfa_offset 36
 377              		.cfi_offset 4, -36
 378              		.cfi_offset 5, -32
 379              		.cfi_offset 6, -28
 380              		.cfi_offset 7, -24
 381              		.cfi_offset 8, -20
 382              		.cfi_offset 9, -16
 383              		.cfi_offset 10, -12
 384              		.cfi_offset 11, -8
 385              		.cfi_offset 14, -4
 386 0004 89B0     		sub	sp, sp, #36
 387              	.LCFI4:
 388              		.cfi_def_cfa_offset 72
 389 0006 0446     		mov	r4, r0
 390 0008 0691     		str	r1, [sp, #24]
 391 000a 1546     		mov	r5, r2
 392 000c 9946     		mov	r9, r3
 393              	.LVL36:
 245:lvgl/src/draw/lv_draw_blend.c **** 
 394              		.loc 1 245 1 view .LVU118
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 28


 395 000e 9DF848A0 		ldrb	r10, [sp, #72]	@ zero_extendqisi2
 247:lvgl/src/draw/lv_draw_blend.c **** 
 396              		.loc 1 247 5 is_stmt 1 view .LVU119
 247:lvgl/src/draw/lv_draw_blend.c **** 
 397              		.loc 1 247 24 is_stmt 0 view .LVU120
 398 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 399              	.LVL37:
 247:lvgl/src/draw/lv_draw_blend.c **** 
 400              		.loc 1 247 24 view .LVU121
 401 0016 8046     		mov	r8, r0
 402              	.LVL38:
 250:lvgl/src/draw/lv_draw_blend.c **** 
 403              		.loc 1 250 5 is_stmt 1 view .LVU122
 404              	.LBB79:
 405              	.LBI79:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 406              		.loc 2 133 26 view .LVU123
 407              	.LBB80:
 408              		.loc 2 135 5 view .LVU124
 409              		.loc 2 135 31 is_stmt 0 view .LVU125
 410 0018 A788     		ldrh	r7, [r4, #4]
 411              		.loc 2 135 44 view .LVU126
 412 001a 2388     		ldrh	r3, [r4]
 413              		.loc 2 135 36 view .LVU127
 414 001c FF1A     		subs	r7, r7, r3
 415 001e BFB2     		uxth	r7, r7
 416              		.loc 2 135 49 view .LVU128
 417 0020 0137     		adds	r7, r7, #1
 418              		.loc 2 135 12 view .LVU129
 419 0022 3FB2     		sxth	r7, r7
 420              	.LVL39:
 421              		.loc 2 135 12 view .LVU130
 422              	.LBE80:
 423              	.LBE79:
 252:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 424              		.loc 1 252 5 is_stmt 1 view .LVU131
 253:lvgl/src/draw/lv_draw_blend.c **** 
 425              		.loc 1 253 5 view .LVU132
 255:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 426              		.loc 1 255 5 view .LVU133
 255:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 427              		.loc 1 255 7 is_stmt 0 view .LVU134
 428 0024 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 429 0028 012B     		cmp	r3, #1
 430 002a 11D0     		beq	.L36
 431              	.LBB81:
 266:lvgl/src/draw/lv_draw_blend.c **** 
 432              		.loc 1 266 9 is_stmt 1 view .LVU135
 266:lvgl/src/draw/lv_draw_blend.c **** 
 433              		.loc 1 266 53 is_stmt 0 view .LVU136
 434 002c B5F90020 		ldrsh	r2, [r5]
 266:lvgl/src/draw/lv_draw_blend.c **** 
 435              		.loc 1 266 26 view .LVU137
 436 0030 139E     		ldr	r6, [sp, #76]
 437 0032 B61A     		subs	r6, r6, r2
 438              	.LVL40:
 269:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 29


 439              		.loc 1 269 9 is_stmt 1 view .LVU138
 440              	.LBB82:
 441              	.LBI82:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 442              		.loc 2 133 26 view .LVU139
 443              	.LBB83:
 444              		.loc 2 135 5 view .LVU140
 445              		.loc 2 135 31 is_stmt 0 view .LVU141
 446 0034 AB88     		ldrh	r3, [r5, #4]
 447              		.loc 2 135 44 view .LVU142
 448 0036 92B2     		uxth	r2, r2
 449              		.loc 2 135 36 view .LVU143
 450 0038 9B1A     		subs	r3, r3, r2
 451 003a 9BB2     		uxth	r3, r3
 452              		.loc 2 135 49 view .LVU144
 453 003c 0133     		adds	r3, r3, #1
 454              		.loc 2 135 12 view .LVU145
 455 003e 1BB2     		sxth	r3, r3
 456 0040 0793     		str	r3, [sp, #28]
 457              	.LVL41:
 458              		.loc 2 135 12 view .LVU146
 459              	.LBE83:
 460              	.LBE82:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 461              		.loc 1 271 9 is_stmt 1 view .LVU147
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 462              		.loc 1 271 26 is_stmt 0 view .LVU148
 463 0042 B5F90230 		ldrsh	r3, [r5, #2]
 464              	.LVL42:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 465              		.loc 1 271 26 view .LVU149
 466 0046 BB46     		mov	fp, r7
 467              	.LVL43:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 468              		.loc 1 271 26 view .LVU150
 469 0048 CDF81490 		str	r9, [sp, #20]
 470 004c 9946     		mov	r9, r3
 471              	.LVL44:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 472              		.loc 1 271 9 view .LVU151
 473 004e 41E0     		b	.L30
 474              	.LVL45:
 475              	.L36:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 476              		.loc 1 271 9 view .LVU152
 477              	.LBE81:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 478              		.loc 1 256 9 is_stmt 1 view .LVU153
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 479              		.loc 1 256 26 is_stmt 0 view .LVU154
 480 0050 B5F902B0 		ldrsh	fp, [r5, #2]
 481              	.LVL46:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 482              		.loc 1 256 26 view .LVU155
 483 0054 CDF814B0 		str	fp, [sp, #20]
 484 0058 DDF818B0 		ldr	fp, [sp, #24]
 485              	.LVL47:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 30


 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 486              		.loc 1 256 9 view .LVU156
 487 005c 15E0     		b	.L25
 488              	.LVL48:
 489              	.L27:
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 490              		.loc 1 258 17 is_stmt 1 discriminator 3 view .LVU157
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 491              		.loc 1 258 21 is_stmt 0 discriminator 3 view .LVU158
 492 005e D8F80000 		ldr	r0, [r8]
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 493              		.loc 1 258 29 discriminator 3 view .LVU159
 494 0062 4669     		ldr	r6, [r0, #20]
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 495              		.loc 1 258 17 discriminator 3 view .LVU160
 496 0064 CDF808A0 		str	r10, [sp, #8]
 497 0068 CDF80490 		str	r9, [sp, #4]
 498 006c BDF91430 		ldrsh	r3, [sp, #20]
 499 0070 0093     		str	r3, [sp]
 500 0072 23B2     		sxth	r3, r4
 501 0074 3A46     		mov	r2, r7
 502 0076 5946     		mov	r1, fp
 503 0078 B047     		blx	r6
 504              	.LVL49:
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 505              		.loc 1 257 56 is_stmt 1 discriminator 3 view .LVU161
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 506              		.loc 1 257 57 is_stmt 0 discriminator 3 view .LVU162
 507 007a 0134     		adds	r4, r4, #1
 508              	.LVL50:
 509              	.L26:
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 510              		.loc 1 257 36 is_stmt 1 discriminator 1 view .LVU163
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 511              		.loc 1 257 50 is_stmt 0 discriminator 1 view .LVU164
 512 007c B5F90430 		ldrsh	r3, [r5, #4]
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 513              		.loc 1 257 13 discriminator 1 view .LVU165
 514 0080 A342     		cmp	r3, r4
 515 0082 ECDA     		bge	.L27
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 516              		.loc 1 256 52 is_stmt 1 discriminator 2 view .LVU166
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 517              		.loc 1 256 53 is_stmt 0 discriminator 2 view .LVU167
 518 0084 059B     		ldr	r3, [sp, #20]
 519 0086 0133     		adds	r3, r3, #1
 520 0088 0593     		str	r3, [sp, #20]
 521              	.LVL51:
 522              	.L25:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 523              		.loc 1 256 32 is_stmt 1 discriminator 1 view .LVU168
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 524              		.loc 1 256 46 is_stmt 0 discriminator 1 view .LVU169
 525 008a B5F90630 		ldrsh	r3, [r5, #6]
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 526              		.loc 1 256 9 discriminator 1 view .LVU170
 527 008e 059A     		ldr	r2, [sp, #20]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 31


 528 0090 9342     		cmp	r3, r2
 529 0092 26DB     		blt	.L23
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 530              		.loc 1 257 13 is_stmt 1 view .LVU171
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 531              		.loc 1 257 30 is_stmt 0 view .LVU172
 532 0094 B5F90040 		ldrsh	r4, [r5]
 533              	.LVL52:
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 534              		.loc 1 257 13 view .LVU173
 535 0098 F0E7     		b	.L26
 536              	.LVL53:
 537              	.L32:
 538              	.LBB84:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 539              		.loc 1 272 56 is_stmt 1 discriminator 2 view .LVU174
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 540              		.loc 1 272 57 is_stmt 0 discriminator 2 view .LVU175
 541 009a 0134     		adds	r4, r4, #1
 542              	.LVL54:
 543              	.L31:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 544              		.loc 1 272 36 is_stmt 1 discriminator 1 view .LVU176
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 545              		.loc 1 272 50 is_stmt 0 discriminator 1 view .LVU177
 546 009c B5F90430 		ldrsh	r3, [r5, #4]
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 547              		.loc 1 272 13 discriminator 1 view .LVU178
 548 00a0 A342     		cmp	r3, r4
 549 00a2 13DB     		blt	.L37
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 550              		.loc 1 273 17 is_stmt 1 view .LVU179
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 551              		.loc 1 273 28 is_stmt 0 view .LVU180
 552 00a4 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 553              		.loc 1 273 19 view .LVU181
 554 00a6 002B     		cmp	r3, #0
 555 00a8 F7D0     		beq	.L32
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 556              		.loc 1 274 21 is_stmt 1 view .LVU182
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 557              		.loc 1 274 25 is_stmt 0 view .LVU183
 558 00aa D8F80000 		ldr	r0, [r8]
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 559              		.loc 1 274 33 view .LVU184
 560 00ae 4769     		ldr	r7, [r0, #20]
 275:lvgl/src/draw/lv_draw_blend.c ****                 }
 561              		.loc 1 275 44 view .LVU185
 562 00b0 03FB0AF3 		mul	r3, r3, r10
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 563              		.loc 1 274 21 view .LVU186
 564 00b4 1B0A     		lsrs	r3, r3, #8
 565 00b6 0293     		str	r3, [sp, #8]
 566 00b8 059B     		ldr	r3, [sp, #20]
 567              	.LVL55:
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 32


 568              		.loc 1 274 21 view .LVU187
 569 00ba 0193     		str	r3, [sp, #4]
 570 00bc 0FFA89F3 		sxth	r3, r9
 571              	.LVL56:
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 572              		.loc 1 274 21 view .LVU188
 573 00c0 0093     		str	r3, [sp]
 574 00c2 23B2     		sxth	r3, r4
 575 00c4 5A46     		mov	r2, fp
 576 00c6 0699     		ldr	r1, [sp, #24]
 577 00c8 B847     		blx	r7
 578              	.LVL57:
 579 00ca E6E7     		b	.L32
 580              	.L37:
 278:lvgl/src/draw/lv_draw_blend.c ****         }
 581              		.loc 1 278 13 is_stmt 1 discriminator 2 view .LVU189
 278:lvgl/src/draw/lv_draw_blend.c ****         }
 582              		.loc 1 278 22 is_stmt 0 discriminator 2 view .LVU190
 583 00cc 079B     		ldr	r3, [sp, #28]
 584 00ce 1E44     		add	r6, r6, r3
 585              	.LVL58:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 586              		.loc 1 271 52 is_stmt 1 discriminator 2 view .LVU191
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 587              		.loc 1 271 53 is_stmt 0 discriminator 2 view .LVU192
 588 00d0 09F10109 		add	r9, r9, #1
 589              	.LVL59:
 590              	.L30:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 591              		.loc 1 271 32 is_stmt 1 discriminator 1 view .LVU193
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 592              		.loc 1 271 46 is_stmt 0 discriminator 1 view .LVU194
 593 00d4 B5F90630 		ldrsh	r3, [r5, #6]
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 594              		.loc 1 271 9 discriminator 1 view .LVU195
 595 00d8 4B45     		cmp	r3, r9
 596 00da 02DB     		blt	.L23
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 597              		.loc 1 272 13 is_stmt 1 view .LVU196
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 598              		.loc 1 272 30 is_stmt 0 view .LVU197
 599 00dc B5F90040 		ldrsh	r4, [r5]
 600              	.LVL60:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 601              		.loc 1 272 13 view .LVU198
 602 00e0 DCE7     		b	.L31
 603              	.LVL61:
 604              	.L23:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 605              		.loc 1 272 13 view .LVU199
 606              	.LBE84:
 281:lvgl/src/draw/lv_draw_blend.c **** 
 607              		.loc 1 281 1 view .LVU200
 608 00e2 09B0     		add	sp, sp, #36
 609              	.LCFI5:
 610              		.cfi_def_cfa_offset 36
 611              		@ sp needed
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 33


 612 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 281:lvgl/src/draw/lv_draw_blend.c **** 
 613              		.loc 1 281 1 view .LVU201
 614              		.cfi_endproc
 615              	.LFE149:
 617              		.section	.text.map_set_px,"ax",%progbits
 618              		.align	1
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu fpv4-sp-d16
 624              	map_set_px:
 625              	.LVL62:
 626              	.LFB152:
 596:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 627              		.loc 1 596 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 16, pretend = 0, frame = 24
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 596:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 631              		.loc 1 596 1 is_stmt 0 view .LVU203
 632 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 633              	.LCFI6:
 634              		.cfi_def_cfa_offset 36
 635              		.cfi_offset 4, -36
 636              		.cfi_offset 5, -32
 637              		.cfi_offset 6, -28
 638              		.cfi_offset 7, -24
 639              		.cfi_offset 8, -20
 640              		.cfi_offset 9, -16
 641              		.cfi_offset 10, -12
 642              		.cfi_offset 11, -8
 643              		.cfi_offset 14, -4
 644 0004 8BB0     		sub	sp, sp, #44
 645              	.LCFI7:
 646              		.cfi_def_cfa_offset 80
 647 0006 0446     		mov	r4, r0
 648 0008 0691     		str	r1, [sp, #24]
 649 000a 1546     		mov	r5, r2
 650 000c 1E46     		mov	r6, r3
 651 000e 9DF854A0 		ldrb	r10, [sp, #84]	@ zero_extendqisi2
 597:lvgl/src/draw/lv_draw_blend.c **** 
 652              		.loc 1 597 5 is_stmt 1 view .LVU204
 597:lvgl/src/draw/lv_draw_blend.c **** 
 653              		.loc 1 597 24 is_stmt 0 view .LVU205
 654 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 655              	.LVL63:
 597:lvgl/src/draw/lv_draw_blend.c **** 
 656              		.loc 1 597 24 view .LVU206
 657 0016 8146     		mov	r9, r0
 658              	.LVL64:
 600:lvgl/src/draw/lv_draw_blend.c **** 
 659              		.loc 1 600 5 is_stmt 1 view .LVU207
 660              	.LBB85:
 661              	.LBI85:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 662              		.loc 2 133 26 view .LVU208
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 34


 663              	.LBB86:
 664              		.loc 2 135 5 view .LVU209
 665              		.loc 2 135 31 is_stmt 0 view .LVU210
 666 0018 B4F80480 		ldrh	r8, [r4, #4]
 667              		.loc 2 135 44 view .LVU211
 668 001c B4F90000 		ldrsh	r0, [r4]
 669              	.LVL65:
 670              		.loc 2 135 44 view .LVU212
 671 0020 83B2     		uxth	r3, r0
 672              		.loc 2 135 36 view .LVU213
 673 0022 A8EB0308 		sub	r8, r8, r3
 674 0026 1FFA88F8 		uxth	r8, r8
 675              		.loc 2 135 49 view .LVU214
 676 002a 08F10108 		add	r8, r8, #1
 677              		.loc 2 135 12 view .LVU215
 678 002e 0FFA88F8 		sxth	r8, r8
 679              	.LVL66:
 680              		.loc 2 135 12 view .LVU216
 681              	.LBE86:
 682              	.LBE85:
 603:lvgl/src/draw/lv_draw_blend.c **** 
 683              		.loc 1 603 5 is_stmt 1 view .LVU217
 684              	.LBB87:
 685              	.LBI87:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 686              		.loc 2 133 26 view .LVU218
 687              	.LBB88:
 688              		.loc 2 135 5 view .LVU219
 689              		.loc 2 135 31 is_stmt 0 view .LVU220
 690 0032 AB88     		ldrh	r3, [r5, #4]
 691              		.loc 2 135 44 view .LVU221
 692 0034 B5F90020 		ldrsh	r2, [r5]
 693 0038 91B2     		uxth	r1, r2
 694              		.loc 2 135 36 view .LVU222
 695 003a 5B1A     		subs	r3, r3, r1
 696 003c 9BB2     		uxth	r3, r3
 697              		.loc 2 135 49 view .LVU223
 698 003e 0133     		adds	r3, r3, #1
 699              		.loc 2 135 12 view .LVU224
 700 0040 1BB2     		sxth	r3, r3
 701 0042 0993     		str	r3, [sp, #36]
 702              	.LVL67:
 703              		.loc 2 135 12 view .LVU225
 704              	.LBE88:
 705              	.LBE87:
 606:lvgl/src/draw/lv_draw_blend.c **** 
 706              		.loc 1 606 5 is_stmt 1 view .LVU226
 707              	.LBB89:
 708              	.LBI89:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 709              		.loc 2 133 26 view .LVU227
 710              	.LBB90:
 711              		.loc 2 135 5 view .LVU228
 712              		.loc 2 135 31 is_stmt 0 view .LVU229
 713 0044 B188     		ldrh	r1, [r6, #4]
 714              		.loc 2 135 44 view .LVU230
 715 0046 B6F90030 		ldrsh	r3, [r6]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 35


 716 004a 9FB2     		uxth	r7, r3
 717              		.loc 2 135 36 view .LVU231
 718 004c C91B     		subs	r1, r1, r7
 719 004e 89B2     		uxth	r1, r1
 720              		.loc 2 135 49 view .LVU232
 721 0050 0131     		adds	r1, r1, #1
 722              		.loc 2 135 12 view .LVU233
 723 0052 0FB2     		sxth	r7, r1
 724 0054 0897     		str	r7, [sp, #32]
 725              	.LVL68:
 726              		.loc 2 135 12 view .LVU234
 727              	.LBE90:
 728              	.LBE89:
 609:lvgl/src/draw/lv_draw_blend.c **** 
 729              		.loc 1 609 5 is_stmt 1 view .LVU235
 609:lvgl/src/draw/lv_draw_blend.c **** 
 730              		.loc 1 609 66 is_stmt 0 view .LVU236
 731 0056 B5F90210 		ldrsh	r1, [r5, #2]
 732 005a 0591     		str	r1, [sp, #20]
 609:lvgl/src/draw/lv_draw_blend.c **** 
 733              		.loc 1 609 82 view .LVU237
 734 005c B6F90260 		ldrsh	r6, [r6, #2]
 735              	.LVL69:
 609:lvgl/src/draw/lv_draw_blend.c **** 
 736              		.loc 1 609 98 view .LVU238
 737 0060 B4F90210 		ldrsh	r1, [r4, #2]
 609:lvgl/src/draw/lv_draw_blend.c **** 
 738              		.loc 1 609 87 view .LVU239
 739 0064 761A     		subs	r6, r6, r1
 609:lvgl/src/draw/lv_draw_blend.c **** 
 740              		.loc 1 609 71 view .LVU240
 741 0066 0599     		ldr	r1, [sp, #20]
 742 0068 8E1B     		subs	r6, r1, r6
 743              	.LVL70:
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 744              		.loc 1 611 5 is_stmt 1 view .LVU241
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 745              		.loc 1 611 51 is_stmt 0 view .LVU242
 746 006a 1B1A     		subs	r3, r3, r0
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 747              		.loc 1 611 35 view .LVU243
 748 006c D31A     		subs	r3, r2, r3
 749              	.LVL71:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 750              		.loc 1 612 5 is_stmt 1 view .LVU244
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 751              		.loc 1 612 17 is_stmt 0 view .LVU245
 752 006e 07FB0636 		mla	r6, r7, r6, r3
 753              	.LVL72:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 754              		.loc 1 612 17 view .LVU246
 755 0072 B31A     		subs	r3, r6, r2
 756              	.LVL73:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 757              		.loc 1 612 17 view .LVU247
 758 0074 149E     		ldr	r6, [sp, #80]
 759 0076 06EB8306 		add	r6, r6, r3, lsl #2
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 36


 760              	.LVL74:
 613:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 761              		.loc 1 613 5 is_stmt 1 view .LVU248
 614:lvgl/src/draw/lv_draw_blend.c **** 
 762              		.loc 1 614 5 view .LVU249
 616:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 763              		.loc 1 616 5 view .LVU250
 616:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 764              		.loc 1 616 7 is_stmt 0 view .LVU251
 765 007a 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
 766 007e 012B     		cmp	r3, #1
 767 0080 07D0     		beq	.L52
 768              	.LBB91:
 628:lvgl/src/draw/lv_draw_blend.c **** 
 769              		.loc 1 628 9 is_stmt 1 view .LVU252
 628:lvgl/src/draw/lv_draw_blend.c **** 
 770              		.loc 1 628 26 is_stmt 0 view .LVU253
 771 0082 169F     		ldr	r7, [sp, #88]
 772              	.LVL75:
 628:lvgl/src/draw/lv_draw_blend.c **** 
 773              		.loc 1 628 26 view .LVU254
 774 0084 BF1A     		subs	r7, r7, r2
 775              	.LVL76:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 776              		.loc 1 630 9 is_stmt 1 view .LVU255
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 777              		.loc 1 630 9 is_stmt 0 view .LVU256
 778 0086 B346     		mov	fp, r6
 779 0088 CDF81C80 		str	r8, [sp, #28]
 780 008c DDF81480 		ldr	r8, [sp, #20]
 781              	.LVL77:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 782              		.loc 1 630 9 view .LVU257
 783 0090 45E0     		b	.L45
 784              	.LVL78:
 785              	.L52:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 786              		.loc 1 630 9 view .LVU258
 787 0092 DDF818B0 		ldr	fp, [sp, #24]
 788              	.LBE91:
 789 0096 19E0     		b	.L39
 790              	.LVL79:
 791              	.L42:
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 792              		.loc 1 619 17 is_stmt 1 discriminator 3 view .LVU259
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 793              		.loc 1 619 21 is_stmt 0 discriminator 3 view .LVU260
 794 0098 D9F80000 		ldr	r0, [r9]
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 795              		.loc 1 619 29 discriminator 3 view .LVU261
 796 009c 4769     		ldr	r7, [r0, #20]
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 797              		.loc 1 619 17 discriminator 3 view .LVU262
 798 009e CDF808A0 		str	r10, [sp, #8]
 799 00a2 56F82430 		ldr	r3, [r6, r4, lsl #2]
 800 00a6 0193     		str	r3, [sp, #4]
 801 00a8 BDF91430 		ldrsh	r3, [sp, #20]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 37


 802 00ac 0093     		str	r3, [sp]
 803 00ae 23B2     		sxth	r3, r4
 804 00b0 4246     		mov	r2, r8
 805 00b2 5946     		mov	r1, fp
 806 00b4 B847     		blx	r7
 807              	.LVL80:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 808              		.loc 1 618 56 is_stmt 1 discriminator 3 view .LVU263
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 809              		.loc 1 618 57 is_stmt 0 discriminator 3 view .LVU264
 810 00b6 0134     		adds	r4, r4, #1
 811              	.LVL81:
 812              	.L41:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 813              		.loc 1 618 36 is_stmt 1 discriminator 1 view .LVU265
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 814              		.loc 1 618 50 is_stmt 0 discriminator 1 view .LVU266
 815 00b8 B5F90430 		ldrsh	r3, [r5, #4]
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 816              		.loc 1 618 13 discriminator 1 view .LVU267
 817 00bc A342     		cmp	r3, r4
 818 00be EBDA     		bge	.L42
 621:lvgl/src/draw/lv_draw_blend.c ****         }
 819              		.loc 1 621 13 is_stmt 1 discriminator 2 view .LVU268
 621:lvgl/src/draw/lv_draw_blend.c ****         }
 820              		.loc 1 621 25 is_stmt 0 discriminator 2 view .LVU269
 821 00c0 089B     		ldr	r3, [sp, #32]
 822 00c2 06EB8306 		add	r6, r6, r3, lsl #2
 823              	.LVL82:
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 824              		.loc 1 617 52 is_stmt 1 discriminator 2 view .LVU270
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 825              		.loc 1 617 53 is_stmt 0 discriminator 2 view .LVU271
 826 00c6 059B     		ldr	r3, [sp, #20]
 827 00c8 0133     		adds	r3, r3, #1
 828 00ca 0593     		str	r3, [sp, #20]
 829              	.LVL83:
 830              	.L39:
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 831              		.loc 1 617 32 is_stmt 1 discriminator 1 view .LVU272
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 832              		.loc 1 617 46 is_stmt 0 discriminator 1 view .LVU273
 833 00cc B5F90630 		ldrsh	r3, [r5, #6]
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 834              		.loc 1 617 9 discriminator 1 view .LVU274
 835 00d0 059A     		ldr	r2, [sp, #20]
 836 00d2 9342     		cmp	r3, r2
 837 00d4 2ADB     		blt	.L38
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 838              		.loc 1 618 13 is_stmt 1 view .LVU275
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 839              		.loc 1 618 30 is_stmt 0 view .LVU276
 840 00d6 B5F90040 		ldrsh	r4, [r5]
 841              	.LVL84:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 842              		.loc 1 618 13 view .LVU277
 843 00da EDE7     		b	.L41
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 38


 844              	.LVL85:
 845              	.L47:
 846              	.LBB92:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 847              		.loc 1 631 56 is_stmt 1 discriminator 2 view .LVU278
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 848              		.loc 1 631 57 is_stmt 0 discriminator 2 view .LVU279
 849 00dc 0134     		adds	r4, r4, #1
 850              	.LVL86:
 851              	.L46:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 852              		.loc 1 631 36 is_stmt 1 discriminator 1 view .LVU280
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 853              		.loc 1 631 50 is_stmt 0 discriminator 1 view .LVU281
 854 00de B5F90430 		ldrsh	r3, [r5, #4]
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 855              		.loc 1 631 13 discriminator 1 view .LVU282
 856 00e2 A342     		cmp	r3, r4
 857 00e4 14DB     		blt	.L53
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 858              		.loc 1 632 17 is_stmt 1 view .LVU283
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 859              		.loc 1 632 28 is_stmt 0 view .LVU284
 860 00e6 3B5D     		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 861              		.loc 1 632 19 view .LVU285
 862 00e8 002B     		cmp	r3, #0
 863 00ea F7D0     		beq	.L47
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 864              		.loc 1 633 21 is_stmt 1 view .LVU286
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 865              		.loc 1 633 25 is_stmt 0 view .LVU287
 866 00ec D9F80000 		ldr	r0, [r9]
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 867              		.loc 1 633 33 view .LVU288
 868 00f0 4669     		ldr	r6, [r0, #20]
 634:lvgl/src/draw/lv_draw_blend.c ****                 }
 869              		.loc 1 634 44 view .LVU289
 870 00f2 03FB0AF3 		mul	r3, r3, r10
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 871              		.loc 1 633 21 view .LVU290
 872 00f6 1B0A     		lsrs	r3, r3, #8
 873 00f8 0293     		str	r3, [sp, #8]
 874 00fa 5BF82430 		ldr	r3, [fp, r4, lsl #2]
 875 00fe 0193     		str	r3, [sp, #4]
 876 0100 0FFA88F3 		sxth	r3, r8
 877 0104 0093     		str	r3, [sp]
 878 0106 23B2     		sxth	r3, r4
 879 0108 079A     		ldr	r2, [sp, #28]
 880 010a 0699     		ldr	r1, [sp, #24]
 881 010c B047     		blx	r6
 882              	.LVL87:
 883 010e E5E7     		b	.L47
 884              	.L53:
 637:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 885              		.loc 1 637 13 is_stmt 1 discriminator 2 view .LVU291
 637:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 39


 886              		.loc 1 637 22 is_stmt 0 discriminator 2 view .LVU292
 887 0110 099B     		ldr	r3, [sp, #36]
 888 0112 1F44     		add	r7, r7, r3
 889              	.LVL88:
 638:lvgl/src/draw/lv_draw_blend.c ****         }
 890              		.loc 1 638 13 is_stmt 1 discriminator 2 view .LVU293
 638:lvgl/src/draw/lv_draw_blend.c ****         }
 891              		.loc 1 638 25 is_stmt 0 discriminator 2 view .LVU294
 892 0114 089B     		ldr	r3, [sp, #32]
 893 0116 0BEB830B 		add	fp, fp, r3, lsl #2
 894              	.LVL89:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 895              		.loc 1 630 52 is_stmt 1 discriminator 2 view .LVU295
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 896              		.loc 1 630 53 is_stmt 0 discriminator 2 view .LVU296
 897 011a 08F10108 		add	r8, r8, #1
 898              	.LVL90:
 899              	.L45:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 900              		.loc 1 630 32 is_stmt 1 discriminator 1 view .LVU297
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 901              		.loc 1 630 46 is_stmt 0 discriminator 1 view .LVU298
 902 011e B5F90630 		ldrsh	r3, [r5, #6]
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 903              		.loc 1 630 9 discriminator 1 view .LVU299
 904 0122 4345     		cmp	r3, r8
 905 0124 02DB     		blt	.L38
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 906              		.loc 1 631 13 is_stmt 1 view .LVU300
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 907              		.loc 1 631 30 is_stmt 0 view .LVU301
 908 0126 B5F90040 		ldrsh	r4, [r5]
 909              	.LVL91:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 910              		.loc 1 631 13 view .LVU302
 911 012a D8E7     		b	.L46
 912              	.LVL92:
 913              	.L38:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 914              		.loc 1 631 13 view .LVU303
 915              	.LBE92:
 641:lvgl/src/draw/lv_draw_blend.c **** 
 916              		.loc 1 641 1 view .LVU304
 917 012c 0BB0     		add	sp, sp, #44
 918              	.LCFI8:
 919              		.cfi_def_cfa_offset 36
 920              		@ sp needed
 921 012e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 641:lvgl/src/draw/lv_draw_blend.c **** 
 922              		.loc 1 641 1 view .LVU305
 923              		.cfi_endproc
 924              	.LFE152:
 926              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 927              		.align	1
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 40


 931              		.fpu fpv4-sp-d16
 933              	color_blend_true_color_additive:
 934              	.LVL93:
 935              	.LFB155:
 962:lvgl/src/draw/lv_draw_blend.c **** 
 963:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 964:lvgl/src/draw/lv_draw_blend.c **** {
 936              		.loc 1 964 1 is_stmt 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 965:lvgl/src/draw/lv_draw_blend.c **** 
 966:lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 940              		.loc 1 966 5 view .LVU307
 941              		.loc 1 966 7 is_stmt 0 view .LVU308
 942 0000 022A     		cmp	r2, #2
 943 0002 53D9     		bls	.L62
 967:lvgl/src/draw/lv_draw_blend.c **** 
 968:lvgl/src/draw/lv_draw_blend.c ****     uint32_t tmp;
 944              		.loc 1 968 5 is_stmt 1 view .LVU309
 969:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 1
 970:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.full + fg.full;
 971:lvgl/src/draw/lv_draw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 972:lvgl/src/draw/lv_draw_blend.c **** #else
 973:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 945              		.loc 1 973 5 view .LVU310
 946              		.loc 1 973 16 is_stmt 0 view .LVU311
 947 0004 C1F30743 		ubfx	r3, r1, #16, #8
 948              		.loc 1 973 28 view .LVU312
 949 0008 C0F3074C 		ubfx	ip, r0, #16, #8
 950              		.loc 1 973 21 view .LVU313
 951 000c 6344     		add	r3, r3, ip
 952              	.LVL94:
 974:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 975:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 976:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 977:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 978:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 979:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 953              		.loc 1 979 5 is_stmt 1 view .LVU314
 954              		.loc 1 979 17 is_stmt 0 view .LVU315
 955 000e FF2B     		cmp	r3, #255
 956 0010 28BF     		it	cs
 957 0012 FF23     		movcs	r3, #255
 958              	.LVL95:
 959              		.loc 1 979 15 view .LVU316
 960 0014 63F31740 		bfi	r0, r3, #16, #8
 980:lvgl/src/draw/lv_draw_blend.c **** #endif
 981:lvgl/src/draw/lv_draw_blend.c **** 
 982:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 983:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 984:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 985:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 986:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
 987:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 988:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 989:lvgl/src/draw/lv_draw_blend.c **** #else
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 41


 990:lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 991:lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MIN(tmp, 63);
 992:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
 993:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 994:lvgl/src/draw/lv_draw_blend.c **** #endif
 995:lvgl/src/draw/lv_draw_blend.c **** 
 996:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 997:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 961              		.loc 1 997 5 is_stmt 1 view .LVU317
 962              		.loc 1 997 16 is_stmt 0 view .LVU318
 963 0018 C1F30723 		ubfx	r3, r1, #8, #8
 964              		.loc 1 997 30 view .LVU319
 965 001c C0F3072C 		ubfx	ip, r0, #8, #8
 966              	.LVL96:
 967              		.loc 1 997 23 view .LVU320
 968 0020 6344     		add	r3, r3, ip
 969              	.LVL97:
 998:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 970              		.loc 1 998 5 is_stmt 1 view .LVU321
 971              		.loc 1 998 19 is_stmt 0 view .LVU322
 972 0022 FF2B     		cmp	r3, #255
 973 0024 28BF     		it	cs
 974 0026 FF23     		movcs	r3, #255
 975              	.LVL98:
 976              		.loc 1 998 17 view .LVU323
 977 0028 63F30F20 		bfi	r0, r3, #8, #8
 999:lvgl/src/draw/lv_draw_blend.c **** #endif
1000:lvgl/src/draw/lv_draw_blend.c **** 
1001:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 978              		.loc 1 1001 5 is_stmt 1 view .LVU324
 979              		.loc 1 1001 29 is_stmt 0 view .LVU325
 980 002c C3B2     		uxtb	r3, r0
 981              		.loc 1 1001 22 view .LVU326
 982 002e 53FA81F3 		uxtab	r3, r3, r1
 983              	.LVL99:
1002:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
1003:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
1004:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
1005:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
1006:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
1007:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 984              		.loc 1 1007 5 is_stmt 1 view .LVU327
 985              		.loc 1 1007 18 is_stmt 0 view .LVU328
 986 0032 FF2B     		cmp	r3, #255
 987 0034 28BF     		it	cs
 988 0036 FF23     		movcs	r3, #255
 989              	.LVL100:
 990              		.loc 1 1007 16 view .LVU329
 991 0038 63F30700 		bfi	r0, r3, #0, #8
 992              	.LVL101:
1008:lvgl/src/draw/lv_draw_blend.c **** #endif
1009:lvgl/src/draw/lv_draw_blend.c **** #endif
1010:lvgl/src/draw/lv_draw_blend.c **** 
1011:lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 993              		.loc 1 1011 5 is_stmt 1 view .LVU330
 994              		.loc 1 1011 7 is_stmt 0 view .LVU331
 995 003c FF2A     		cmp	r2, #255
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 42


 996 003e 37D0     		beq	.L59
 964:lvgl/src/draw/lv_draw_blend.c **** 
 997              		.loc 1 964 1 view .LVU332
 998 0040 10B5     		push	{r4, lr}
 999              	.LCFI9:
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 4, -8
 1002              		.cfi_offset 14, -4
1012:lvgl/src/draw/lv_draw_blend.c **** 
1013:lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1003              		.loc 1 1013 5 is_stmt 1 view .LVU333
 1004              	.LVL102:
 1005              	.LBB95:
 1006              	.LBI95:
 1007              		.file 3 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/src/draw/../misc/lv_color.h **** enum {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 43


  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/src/draw/../misc/lv_color.h **** 
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 44


 100:lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/src/draw/../misc/lv_color.h **** #else
 115:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 45


 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/src/draw/../misc/lv_color.h **** #endif
 173:lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 46


 214:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 47


 271:lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/src/draw/../misc/lv_color.h ****     else {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 48


 328:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/src/draw/../misc/lv_color.h ****     }
 330:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 343:lvgl/src/draw/../misc/lv_color.h ****     }
 344:lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/src/draw/../misc/lv_color.h ****     else
 353:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 49


 385:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/src/draw/../misc/lv_color.h ****     else
 401:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 50


 442:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 1008              		.loc 3 459 48 view .LVU334
 1009              	.LBB96:
 460:lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 1010              		.loc 3 461 5 view .LVU335
 462:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 463:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 464:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 1011              		.loc 3 464 5 view .LVU336
 1012 0042 C0F30744 		ubfx	r4, r0, #16, #8
 1013 0046 C1F3074C 		ubfx	ip, r1, #16, #8
 1014 004a C2F1FF03 		rsb	r3, r2, #255
 1015 004e 03FB0CFC 		mul	ip, r3, ip
 1016 0052 02FB04CC 		mla	ip, r2, r4, ip
 1017 0056 0CEB0C24 		add	r4, ip, ip, lsl #8
 1018 005a 0CEBC41C 		add	ip, ip, r4, lsl #7
 1019 005e CCF3C75C 		ubfx	ip, ip, #23, #8
 1020 0062 4FF0000E 		mov	lr, #0
 1021              	.LVL103:
 1022              		.loc 3 464 5 is_stmt 0 view .LVU337
 1023 0066 6CF3174E 		bfi	lr, ip, #16, #8
 1024              	.LVL104:
 465:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 1025              		.loc 3 466 5 is_stmt 1 view .LVU338
 1026 006a C0F30724 		ubfx	r4, r0, #8, #8
 1027 006e C1F3072C 		ubfx	ip, r1, #8, #8
 1028 0072 0CFB03FC 		mul	ip, ip, r3
 1029 0076 04FB02CC 		mla	ip, r4, r2, ip
 1030 007a 0CEB0C24 		add	r4, ip, ip, lsl #8
 1031 007e 0CEBC41C 		add	ip, ip, r4, lsl #7
 1032 0082 CCF3C75C 		ubfx	ip, ip, #23, #8
 1033 0086 6CF30F2E 		bfi	lr, ip, #8, #8
 467:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 468:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 1034              		.loc 3 468 5 view .LVU339
 1035 008a C0B2     		uxtb	r0, r0
 1036              	.LVL105:
 1037              		.loc 3 468 5 is_stmt 0 view .LVU340
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 51


 1038 008c C9B2     		uxtb	r1, r1
 1039              	.LVL106:
 1040              		.loc 3 468 5 view .LVU341
 1041 008e 03FB01F1 		mul	r1, r3, r1
 1042              		.loc 3 468 5 view .LVU342
 1043 0092 00FB0210 		mla	r0, r0, r2, r1
 1044 0096 00EB0021 		add	r1, r0, r0, lsl #8
 1045 009a 00EBC110 		add	r0, r0, r1, lsl #7
 1046 009e C0F3C750 		ubfx	r0, r0, #23, #8
 1047 00a2 60F3070E 		bfi	lr, r0, #0, #8
 469:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 470:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1048              		.loc 3 470 5 is_stmt 1 view .LVU343
 471:lvgl/src/draw/../misc/lv_color.h **** #else
 472:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 473:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 474:lvgl/src/draw/../misc/lv_color.h **** #endif
 475:lvgl/src/draw/../misc/lv_color.h **** 
 476:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 1049              		.loc 3 476 5 view .LVU344
 1050 00a6 4EF07F40 		orr	r0, lr, #-16777216
 1051              	.LVL107:
 1052              		.loc 3 476 5 is_stmt 0 view .LVU345
 1053              	.LBE96:
 1054              	.LBE95:
1014:lvgl/src/draw/lv_draw_blend.c **** }
 1055              		.loc 1 1014 1 view .LVU346
 1056 00aa 10BD     		pop	{r4, pc}
 1057              	.LVL108:
 1058              	.L62:
 1059              	.LCFI10:
 1060              		.cfi_def_cfa_offset 0
 1061              		.cfi_restore 4
 1062              		.cfi_restore 14
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1063              		.loc 1 966 27 is_stmt 1 discriminator 1 view .LVU347
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1064              		.loc 1 966 34 is_stmt 0 discriminator 1 view .LVU348
 1065 00ac 0846     		mov	r0, r1
 1066              	.LVL109:
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1067              		.loc 1 966 34 discriminator 1 view .LVU349
 1068 00ae 7047     		bx	lr
 1069              	.LVL110:
 1070              	.L59:
 1071              	.LVL111:
 1072              		.loc 1 1014 1 view .LVU350
 1073 00b0 7047     		bx	lr
 1074              		.cfi_endproc
 1075              	.LFE155:
 1077              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 1078              		.align	1
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv4-sp-d16
 1084              	color_blend_true_color_subtractive:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 52


 1085              	.LVL112:
 1086              	.LFB156:
1015:lvgl/src/draw/lv_draw_blend.c **** 
1016:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
1017:lvgl/src/draw/lv_draw_blend.c **** {
 1087              		.loc 1 1017 1 is_stmt 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
1018:lvgl/src/draw/lv_draw_blend.c **** 
1019:lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1091              		.loc 1 1019 5 view .LVU352
 1092              		.loc 1 1019 7 is_stmt 0 view .LVU353
 1093 0000 022A     		cmp	r2, #2
 1094 0002 54D9     		bls	.L71
1020:lvgl/src/draw/lv_draw_blend.c **** 
1021:lvgl/src/draw/lv_draw_blend.c ****     int32_t tmp;
 1095              		.loc 1 1021 5 is_stmt 1 view .LVU354
1022:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 1096              		.loc 1 1022 5 view .LVU355
 1097              		.loc 1 1022 16 is_stmt 0 view .LVU356
 1098 0004 C1F30743 		ubfx	r3, r1, #16, #8
 1099              		.loc 1 1022 28 view .LVU357
 1100 0008 C0F3074C 		ubfx	ip, r0, #16, #8
 1101              		.loc 1 1022 9 view .LVU358
 1102 000c A3EB0C03 		sub	r3, r3, ip
 1103              	.LVL113:
1023:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 1104              		.loc 1 1023 5 is_stmt 1 view .LVU359
 1105              		.loc 1 1023 17 is_stmt 0 view .LVU360
 1106 0010 23EAE373 		bic	r3, r3, r3, asr #31
 1107              	.LVL114:
 1108              		.loc 1 1023 15 view .LVU361
 1109 0014 63F31740 		bfi	r0, r3, #16, #8
1024:lvgl/src/draw/lv_draw_blend.c **** 
1025:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
1026:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 1110              		.loc 1 1026 5 is_stmt 1 view .LVU362
 1111              		.loc 1 1026 16 is_stmt 0 view .LVU363
 1112 0018 C1F30723 		ubfx	r3, r1, #8, #8
 1113              		.loc 1 1026 30 view .LVU364
 1114 001c C0F3072C 		ubfx	ip, r0, #8, #8
 1115              	.LVL115:
 1116              		.loc 1 1026 9 view .LVU365
 1117 0020 A3EB0C03 		sub	r3, r3, ip
 1118              	.LVL116:
1027:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 1119              		.loc 1 1027 5 is_stmt 1 view .LVU366
 1120              		.loc 1 1027 19 is_stmt 0 view .LVU367
 1121 0024 23EAE373 		bic	r3, r3, r3, asr #31
 1122              	.LVL117:
 1123              		.loc 1 1027 17 view .LVU368
 1124 0028 63F30F20 		bfi	r0, r3, #8, #8
1028:lvgl/src/draw/lv_draw_blend.c **** #else
1029:lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1030:lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MAX(tmp, 0);
1031:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 53


1032:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1033:lvgl/src/draw/lv_draw_blend.c **** #endif
1034:lvgl/src/draw/lv_draw_blend.c **** 
1035:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 1125              		.loc 1 1035 5 is_stmt 1 view .LVU369
 1126              		.loc 1 1035 16 is_stmt 0 view .LVU370
 1127 002c CBB2     		uxtb	r3, r1
 1128              		.loc 1 1035 29 view .LVU371
 1129 002e 5FFA80FC 		uxtb	ip, r0
 1130              	.LVL118:
 1131              		.loc 1 1035 9 view .LVU372
 1132 0032 A3EB0C03 		sub	r3, r3, ip
 1133              	.LVL119:
1036:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 1134              		.loc 1 1036 5 is_stmt 1 view .LVU373
 1135              		.loc 1 1036 18 is_stmt 0 view .LVU374
 1136 0036 23EAE373 		bic	r3, r3, r3, asr #31
 1137              	.LVL120:
 1138              		.loc 1 1036 16 view .LVU375
 1139 003a 63F30700 		bfi	r0, r3, #0, #8
1037:lvgl/src/draw/lv_draw_blend.c **** 
1038:lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1140              		.loc 1 1038 5 is_stmt 1 view .LVU376
 1141              		.loc 1 1038 7 is_stmt 0 view .LVU377
 1142 003e FF2A     		cmp	r2, #255
 1143 0040 37D0     		beq	.L68
1017:lvgl/src/draw/lv_draw_blend.c **** 
 1144              		.loc 1 1017 1 view .LVU378
 1145 0042 10B5     		push	{r4, lr}
 1146              	.LCFI11:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
1039:lvgl/src/draw/lv_draw_blend.c **** 
1040:lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1150              		.loc 1 1040 5 is_stmt 1 view .LVU379
 1151              	.LVL121:
 1152              	.LBB99:
 1153              	.LBI99:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1154              		.loc 3 459 48 view .LVU380
 1155              	.LBB100:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1156              		.loc 3 461 5 view .LVU381
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1157              		.loc 3 464 5 view .LVU382
 1158 0044 C0F30744 		ubfx	r4, r0, #16, #8
 1159 0048 C1F3074C 		ubfx	ip, r1, #16, #8
 1160              	.LVL122:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1161              		.loc 3 464 5 is_stmt 0 view .LVU383
 1162 004c C2F1FF03 		rsb	r3, r2, #255
 1163 0050 03FB0CFC 		mul	ip, r3, ip
 1164 0054 02FB04CC 		mla	ip, r2, r4, ip
 1165 0058 0CEB0C24 		add	r4, ip, ip, lsl #8
 1166 005c 0CEBC41C 		add	ip, ip, r4, lsl #7
 1167 0060 CCF3C75C 		ubfx	ip, ip, #23, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 54


 1168 0064 4FF0000E 		mov	lr, #0
 1169              	.LVL123:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1170              		.loc 3 464 5 view .LVU384
 1171 0068 6CF3174E 		bfi	lr, ip, #16, #8
 1172              	.LVL124:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1173              		.loc 3 466 5 is_stmt 1 view .LVU385
 1174 006c C0F30724 		ubfx	r4, r0, #8, #8
 1175 0070 C1F3072C 		ubfx	ip, r1, #8, #8
 1176 0074 0CFB03FC 		mul	ip, ip, r3
 1177 0078 04FB02CC 		mla	ip, r4, r2, ip
 1178 007c 0CEB0C24 		add	r4, ip, ip, lsl #8
 1179 0080 0CEBC41C 		add	ip, ip, r4, lsl #7
 1180 0084 CCF3C75C 		ubfx	ip, ip, #23, #8
 1181 0088 6CF30F2E 		bfi	lr, ip, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1182              		.loc 3 468 5 view .LVU386
 1183 008c C0B2     		uxtb	r0, r0
 1184              	.LVL125:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1185              		.loc 3 468 5 is_stmt 0 view .LVU387
 1186 008e C9B2     		uxtb	r1, r1
 1187              	.LVL126:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1188              		.loc 3 468 5 view .LVU388
 1189 0090 03FB01F1 		mul	r1, r3, r1
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1190              		.loc 3 468 5 view .LVU389
 1191 0094 00FB0210 		mla	r0, r0, r2, r1
 1192 0098 00EB0021 		add	r1, r0, r0, lsl #8
 1193 009c 00EBC110 		add	r0, r0, r1, lsl #7
 1194 00a0 C0F3C750 		ubfx	r0, r0, #23, #8
 1195 00a4 60F3070E 		bfi	lr, r0, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1196              		.loc 3 470 5 is_stmt 1 view .LVU390
 1197              		.loc 3 476 5 view .LVU391
 1198 00a8 4EF07F40 		orr	r0, lr, #-16777216
 1199              	.LVL127:
 1200              		.loc 3 476 5 is_stmt 0 view .LVU392
 1201              	.LBE100:
 1202              	.LBE99:
1041:lvgl/src/draw/lv_draw_blend.c **** }
 1203              		.loc 1 1041 1 view .LVU393
 1204 00ac 10BD     		pop	{r4, pc}
 1205              	.LVL128:
 1206              	.L71:
 1207              	.LCFI12:
 1208              		.cfi_def_cfa_offset 0
 1209              		.cfi_restore 4
 1210              		.cfi_restore 14
1019:lvgl/src/draw/lv_draw_blend.c **** 
 1211              		.loc 1 1019 27 is_stmt 1 discriminator 1 view .LVU394
1019:lvgl/src/draw/lv_draw_blend.c **** 
 1212              		.loc 1 1019 34 is_stmt 0 discriminator 1 view .LVU395
 1213 00ae 0846     		mov	r0, r1
 1214              	.LVL129:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 55


1019:lvgl/src/draw/lv_draw_blend.c **** 
 1215              		.loc 1 1019 34 discriminator 1 view .LVU396
 1216 00b0 7047     		bx	lr
 1217              	.LVL130:
 1218              	.L68:
 1219              	.LVL131:
 1220              		.loc 1 1041 1 view .LVU397
 1221 00b2 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE156:
 1225              		.section	.text.map_normal,"ax",%progbits
 1226              		.align	1
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv4-sp-d16
 1232              	map_normal:
 1233              	.LVL132:
 1234              	.LFB153:
 660:lvgl/src/draw/lv_draw_blend.c **** 
 1235              		.loc 1 660 1 is_stmt 1 view -0
 1236              		.cfi_startproc
 1237              		@ args = 16, pretend = 0, frame = 48
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 660:lvgl/src/draw/lv_draw_blend.c **** 
 1239              		.loc 1 660 1 is_stmt 0 view .LVU399
 1240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1241              	.LCFI13:
 1242              		.cfi_def_cfa_offset 36
 1243              		.cfi_offset 4, -36
 1244              		.cfi_offset 5, -32
 1245              		.cfi_offset 6, -28
 1246              		.cfi_offset 7, -24
 1247              		.cfi_offset 8, -20
 1248              		.cfi_offset 9, -16
 1249              		.cfi_offset 10, -12
 1250              		.cfi_offset 11, -8
 1251              		.cfi_offset 14, -4
 1252 0004 8DB0     		sub	sp, sp, #52
 1253              	.LCFI14:
 1254              		.cfi_def_cfa_offset 88
 1255 0006 8346     		mov	fp, r0
 1256 0008 0291     		str	r1, [sp, #8]
 1257 000a 9A46     		mov	r10, r3
 1258 000c 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
 1259              	.LVL133:
 663:lvgl/src/draw/lv_draw_blend.c **** 
 1260              		.loc 1 663 5 is_stmt 1 view .LVU400
 1261              	.LBB128:
 1262              	.LBI128:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1263              		.loc 2 133 26 view .LVU401
 1264              	.LBB129:
 1265              		.loc 2 135 5 view .LVU402
 1266              		.loc 2 135 31 is_stmt 0 view .LVU403
 1267 0010 8188     		ldrh	r1, [r0, #4]
 1268              	.LVL134:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 56


 1269              		.loc 2 135 44 view .LVU404
 1270 0012 B0F90000 		ldrsh	r0, [r0]
 1271              	.LVL135:
 1272              		.loc 2 135 44 view .LVU405
 1273 0016 0090     		str	r0, [sp]
 1274 0018 BDF80000 		ldrh	r0, [sp]
 1275              		.loc 2 135 36 view .LVU406
 1276 001c 091A     		subs	r1, r1, r0
 1277 001e 89B2     		uxth	r1, r1
 1278              		.loc 2 135 49 view .LVU407
 1279 0020 0131     		adds	r1, r1, #1
 1280              		.loc 2 135 12 view .LVU408
 1281 0022 0CB2     		sxth	r4, r1
 1282 0024 0394     		str	r4, [sp, #12]
 1283              	.LVL136:
 1284              		.loc 2 135 12 view .LVU409
 1285              	.LBE129:
 1286              	.LBE128:
 665:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 1287              		.loc 1 665 5 is_stmt 1 view .LVU410
 1288              	.LBB130:
 1289              	.LBI130:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1290              		.loc 2 133 26 view .LVU411
 1291              	.LBB131:
 1292              		.loc 2 135 5 view .LVU412
 1293              		.loc 2 135 31 is_stmt 0 view .LVU413
 1294 0026 9188     		ldrh	r1, [r2, #4]
 1295              		.loc 2 135 44 view .LVU414
 1296 0028 B2F90000 		ldrsh	r0, [r2]
 1297 002c 84B2     		uxth	r4, r0
 1298              	.LVL137:
 1299              		.loc 2 135 36 view .LVU415
 1300 002e 0D1B     		subs	r5, r1, r4
 1301 0030 ADB2     		uxth	r5, r5
 1302              		.loc 2 135 49 view .LVU416
 1303 0032 0135     		adds	r5, r5, #1
 1304              		.loc 2 135 12 view .LVU417
 1305 0034 2DB2     		sxth	r5, r5
 1306              	.LVL138:
 1307              		.loc 2 135 12 view .LVU418
 1308              	.LBE131:
 1309              	.LBE130:
 666:lvgl/src/draw/lv_draw_blend.c **** 
 1310              		.loc 1 666 5 is_stmt 1 view .LVU419
 1311              	.LBB132:
 1312              	.LBI132:
 136:lvgl/src/draw/../misc/lv_area.h **** }
 137:lvgl/src/draw/../misc/lv_area.h **** 
 138:lvgl/src/draw/../misc/lv_area.h **** /**
 139:lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 140:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 141:lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:lvgl/src/draw/../misc/lv_area.h ****  */
 143:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 1313              		.loc 2 143 26 view .LVU420
 1314              	.LBB133:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 57


 144:lvgl/src/draw/../misc/lv_area.h **** {
 145:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 1315              		.loc 2 145 5 view .LVU421
 1316              		.loc 2 145 31 is_stmt 0 view .LVU422
 1317 0036 D188     		ldrh	r1, [r2, #6]
 1318              		.loc 2 145 44 view .LVU423
 1319 0038 B2F90290 		ldrsh	r9, [r2, #2]
 1320 003c 1FFA89F2 		uxth	r2, r9
 1321              	.LVL139:
 1322              		.loc 2 145 36 view .LVU424
 1323 0040 8A1A     		subs	r2, r1, r2
 1324 0042 92B2     		uxth	r2, r2
 1325              		.loc 2 145 49 view .LVU425
 1326 0044 0132     		adds	r2, r2, #1
 1327              		.loc 2 145 12 view .LVU426
 1328 0046 14B2     		sxth	r4, r2
 1329 0048 0494     		str	r4, [sp, #16]
 1330              	.LVL140:
 1331              		.loc 2 145 12 view .LVU427
 1332              	.LBE133:
 1333              	.LBE132:
 669:lvgl/src/draw/lv_draw_blend.c **** 
 1334              		.loc 1 669 5 is_stmt 1 view .LVU428
 1335              	.LBB134:
 1336              	.LBI134:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1337              		.loc 2 133 26 view .LVU429
 1338              	.LBB135:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1339              		.loc 2 135 5 view .LVU430
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1340              		.loc 2 135 31 is_stmt 0 view .LVU431
 1341 004a BAF80420 		ldrh	r2, [r10, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1342              		.loc 2 135 44 view .LVU432
 1343 004e BAF90060 		ldrsh	r6, [r10]
 1344 0052 B1B2     		uxth	r1, r6
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1345              		.loc 2 135 36 view .LVU433
 1346 0054 521A     		subs	r2, r2, r1
 1347 0056 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1348              		.loc 2 135 49 view .LVU434
 1349 0058 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1350              		.loc 2 135 12 view .LVU435
 1351 005a 14B2     		sxth	r4, r2
 1352              	.LVL141:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1353              		.loc 2 135 12 view .LVU436
 1354 005c 0194     		str	r4, [sp, #4]
 1355              	.LVL142:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1356              		.loc 2 135 12 view .LVU437
 1357              	.LBE135:
 1358              	.LBE134:
 672:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 58


 1359              		.loc 1 672 5 is_stmt 1 view .LVU438
 672:lvgl/src/draw/lv_draw_blend.c **** 
 1360              		.loc 1 672 69 is_stmt 0 view .LVU439
 1361 005e 039A     		ldr	r2, [sp, #12]
 1362 0060 02FB0904 		mla	r4, r2, r9, r0
 1363              	.LVL143:
 672:lvgl/src/draw/lv_draw_blend.c **** 
 1364              		.loc 1 672 18 view .LVU440
 1365 0064 029A     		ldr	r2, [sp, #8]
 1366 0066 02EB8404 		add	r4, r2, r4, lsl #2
 1367              	.LVL144:
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1368              		.loc 1 675 5 is_stmt 1 view .LVU441
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1369              		.loc 1 675 84 is_stmt 0 view .LVU442
 1370 006a BAF90220 		ldrsh	r2, [r10, #2]
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1371              		.loc 1 675 100 view .LVU443
 1372 006e BBF90210 		ldrsh	r1, [fp, #2]
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1373              		.loc 1 675 89 view .LVU444
 1374 0072 521A     		subs	r2, r2, r1
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1375              		.loc 1 675 73 view .LVU445
 1376 0074 A9EB0202 		sub	r2, r9, r2
 1377              	.LVL145:
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1378              		.loc 1 676 5 is_stmt 1 view .LVU446
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1379              		.loc 1 676 53 is_stmt 0 view .LVU447
 1380 0078 0099     		ldr	r1, [sp]
 1381 007a 761A     		subs	r6, r6, r1
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1382              		.loc 1 676 37 view .LVU448
 1383 007c 861B     		subs	r6, r0, r6
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1384              		.loc 1 676 19 view .LVU449
 1385 007e 0199     		ldr	r1, [sp, #4]
 1386 0080 01FB0262 		mla	r2, r1, r2, r6
 1387              	.LVL146:
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1388              		.loc 1 676 19 view .LVU450
 1389 0084 169E     		ldr	r6, [sp, #88]
 1390 0086 06EB8206 		add	r6, r6, r2, lsl #2
 1391              	.LVL147:
 682:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 1392              		.loc 1 682 5 is_stmt 1 view .LVU451
 683:lvgl/src/draw/lv_draw_blend.c **** 
 1393              		.loc 1 683 5 view .LVU452
 686:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1394              		.loc 1 686 5 view .LVU453
 686:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1395              		.loc 1 686 7 is_stmt 0 view .LVU454
 1396 008a 9DF86420 		ldrb	r2, [sp, #100]	@ zero_extendqisi2
 1397 008e 012A     		cmp	r2, #1
 1398 0090 07D0     		beq	.L114
 803:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 59


 1399              		.loc 1 803 9 is_stmt 1 view .LVU455
 803:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 1400              		.loc 1 803 11 is_stmt 0 view .LVU456
 1401 0092 FD2B     		cmp	r3, #253
 1402 0094 40F2D682 		bls	.L108
 1403              	.LBB136:
 806:lvgl/src/draw/lv_draw_blend.c **** 
 1404              		.loc 1 806 13 is_stmt 1 view .LVU457
 806:lvgl/src/draw/lv_draw_blend.c **** 
 1405              		.loc 1 806 21 is_stmt 0 view .LVU458
 1406 0098 2B1F     		subs	r3, r5, #4
 1407 009a 0093     		str	r3, [sp]
 1408              	.LVL148:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1409              		.loc 1 808 13 is_stmt 1 view .LVU459
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1410              		.loc 1 808 19 is_stmt 0 view .LVU460
 1411 009c 0023     		movs	r3, #0
 1412              	.LVL149:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1413              		.loc 1 808 19 view .LVU461
 1414 009e 0293     		str	r3, [sp, #8]
 1415              	.LVL150:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1416              		.loc 1 808 13 view .LVU462
 1417 00a0 71E2     		b	.L81
 1418              	.LVL151:
 1419              	.L114:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1420              		.loc 1 808 13 view .LVU463
 1421              	.LBE136:
 687:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1422              		.loc 1 687 9 is_stmt 1 view .LVU464
 687:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1423              		.loc 1 687 11 is_stmt 0 view .LVU465
 1424 00a2 FD2B     		cmp	r3, #253
 1425 00a4 18D8     		bhi	.L106
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1426              		.loc 1 782 19 view .LVU466
 1427 00a6 4FF00008 		mov	r8, #0
 1428 00aa DDF81090 		ldr	r9, [sp, #16]
 1429 00ae DDF80CA0 		ldr	r10, [sp, #12]
 1430              	.LVL152:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1431              		.loc 1 782 19 view .LVU467
 1432 00b2 7746     		mov	r7, lr
 1433 00b4 A646     		mov	lr, r4
 1434              	.LVL153:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1435              		.loc 1 782 19 view .LVU468
 1436 00b6 9C46     		mov	ip, r3
 1437 00b8 58E0     		b	.L75
 1438              	.LVL154:
 1439              	.L76:
 732:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 1440              		.loc 1 732 17 is_stmt 1 discriminator 3 view .LVU469
 1441 00ba AA00     		lsls	r2, r5, #2
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 60


 1442 00bc 3146     		mov	r1, r6
 1443 00be 2046     		mov	r0, r4
 1444 00c0 FFF7FEFF 		bl	lv_memcpy
 1445              	.LVL155:
 733:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1446              		.loc 1 733 17 discriminator 3 view .LVU470
 733:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1447              		.loc 1 733 32 is_stmt 0 discriminator 3 view .LVU471
 1448 00c4 04EB8A04 		add	r4, r4, r10, lsl #2
 1449              	.LVL156:
 734:lvgl/src/draw/lv_draw_blend.c ****             }
 1450              		.loc 1 734 17 is_stmt 1 discriminator 3 view .LVU472
 734:lvgl/src/draw/lv_draw_blend.c ****             }
 1451              		.loc 1 734 31 is_stmt 0 discriminator 3 view .LVU473
 1452 00c8 06EB8906 		add	r6, r6, r9, lsl #2
 1453              	.LVL157:
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1454              		.loc 1 731 41 is_stmt 1 discriminator 3 view .LVU474
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1455              		.loc 1 731 42 is_stmt 0 discriminator 3 view .LVU475
 1456 00cc 0137     		adds	r7, r7, #1
 1457              	.LVL158:
 1458              	.L74:
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1459              		.loc 1 731 24 is_stmt 1 discriminator 1 view .LVU476
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1460              		.loc 1 731 13 is_stmt 0 discriminator 1 view .LVU477
 1461 00ce 4745     		cmp	r7, r8
 1462 00d0 F3DB     		blt	.L76
 1463              	.LVL159:
 1464              	.L72:
 888:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 1465              		.loc 1 888 1 view .LVU478
 1466 00d2 0DB0     		add	sp, sp, #52
 1467              	.LCFI15:
 1468              		.cfi_remember_state
 1469              		.cfi_def_cfa_offset 36
 1470              		@ sp needed
 1471 00d4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1472              	.LVL160:
 1473              	.L106:
 1474              	.LCFI16:
 1475              		.cfi_restore_state
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1476              		.loc 1 731 19 view .LVU479
 1477 00d8 0027     		movs	r7, #0
 1478 00da DDF81080 		ldr	r8, [sp, #16]
 1479 00de DDF80490 		ldr	r9, [sp, #4]
 1480 00e2 DDF80CA0 		ldr	r10, [sp, #12]
 1481              	.LVL161:
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1482              		.loc 1 731 19 view .LVU480
 1483 00e6 F2E7     		b	.L74
 1484              	.LVL162:
 1485              	.L78:
 792:lvgl/src/draw/lv_draw_blend.c ****                     }
 1486              		.loc 1 792 25 is_stmt 1 discriminator 3 view .LVU481
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 61


 1487 00e8 56F82040 		ldr	r4, [r6, r0, lsl #2]
 1488              	.LVL163:
 792:lvgl/src/draw/lv_draw_blend.c ****                     }
 1489              		.loc 1 792 25 is_stmt 0 discriminator 3 view .LVU482
 1490 00ec 5EF82030 		ldr	r3, [lr, r0, lsl #2]
 1491              	.LVL164:
 1492              	.LBB151:
 1493              	.LBI151:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1494              		.loc 3 459 48 is_stmt 1 discriminator 3 view .LVU483
 1495              	.LBB152:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1496              		.loc 3 461 5 discriminator 3 view .LVU484
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1497              		.loc 3 464 5 discriminator 3 view .LVU485
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1498              		.loc 3 464 5 is_stmt 0 discriminator 3 view .LVU486
 1499 00f0 C4F3074B 		ubfx	fp, r4, #16, #8
 1500              	.LVL165:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1501              		.loc 3 464 5 discriminator 3 view .LVU487
 1502 00f4 C3F30741 		ubfx	r1, r3, #16, #8
 1503 00f8 CCF1FF02 		rsb	r2, ip, #255
 1504 00fc 02FB01F1 		mul	r1, r2, r1
 1505 0100 0CFB0B11 		mla	r1, ip, fp, r1
 1506 0104 01EB012B 		add	fp, r1, r1, lsl #8
 1507 0108 01EBCB11 		add	r1, r1, fp, lsl #7
 1508 010c C1F3C751 		ubfx	r1, r1, #23, #8
 1509 0110 61F31747 		bfi	r7, r1, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1510              		.loc 3 466 5 is_stmt 1 discriminator 3 view .LVU488
 1511 0114 C4F3072B 		ubfx	fp, r4, #8, #8
 1512 0118 C3F30721 		ubfx	r1, r3, #8, #8
 1513 011c 02FB01F1 		mul	r1, r2, r1
 1514 0120 0BFB0C11 		mla	r1, fp, ip, r1
 1515 0124 01EB012B 		add	fp, r1, r1, lsl #8
 1516 0128 01EBCB11 		add	r1, r1, fp, lsl #7
 1517 012c C1F3C751 		ubfx	r1, r1, #23, #8
 1518 0130 61F30F27 		bfi	r7, r1, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1519              		.loc 3 468 5 discriminator 3 view .LVU489
 1520 0134 E4B2     		uxtb	r4, r4
 1521              	.LVL166:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1522              		.loc 3 468 5 is_stmt 0 discriminator 3 view .LVU490
 1523 0136 DBB2     		uxtb	r3, r3
 1524              	.LVL167:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1525              		.loc 3 468 5 discriminator 3 view .LVU491
 1526 0138 02FB03F3 		mul	r3, r2, r3
 1527 013c 04FB0C33 		mla	r3, r4, ip, r3
 1528 0140 03EB0322 		add	r2, r3, r3, lsl #8
 1529 0144 03EBC213 		add	r3, r3, r2, lsl #7
 1530 0148 C3F3C753 		ubfx	r3, r3, #23, #8
 1531 014c 63F30707 		bfi	r7, r3, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1532              		.loc 3 470 5 is_stmt 1 discriminator 3 view .LVU492
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 62


 1533 0150 47F07F47 		orr	r7, r7, #-16777216
 1534              	.LVL168:
 1535              		.loc 3 476 5 discriminator 3 view .LVU493
 1536              		.loc 3 476 5 is_stmt 0 discriminator 3 view .LVU494
 1537              	.LBE152:
 1538              	.LBE151:
 792:lvgl/src/draw/lv_draw_blend.c ****                     }
 1539              		.loc 1 792 45 discriminator 3 view .LVU495
 1540 0154 4EF82070 		str	r7, [lr, r0, lsl #2]
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1541              		.loc 1 783 45 is_stmt 1 discriminator 3 view .LVU496
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1542              		.loc 1 783 46 is_stmt 0 discriminator 3 view .LVU497
 1543 0158 0130     		adds	r0, r0, #1
 1544              	.LVL169:
 1545              	.L79:
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1546              		.loc 1 783 28 is_stmt 1 discriminator 1 view .LVU498
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1547              		.loc 1 783 17 is_stmt 0 discriminator 1 view .LVU499
 1548 015a A842     		cmp	r0, r5
 1549 015c C4DB     		blt	.L78
 795:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1550              		.loc 1 795 17 is_stmt 1 discriminator 2 view .LVU500
 795:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1551              		.loc 1 795 32 is_stmt 0 discriminator 2 view .LVU501
 1552 015e 0EEB8A0E 		add	lr, lr, r10, lsl #2
 1553              	.LVL170:
 796:lvgl/src/draw/lv_draw_blend.c ****             }
 1554              		.loc 1 796 17 is_stmt 1 discriminator 2 view .LVU502
 796:lvgl/src/draw/lv_draw_blend.c ****             }
 1555              		.loc 1 796 31 is_stmt 0 discriminator 2 view .LVU503
 1556 0162 019B     		ldr	r3, [sp, #4]
 1557 0164 06EB8306 		add	r6, r6, r3, lsl #2
 1558              	.LVL171:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1559              		.loc 1 782 41 is_stmt 1 discriminator 2 view .LVU504
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1560              		.loc 1 782 42 is_stmt 0 discriminator 2 view .LVU505
 1561 0168 08F10108 		add	r8, r8, #1
 1562              	.LVL172:
 1563              	.L75:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1564              		.loc 1 782 24 is_stmt 1 discriminator 1 view .LVU506
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1565              		.loc 1 782 13 is_stmt 0 discriminator 1 view .LVU507
 1566 016c C845     		cmp	r8, r9
 1567 016e B0DA     		bge	.L72
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1568              		.loc 1 783 23 view .LVU508
 1569 0170 0020     		movs	r0, #0
 1570 0172 F2E7     		b	.L79
 1571              	.LVL173:
 1572              	.L83:
 1573              	.LBB153:
 1574              	.LBB137:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 63


 1575              		.loc 1 819 21 is_stmt 1 discriminator 4 view .LVU509
 1576 0174 56F82380 		ldr	r8, [r6, r3, lsl #2]
 1577              	.LVL174:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1578              		.loc 1 819 21 is_stmt 0 discriminator 4 view .LVU510
 1579 0178 54F82390 		ldr	r9, [r4, r3, lsl #2]
 1580              	.LVL175:
 1581              	.LBB138:
 1582              	.LBI138:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1583              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU511
 1584              	.LBB139:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1585              		.loc 3 461 5 discriminator 4 view .LVU512
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1586              		.loc 3 464 5 discriminator 4 view .LVU513
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1587              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU514
 1588 017c C8F3074A 		ubfx	r10, r8, #16, #8
 1589              	.LVL176:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1590              		.loc 3 464 5 discriminator 4 view .LVU515
 1591 0180 C9F3074E 		ubfx	lr, r9, #16, #8
 1592              	.LVL177:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1593              		.loc 3 464 5 discriminator 4 view .LVU516
 1594 0184 C1F1FF00 		rsb	r0, r1, #255
 1595 0188 00FB0EFE 		mul	lr, r0, lr
 1596 018c 01FB0AEE 		mla	lr, r1, r10, lr
 1597 0190 0EEB0E2A 		add	r10, lr, lr, lsl #8
 1598 0194 0EEBCA1E 		add	lr, lr, r10, lsl #7
 1599 0198 CEF3C75E 		ubfx	lr, lr, #23, #8
 1600 019c 6EF31747 		bfi	r7, lr, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1601              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU517
 1602 01a0 C8F3072A 		ubfx	r10, r8, #8, #8
 1603 01a4 C9F3072E 		ubfx	lr, r9, #8, #8
 1604 01a8 0EFB00FE 		mul	lr, lr, r0
 1605 01ac 0AFB01EE 		mla	lr, r10, r1, lr
 1606 01b0 0EEB0E2A 		add	r10, lr, lr, lsl #8
 1607 01b4 0EEBCA1E 		add	lr, lr, r10, lsl #7
 1608 01b8 CEF3C75E 		ubfx	lr, lr, #23, #8
 1609 01bc 6EF30F27 		bfi	r7, lr, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1610              		.loc 3 468 5 discriminator 4 view .LVU518
 1611 01c0 5FFA88F8 		uxtb	r8, r8
 1612              	.LVL178:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1613              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU519
 1614 01c4 5FFA89F9 		uxtb	r9, r9
 1615              	.LVL179:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1616              		.loc 3 468 5 discriminator 4 view .LVU520
 1617 01c8 09FB00F0 		mul	r0, r9, r0
 1618 01cc 08FB0101 		mla	r1, r8, r1, r0
 1619              	.LVL180:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 64


 1620              		.loc 3 468 5 discriminator 4 view .LVU521
 1621 01d0 01EB0120 		add	r0, r1, r1, lsl #8
 1622 01d4 01EBC011 		add	r1, r1, r0, lsl #7
 1623 01d8 C1F3C751 		ubfx	r1, r1, #23, #8
 1624 01dc 61F30707 		bfi	r7, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1625              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU522
 1626 01e0 47F07F47 		orr	r7, r7, #-16777216
 1627              	.LVL181:
 1628              		.loc 3 476 5 discriminator 4 view .LVU523
 1629              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU524
 1630              	.LBE139:
 1631              	.LBE138:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1632              		.loc 1 819 21 discriminator 4 view .LVU525
 1633 01e4 44F82370 		str	r7, [r4, r3, lsl #2]
 1634              	.LVL182:
 1635              	.L82:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1636              		.loc 1 819 21 is_stmt 1 discriminator 6 view .LVU526
 1637 01e8 0132     		adds	r2, r2, #1
 1638              	.LVL183:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1639              		.loc 1 815 81 discriminator 6 view .LVU527
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1640              		.loc 1 815 82 is_stmt 0 discriminator 6 view .LVU528
 1641 01ea 0133     		adds	r3, r3, #1
 1642              	.LVL184:
 1643              	.L101:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1644              		.loc 1 815 28 is_stmt 1 discriminator 2 view .LVU529
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1645              		.loc 1 815 17 is_stmt 0 discriminator 2 view .LVU530
 1646 01ec AB42     		cmp	r3, r5
 1647 01ee 80F25E81 		bge	.L112
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1648              		.loc 1 815 44 discriminator 3 view .LVU531
 1649 01f2 12F0030F 		tst	r2, #3
 1650 01f6 09D0     		beq	.L115
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1651              		.loc 1 819 21 is_stmt 1 view .LVU532
 1652 01f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1653 01fa 0029     		cmp	r1, #0
 1654 01fc F4D0     		beq	.L82
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1655              		.loc 1 819 21 discriminator 1 view .LVU533
 1656 01fe FF29     		cmp	r1, #255
 1657 0200 B8D1     		bne	.L83
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1658              		.loc 1 819 21 discriminator 3 view .LVU534
 1659 0202 56F82310 		ldr	r1, [r6, r3, lsl #2]
 1660 0206 44F82310 		str	r1, [r4, r3, lsl #2]
 1661 020a EDE7     		b	.L82
 1662              	.L115:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1663              		.loc 1 819 21 is_stmt 0 discriminator 3 view .LVU535
 1664 020c 0995     		str	r5, [sp, #36]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 65


 1665 020e CDF828C0 		str	ip, [sp, #40]
 1666 0212 DDF818C0 		ldr	ip, [sp, #24]
 1667              	.LVL185:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1668              		.loc 1 819 21 discriminator 3 view .LVU536
 1669 0216 DDF81CE0 		ldr	lr, [sp, #28]
 1670              	.LVL186:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1671              		.loc 1 819 21 discriminator 3 view .LVU537
 1672 021a DDF82080 		ldr	r8, [sp, #32]
 1673              	.LVL187:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1674              		.loc 1 819 21 discriminator 3 view .LVU538
 1675 021e 0B97     		str	r7, [sp, #44]
 1676 0220 059F     		ldr	r7, [sp, #20]
 1677              	.LVL188:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1678              		.loc 1 819 21 discriminator 3 view .LVU539
 1679 0222 14E0     		b	.L95
 1680              	.LVL189:
 1681              	.L117:
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 1682              		.loc 1 827 29 is_stmt 1 view .LVU540
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 1683              		.loc 1 827 47 is_stmt 0 view .LVU541
 1684 0224 56F82310 		ldr	r1, [r6, r3, lsl #2]
 1685 0228 44F82310 		str	r1, [r4, r3, lsl #2]
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1686              		.loc 1 828 29 is_stmt 1 view .LVU542
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1687              		.loc 1 828 66 is_stmt 0 view .LVU543
 1688 022c 581C     		adds	r0, r3, #1
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1689              		.loc 1 828 51 view .LVU544
 1690 022e 56F82010 		ldr	r1, [r6, r0, lsl #2]
 1691 0232 44F82010 		str	r1, [r4, r0, lsl #2]
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1692              		.loc 1 829 29 is_stmt 1 view .LVU545
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1693              		.loc 1 829 66 is_stmt 0 view .LVU546
 1694 0236 981C     		adds	r0, r3, #2
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1695              		.loc 1 829 51 view .LVU547
 1696 0238 56F82010 		ldr	r1, [r6, r0, lsl #2]
 1697 023c 44F82010 		str	r1, [r4, r0, lsl #2]
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1698              		.loc 1 830 29 is_stmt 1 view .LVU548
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1699              		.loc 1 830 66 is_stmt 0 view .LVU549
 1700 0240 D81C     		adds	r0, r3, #3
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1701              		.loc 1 830 51 view .LVU550
 1702 0242 56F82010 		ldr	r1, [r6, r0, lsl #2]
 1703 0246 44F82010 		str	r1, [r4, r0, lsl #2]
 1704              	.L86:
 847:lvgl/src/draw/lv_draw_blend.c ****                 }
 1705              		.loc 1 847 21 is_stmt 1 view .LVU551
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 66


 847:lvgl/src/draw/lv_draw_blend.c ****                 }
 1706              		.loc 1 847 27 is_stmt 0 view .LVU552
 1707 024a 0432     		adds	r2, r2, #4
 1708              	.LVL190:
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1709              		.loc 1 824 35 is_stmt 1 view .LVU553
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1710              		.loc 1 824 37 is_stmt 0 view .LVU554
 1711 024c 0433     		adds	r3, r3, #4
 1712              	.LVL191:
 1713              	.L95:
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1714              		.loc 1 824 23 is_stmt 1 discriminator 1 view .LVU555
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1715              		.loc 1 824 17 is_stmt 0 discriminator 1 view .LVU556
 1716 024e 0099     		ldr	r1, [sp]
 1717 0250 8B42     		cmp	r3, r1
 1718 0252 80F23881 		bge	.L116
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1719              		.loc 1 825 21 is_stmt 1 view .LVU557
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1720              		.loc 1 825 24 is_stmt 0 view .LVU558
 1721 0256 1168     		ldr	r1, [r2]
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1722              		.loc 1 825 23 view .LVU559
 1723 0258 0029     		cmp	r1, #0
 1724 025a F6D0     		beq	.L86
 826:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 1725              		.loc 1 826 25 is_stmt 1 view .LVU560
 826:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 1726              		.loc 1 826 27 is_stmt 0 view .LVU561
 1727 025c B1F1FF3F 		cmp	r1, #-1
 1728 0260 E0D0     		beq	.L117
 833:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1729              		.loc 1 833 29 is_stmt 1 view .LVU562
 1730              	.LVL192:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1731              		.loc 1 840 29 view .LVU563
 1732 0262 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1733 0264 E5B3     		cbz	r5, .L88
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1734              		.loc 1 840 29 discriminator 1 view .LVU564
 1735 0266 FF2D     		cmp	r5, #255
 1736 0268 00F00A81 		beq	.L118
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1737              		.loc 1 840 29 discriminator 4 view .LVU565
 1738 026c 56F82390 		ldr	r9, [r6, r3, lsl #2]
 1739              	.LVL193:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1740              		.loc 1 840 29 is_stmt 0 discriminator 4 view .LVU566
 1741 0270 54F823A0 		ldr	r10, [r4, r3, lsl #2]
 1742              	.LVL194:
 1743              	.LBB140:
 1744              	.LBI140:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1745              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU567
 1746              	.LBB141:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 67


 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1747              		.loc 3 461 5 discriminator 4 view .LVU568
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1748              		.loc 3 464 5 discriminator 4 view .LVU569
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1749              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU570
 1750 0274 C9F3074B 		ubfx	fp, r9, #16, #8
 1751              	.LVL195:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1752              		.loc 3 464 5 discriminator 4 view .LVU571
 1753 0278 CAF30740 		ubfx	r0, r10, #16, #8
 1754 027c C5F1FF01 		rsb	r1, r5, #255
 1755 0280 01FB00F0 		mul	r0, r1, r0
 1756 0284 05FB0B00 		mla	r0, r5, fp, r0
 1757 0288 00EB002B 		add	fp, r0, r0, lsl #8
 1758 028c 00EBCB10 		add	r0, r0, fp, lsl #7
 1759 0290 C0F3C750 		ubfx	r0, r0, #23, #8
 1760 0294 60F31748 		bfi	r8, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1761              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU572
 1762 0298 C9F3072B 		ubfx	fp, r9, #8, #8
 1763 029c CAF30720 		ubfx	r0, r10, #8, #8
 1764 02a0 01FB00F0 		mul	r0, r1, r0
 1765 02a4 0BFB0500 		mla	r0, fp, r5, r0
 1766 02a8 00EB002B 		add	fp, r0, r0, lsl #8
 1767 02ac 00EBCB10 		add	r0, r0, fp, lsl #7
 1768 02b0 C0F3C750 		ubfx	r0, r0, #23, #8
 1769 02b4 60F30F28 		bfi	r8, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1770              		.loc 3 468 5 discriminator 4 view .LVU573
 1771 02b8 5FFA89F9 		uxtb	r9, r9
 1772              	.LVL196:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1773              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU574
 1774 02bc 5FFA8AFA 		uxtb	r10, r10
 1775              	.LVL197:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1776              		.loc 3 468 5 discriminator 4 view .LVU575
 1777 02c0 0AFB01FA 		mul	r10, r10, r1
 1778 02c4 09FB05AA 		mla	r10, r9, r5, r10
 1779 02c8 0AEB0A29 		add	r9, r10, r10, lsl #8
 1780 02cc 0AEBC91A 		add	r10, r10, r9, lsl #7
 1781 02d0 CAF3C75A 		ubfx	r10, r10, #23, #8
 1782 02d4 6AF30708 		bfi	r8, r10, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1783              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU576
 1784 02d8 48F07F48 		orr	r8, r8, #-16777216
 1785              	.LVL198:
 1786              		.loc 3 476 5 discriminator 4 view .LVU577
 1787              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU578
 1788              	.LBE141:
 1789              	.LBE140:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1790              		.loc 1 840 29 discriminator 4 view .LVU579
 1791 02dc 44F82380 		str	r8, [r4, r3, lsl #2]
 1792              	.L88:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 68


 1793              		.loc 1 840 29 is_stmt 1 discriminator 6 view .LVU580
 1794              	.LVL199:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1795              		.loc 1 841 29 discriminator 6 view .LVU581
 1796 02e0 5578     		ldrb	r5, [r2, #1]	@ zero_extendqisi2
 1797 02e2 002D     		cmp	r5, #0
 1798 02e4 41D0     		beq	.L90
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1799              		.loc 1 841 29 discriminator 1 view .LVU582
 1800 02e6 FF2D     		cmp	r5, #255
 1801 02e8 00F0CF80 		beq	.L119
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1802              		.loc 1 841 29 discriminator 4 view .LVU583
 1803 02ec 03F1010A 		add	r10, r3, #1
 1804 02f0 56F82A90 		ldr	r9, [r6, r10, lsl #2]
 1805              	.LVL200:
 1806              	.LBB142:
 1807              	.LBI142:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1808              		.loc 3 459 48 discriminator 4 view .LVU584
 1809              	.LBB143:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1810              		.loc 3 461 5 discriminator 4 view .LVU585
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1811              		.loc 3 464 5 discriminator 4 view .LVU586
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1812              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU587
 1813 02f4 C9F3074B 		ubfx	fp, r9, #16, #8
 1814 02f8 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 1815 02fc C1F30740 		ubfx	r0, r1, #16, #8
 1816 0300 C5F1FF01 		rsb	r1, r5, #255
 1817 0304 01FB00F0 		mul	r0, r1, r0
 1818 0308 05FB0B00 		mla	r0, r5, fp, r0
 1819 030c 00EB002B 		add	fp, r0, r0, lsl #8
 1820 0310 00EBCB10 		add	r0, r0, fp, lsl #7
 1821 0314 C0F3C750 		ubfx	r0, r0, #23, #8
 1822 0318 60F3174E 		bfi	lr, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1823              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU588
 1824 031c C9F3072B 		ubfx	fp, r9, #8, #8
 1825 0320 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1826 0324 C0F30720 		ubfx	r0, r0, #8, #8
 1827 0328 01FB00F0 		mul	r0, r1, r0
 1828 032c 0BFB0500 		mla	r0, fp, r5, r0
 1829 0330 00EB002B 		add	fp, r0, r0, lsl #8
 1830 0334 00EBCB10 		add	r0, r0, fp, lsl #7
 1831 0338 C0F3C750 		ubfx	r0, r0, #23, #8
 1832 033c 60F30F2E 		bfi	lr, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1833              		.loc 3 468 5 discriminator 4 view .LVU589
 1834 0340 5FFA89F9 		uxtb	r9, r9
 1835              	.LVL201:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1836              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU590
 1837 0344 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1838 0348 C0B2     		uxtb	r0, r0
 1839 034a 00FB01F1 		mul	r1, r0, r1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 69


 1840 034e 09FB0519 		mla	r9, r9, r5, r1
 1841 0352 09EB0921 		add	r1, r9, r9, lsl #8
 1842 0356 09EBC111 		add	r1, r9, r1, lsl #7
 1843 035a C1F3C751 		ubfx	r1, r1, #23, #8
 1844 035e 61F3070E 		bfi	lr, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1845              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU591
 1846 0362 4EF07F4E 		orr	lr, lr, #-16777216
 1847              	.LVL202:
 1848              		.loc 3 476 5 discriminator 4 view .LVU592
 1849              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU593
 1850              	.LBE143:
 1851              	.LBE142:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1852              		.loc 1 841 29 discriminator 4 view .LVU594
 1853 0366 44F82AE0 		str	lr, [r4, r10, lsl #2]
 1854              	.L90:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1855              		.loc 1 841 29 is_stmt 1 discriminator 6 view .LVU595
 1856              	.LVL203:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1857              		.loc 1 842 29 discriminator 6 view .LVU596
 1858 036a 9578     		ldrb	r5, [r2, #2]	@ zero_extendqisi2
 1859 036c 002D     		cmp	r5, #0
 1860 036e 41D0     		beq	.L92
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1861              		.loc 1 842 29 discriminator 1 view .LVU597
 1862 0370 FF2D     		cmp	r5, #255
 1863 0372 00F09080 		beq	.L120
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1864              		.loc 1 842 29 discriminator 4 view .LVU598
 1865 0376 03F1020A 		add	r10, r3, #2
 1866 037a 56F82A90 		ldr	r9, [r6, r10, lsl #2]
 1867              	.LVL204:
 1868              	.LBB144:
 1869              	.LBI144:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1870              		.loc 3 459 48 discriminator 4 view .LVU599
 1871              	.LBB145:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1872              		.loc 3 461 5 discriminator 4 view .LVU600
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1873              		.loc 3 464 5 discriminator 4 view .LVU601
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1874              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU602
 1875 037e C9F3074B 		ubfx	fp, r9, #16, #8
 1876 0382 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 1877 0386 C1F30740 		ubfx	r0, r1, #16, #8
 1878 038a C5F1FF01 		rsb	r1, r5, #255
 1879 038e 01FB00F0 		mul	r0, r1, r0
 1880 0392 05FB0B00 		mla	r0, r5, fp, r0
 1881 0396 00EB002B 		add	fp, r0, r0, lsl #8
 1882 039a 00EBCB10 		add	r0, r0, fp, lsl #7
 1883 039e C0F3C750 		ubfx	r0, r0, #23, #8
 1884 03a2 60F3174C 		bfi	ip, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1885              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU603
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 70


 1886 03a6 C9F3072B 		ubfx	fp, r9, #8, #8
 1887 03aa 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1888 03ae C0F30720 		ubfx	r0, r0, #8, #8
 1889 03b2 01FB00F0 		mul	r0, r1, r0
 1890 03b6 0BFB0500 		mla	r0, fp, r5, r0
 1891 03ba 00EB002B 		add	fp, r0, r0, lsl #8
 1892 03be 00EBCB10 		add	r0, r0, fp, lsl #7
 1893 03c2 C0F3C750 		ubfx	r0, r0, #23, #8
 1894 03c6 60F30F2C 		bfi	ip, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1895              		.loc 3 468 5 discriminator 4 view .LVU604
 1896 03ca 5FFA89F9 		uxtb	r9, r9
 1897              	.LVL205:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1898              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU605
 1899 03ce 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1900 03d2 C0B2     		uxtb	r0, r0
 1901 03d4 00FB01F1 		mul	r1, r0, r1
 1902 03d8 09FB0519 		mla	r9, r9, r5, r1
 1903 03dc 09EB0921 		add	r1, r9, r9, lsl #8
 1904 03e0 09EBC111 		add	r1, r9, r1, lsl #7
 1905 03e4 C1F3C751 		ubfx	r1, r1, #23, #8
 1906 03e8 61F3070C 		bfi	ip, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1907              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU606
 1908 03ec 4CF07F4C 		orr	ip, ip, #-16777216
 1909              	.LVL206:
 1910              		.loc 3 476 5 discriminator 4 view .LVU607
 1911              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU608
 1912              	.LBE145:
 1913              	.LBE144:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1914              		.loc 1 842 29 discriminator 4 view .LVU609
 1915 03f0 44F82AC0 		str	ip, [r4, r10, lsl #2]
 1916              	.L92:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1917              		.loc 1 842 29 is_stmt 1 discriminator 6 view .LVU610
 1918              	.LVL207:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1919              		.loc 1 843 29 discriminator 6 view .LVU611
 1920 03f4 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1921 03f6 002D     		cmp	r5, #0
 1922 03f8 3FF427AF 		beq	.L86
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1923              		.loc 1 843 29 discriminator 1 view .LVU612
 1924 03fc FF2D     		cmp	r5, #255
 1925 03fe 50D0     		beq	.L121
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1926              		.loc 1 843 29 discriminator 4 view .LVU613
 1927 0400 03F1030A 		add	r10, r3, #3
 1928 0404 56F82A90 		ldr	r9, [r6, r10, lsl #2]
 1929              	.LVL208:
 1930              	.LBB146:
 1931              	.LBI146:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1932              		.loc 3 459 48 discriminator 4 view .LVU614
 1933              	.LBB147:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 71


 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1934              		.loc 3 461 5 discriminator 4 view .LVU615
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1935              		.loc 3 464 5 discriminator 4 view .LVU616
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1936              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU617
 1937 0408 C9F3074B 		ubfx	fp, r9, #16, #8
 1938 040c 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 1939 0410 C1F30740 		ubfx	r0, r1, #16, #8
 1940 0414 C5F1FF01 		rsb	r1, r5, #255
 1941 0418 01FB00F0 		mul	r0, r1, r0
 1942 041c 05FB0B00 		mla	r0, r5, fp, r0
 1943 0420 00EB002B 		add	fp, r0, r0, lsl #8
 1944 0424 00EBCB10 		add	r0, r0, fp, lsl #7
 1945 0428 C0F3C750 		ubfx	r0, r0, #23, #8
 1946 042c 60F31747 		bfi	r7, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1947              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU618
 1948 0430 C9F3072B 		ubfx	fp, r9, #8, #8
 1949 0434 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1950 0438 C0F30720 		ubfx	r0, r0, #8, #8
 1951 043c 01FB00F0 		mul	r0, r1, r0
 1952 0440 0BFB0500 		mla	r0, fp, r5, r0
 1953 0444 00EB002B 		add	fp, r0, r0, lsl #8
 1954 0448 00EBCB10 		add	r0, r0, fp, lsl #7
 1955 044c C0F3C750 		ubfx	r0, r0, #23, #8
 1956 0450 60F30F27 		bfi	r7, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1957              		.loc 3 468 5 discriminator 4 view .LVU619
 1958 0454 5FFA89F9 		uxtb	r9, r9
 1959              	.LVL209:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1960              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU620
 1961 0458 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 1962 045c C0B2     		uxtb	r0, r0
 1963 045e 00FB01F1 		mul	r1, r0, r1
 1964 0462 09FB0519 		mla	r9, r9, r5, r1
 1965 0466 09EB0921 		add	r1, r9, r9, lsl #8
 1966 046a 09EBC111 		add	r1, r9, r1, lsl #7
 1967 046e C1F3C751 		ubfx	r1, r1, #23, #8
 1968 0472 61F30707 		bfi	r7, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1969              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU621
 1970 0476 47F07F47 		orr	r7, r7, #-16777216
 1971              	.LVL210:
 1972              		.loc 3 476 5 discriminator 4 view .LVU622
 1973              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU623
 1974              	.LBE147:
 1975              	.LBE146:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1976              		.loc 1 843 29 discriminator 4 view .LVU624
 1977 047a 44F82A70 		str	r7, [r4, r10, lsl #2]
 1978 047e E4E6     		b	.L86
 1979              	.LVL211:
 1980              	.L118:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1981              		.loc 1 840 29 is_stmt 1 discriminator 3 view .LVU625
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 72


 1982 0480 56F82310 		ldr	r1, [r6, r3, lsl #2]
 1983 0484 44F82310 		str	r1, [r4, r3, lsl #2]
 1984 0488 2AE7     		b	.L88
 1985              	.LVL212:
 1986              	.L119:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1987              		.loc 1 841 29 discriminator 3 view .LVU626
 1988 048a 581C     		adds	r0, r3, #1
 1989 048c 56F82010 		ldr	r1, [r6, r0, lsl #2]
 1990 0490 44F82010 		str	r1, [r4, r0, lsl #2]
 1991 0494 69E7     		b	.L90
 1992              	.LVL213:
 1993              	.L120:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1994              		.loc 1 842 29 discriminator 3 view .LVU627
 1995 0496 981C     		adds	r0, r3, #2
 1996 0498 56F82010 		ldr	r1, [r6, r0, lsl #2]
 1997 049c 44F82010 		str	r1, [r4, r0, lsl #2]
 1998 04a0 A8E7     		b	.L92
 1999              	.LVL214:
 2000              	.L121:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2001              		.loc 1 843 29 discriminator 3 view .LVU628
 2002 04a2 D81C     		adds	r0, r3, #3
 2003 04a4 56F82010 		ldr	r1, [r6, r0, lsl #2]
 2004 04a8 44F82010 		str	r1, [r4, r0, lsl #2]
 2005 04ac CDE6     		b	.L86
 2006              	.LVL215:
 2007              	.L112:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2008              		.loc 1 843 29 is_stmt 0 discriminator 3 view .LVU629
 2009 04ae 0995     		str	r5, [sp, #36]
 2010 04b0 CDF828C0 		str	ip, [sp, #40]
 2011 04b4 DDF818C0 		ldr	ip, [sp, #24]
 2012              	.LVL216:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2013              		.loc 1 843 29 discriminator 3 view .LVU630
 2014 04b8 DDF81CE0 		ldr	lr, [sp, #28]
 2015              	.LVL217:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2016              		.loc 1 843 29 discriminator 3 view .LVU631
 2017 04bc DDF82080 		ldr	r8, [sp, #32]
 2018              	.LVL218:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2019              		.loc 1 843 29 discriminator 3 view .LVU632
 2020 04c0 0B97     		str	r7, [sp, #44]
 2021 04c2 059F     		ldr	r7, [sp, #20]
 2022              	.LVL219:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2023              		.loc 1 843 29 discriminator 3 view .LVU633
 2024 04c4 C3E6     		b	.L95
 2025              	.LVL220:
 2026              	.L116:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2027              		.loc 1 843 29 discriminator 3 view .LVU634
 2028 04c6 099D     		ldr	r5, [sp, #36]
 2029 04c8 0597     		str	r7, [sp, #20]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 73


 2030 04ca CDF818C0 		str	ip, [sp, #24]
 2031 04ce DDF828C0 		ldr	ip, [sp, #40]
 2032              	.LVL221:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2033              		.loc 1 843 29 discriminator 3 view .LVU635
 2034 04d2 CDF81CE0 		str	lr, [sp, #28]
 2035 04d6 CDF82080 		str	r8, [sp, #32]
 2036 04da 0B9F     		ldr	r7, [sp, #44]
 2037              	.LVL222:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2038              		.loc 1 843 29 discriminator 3 view .LVU636
 2039 04dc 3BE0     		b	.L97
 2040              	.LVL223:
 2041              	.L99:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2042              		.loc 1 855 21 is_stmt 1 discriminator 4 view .LVU637
 2043 04de 56F82380 		ldr	r8, [r6, r3, lsl #2]
 2044              	.LVL224:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2045              		.loc 1 855 21 is_stmt 0 discriminator 4 view .LVU638
 2046 04e2 54F82390 		ldr	r9, [r4, r3, lsl #2]
 2047              	.LVL225:
 2048              	.LBB148:
 2049              	.LBI148:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2050              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU639
 2051              	.LBB149:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2052              		.loc 3 461 5 discriminator 4 view .LVU640
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2053              		.loc 3 464 5 discriminator 4 view .LVU641
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2054              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU642
 2055 04e6 C8F3074A 		ubfx	r10, r8, #16, #8
 2056              	.LVL226:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2057              		.loc 3 464 5 discriminator 4 view .LVU643
 2058 04ea C9F3074E 		ubfx	lr, r9, #16, #8
 2059              	.LVL227:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2060              		.loc 3 464 5 discriminator 4 view .LVU644
 2061 04ee C1F1FF00 		rsb	r0, r1, #255
 2062 04f2 00FB0EFE 		mul	lr, r0, lr
 2063 04f6 01FB0AEE 		mla	lr, r1, r10, lr
 2064 04fa 0EEB0E2A 		add	r10, lr, lr, lsl #8
 2065 04fe 0EEBCA1E 		add	lr, lr, r10, lsl #7
 2066 0502 CEF3C75E 		ubfx	lr, lr, #23, #8
 2067 0506 6EF3174C 		bfi	ip, lr, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2068              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU645
 2069 050a C8F3072A 		ubfx	r10, r8, #8, #8
 2070 050e C9F3072E 		ubfx	lr, r9, #8, #8
 2071 0512 0EFB00FE 		mul	lr, lr, r0
 2072 0516 0AFB01EE 		mla	lr, r10, r1, lr
 2073 051a 0EEB0E2A 		add	r10, lr, lr, lsl #8
 2074 051e 0EEBCA1E 		add	lr, lr, r10, lsl #7
 2075 0522 CEF3C75E 		ubfx	lr, lr, #23, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 74


 2076 0526 6EF30F2C 		bfi	ip, lr, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2077              		.loc 3 468 5 discriminator 4 view .LVU646
 2078 052a 5FFA88F8 		uxtb	r8, r8
 2079              	.LVL228:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2080              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU647
 2081 052e 5FFA89F9 		uxtb	r9, r9
 2082              	.LVL229:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2083              		.loc 3 468 5 discriminator 4 view .LVU648
 2084 0532 09FB00F0 		mul	r0, r9, r0
 2085 0536 08FB0101 		mla	r1, r8, r1, r0
 2086              	.LVL230:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2087              		.loc 3 468 5 discriminator 4 view .LVU649
 2088 053a 01EB0120 		add	r0, r1, r1, lsl #8
 2089 053e 01EBC011 		add	r1, r1, r0, lsl #7
 2090 0542 C1F3C751 		ubfx	r1, r1, #23, #8
 2091 0546 61F3070C 		bfi	ip, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2092              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU650
 2093 054a 4CF07F4C 		orr	ip, ip, #-16777216
 2094              	.LVL231:
 2095              		.loc 3 476 5 discriminator 4 view .LVU651
 2096              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU652
 2097              	.LBE149:
 2098              	.LBE148:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2099              		.loc 1 855 21 discriminator 4 view .LVU653
 2100 054e 44F823C0 		str	ip, [r4, r3, lsl #2]
 2101              	.LVL232:
 2102              	.L98:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2103              		.loc 1 855 21 is_stmt 1 discriminator 6 view .LVU654
 2104 0552 0132     		adds	r2, r2, #1
 2105              	.LVL233:
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2106              		.loc 1 851 41 discriminator 6 view .LVU655
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2107              		.loc 1 851 42 is_stmt 0 discriminator 6 view .LVU656
 2108 0554 0133     		adds	r3, r3, #1
 2109              	.LVL234:
 2110              	.L97:
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2111              		.loc 1 851 23 is_stmt 1 discriminator 1 view .LVU657
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2112              		.loc 1 851 17 is_stmt 0 discriminator 1 view .LVU658
 2113 0556 AB42     		cmp	r3, r5
 2114 0558 09DA     		bge	.L122
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2115              		.loc 1 855 21 is_stmt 1 view .LVU659
 2116 055a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2117 055c 0029     		cmp	r1, #0
 2118 055e F8D0     		beq	.L98
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2119              		.loc 1 855 21 discriminator 1 view .LVU660
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 75


 2120 0560 FF29     		cmp	r1, #255
 2121 0562 BCD1     		bne	.L99
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2122              		.loc 1 855 21 discriminator 3 view .LVU661
 2123 0564 56F82310 		ldr	r1, [r6, r3, lsl #2]
 2124 0568 44F82310 		str	r1, [r4, r3, lsl #2]
 2125 056c F1E7     		b	.L98
 2126              	.L122:
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2127              		.loc 1 859 17 discriminator 2 view .LVU662
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2128              		.loc 1 859 32 is_stmt 0 discriminator 2 view .LVU663
 2129 056e 039B     		ldr	r3, [sp, #12]
 2130              	.LVL235:
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2131              		.loc 1 859 32 discriminator 2 view .LVU664
 2132 0570 04EB8304 		add	r4, r4, r3, lsl #2
 2133              	.LVL236:
 860:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2134              		.loc 1 860 17 is_stmt 1 discriminator 2 view .LVU665
 860:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2135              		.loc 1 860 22 is_stmt 0 discriminator 2 view .LVU666
 2136 0574 189B     		ldr	r3, [sp, #96]
 2137 0576 2B44     		add	r3, r3, r5
 2138 0578 1893     		str	r3, [sp, #96]
 2139              	.LVL237:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2140              		.loc 1 861 17 is_stmt 1 discriminator 2 view .LVU667
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2141              		.loc 1 861 31 is_stmt 0 discriminator 2 view .LVU668
 2142 057a 019B     		ldr	r3, [sp, #4]
 2143              	.LVL238:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2144              		.loc 1 861 31 discriminator 2 view .LVU669
 2145 057c 06EB8306 		add	r6, r6, r3, lsl #2
 2146              	.LVL239:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2147              		.loc 1 861 31 discriminator 2 view .LVU670
 2148              	.LBE137:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2149              		.loc 1 808 41 is_stmt 1 discriminator 2 view .LVU671
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2150              		.loc 1 808 42 is_stmt 0 discriminator 2 view .LVU672
 2151 0580 029B     		ldr	r3, [sp, #8]
 2152 0582 0133     		adds	r3, r3, #1
 2153 0584 0293     		str	r3, [sp, #8]
 2154              	.LVL240:
 2155              	.L81:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2156              		.loc 1 808 24 is_stmt 1 discriminator 1 view .LVU673
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2157              		.loc 1 808 13 is_stmt 0 discriminator 1 view .LVU674
 2158 0586 029B     		ldr	r3, [sp, #8]
 2159 0588 049A     		ldr	r2, [sp, #16]
 2160 058a 9342     		cmp	r3, r2
 2161 058c BFF6A1AD 		bge	.L72
 2162              	.LBB150:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 76


 809:lvgl/src/draw/lv_draw_blend.c **** #if 0
 2163              		.loc 1 809 34 view .LVU675
 2164 0590 189A     		ldr	r2, [sp, #96]
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2165              		.loc 1 815 23 view .LVU676
 2166 0592 0023     		movs	r3, #0
 2167 0594 2AE6     		b	.L101
 2168              	.LVL241:
 2169              	.L110:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2170              		.loc 1 815 23 view .LVU677
 2171              	.LBE150:
 2172              	.LBE153:
 2173              	.LBB154:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2174              		.loc 1 869 34 view .LVU678
 2175 0596 0099     		ldr	r1, [sp]
 2176              	.L103:
 2177              	.LVL242:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2178              		.loc 1 878 29 is_stmt 1 discriminator 4 view .LVU679
 2179 0598 56F82C40 		ldr	r4, [r6, ip, lsl #2]
 2180              	.LVL243:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2181              		.loc 1 878 29 is_stmt 0 discriminator 4 view .LVU680
 2182 059c 59F82C50 		ldr	r5, [r9, ip, lsl #2]
 2183              	.LVL244:
 2184              	.LBB155:
 2185              	.LBI155:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2186              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU681
 2187              	.LBB156:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2188              		.loc 3 461 5 discriminator 4 view .LVU682
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2189              		.loc 3 464 5 discriminator 4 view .LVU683
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2190              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU684
 2191 05a0 C4F3074B 		ubfx	fp, r4, #16, #8
 2192              	.LVL245:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2193              		.loc 3 464 5 discriminator 4 view .LVU685
 2194 05a4 C5F30742 		ubfx	r2, r5, #16, #8
 2195 05a8 C1F1FF03 		rsb	r3, r1, #255
 2196 05ac 03FB02F2 		mul	r2, r3, r2
 2197 05b0 01FB0B22 		mla	r2, r1, fp, r2
 2198 05b4 02EB022B 		add	fp, r2, r2, lsl #8
 2199 05b8 02EBCB12 		add	r2, r2, fp, lsl #7
 2200 05bc C2F3C752 		ubfx	r2, r2, #23, #8
 2201 05c0 62F31747 		bfi	r7, r2, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2202              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU686
 2203 05c4 C4F3072B 		ubfx	fp, r4, #8, #8
 2204 05c8 C5F30722 		ubfx	r2, r5, #8, #8
 2205 05cc 03FB02F2 		mul	r2, r3, r2
 2206 05d0 0BFB0122 		mla	r2, fp, r1, r2
 2207 05d4 02EB022B 		add	fp, r2, r2, lsl #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 77


 2208 05d8 02EBCB12 		add	r2, r2, fp, lsl #7
 2209 05dc C2F3C752 		ubfx	r2, r2, #23, #8
 2210 05e0 62F30F27 		bfi	r7, r2, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2211              		.loc 3 468 5 discriminator 4 view .LVU687
 2212 05e4 E4B2     		uxtb	r4, r4
 2213              	.LVL246:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2214              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU688
 2215 05e6 EDB2     		uxtb	r5, r5
 2216              	.LVL247:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2217              		.loc 3 468 5 discriminator 4 view .LVU689
 2218 05e8 05FB03F3 		mul	r3, r5, r3
 2219 05ec 04FB0131 		mla	r1, r4, r1, r3
 2220              	.LVL248:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2221              		.loc 3 468 5 discriminator 4 view .LVU690
 2222 05f0 01EB0123 		add	r3, r1, r1, lsl #8
 2223 05f4 01EBC311 		add	r1, r1, r3, lsl #7
 2224 05f8 C1F3C751 		ubfx	r1, r1, #23, #8
 2225 05fc 61F30707 		bfi	r7, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2226              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU691
 2227 0600 47F07F47 		orr	r7, r7, #-16777216
 2228              	.LVL249:
 2229              		.loc 3 476 5 discriminator 4 view .LVU692
 2230              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU693
 2231              	.LBE156:
 2232              	.LBE155:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2233              		.loc 1 878 49 discriminator 4 view .LVU694
 2234 0604 49F82C70 		str	r7, [r9, ip, lsl #2]
 2235              	.L102:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2236              		.loc 1 878 49 discriminator 4 view .LVU695
 2237              	.LBE154:
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2238              		.loc 1 867 45 is_stmt 1 discriminator 2 view .LVU696
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2239              		.loc 1 867 46 is_stmt 0 discriminator 2 view .LVU697
 2240 0608 0130     		adds	r0, r0, #1
 2241              	.LVL250:
 2242              	.L105:
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2243              		.loc 1 867 28 is_stmt 1 discriminator 1 view .LVU698
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2244              		.loc 1 867 17 is_stmt 0 discriminator 1 view .LVU699
 2245 060a 7045     		cmp	r0, lr
 2246 060c 0BDA     		bge	.L123
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2247              		.loc 1 868 21 is_stmt 1 view .LVU700
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2248              		.loc 1 868 28 is_stmt 0 view .LVU701
 2249 060e 8446     		mov	ip, r0
 2250 0610 18F80010 		ldrb	r1, [r8, r0]	@ zero_extendqisi2
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 78


 2251              		.loc 1 868 23 view .LVU702
 2252 0614 0029     		cmp	r1, #0
 2253 0616 F7D0     		beq	.L102
 2254              	.LBB157:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2255              		.loc 1 869 25 is_stmt 1 view .LVU703
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2256              		.loc 1 869 34 is_stmt 0 view .LVU704
 2257 0618 FC29     		cmp	r1, #252
 2258 061a BCD8     		bhi	.L110
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2259              		.loc 1 869 80 discriminator 1 view .LVU705
 2260 061c 009B     		ldr	r3, [sp]
 2261 061e 03FB01F1 		mul	r1, r3, r1
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2262              		.loc 1 869 34 discriminator 1 view .LVU706
 2263 0622 090A     		lsrs	r1, r1, #8
 2264 0624 B8E7     		b	.L103
 2265              	.L123:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2266              		.loc 1 869 34 discriminator 1 view .LVU707
 2267              	.LBE157:
 882:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2268              		.loc 1 882 17 is_stmt 1 discriminator 2 view .LVU708
 882:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2269              		.loc 1 882 32 is_stmt 0 discriminator 2 view .LVU709
 2270 0626 039B     		ldr	r3, [sp, #12]
 2271 0628 09EB8309 		add	r9, r9, r3, lsl #2
 2272              	.LVL251:
 883:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2273              		.loc 1 883 17 is_stmt 1 discriminator 2 view .LVU710
 883:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2274              		.loc 1 883 22 is_stmt 0 discriminator 2 view .LVU711
 2275 062c F044     		add	r8, r8, lr
 2276              	.LVL252:
 884:lvgl/src/draw/lv_draw_blend.c ****             }
 2277              		.loc 1 884 17 is_stmt 1 discriminator 2 view .LVU712
 884:lvgl/src/draw/lv_draw_blend.c ****             }
 2278              		.loc 1 884 31 is_stmt 0 discriminator 2 view .LVU713
 2279 062e 019B     		ldr	r3, [sp, #4]
 2280 0630 06EB8306 		add	r6, r6, r3, lsl #2
 2281              	.LVL253:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2282              		.loc 1 866 41 is_stmt 1 discriminator 2 view .LVU714
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2283              		.loc 1 866 42 is_stmt 0 discriminator 2 view .LVU715
 2284 0634 0AF1010A 		add	r10, r10, #1
 2285              	.LVL254:
 2286              	.L80:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2287              		.loc 1 866 24 is_stmt 1 discriminator 1 view .LVU716
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2288              		.loc 1 866 13 is_stmt 0 discriminator 1 view .LVU717
 2289 0638 049B     		ldr	r3, [sp, #16]
 2290 063a 9A45     		cmp	r10, r3
 2291 063c BFF649AD 		bge	.L72
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 79


 2292              		.loc 1 867 23 view .LVU718
 2293 0640 0020     		movs	r0, #0
 2294 0642 E2E7     		b	.L105
 2295              	.LVL255:
 2296              	.L108:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2297              		.loc 1 866 19 view .LVU719
 2298 0644 4FF0000A 		mov	r10, #0
 2299              	.LVL256:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2300              		.loc 1 866 19 view .LVU720
 2301 0648 A146     		mov	r9, r4
 2302 064a AE46     		mov	lr, r5
 2303              	.LVL257:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2304              		.loc 1 866 19 view .LVU721
 2305 064c 4746     		mov	r7, r8
 2306 064e 0093     		str	r3, [sp]
 2307 0650 DDF86080 		ldr	r8, [sp, #96]
 2308              	.LVL258:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2309              		.loc 1 866 19 view .LVU722
 2310 0654 F0E7     		b	.L80
 2311              		.cfi_endproc
 2312              	.LFE153:
 2314              		.section	.text.fill_normal,"ax",%progbits
 2315              		.align	1
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu fpv4-sp-d16
 2321              	fill_normal:
 2322              	.LVL259:
 2323              	.LFB150:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2324              		.loc 1 300 1 is_stmt 1 view -0
 2325              		.cfi_startproc
 2326              		@ args = 12, pretend = 0, frame = 48
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2328              		.loc 1 300 1 is_stmt 0 view .LVU724
 2329 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2330              	.LCFI17:
 2331              		.cfi_def_cfa_offset 36
 2332              		.cfi_offset 4, -36
 2333              		.cfi_offset 5, -32
 2334              		.cfi_offset 6, -28
 2335              		.cfi_offset 7, -24
 2336              		.cfi_offset 8, -20
 2337              		.cfi_offset 9, -16
 2338              		.cfi_offset 10, -12
 2339              		.cfi_offset 11, -8
 2340              		.cfi_offset 14, -4
 2341 0004 8FB0     		sub	sp, sp, #60
 2342              	.LCFI18:
 2343              		.cfi_def_cfa_offset 96
 2344 0006 0446     		mov	r4, r0
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 80


 2345 0008 0291     		str	r1, [sp, #8]
 2346 000a 1546     		mov	r5, r2
 2347 000c 0892     		str	r2, [sp, #32]
 2348 000e 0993     		str	r3, [sp, #36]
 2349 0010 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 2350              	.LVL260:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2351              		.loc 1 300 1 view .LVU725
 2352 0014 0393     		str	r3, [sp, #12]
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2353              		.loc 1 302 5 is_stmt 1 view .LVU726
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2354              		.loc 1 302 24 is_stmt 0 view .LVU727
 2355 0016 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 2356              	.LVL261:
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2357              		.loc 1 302 24 view .LVU728
 2358 001a 0A90     		str	r0, [sp, #40]
 2359              	.LVL262:
 305:lvgl/src/draw/lv_draw_blend.c **** 
 2360              		.loc 1 305 5 is_stmt 1 view .LVU729
 2361              	.LBB192:
 2362              	.LBI192:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 2363              		.loc 2 133 26 view .LVU730
 2364              	.LBB193:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2365              		.loc 2 135 5 view .LVU731
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2366              		.loc 2 135 31 is_stmt 0 view .LVU732
 2367 001c A388     		ldrh	r3, [r4, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2368              		.loc 2 135 44 view .LVU733
 2369 001e 2288     		ldrh	r2, [r4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2370              		.loc 2 135 36 view .LVU734
 2371 0020 9B1A     		subs	r3, r3, r2
 2372 0022 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2373              		.loc 2 135 49 view .LVU735
 2374 0024 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2375              		.loc 2 135 12 view .LVU736
 2376 0026 1CB2     		sxth	r4, r3
 2377              	.LVL263:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2378              		.loc 2 135 12 view .LVU737
 2379 0028 0494     		str	r4, [sp, #16]
 2380              	.LVL264:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2381              		.loc 2 135 12 view .LVU738
 2382              	.LBE193:
 2383              	.LBE192:
 307:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2384              		.loc 1 307 5 is_stmt 1 view .LVU739
 2385              	.LBB194:
 2386              	.LBI194:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 81


 133:lvgl/src/draw/../misc/lv_area.h **** {
 2387              		.loc 2 133 26 view .LVU740
 2388              	.LBB195:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2389              		.loc 2 135 5 view .LVU741
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2390              		.loc 2 135 31 is_stmt 0 view .LVU742
 2391 002a AE88     		ldrh	r6, [r5, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2392              		.loc 2 135 44 view .LVU743
 2393 002c B5F90020 		ldrsh	r2, [r5]
 2394 0030 93B2     		uxth	r3, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2395              		.loc 2 135 36 view .LVU744
 2396 0032 F61A     		subs	r6, r6, r3
 2397 0034 B6B2     		uxth	r6, r6
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2398              		.loc 2 135 49 view .LVU745
 2399 0036 0136     		adds	r6, r6, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2400              		.loc 2 135 12 view .LVU746
 2401 0038 36B2     		sxth	r6, r6
 2402              	.LVL265:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2403              		.loc 2 135 12 view .LVU747
 2404              	.LBE195:
 2405              	.LBE194:
 308:lvgl/src/draw/lv_draw_blend.c **** 
 2406              		.loc 1 308 5 is_stmt 1 view .LVU748
 2407              	.LBB196:
 2408              	.LBI196:
 143:lvgl/src/draw/../misc/lv_area.h **** {
 2409              		.loc 2 143 26 view .LVU749
 2410              	.LBB197:
 2411              		.loc 2 145 5 view .LVU750
 2412              		.loc 2 145 31 is_stmt 0 view .LVU751
 2413 003a EB88     		ldrh	r3, [r5, #6]
 2414              		.loc 2 145 44 view .LVU752
 2415 003c B5F90210 		ldrsh	r1, [r5, #2]
 2416 0040 88B2     		uxth	r0, r1
 2417              	.LVL266:
 2418              		.loc 2 145 36 view .LVU753
 2419 0042 1B1A     		subs	r3, r3, r0
 2420 0044 9BB2     		uxth	r3, r3
 2421              		.loc 2 145 49 view .LVU754
 2422 0046 0133     		adds	r3, r3, #1
 2423              		.loc 2 145 12 view .LVU755
 2424 0048 1BB2     		sxth	r3, r3
 2425 004a 0B93     		str	r3, [sp, #44]
 2426              	.LVL267:
 2427              		.loc 2 145 12 view .LVU756
 2428              	.LBE197:
 2429              	.LBE196:
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2430              		.loc 1 311 5 is_stmt 1 view .LVU757
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2431              		.loc 1 311 69 is_stmt 0 view .LVU758
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 82


 2432 004c 04FB0122 		mla	r2, r4, r1, r2
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2433              		.loc 1 311 18 view .LVU759
 2434 0050 029B     		ldr	r3, [sp, #8]
 2435              	.LVL268:
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2436              		.loc 1 311 18 view .LVU760
 2437 0052 03EB8204 		add	r4, r3, r2, lsl #2
 2438              	.LVL269:
 313:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 2439              		.loc 1 313 5 is_stmt 1 view .LVU761
 314:lvgl/src/draw/lv_draw_blend.c **** 
 2440              		.loc 1 314 5 view .LVU762
 317:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2441              		.loc 1 317 5 view .LVU763
 317:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2442              		.loc 1 317 7 is_stmt 0 view .LVU764
 2443 0056 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 2444 005a 012B     		cmp	r3, #1
 2445 005c 11D0     		beq	.L174
 2446 005e 8C46     		mov	ip, r1
 2447              	.LBB198:
 396:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 2448              		.loc 1 396 9 is_stmt 1 view .LVU765
 397:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 2449              		.loc 1 397 9 view .LVU766
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2450              		.loc 1 398 9 view .LVU767
 2451              	.LVL270:
 399:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 2452              		.loc 1 399 9 view .LVU768
 399:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 2453              		.loc 1 399 49 is_stmt 0 view .LVU769
 2454 0060 029B     		ldr	r3, [sp, #8]
 2455 0062 53F82210 		ldr	r1, [r3, r2, lsl #2]
 2456              	.LVL271:
 400:lvgl/src/draw/lv_draw_blend.c **** 
 2457              		.loc 1 400 9 is_stmt 1 view .LVU770
 400:lvgl/src/draw/lv_draw_blend.c **** 
 2458              		.loc 1 400 29 is_stmt 0 view .LVU771
 2459 0066 0A46     		mov	r2, r1
 2460              	.LVL272:
 402:lvgl/src/draw/lv_draw_blend.c **** 
 2461              		.loc 1 402 9 is_stmt 1 view .LVU772
 402:lvgl/src/draw/lv_draw_blend.c **** 
 2462              		.loc 1 402 17 is_stmt 0 view .LVU773
 2463 0068 331F     		subs	r3, r6, #4
 2464 006a 0293     		str	r3, [sp, #8]
 2465              	.LVL273:
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2466              		.loc 1 405 9 is_stmt 1 view .LVU774
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2467              		.loc 1 405 11 is_stmt 0 view .LVU775
 2468 006c 039B     		ldr	r3, [sp, #12]
 2469              	.LVL274:
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2470              		.loc 1 405 11 view .LVU776
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 83


 2471 006e FD2B     		cmp	r3, #253
 2472 0070 00F2A382 		bhi	.L168
 2473              	.LBB199:
 467:lvgl/src/draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2474              		.loc 1 467 22 view .LVU777
 2475 0074 4FF00008 		mov	r8, #0
 2476              	.LBE199:
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2477              		.loc 1 398 18 view .LVU778
 2478 0078 C146     		mov	r9, r8
 2479 007a 099D     		ldr	r5, [sp, #36]
 2480              	.LVL275:
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2481              		.loc 1 398 18 view .LVU779
 2482 007c DDF864E0 		ldr	lr, [sp, #100]
 2483 0080 00E3     		b	.L137
 2484              	.LVL276:
 2485              	.L174:
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2486              		.loc 1 398 18 view .LVU780
 2487              	.LBE198:
 318:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2488              		.loc 1 318 9 is_stmt 1 view .LVU781
 318:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2489              		.loc 1 318 11 is_stmt 0 view .LVU782
 2490 0082 039B     		ldr	r3, [sp, #12]
 2491 0084 FD2B     		cmp	r3, #253
 2492 0086 26D9     		bls	.L126
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2493              		.loc 1 338 13 is_stmt 1 view .LVU783
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2494              		.loc 1 338 20 is_stmt 0 view .LVU784
 2495 0088 0A9B     		ldr	r3, [sp, #40]
 2496 008a 1B68     		ldr	r3, [r3]
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2497              		.loc 1 338 28 view .LVU785
 2498 008c DB6A     		ldr	r3, [r3, #44]
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2499              		.loc 1 338 15 view .LVU786
 2500 008e 23B1     		cbz	r3, .L127
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2501              		.loc 1 338 45 discriminator 1 view .LVU787
 2502 0090 0898     		ldr	r0, [sp, #32]
 2503 0092 FFF7FEFF 		bl	lv_area_get_size
 2504              	.LVL277:
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2505              		.loc 1 338 42 discriminator 1 view .LVU788
 2506 0096 F028     		cmp	r0, #240
 2507 0098 06D8     		bhi	.L128
 2508              	.L127:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2509              		.loc 1 300 1 discriminator 1 view .LVU789
 2510 009a 0027     		movs	r7, #0
 2511 009c DDF82C80 		ldr	r8, [sp, #44]
 2512 00a0 DDF81090 		ldr	r9, [sp, #16]
 2513 00a4 099D     		ldr	r5, [sp, #36]
 2514              	.LVL278:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 84


 300:lvgl/src/draw/lv_draw_blend.c **** 
 2515              		.loc 1 300 1 discriminator 1 view .LVU790
 2516 00a6 11E0     		b	.L129
 2517              	.LVL279:
 2518              	.L128:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2519              		.loc 1 339 17 is_stmt 1 view .LVU791
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2520              		.loc 1 339 21 is_stmt 0 view .LVU792
 2521 00a8 0A9B     		ldr	r3, [sp, #40]
 2522 00aa 1868     		ldr	r0, [r3]
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2523              		.loc 1 339 29 view .LVU793
 2524 00ac C46A     		ldr	r4, [r0, #44]
 2525              	.LVL280:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2526              		.loc 1 339 17 view .LVU794
 2527 00ae 099B     		ldr	r3, [sp, #36]
 2528              	.LVL281:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2529              		.loc 1 339 17 view .LVU795
 2530 00b0 0093     		str	r3, [sp]
 2531 00b2 089B     		ldr	r3, [sp, #32]
 2532              	.LVL282:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2533              		.loc 1 339 17 view .LVU796
 2534 00b4 049A     		ldr	r2, [sp, #16]
 2535 00b6 0299     		ldr	r1, [sp, #8]
 2536 00b8 A047     		blx	r4
 2537              	.LVL283:
 340:lvgl/src/draw/lv_draw_blend.c ****             }
 2538              		.loc 1 340 17 is_stmt 1 view .LVU797
 2539 00ba 09E0     		b	.L124
 2540              	.LVL284:
 2541              	.L131:
 345:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2542              		.loc 1 345 17 discriminator 3 view .LVU798
 2543 00bc 3246     		mov	r2, r6
 2544 00be 2946     		mov	r1, r5
 2545 00c0 2046     		mov	r0, r4
 2546 00c2 FFF7FEFF 		bl	lv_color_fill
 2547              	.LVL285:
 346:lvgl/src/draw/lv_draw_blend.c ****             }
 2548              		.loc 1 346 17 discriminator 3 view .LVU799
 346:lvgl/src/draw/lv_draw_blend.c ****             }
 2549              		.loc 1 346 32 is_stmt 0 discriminator 3 view .LVU800
 2550 00c6 04EB8904 		add	r4, r4, r9, lsl #2
 2551              	.LVL286:
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2552              		.loc 1 344 41 is_stmt 1 discriminator 3 view .LVU801
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2553              		.loc 1 344 42 is_stmt 0 discriminator 3 view .LVU802
 2554 00ca 0137     		adds	r7, r7, #1
 2555              	.LVL287:
 2556              	.L129:
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2557              		.loc 1 344 24 is_stmt 1 discriminator 1 view .LVU803
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 85


 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2558              		.loc 1 344 13 is_stmt 0 discriminator 1 view .LVU804
 2559 00cc 4745     		cmp	r7, r8
 2560 00ce F5DB     		blt	.L131
 2561              	.LVL288:
 2562              	.L124:
 498:lvgl/src/draw/lv_draw_blend.c **** 
 2563              		.loc 1 498 1 view .LVU805
 2564 00d0 0FB0     		add	sp, sp, #60
 2565              	.LCFI19:
 2566              		.cfi_remember_state
 2567              		.cfi_def_cfa_offset 36
 2568              		@ sp needed
 2569 00d2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2570              	.LVL289:
 2571              	.L126:
 2572              	.LCFI20:
 2573              		.cfi_restore_state
 2574              	.LBB219:
 364:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 2575              		.loc 1 364 13 is_stmt 1 view .LVU806
 2576              	.LBB220:
 2577              	.LBI220:
 477:lvgl/src/draw/../misc/lv_color.h **** }
 478:lvgl/src/draw/../misc/lv_color.h **** 
 479:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 480:lvgl/src/draw/../misc/lv_color.h **** {
 481:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 482:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 483:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 484:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 485:lvgl/src/draw/../misc/lv_color.h **** #else
 486:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 487:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 488:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 489:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 490:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 491:lvgl/src/draw/../misc/lv_color.h **** #endif
 492:lvgl/src/draw/../misc/lv_color.h **** 
 493:lvgl/src/draw/../misc/lv_color.h **** }
 494:lvgl/src/draw/../misc/lv_color.h **** 
 495:lvgl/src/draw/../misc/lv_color.h **** /**
 496:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 500:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 502:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl/src/draw/../misc/lv_color.h ****  */
 504:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl/src/draw/../misc/lv_color.h **** {
 506:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 507:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 86


 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 513:lvgl/src/draw/../misc/lv_color.h **** #else
 514:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 515:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 516:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 517:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 519:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 521:lvgl/src/draw/../misc/lv_color.h **** #endif
 522:lvgl/src/draw/../misc/lv_color.h **** 
 523:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 524:lvgl/src/draw/../misc/lv_color.h **** }
 525:lvgl/src/draw/../misc/lv_color.h **** 
 526:lvgl/src/draw/../misc/lv_color.h **** /**
 527:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 529:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 530:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 531:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 532:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 533:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 534:lvgl/src/draw/../misc/lv_color.h ****  */
 535:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 536:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 537:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 538:lvgl/src/draw/../misc/lv_color.h **** {
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 540:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 546:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 551:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 552:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 553:lvgl/src/draw/../misc/lv_color.h ****     }
 554:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 555:lvgl/src/draw/../misc/lv_color.h ****     else {
 556:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 558:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 559:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 560:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 563:lvgl/src/draw/../misc/lv_color.h **** 
 564:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 565:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 566:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 567:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 87


 568:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 569:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 570:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 571:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 572:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 573:lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 574:lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 575:lvgl/src/draw/../misc/lv_color.h ****                     ;
 576:lvgl/src/draw/../misc/lv_color.h ****             }
 577:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 578:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 579:lvgl/src/draw/../misc/lv_color.h **** 
 580:lvgl/src/draw/../misc/lv_color.h ****         }
 581:lvgl/src/draw/../misc/lv_color.h **** 
 582:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 583:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 584:lvgl/src/draw/../misc/lv_color.h ****     }
 585:lvgl/src/draw/../misc/lv_color.h **** }
 586:lvgl/src/draw/../misc/lv_color.h **** 
 587:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 588:lvgl/src/draw/../misc/lv_color.h **** 
 589:lvgl/src/draw/../misc/lv_color.h **** /**
 590:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 591:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 592:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 593:lvgl/src/draw/../misc/lv_color.h ****  */
 594:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 597:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 598:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 599:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 600:lvgl/src/draw/../misc/lv_color.h **** }
 601:lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 603:lvgl/src/draw/../misc/lv_color.h **** {
 604:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 605:lvgl/src/draw/../misc/lv_color.h **** }
 606:lvgl/src/draw/../misc/lv_color.h **** 
 607:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 608:lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 610:lvgl/src/draw/../misc/lv_color.h **** }
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 613:lvgl/src/draw/../misc/lv_color.h **** {
 614:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 615:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 616:lvgl/src/draw/../misc/lv_color.h **** }
 617:lvgl/src/draw/../misc/lv_color.h **** 
 618:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 619:lvgl/src/draw/../misc/lv_color.h **** {
 620:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 621:lvgl/src/draw/../misc/lv_color.h **** }
 622:lvgl/src/draw/../misc/lv_color.h **** 
 623:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 624:lvgl/src/draw/../misc/lv_color.h **** //!
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 88


 625:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 626:lvgl/src/draw/../misc/lv_color.h **** 
 627:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 628:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 629:lvgl/src/draw/../misc/lv_color.h **** 
 630:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 631:lvgl/src/draw/../misc/lv_color.h **** 
 632:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 633:lvgl/src/draw/../misc/lv_color.h **** 
 634:lvgl/src/draw/../misc/lv_color.h **** /**
 635:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 636:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 637:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 638:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 639:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 640:lvgl/src/draw/../misc/lv_color.h ****  */
 641:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 642:lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/src/draw/../misc/lv_color.h **** /**
 644:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 645:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 646:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 647:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 648:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 649:lvgl/src/draw/../misc/lv_color.h ****  */
 650:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 651:lvgl/src/draw/../misc/lv_color.h **** 
 652:lvgl/src/draw/../misc/lv_color.h **** /**
 653:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 654:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 655:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 656:lvgl/src/draw/../misc/lv_color.h ****  */
 657:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 658:lvgl/src/draw/../misc/lv_color.h **** 
 659:lvgl/src/draw/../misc/lv_color.h **** /**
 660:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 661:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 662:lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 664:lvgl/src/draw/../misc/lv_color.h **** {
 665:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 666:lvgl/src/draw/../misc/lv_color.h **** }
 667:lvgl/src/draw/../misc/lv_color.h **** 
 668:lvgl/src/draw/../misc/lv_color.h **** /**********************
 669:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 670:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 671:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 674:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 675:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
 2578              		.loc 3 675 26 view .LVU807
 2579              	.LBE220:
 2580              	.LBE219:
 2581              		.loc 3 675 49 view .LVU808
 2582              	.LBB230:
 2583              	.LBB223:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 89


 2584              	.LBB221:
 2585              	.LBI221:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 2586              		.loc 3 602 26 view .LVU809
 2587              	.LBB222:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2588              		.loc 3 604 5 view .LVU810
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2589              		.loc 3 604 12 is_stmt 0 view .LVU811
 2590 00d6 0020     		movs	r0, #0
 2591 00d8 6FF30700 		bfc	r0, #0, #8
 2592 00dc 6FF30F20 		bfc	r0, #8, #8
 2593 00e0 6FF31740 		bfc	r0, #16, #8
 2594 00e4 40F07F40 		orr	r0, r0, #-16777216
 2595              	.LVL290:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2596              		.loc 3 604 12 view .LVU812
 2597 00e8 0146     		mov	r1, r0
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2598              		.loc 3 604 12 view .LVU813
 2599              	.LBE222:
 2600              	.LBE221:
 2601              	.LBE223:
 365:lvgl/src/draw/lv_draw_blend.c **** 
 2602              		.loc 1 365 13 is_stmt 1 view .LVU814
 2603              	.LVL291:
 2604              	.LBB224:
 2605              	.LBI224:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2606              		.loc 3 459 48 view .LVU815
 2607              	.LBB225:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2608              		.loc 3 461 5 view .LVU816
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2609              		.loc 3 464 5 view .LVU817
 2610 00ea 099B     		ldr	r3, [sp, #36]
 2611              	.LVL292:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2612              		.loc 3 464 5 is_stmt 0 view .LVU818
 2613 00ec C3F30747 		ubfx	r7, r3, #16, #8
 2614 00f0 C0F30742 		ubfx	r2, r0, #16, #8
 2615 00f4 039D     		ldr	r5, [sp, #12]
 2616              	.LVL293:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2617              		.loc 3 464 5 view .LVU819
 2618 00f6 C5F1FF03 		rsb	r3, r5, #255
 2619              	.LVL294:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2620              		.loc 3 464 5 view .LVU820
 2621 00fa 03FB02F2 		mul	r2, r3, r2
 2622 00fe 05FB0722 		mla	r2, r5, r7, r2
 2623 0102 02EB0227 		add	r7, r2, r2, lsl #8
 2624 0106 02EBC712 		add	r2, r2, r7, lsl #7
 2625 010a C2F3C752 		ubfx	r2, r2, #23, #8
 2626 010e 4FF0000C 		mov	ip, #0
 2627              	.LVL295:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 90


 2628              		.loc 3 464 5 view .LVU821
 2629 0112 62F3174C 		bfi	ip, r2, #16, #8
 2630              	.LVL296:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2631              		.loc 3 466 5 is_stmt 1 view .LVU822
 2632 0116 099A     		ldr	r2, [sp, #36]
 2633              	.LVL297:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2634              		.loc 3 466 5 is_stmt 0 view .LVU823
 2635 0118 C2F30727 		ubfx	r7, r2, #8, #8
 2636 011c C0F30722 		ubfx	r2, r0, #8, #8
 2637              	.LVL298:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2638              		.loc 3 466 5 view .LVU824
 2639 0120 03FB02F2 		mul	r2, r3, r2
 2640 0124 07FB0522 		mla	r2, r7, r5, r2
 2641 0128 02EB0227 		add	r7, r2, r2, lsl #8
 2642 012c 02EBC712 		add	r2, r2, r7, lsl #7
 2643 0130 C2F3C752 		ubfx	r2, r2, #23, #8
 2644 0134 62F30F2C 		bfi	ip, r2, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2645              		.loc 3 468 5 is_stmt 1 view .LVU825
 2646 0138 099D     		ldr	r5, [sp, #36]
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2647              		.loc 3 468 5 is_stmt 0 view .LVU826
 2648 013a EAB2     		uxtb	r2, r5
 2649 013c C0B2     		uxtb	r0, r0
 2650 013e 00FB03F3 		mul	r3, r0, r3
 2651 0142 039F     		ldr	r7, [sp, #12]
 2652 0144 02FB0733 		mla	r3, r2, r7, r3
 2653 0148 03EB0320 		add	r0, r3, r3, lsl #8
 2654 014c 03EBC013 		add	r3, r3, r0, lsl #7
 2655 0150 C3F3C753 		ubfx	r3, r3, #23, #8
 2656 0154 63F3070C 		bfi	ip, r3, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2657              		.loc 3 470 5 is_stmt 1 view .LVU827
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2658              		.loc 3 476 5 view .LVU828
 2659 0158 4CF07F43 		orr	r3, ip, #-16777216
 2660              	.LVL299:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2661              		.loc 3 476 5 is_stmt 0 view .LVU829
 2662              	.LBE225:
 2663              	.LBE224:
 367:lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 2664              		.loc 1 367 13 is_stmt 1 view .LVU830
 368:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 2665              		.loc 1 368 13 view .LVU831
 2666              	.LBB226:
 2667              	.LBI226:
 479:lvgl/src/draw/../misc/lv_color.h **** {
 2668              		.loc 3 479 42 view .LVU832
 2669              	.LBB227:
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2670              		.loc 3 482 5 view .LVU833
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2671              		.loc 3 482 25 is_stmt 0 view .LVU834
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 91


 2672 015c C5F30740 		ubfx	r0, r5, #16, #8
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2673              		.loc 3 482 43 view .LVU835
 2674 0160 07FB00F0 		mul	r0, r7, r0
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2675              		.loc 3 482 12 view .LVU836
 2676 0164 ADF83000 		strh	r0, [sp, #48]	@ movhi
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2677              		.loc 3 483 5 is_stmt 1 view .LVU837
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2678              		.loc 3 483 25 is_stmt 0 view .LVU838
 2679 0168 C5F30720 		ubfx	r0, r5, #8, #8
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2680              		.loc 3 483 43 view .LVU839
 2681 016c 07FB00F0 		mul	r0, r7, r0
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2682              		.loc 3 483 12 view .LVU840
 2683 0170 ADF83200 		strh	r0, [sp, #50]	@ movhi
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2684              		.loc 3 484 5 is_stmt 1 view .LVU841
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2685              		.loc 3 484 43 is_stmt 0 view .LVU842
 2686 0174 07FB02F2 		mul	r2, r7, r2
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2687              		.loc 3 484 12 view .LVU843
 2688 0178 ADF83420 		strh	r2, [sp, #52]	@ movhi
 2689              	.LVL300:
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2690              		.loc 3 484 12 view .LVU844
 2691              	.LBE227:
 2692              	.LBE226:
 369:lvgl/src/draw/lv_draw_blend.c **** 
 2693              		.loc 1 369 13 is_stmt 1 view .LVU845
 369:lvgl/src/draw/lv_draw_blend.c **** 
 2694              		.loc 1 369 22 is_stmt 0 view .LVU846
 2695 017c F843     		mvns	r0, r7
 2696 017e C0B2     		uxtb	r0, r0
 2697              	.LVL301:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2698              		.loc 1 371 13 is_stmt 1 view .LVU847
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2699              		.loc 1 371 19 is_stmt 0 view .LVU848
 2700 0180 0027     		movs	r7, #0
 2701 0182 B946     		mov	r9, r7
 2702 0184 DDF82CC0 		ldr	ip, [sp, #44]
 2703              	.LVL302:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2704              		.loc 1 371 19 view .LVU849
 2705 0188 DDF810E0 		ldr	lr, [sp, #16]
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2706              		.loc 1 371 13 view .LVU850
 2707 018c 3CE0     		b	.L132
 2708              	.LVL303:
 2709              	.L176:
 374:lvgl/src/draw/lv_draw_blend.c **** 
 2710              		.loc 1 374 25 is_stmt 1 view .LVU851
 374:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 92


 2711              		.loc 1 374 41 is_stmt 0 view .LVU852
 2712 018e 3946     		mov	r1, r7
 2713              	.LVL304:
 384:lvgl/src/draw/lv_draw_blend.c ****                         }
 2714              		.loc 1 384 29 is_stmt 1 view .LVU853
 2715              	.LBB228:
 2716              	.LBI228:
 504:lvgl/src/draw/../misc/lv_color.h **** {
 2717              		.loc 3 504 48 view .LVU854
 2718              	.LBB229:
 506:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2719              		.loc 3 506 5 view .LVU855
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2720              		.loc 3 509 5 view .LVU856
 2721 0190 BDF83030 		ldrh	r3, [sp, #48]
 2722              	.LVL305:
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2723              		.loc 3 509 5 is_stmt 0 view .LVU857
 2724 0194 C7F30748 		ubfx	r8, r7, #16, #8
 2725 0198 00FB0833 		mla	r3, r0, r8, r3
 2726 019c 03EB0328 		add	r8, r3, r3, lsl #8
 2727 01a0 03EBC813 		add	r3, r3, r8, lsl #7
 2728 01a4 C3F3C753 		ubfx	r3, r3, #23, #8
 2729 01a8 63F3174A 		bfi	r10, r3, #16, #8
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2730              		.loc 3 510 5 is_stmt 1 view .LVU858
 2731 01ac BDF83230 		ldrh	r3, [sp, #50]
 2732 01b0 C7F30728 		ubfx	r8, r7, #8, #8
 2733 01b4 08FB0033 		mla	r3, r8, r0, r3
 2734 01b8 03EB0328 		add	r8, r3, r3, lsl #8
 2735 01bc 03EBC813 		add	r3, r3, r8, lsl #7
 2736 01c0 C3F3C753 		ubfx	r3, r3, #23, #8
 2737 01c4 63F30F2A 		bfi	r10, r3, #8, #8
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 2738              		.loc 3 511 5 view .LVU859
 2739 01c8 BDF83430 		ldrh	r3, [sp, #52]
 2740 01cc 5FFA87F8 		uxtb	r8, r7
 2741 01d0 08FB0033 		mla	r3, r8, r0, r3
 2742 01d4 03EB0328 		add	r8, r3, r3, lsl #8
 2743 01d8 03EBC813 		add	r3, r3, r8, lsl #7
 2744 01dc C3F3C753 		ubfx	r3, r3, #23, #8
 2745 01e0 63F3070A 		bfi	r10, r3, #0, #8
 512:lvgl/src/draw/../misc/lv_color.h **** #else
 2746              		.loc 3 512 5 view .LVU860
 2747 01e4 4AF07F4A 		orr	r10, r10, #-16777216
 2748              	.LVL306:
 523:lvgl/src/draw/../misc/lv_color.h **** }
 2749              		.loc 3 523 5 view .LVU861
 523:lvgl/src/draw/../misc/lv_color.h **** }
 2750              		.loc 3 523 5 is_stmt 0 view .LVU862
 2751 01e8 5346     		mov	r3, r10
 2752              	.LVL307:
 2753              	.L133:
 523:lvgl/src/draw/../misc/lv_color.h **** }
 2754              		.loc 3 523 5 view .LVU863
 2755              	.LBE229:
 2756              	.LBE228:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 93


 387:lvgl/src/draw/lv_draw_blend.c ****                 }
 2757              		.loc 1 387 21 is_stmt 1 discriminator 2 view .LVU864
 387:lvgl/src/draw/lv_draw_blend.c ****                 }
 2758              		.loc 1 387 39 is_stmt 0 discriminator 2 view .LVU865
 2759 01ea 2B60     		str	r3, [r5]
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2760              		.loc 1 372 45 is_stmt 1 discriminator 2 view .LVU866
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2761              		.loc 1 372 46 is_stmt 0 discriminator 2 view .LVU867
 2762 01ec 0132     		adds	r2, r2, #1
 2763              	.LVL308:
 2764              	.L135:
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2765              		.loc 1 372 28 is_stmt 1 discriminator 1 view .LVU868
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2766              		.loc 1 372 17 is_stmt 0 discriminator 1 view .LVU869
 2767 01ee B242     		cmp	r2, r6
 2768 01f0 06DA     		bge	.L175
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2769              		.loc 1 373 21 is_stmt 1 view .LVU870
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2770              		.loc 1 373 62 is_stmt 0 view .LVU871
 2771 01f2 04EB8205 		add	r5, r4, r2, lsl #2
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2772              		.loc 1 373 23 view .LVU872
 2773 01f6 54F82270 		ldr	r7, [r4, r2, lsl #2]
 2774 01fa B942     		cmp	r1, r7
 2775 01fc C7D1     		bne	.L176
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2776              		.loc 1 373 23 view .LVU873
 2777 01fe F4E7     		b	.L133
 2778              	.L175:
 389:lvgl/src/draw/lv_draw_blend.c ****             }
 2779              		.loc 1 389 17 is_stmt 1 discriminator 2 view .LVU874
 389:lvgl/src/draw/lv_draw_blend.c ****             }
 2780              		.loc 1 389 32 is_stmt 0 discriminator 2 view .LVU875
 2781 0200 04EB8E04 		add	r4, r4, lr, lsl #2
 2782              	.LVL309:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2783              		.loc 1 371 41 is_stmt 1 discriminator 2 view .LVU876
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2784              		.loc 1 371 42 is_stmt 0 discriminator 2 view .LVU877
 2785 0204 09F10109 		add	r9, r9, #1
 2786              	.LVL310:
 2787              	.L132:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2788              		.loc 1 371 24 is_stmt 1 discriminator 1 view .LVU878
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2789              		.loc 1 371 13 is_stmt 0 discriminator 1 view .LVU879
 2790 0208 E145     		cmp	r9, ip
 2791 020a BFF661AF 		bge	.L124
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2792              		.loc 1 372 23 view .LVU880
 2793 020e 0022     		movs	r2, #0
 2794 0210 EDE7     		b	.L135
 2795              	.LVL311:
 2796              	.L139:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 94


 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2797              		.loc 1 372 23 view .LVU881
 2798              	.LBE230:
 2799              	.LBB231:
 2800              	.LBB204:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2801              		.loc 1 421 21 is_stmt 1 discriminator 4 view .LVU882
 2802 0212 54F823E0 		ldr	lr, [r4, r3, lsl #2]
 2803              	.LVL312:
 2804              	.LBB205:
 2805              	.LBI205:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2806              		.loc 3 459 48 discriminator 4 view .LVU883
 2807              	.LBB206:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2808              		.loc 3 461 5 discriminator 4 view .LVU884
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2809              		.loc 3 464 5 discriminator 4 view .LVU885
 2810 0216 C5F3074C 		ubfx	ip, r5, #16, #8
 2811              	.LVL313:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2812              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU886
 2813 021a CEF3074A 		ubfx	r10, lr, #16, #8
 2814 021e C1F1FF00 		rsb	r0, r1, #255
 2815 0222 00FB0AFA 		mul	r10, r0, r10
 2816 0226 01FB0CAC 		mla	ip, r1, ip, r10
 2817 022a 0CEB0C2A 		add	r10, ip, ip, lsl #8
 2818 022e 0CEBCA1C 		add	ip, ip, r10, lsl #7
 2819 0232 CCF3C75C 		ubfx	ip, ip, #23, #8
 2820 0236 6CF31747 		bfi	r7, ip, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2821              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU887
 2822 023a C5F3072C 		ubfx	ip, r5, #8, #8
 2823 023e CEF3072A 		ubfx	r10, lr, #8, #8
 2824 0242 0AFB00FA 		mul	r10, r10, r0
 2825 0246 0CFB01AC 		mla	ip, ip, r1, r10
 2826 024a 0CEB0C2A 		add	r10, ip, ip, lsl #8
 2827 024e 0CEBCA1C 		add	ip, ip, r10, lsl #7
 2828 0252 CCF3C75C 		ubfx	ip, ip, #23, #8
 2829 0256 6CF30F27 		bfi	r7, ip, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2830              		.loc 3 468 5 discriminator 4 view .LVU888
 2831 025a 5FFA85FC 		uxtb	ip, r5
 2832 025e 5FFA8EFE 		uxtb	lr, lr
 2833              	.LVL314:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2834              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU889
 2835 0262 0EFB00F0 		mul	r0, lr, r0
 2836 0266 0CFB0101 		mla	r1, ip, r1, r0
 2837              	.LVL315:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2838              		.loc 3 468 5 discriminator 4 view .LVU890
 2839 026a 01EB0120 		add	r0, r1, r1, lsl #8
 2840 026e 01EBC011 		add	r1, r1, r0, lsl #7
 2841 0272 C1F3C751 		ubfx	r1, r1, #23, #8
 2842 0276 61F30707 		bfi	r7, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 95


 2843              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU891
 2844 027a 47F07F47 		orr	r7, r7, #-16777216
 2845              	.LVL316:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2846              		.loc 3 476 5 discriminator 4 view .LVU892
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2847              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU893
 2848              	.LBE206:
 2849              	.LBE205:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2850              		.loc 1 421 21 discriminator 4 view .LVU894
 2851 027e 44F82370 		str	r7, [r4, r3, lsl #2]
 2852              	.LVL317:
 2853              	.L138:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2854              		.loc 1 421 21 is_stmt 1 discriminator 6 view .LVU895
 2855 0282 0132     		adds	r2, r2, #1
 2856              	.LVL318:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2857              		.loc 1 417 81 discriminator 6 view .LVU896
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2858              		.loc 1 417 82 is_stmt 0 discriminator 6 view .LVU897
 2859 0284 0133     		adds	r3, r3, #1
 2860              	.LVL319:
 2861              	.L157:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2862              		.loc 1 417 28 is_stmt 1 discriminator 2 view .LVU898
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2863              		.loc 1 417 17 is_stmt 0 discriminator 2 view .LVU899
 2864 0286 B342     		cmp	r3, r6
 2865 0288 80F22E81 		bge	.L172
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2866              		.loc 1 417 44 discriminator 3 view .LVU900
 2867 028c 12F0030F 		tst	r2, #3
 2868 0290 07D0     		beq	.L177
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2869              		.loc 1 421 21 is_stmt 1 view .LVU901
 2870 0292 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2871              	.LVL320:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2872              		.loc 1 421 21 is_stmt 0 view .LVU902
 2873 0294 0029     		cmp	r1, #0
 2874 0296 F4D0     		beq	.L138
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2875              		.loc 1 421 21 is_stmt 1 discriminator 1 view .LVU903
 2876 0298 FF29     		cmp	r1, #255
 2877 029a BAD1     		bne	.L139
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2878              		.loc 1 421 21 discriminator 3 view .LVU904
 2879 029c 44F82350 		str	r5, [r4, r3, lsl #2]
 2880 02a0 EFE7     		b	.L138
 2881              	.LVL321:
 2882              	.L177:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2883              		.loc 1 421 21 is_stmt 0 discriminator 3 view .LVU905
 2884 02a2 0896     		str	r6, [sp, #32]
 2885 02a4 CDF82480 		str	r8, [sp, #36]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 96


 2886 02a8 DDF818C0 		ldr	ip, [sp, #24]
 2887              	.LVL322:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2888              		.loc 1 421 21 discriminator 3 view .LVU906
 2889 02ac DDF81CE0 		ldr	lr, [sp, #28]
 2890              	.LVL323:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2891              		.loc 1 421 21 discriminator 3 view .LVU907
 2892 02b0 0A97     		str	r7, [sp, #40]
 2893 02b2 059F     		ldr	r7, [sp, #20]
 2894              	.LVL324:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2895              		.loc 1 421 21 discriminator 3 view .LVU908
 2896 02b4 0CE0     		b	.L151
 2897              	.LVL325:
 2898              	.L179:
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 2899              		.loc 1 429 29 is_stmt 1 view .LVU909
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 2900              		.loc 1 429 47 is_stmt 0 view .LVU910
 2901 02b6 44F82350 		str	r5, [r4, r3, lsl #2]
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2902              		.loc 1 430 29 is_stmt 1 view .LVU911
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2903              		.loc 1 430 43 is_stmt 0 view .LVU912
 2904 02ba 591C     		adds	r1, r3, #1
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2905              		.loc 1 430 51 view .LVU913
 2906 02bc 44F82150 		str	r5, [r4, r1, lsl #2]
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2907              		.loc 1 431 29 is_stmt 1 view .LVU914
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2908              		.loc 1 431 43 is_stmt 0 view .LVU915
 2909 02c0 991C     		adds	r1, r3, #2
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2910              		.loc 1 431 51 view .LVU916
 2911 02c2 44F82150 		str	r5, [r4, r1, lsl #2]
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2912              		.loc 1 432 29 is_stmt 1 view .LVU917
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2913              		.loc 1 432 43 is_stmt 0 view .LVU918
 2914 02c6 D91C     		adds	r1, r3, #3
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2915              		.loc 1 432 51 view .LVU919
 2916 02c8 44F82150 		str	r5, [r4, r1, lsl #2]
 2917              	.L142:
 449:lvgl/src/draw/lv_draw_blend.c ****                 }
 2918              		.loc 1 449 21 is_stmt 1 view .LVU920
 449:lvgl/src/draw/lv_draw_blend.c ****                 }
 2919              		.loc 1 449 27 is_stmt 0 view .LVU921
 2920 02cc 0432     		adds	r2, r2, #4
 2921              	.LVL326:
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2922              		.loc 1 426 36 is_stmt 1 view .LVU922
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2923              		.loc 1 426 38 is_stmt 0 view .LVU923
 2924 02ce 0433     		adds	r3, r3, #4
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 97


 2925              	.LVL327:
 2926              	.L151:
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2927              		.loc 1 426 23 is_stmt 1 discriminator 1 view .LVU924
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2928              		.loc 1 426 17 is_stmt 0 discriminator 1 view .LVU925
 2929 02d0 0299     		ldr	r1, [sp, #8]
 2930              	.LVL328:
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2931              		.loc 1 426 17 discriminator 1 view .LVU926
 2932 02d2 8B42     		cmp	r3, r1
 2933 02d4 00F31281 		bgt	.L178
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2934              		.loc 1 427 21 is_stmt 1 view .LVU927
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2935              		.loc 1 427 24 is_stmt 0 view .LVU928
 2936 02d8 1168     		ldr	r1, [r2]
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2937              		.loc 1 427 23 view .LVU929
 2938 02da 0029     		cmp	r1, #0
 2939 02dc F6D0     		beq	.L142
 428:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 2940              		.loc 1 428 25 is_stmt 1 view .LVU930
 428:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 2941              		.loc 1 428 27 is_stmt 0 view .LVU931
 2942 02de B1F1FF3F 		cmp	r1, #-1
 2943 02e2 E8D0     		beq	.L179
 435:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2944              		.loc 1 435 29 is_stmt 1 view .LVU932
 2945              	.LVL329:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2946              		.loc 1 442 29 view .LVU933
 2947 02e4 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 2948 02e6 C6B3     		cbz	r6, .L144
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2949              		.loc 1 442 29 discriminator 1 view .LVU934
 2950 02e8 FF2E     		cmp	r6, #255
 2951 02ea 00F0EE80 		beq	.L180
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2952              		.loc 1 442 29 discriminator 4 view .LVU935
 2953 02ee 54F82310 		ldr	r1, [r4, r3, lsl #2]
 2954              	.LVL330:
 2955              	.LBB207:
 2956              	.LBI207:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2957              		.loc 3 459 48 discriminator 4 view .LVU936
 2958              	.LBB208:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2959              		.loc 3 461 5 discriminator 4 view .LVU937
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2960              		.loc 3 464 5 discriminator 4 view .LVU938
 2961 02f2 C5F30740 		ubfx	r0, r5, #16, #8
 2962              	.LVL331:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2963              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU939
 2964 02f6 C1F3074A 		ubfx	r10, r1, #16, #8
 2965 02fa C6F1FF08 		rsb	r8, r6, #255
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 98


 2966              	.LVL332:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2967              		.loc 3 464 5 discriminator 4 view .LVU940
 2968 02fe 08FB0AFA 		mul	r10, r8, r10
 2969 0302 06FB00A0 		mla	r0, r6, r0, r10
 2970 0306 00EB002A 		add	r10, r0, r0, lsl #8
 2971 030a 00EBCA10 		add	r0, r0, r10, lsl #7
 2972 030e C0F3C750 		ubfx	r0, r0, #23, #8
 2973 0312 60F31749 		bfi	r9, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2974              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU941
 2975 0316 C5F30720 		ubfx	r0, r5, #8, #8
 2976 031a C1F3072A 		ubfx	r10, r1, #8, #8
 2977 031e 0AFB08FA 		mul	r10, r10, r8
 2978 0322 00FB06A0 		mla	r0, r0, r6, r10
 2979 0326 00EB002A 		add	r10, r0, r0, lsl #8
 2980 032a 00EBCA10 		add	r0, r0, r10, lsl #7
 2981 032e C0F3C750 		ubfx	r0, r0, #23, #8
 2982 0332 60F30F29 		bfi	r9, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2983              		.loc 3 468 5 discriminator 4 view .LVU942
 2984 0336 E8B2     		uxtb	r0, r5
 2985 0338 C9B2     		uxtb	r1, r1
 2986              	.LVL333:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2987              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU943
 2988 033a 01FB08F1 		mul	r1, r1, r8
 2989 033e 00FB0611 		mla	r1, r0, r6, r1
 2990 0342 01EB0120 		add	r0, r1, r1, lsl #8
 2991 0346 01EBC011 		add	r1, r1, r0, lsl #7
 2992 034a C1F3C751 		ubfx	r1, r1, #23, #8
 2993 034e 61F30709 		bfi	r9, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2994              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU944
 2995 0352 49F07F49 		orr	r9, r9, #-16777216
 2996              	.LVL334:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2997              		.loc 3 476 5 discriminator 4 view .LVU945
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2998              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU946
 2999              	.LBE208:
 3000              	.LBE207:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3001              		.loc 1 442 29 discriminator 4 view .LVU947
 3002 0356 44F82390 		str	r9, [r4, r3, lsl #2]
 3003              	.LVL335:
 3004              	.L144:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3005              		.loc 1 442 29 is_stmt 1 discriminator 6 view .LVU948
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3006              		.loc 1 443 29 discriminator 6 view .LVU949
 3007 035a 5678     		ldrb	r6, [r2, #1]	@ zero_extendqisi2
 3008 035c D6B3     		cbz	r6, .L146
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3009              		.loc 1 443 29 discriminator 1 view .LVU950
 3010 035e FF2E     		cmp	r6, #255
 3011 0360 00F0B680 		beq	.L181
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 99


 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3012              		.loc 1 443 29 discriminator 4 view .LVU951
 3013 0364 03F1010A 		add	r10, r3, #1
 3014 0368 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3015              	.LVL336:
 3016              	.LBB209:
 3017              	.LBI209:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3018              		.loc 3 459 48 discriminator 4 view .LVU952
 3019              	.LBB210:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3020              		.loc 3 461 5 discriminator 4 view .LVU953
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3021              		.loc 3 464 5 discriminator 4 view .LVU954
 3022 036c C5F30740 		ubfx	r0, r5, #16, #8
 3023              	.LVL337:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3024              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU955
 3025 0370 C1F3074B 		ubfx	fp, r1, #16, #8
 3026 0374 C6F1FF08 		rsb	r8, r6, #255
 3027              	.LVL338:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3028              		.loc 3 464 5 discriminator 4 view .LVU956
 3029 0378 08FB0BFB 		mul	fp, r8, fp
 3030 037c 06FB00B0 		mla	r0, r6, r0, fp
 3031 0380 00EB002B 		add	fp, r0, r0, lsl #8
 3032 0384 00EBCB10 		add	r0, r0, fp, lsl #7
 3033 0388 C0F3C750 		ubfx	r0, r0, #23, #8
 3034 038c 60F3174E 		bfi	lr, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3035              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU957
 3036 0390 C5F30720 		ubfx	r0, r5, #8, #8
 3037 0394 C1F3072B 		ubfx	fp, r1, #8, #8
 3038 0398 0BFB08FB 		mul	fp, fp, r8
 3039 039c 00FB06B0 		mla	r0, r0, r6, fp
 3040 03a0 00EB002B 		add	fp, r0, r0, lsl #8
 3041 03a4 00EBCB10 		add	r0, r0, fp, lsl #7
 3042 03a8 C0F3C750 		ubfx	r0, r0, #23, #8
 3043 03ac 60F30F2E 		bfi	lr, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3044              		.loc 3 468 5 discriminator 4 view .LVU958
 3045 03b0 E8B2     		uxtb	r0, r5
 3046 03b2 C9B2     		uxtb	r1, r1
 3047              	.LVL339:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3048              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU959
 3049 03b4 01FB08F1 		mul	r1, r1, r8
 3050 03b8 00FB0611 		mla	r1, r0, r6, r1
 3051 03bc 01EB0120 		add	r0, r1, r1, lsl #8
 3052 03c0 01EBC010 		add	r0, r1, r0, lsl #7
 3053 03c4 C0F3C750 		ubfx	r0, r0, #23, #8
 3054 03c8 60F3070E 		bfi	lr, r0, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3055              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU960
 3056 03cc 4EF07F4E 		orr	lr, lr, #-16777216
 3057              	.LVL340:
 476:lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 100


 3058              		.loc 3 476 5 discriminator 4 view .LVU961
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3059              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU962
 3060              	.LBE210:
 3061              	.LBE209:
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3062              		.loc 1 443 29 discriminator 4 view .LVU963
 3063 03d0 44F82AE0 		str	lr, [r4, r10, lsl #2]
 3064              	.LVL341:
 3065              	.L146:
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3066              		.loc 1 443 29 is_stmt 1 discriminator 6 view .LVU964
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3067              		.loc 1 444 29 discriminator 6 view .LVU965
 3068 03d4 9678     		ldrb	r6, [r2, #2]	@ zero_extendqisi2
 3069 03d6 CEB3     		cbz	r6, .L148
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3070              		.loc 1 444 29 discriminator 1 view .LVU966
 3071 03d8 FF2E     		cmp	r6, #255
 3072 03da 7DD0     		beq	.L182
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3073              		.loc 1 444 29 discriminator 4 view .LVU967
 3074 03dc 03F1020A 		add	r10, r3, #2
 3075 03e0 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3076              	.LVL342:
 3077              	.LBB211:
 3078              	.LBI211:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3079              		.loc 3 459 48 discriminator 4 view .LVU968
 3080              	.LBB212:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3081              		.loc 3 461 5 discriminator 4 view .LVU969
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3082              		.loc 3 464 5 discriminator 4 view .LVU970
 3083 03e4 C5F30740 		ubfx	r0, r5, #16, #8
 3084              	.LVL343:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3085              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU971
 3086 03e8 C1F3074B 		ubfx	fp, r1, #16, #8
 3087 03ec C6F1FF08 		rsb	r8, r6, #255
 3088              	.LVL344:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3089              		.loc 3 464 5 discriminator 4 view .LVU972
 3090 03f0 08FB0BFB 		mul	fp, r8, fp
 3091 03f4 06FB00B0 		mla	r0, r6, r0, fp
 3092 03f8 00EB002B 		add	fp, r0, r0, lsl #8
 3093 03fc 00EBCB10 		add	r0, r0, fp, lsl #7
 3094 0400 C0F3C750 		ubfx	r0, r0, #23, #8
 3095 0404 60F3174C 		bfi	ip, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3096              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU973
 3097 0408 C5F30720 		ubfx	r0, r5, #8, #8
 3098 040c C1F3072B 		ubfx	fp, r1, #8, #8
 3099 0410 0BFB08FB 		mul	fp, fp, r8
 3100 0414 00FB06B0 		mla	r0, r0, r6, fp
 3101 0418 00EB002B 		add	fp, r0, r0, lsl #8
 3102 041c 00EBCB10 		add	r0, r0, fp, lsl #7
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 101


 3103 0420 C0F3C750 		ubfx	r0, r0, #23, #8
 3104 0424 60F30F2C 		bfi	ip, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3105              		.loc 3 468 5 discriminator 4 view .LVU974
 3106 0428 E8B2     		uxtb	r0, r5
 3107 042a C9B2     		uxtb	r1, r1
 3108              	.LVL345:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3109              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU975
 3110 042c 01FB08F1 		mul	r1, r1, r8
 3111 0430 00FB0611 		mla	r1, r0, r6, r1
 3112 0434 01EB0120 		add	r0, r1, r1, lsl #8
 3113 0438 01EBC010 		add	r0, r1, r0, lsl #7
 3114 043c C0F3C750 		ubfx	r0, r0, #23, #8
 3115 0440 60F3070C 		bfi	ip, r0, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3116              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU976
 3117 0444 4CF07F4C 		orr	ip, ip, #-16777216
 3118              	.LVL346:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3119              		.loc 3 476 5 discriminator 4 view .LVU977
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3120              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU978
 3121              	.LBE212:
 3122              	.LBE211:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3123              		.loc 1 444 29 discriminator 4 view .LVU979
 3124 0448 44F82AC0 		str	ip, [r4, r10, lsl #2]
 3125              	.LVL347:
 3126              	.L148:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3127              		.loc 1 444 29 is_stmt 1 discriminator 6 view .LVU980
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3128              		.loc 1 445 29 discriminator 6 view .LVU981
 3129 044c D678     		ldrb	r6, [r2, #3]	@ zero_extendqisi2
 3130 044e 002E     		cmp	r6, #0
 3131 0450 3FF43CAF 		beq	.L142
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3132              		.loc 1 445 29 discriminator 1 view .LVU982
 3133 0454 FF2E     		cmp	r6, #255
 3134 0456 43D0     		beq	.L183
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3135              		.loc 1 445 29 discriminator 4 view .LVU983
 3136 0458 03F1030A 		add	r10, r3, #3
 3137 045c 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3138              	.LVL348:
 3139              	.LBB213:
 3140              	.LBI213:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3141              		.loc 3 459 48 discriminator 4 view .LVU984
 3142              	.LBB214:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3143              		.loc 3 461 5 discriminator 4 view .LVU985
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3144              		.loc 3 464 5 discriminator 4 view .LVU986
 3145 0460 C5F30740 		ubfx	r0, r5, #16, #8
 3146              	.LVL349:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 102


 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3147              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU987
 3148 0464 C1F3074B 		ubfx	fp, r1, #16, #8
 3149 0468 C6F1FF08 		rsb	r8, r6, #255
 3150              	.LVL350:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3151              		.loc 3 464 5 discriminator 4 view .LVU988
 3152 046c 08FB0BFB 		mul	fp, r8, fp
 3153 0470 06FB00B0 		mla	r0, r6, r0, fp
 3154 0474 00EB002B 		add	fp, r0, r0, lsl #8
 3155 0478 00EBCB10 		add	r0, r0, fp, lsl #7
 3156 047c C0F3C750 		ubfx	r0, r0, #23, #8
 3157 0480 60F31747 		bfi	r7, r0, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3158              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU989
 3159 0484 C5F30720 		ubfx	r0, r5, #8, #8
 3160 0488 C1F3072B 		ubfx	fp, r1, #8, #8
 3161 048c 0BFB08FB 		mul	fp, fp, r8
 3162 0490 00FB06B0 		mla	r0, r0, r6, fp
 3163 0494 00EB002B 		add	fp, r0, r0, lsl #8
 3164 0498 00EBCB10 		add	r0, r0, fp, lsl #7
 3165 049c C0F3C750 		ubfx	r0, r0, #23, #8
 3166 04a0 60F30F27 		bfi	r7, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3167              		.loc 3 468 5 discriminator 4 view .LVU990
 3168 04a4 E8B2     		uxtb	r0, r5
 3169 04a6 C9B2     		uxtb	r1, r1
 3170              	.LVL351:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3171              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU991
 3172 04a8 01FB08F1 		mul	r1, r1, r8
 3173 04ac 00FB0611 		mla	r1, r0, r6, r1
 3174 04b0 01EB0120 		add	r0, r1, r1, lsl #8
 3175 04b4 01EBC010 		add	r0, r1, r0, lsl #7
 3176 04b8 C0F3C750 		ubfx	r0, r0, #23, #8
 3177 04bc 60F30707 		bfi	r7, r0, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3178              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU992
 3179 04c0 47F07F47 		orr	r7, r7, #-16777216
 3180              	.LVL352:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3181              		.loc 3 476 5 discriminator 4 view .LVU993
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3182              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU994
 3183              	.LBE214:
 3184              	.LBE213:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3185              		.loc 1 445 29 discriminator 4 view .LVU995
 3186 04c4 44F82A70 		str	r7, [r4, r10, lsl #2]
 3187 04c8 00E7     		b	.L142
 3188              	.LVL353:
 3189              	.L180:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3190              		.loc 1 442 29 is_stmt 1 discriminator 3 view .LVU996
 3191 04ca 44F82350 		str	r5, [r4, r3, lsl #2]
 3192 04ce 44E7     		b	.L144
 3193              	.LVL354:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 103


 3194              	.L181:
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3195              		.loc 1 443 29 discriminator 3 view .LVU997
 3196 04d0 591C     		adds	r1, r3, #1
 3197 04d2 44F82150 		str	r5, [r4, r1, lsl #2]
 3198 04d6 7DE7     		b	.L146
 3199              	.LVL355:
 3200              	.L182:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3201              		.loc 1 444 29 discriminator 3 view .LVU998
 3202 04d8 991C     		adds	r1, r3, #2
 3203 04da 44F82150 		str	r5, [r4, r1, lsl #2]
 3204 04de B5E7     		b	.L148
 3205              	.LVL356:
 3206              	.L183:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3207              		.loc 1 445 29 discriminator 3 view .LVU999
 3208 04e0 D91C     		adds	r1, r3, #3
 3209 04e2 44F82150 		str	r5, [r4, r1, lsl #2]
 3210 04e6 F1E6     		b	.L142
 3211              	.LVL357:
 3212              	.L172:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3213              		.loc 1 445 29 is_stmt 0 discriminator 3 view .LVU1000
 3214 04e8 0896     		str	r6, [sp, #32]
 3215 04ea CDF82480 		str	r8, [sp, #36]
 3216 04ee DDF818C0 		ldr	ip, [sp, #24]
 3217              	.LVL358:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3218              		.loc 1 445 29 discriminator 3 view .LVU1001
 3219 04f2 DDF81CE0 		ldr	lr, [sp, #28]
 3220              	.LVL359:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3221              		.loc 1 445 29 discriminator 3 view .LVU1002
 3222 04f6 0A97     		str	r7, [sp, #40]
 3223 04f8 059F     		ldr	r7, [sp, #20]
 3224              	.LVL360:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3225              		.loc 1 445 29 discriminator 3 view .LVU1003
 3226 04fa E9E6     		b	.L151
 3227              	.LVL361:
 3228              	.L178:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3229              		.loc 1 445 29 discriminator 3 view .LVU1004
 3230 04fc 089E     		ldr	r6, [sp, #32]
 3231 04fe DDF82480 		ldr	r8, [sp, #36]
 3232              	.LVL362:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3233              		.loc 1 445 29 discriminator 3 view .LVU1005
 3234 0502 0597     		str	r7, [sp, #20]
 3235 0504 CDF818C0 		str	ip, [sp, #24]
 3236 0508 CDF81CE0 		str	lr, [sp, #28]
 3237 050c 0A9F     		ldr	r7, [sp, #40]
 3238              	.LVL363:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3239              		.loc 1 445 29 discriminator 3 view .LVU1006
 3240 050e 03E0     		b	.L153
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 104


 3241              	.LVL364:
 3242              	.L185:
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3243              		.loc 1 457 21 is_stmt 1 discriminator 3 view .LVU1007
 3244 0510 44F82350 		str	r5, [r4, r3, lsl #2]
 3245              	.L154:
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3246              		.loc 1 457 21 discriminator 6 view .LVU1008
 3247 0514 0132     		adds	r2, r2, #1
 3248              	.LVL365:
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3249              		.loc 1 453 41 discriminator 6 view .LVU1009
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3250              		.loc 1 453 42 is_stmt 0 discriminator 6 view .LVU1010
 3251 0516 0133     		adds	r3, r3, #1
 3252              	.LVL366:
 3253              	.L153:
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3254              		.loc 1 453 23 is_stmt 1 discriminator 1 view .LVU1011
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3255              		.loc 1 453 17 is_stmt 0 discriminator 1 view .LVU1012
 3256 0518 B342     		cmp	r3, r6
 3257 051a 3DDA     		bge	.L184
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3258              		.loc 1 457 21 is_stmt 1 view .LVU1013
 3259 051c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3260 051e 0029     		cmp	r1, #0
 3261 0520 F8D0     		beq	.L154
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3262              		.loc 1 457 21 discriminator 1 view .LVU1014
 3263 0522 FF29     		cmp	r1, #255
 3264 0524 F4D0     		beq	.L185
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3265              		.loc 1 457 21 discriminator 4 view .LVU1015
 3266 0526 54F823E0 		ldr	lr, [r4, r3, lsl #2]
 3267              	.LVL367:
 3268              	.LBB215:
 3269              	.LBI215:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3270              		.loc 3 459 48 discriminator 4 view .LVU1016
 3271              	.LBB216:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3272              		.loc 3 461 5 discriminator 4 view .LVU1017
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3273              		.loc 3 464 5 discriminator 4 view .LVU1018
 3274 052a C5F3074C 		ubfx	ip, r5, #16, #8
 3275              	.LVL368:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3276              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1019
 3277 052e CEF3074A 		ubfx	r10, lr, #16, #8
 3278 0532 C1F1FF00 		rsb	r0, r1, #255
 3279 0536 00FB0AFA 		mul	r10, r0, r10
 3280 053a 01FB0CAC 		mla	ip, r1, ip, r10
 3281 053e 0CEB0C2A 		add	r10, ip, ip, lsl #8
 3282 0542 0CEBCA1C 		add	ip, ip, r10, lsl #7
 3283 0546 CCF3C75C 		ubfx	ip, ip, #23, #8
 3284 054a 6CF31748 		bfi	r8, ip, #16, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 105


 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3285              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU1020
 3286 054e C5F3072C 		ubfx	ip, r5, #8, #8
 3287 0552 CEF3072A 		ubfx	r10, lr, #8, #8
 3288 0556 0AFB00FA 		mul	r10, r10, r0
 3289 055a 0CFB01AC 		mla	ip, ip, r1, r10
 3290 055e 0CEB0C2A 		add	r10, ip, ip, lsl #8
 3291 0562 0CEBCA1C 		add	ip, ip, r10, lsl #7
 3292 0566 CCF3C75C 		ubfx	ip, ip, #23, #8
 3293 056a 6CF30F28 		bfi	r8, ip, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3294              		.loc 3 468 5 discriminator 4 view .LVU1021
 3295 056e 5FFA85FC 		uxtb	ip, r5
 3296 0572 5FFA8EFE 		uxtb	lr, lr
 3297              	.LVL369:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3298              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU1022
 3299 0576 0EFB00F0 		mul	r0, lr, r0
 3300 057a 0CFB0101 		mla	r1, ip, r1, r0
 3301              	.LVL370:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3302              		.loc 3 468 5 discriminator 4 view .LVU1023
 3303 057e 01EB0120 		add	r0, r1, r1, lsl #8
 3304 0582 01EBC011 		add	r1, r1, r0, lsl #7
 3305 0586 C1F3C751 		ubfx	r1, r1, #23, #8
 3306 058a 61F30708 		bfi	r8, r1, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3307              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU1024
 3308 058e 48F07F48 		orr	r8, r8, #-16777216
 3309              	.LVL371:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3310              		.loc 3 476 5 discriminator 4 view .LVU1025
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3311              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU1026
 3312              	.LBE216:
 3313              	.LBE215:
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3314              		.loc 1 457 21 discriminator 4 view .LVU1027
 3315 0592 44F82380 		str	r8, [r4, r3, lsl #2]
 3316 0596 BDE7     		b	.L154
 3317              	.LVL372:
 3318              	.L184:
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3319              		.loc 1 461 17 is_stmt 1 discriminator 2 view .LVU1028
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3320              		.loc 1 461 32 is_stmt 0 discriminator 2 view .LVU1029
 3321 0598 049B     		ldr	r3, [sp, #16]
 3322              	.LVL373:
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3323              		.loc 1 461 32 discriminator 2 view .LVU1030
 3324 059a 04EB8304 		add	r4, r4, r3, lsl #2
 3325              	.LVL374:
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3326              		.loc 1 462 17 is_stmt 1 discriminator 2 view .LVU1031
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3327              		.loc 1 462 22 is_stmt 0 discriminator 2 view .LVU1032
 3328 059e 199B     		ldr	r3, [sp, #100]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 106


 3329 05a0 3344     		add	r3, r3, r6
 3330 05a2 1993     		str	r3, [sp, #100]
 3331              	.LVL375:
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3332              		.loc 1 462 22 discriminator 2 view .LVU1033
 3333              	.LBE204:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3334              		.loc 1 406 41 is_stmt 1 discriminator 2 view .LVU1034
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3335              		.loc 1 406 42 is_stmt 0 discriminator 2 view .LVU1035
 3336 05a4 039B     		ldr	r3, [sp, #12]
 3337              	.LVL376:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3338              		.loc 1 406 42 discriminator 2 view .LVU1036
 3339 05a6 0133     		adds	r3, r3, #1
 3340 05a8 0393     		str	r3, [sp, #12]
 3341              	.LVL377:
 3342              	.L136:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3343              		.loc 1 406 24 is_stmt 1 discriminator 1 view .LVU1037
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3344              		.loc 1 406 13 is_stmt 0 discriminator 1 view .LVU1038
 3345 05aa 039B     		ldr	r3, [sp, #12]
 3346 05ac 0B9A     		ldr	r2, [sp, #44]
 3347 05ae 9342     		cmp	r3, r2
 3348 05b0 BFF68EAD 		bge	.L124
 3349              	.LBB217:
 407:lvgl/src/draw/lv_draw_blend.c **** #if 0
 3350              		.loc 1 407 34 view .LVU1039
 3351 05b4 199A     		ldr	r2, [sp, #100]
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3352              		.loc 1 417 23 view .LVU1040
 3353 05b6 0023     		movs	r3, #0
 3354 05b8 65E6     		b	.L157
 3355              	.LVL378:
 3356              	.L168:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3357              		.loc 1 417 23 view .LVU1041
 3358              	.LBE217:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3359              		.loc 1 406 19 view .LVU1042
 3360 05ba 0023     		movs	r3, #0
 3361 05bc 0393     		str	r3, [sp, #12]
 3362 05be 099D     		ldr	r5, [sp, #36]
 3363              	.LVL379:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3364              		.loc 1 406 19 view .LVU1043
 3365 05c0 F3E7     		b	.L136
 3366              	.LVL380:
 3367              	.L170:
 3368              	.LBB218:
 3369              	.LBB200:
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3370              		.loc 1 472 62 view .LVU1044
 3371 05c2 DDF80C80 		ldr	r8, [sp, #12]
 3372              	.LVL381:
 3373              	.L160:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 107


 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3374              		.loc 1 474 25 is_stmt 1 view .LVU1045
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3375              		.loc 1 474 27 is_stmt 0 view .LVU1046
 3376 05c6 4845     		cmp	r0, r9
 3377 05c8 4ED0     		beq	.L186
 3378              	.L161:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3379              		.loc 1 483 33 is_stmt 1 view .LVU1047
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3380              		.loc 1 483 35 is_stmt 0 view .LVU1048
 3381 05ca B8F1FF0F 		cmp	r8, #255
 3382 05ce 50D0     		beq	.L187
 484:lvgl/src/draw/lv_draw_blend.c ****                             }
 3383              		.loc 1 484 38 is_stmt 1 view .LVU1049
 3384 05d0 54F82320 		ldr	r2, [r4, r3, lsl #2]
 3385              	.LVL382:
 3386              	.LBB201:
 3387              	.LBI201:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3388              		.loc 3 459 48 view .LVU1050
 3389              	.LBB202:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3390              		.loc 3 461 5 view .LVU1051
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3391              		.loc 3 464 5 view .LVU1052
 3392 05d4 C5F30749 		ubfx	r9, r5, #16, #8
 3393              	.LVL383:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3394              		.loc 3 464 5 is_stmt 0 view .LVU1053
 3395 05d8 C2F3074A 		ubfx	r10, r2, #16, #8
 3396 05dc C8F1FF01 		rsb	r1, r8, #255
 3397              	.LVL384:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3398              		.loc 3 464 5 view .LVU1054
 3399 05e0 01FB0AFA 		mul	r10, r1, r10
 3400 05e4 08FB09A9 		mla	r9, r8, r9, r10
 3401 05e8 09EB092A 		add	r10, r9, r9, lsl #8
 3402 05ec 09EBCA19 		add	r9, r9, r10, lsl #7
 3403 05f0 C9F3C759 		ubfx	r9, r9, #23, #8
 3404 05f4 69F3174B 		bfi	fp, r9, #16, #8
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3405              		.loc 3 466 5 is_stmt 1 view .LVU1055
 3406 05f8 C5F30729 		ubfx	r9, r5, #8, #8
 3407 05fc C2F3072A 		ubfx	r10, r2, #8, #8
 3408 0600 0AFB01FA 		mul	r10, r10, r1
 3409 0604 09FB08A9 		mla	r9, r9, r8, r10
 3410 0608 09EB092A 		add	r10, r9, r9, lsl #8
 3411 060c 09EBCA19 		add	r9, r9, r10, lsl #7
 3412 0610 C9F3C759 		ubfx	r9, r9, #23, #8
 3413 0614 69F30F2B 		bfi	fp, r9, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3414              		.loc 3 468 5 view .LVU1056
 3415 0618 5FFA85F9 		uxtb	r9, r5
 3416 061c D2B2     		uxtb	r2, r2
 3417              	.LVL385:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 108


 3418              		.loc 3 468 5 is_stmt 0 view .LVU1057
 3419 061e 02FB01F1 		mul	r1, r2, r1
 3420 0622 09FB0812 		mla	r2, r9, r8, r1
 3421 0626 02EB0221 		add	r1, r2, r2, lsl #8
 3422 062a 02EBC112 		add	r2, r2, r1, lsl #7
 3423 062e C2F3C752 		ubfx	r2, r2, #23, #8
 3424 0632 62F3070B 		bfi	fp, r2, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3425              		.loc 3 470 5 is_stmt 1 view .LVU1058
 3426 0636 4BF07F4B 		orr	fp, fp, #-16777216
 3427              	.LVL386:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3428              		.loc 3 476 5 view .LVU1059
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3429              		.loc 3 476 5 is_stmt 0 view .LVU1060
 3430 063a 5A46     		mov	r2, fp
 3431              	.LVL387:
 3432              	.L164:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3433              		.loc 3 476 5 view .LVU1061
 3434              	.LBE202:
 3435              	.LBE201:
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 3436              		.loc 1 486 29 is_stmt 1 view .LVU1062
 487:lvgl/src/draw/lv_draw_blend.c ****                         }
 3437              		.loc 1 487 29 view .LVU1063
 487:lvgl/src/draw/lv_draw_blend.c ****                         }
 3438              		.loc 1 487 69 is_stmt 0 view .LVU1064
 3439 063c 54F823A0 		ldr	r10, [r4, r3, lsl #2]
 3440              	.LVL388:
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 3441              		.loc 1 486 39 view .LVU1065
 3442 0640 8146     		mov	r9, r0
 3443              	.LVL389:
 3444              	.L162:
 489:lvgl/src/draw/lv_draw_blend.c ****                     }
 3445              		.loc 1 489 25 is_stmt 1 view .LVU1066
 489:lvgl/src/draw/lv_draw_blend.c ****                     }
 3446              		.loc 1 489 43 is_stmt 0 view .LVU1067
 3447 0642 44F82320 		str	r2, [r4, r3, lsl #2]
 3448              	.L159:
 491:lvgl/src/draw/lv_draw_blend.c ****                 }
 3449              		.loc 1 491 21 is_stmt 1 discriminator 2 view .LVU1068
 491:lvgl/src/draw/lv_draw_blend.c ****                 }
 3450              		.loc 1 491 31 is_stmt 0 discriminator 2 view .LVU1069
 3451 0646 0137     		adds	r7, r7, #1
 3452              	.LVL390:
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3453              		.loc 1 470 45 is_stmt 1 discriminator 2 view .LVU1070
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3454              		.loc 1 470 46 is_stmt 0 discriminator 2 view .LVU1071
 3455 0648 0133     		adds	r3, r3, #1
 3456              	.LVL391:
 3457              	.L166:
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3458              		.loc 1 470 28 is_stmt 1 discriminator 1 view .LVU1072
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 109


 3459              		.loc 1 470 17 is_stmt 0 discriminator 1 view .LVU1073
 3460 064a B342     		cmp	r3, r6
 3461 064c 13DA     		bge	.L188
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3462              		.loc 1 471 21 is_stmt 1 view .LVU1074
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3463              		.loc 1 471 24 is_stmt 0 view .LVU1075
 3464 064e 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3465              		.loc 1 471 23 view .LVU1076
 3466 0650 0028     		cmp	r0, #0
 3467 0652 F8D0     		beq	.L159
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3468              		.loc 1 472 25 is_stmt 1 view .LVU1077
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3469              		.loc 1 472 27 is_stmt 0 view .LVU1078
 3470 0654 4845     		cmp	r0, r9
 3471 0656 B6D0     		beq	.L160
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3472              		.loc 1 472 54 is_stmt 1 discriminator 1 view .LVU1079
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3473              		.loc 1 472 62 is_stmt 0 discriminator 1 view .LVU1080
 3474 0658 FF28     		cmp	r0, #255
 3475 065a B2D0     		beq	.L170
 473:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 3476              		.loc 1 473 68 discriminator 2 view .LVU1081
 3477 065c 0399     		ldr	r1, [sp, #12]
 473:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 3478              		.loc 1 473 68 discriminator 2 view .LVU1082
 3479 065e 00FB01F8 		mul	r8, r0, r1
 3480              	.LVL392:
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3481              		.loc 1 472 62 discriminator 2 view .LVU1083
 3482 0662 4FEA1828 		lsr	r8, r8, #8
 3483 0666 AEE7     		b	.L160
 3484              	.LVL393:
 3485              	.L186:
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3486              		.loc 1 474 53 discriminator 1 view .LVU1084
 3487 0668 54F82310 		ldr	r1, [r4, r3, lsl #2]
 3488 066c 8A45     		cmp	r10, r1
 3489 066e ACD1     		bne	.L161
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3490              		.loc 1 474 53 discriminator 1 view .LVU1085
 3491 0670 E7E7     		b	.L162
 3492              	.L187:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3493              		.loc 1 483 61 is_stmt 1 discriminator 1 view .LVU1086
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3494              		.loc 1 483 76 is_stmt 0 discriminator 1 view .LVU1087
 3495 0672 2A46     		mov	r2, r5
 3496              	.LVL394:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3497              		.loc 1 483 76 discriminator 1 view .LVU1088
 3498 0674 E2E7     		b	.L164
 3499              	.LVL395:
 3500              	.L188:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 110


 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3501              		.loc 1 493 32 discriminator 2 view .LVU1089
 3502 0676 5146     		mov	r1, r10
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3503              		.loc 1 493 17 is_stmt 1 discriminator 2 view .LVU1090
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3504              		.loc 1 493 32 is_stmt 0 discriminator 2 view .LVU1091
 3505 0678 049B     		ldr	r3, [sp, #16]
 3506              	.LVL396:
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3507              		.loc 1 493 32 discriminator 2 view .LVU1092
 3508 067a 04EB8304 		add	r4, r4, r3, lsl #2
 3509              	.LVL397:
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3510              		.loc 1 494 17 is_stmt 1 discriminator 2 view .LVU1093
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3511              		.loc 1 494 22 is_stmt 0 discriminator 2 view .LVU1094
 3512 067e B644     		add	lr, lr, r6
 3513              	.LVL398:
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3514              		.loc 1 494 22 discriminator 2 view .LVU1095
 3515              	.LBE200:
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3516              		.loc 1 468 56 is_stmt 1 discriminator 2 view .LVU1096
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3517              		.loc 1 468 57 is_stmt 0 discriminator 2 view .LVU1097
 3518 0680 0CF1010C 		add	ip, ip, #1
 3519              	.LVL399:
 3520              	.L137:
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3521              		.loc 1 468 36 is_stmt 1 discriminator 1 view .LVU1098
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3522              		.loc 1 468 50 is_stmt 0 discriminator 1 view .LVU1099
 3523 0684 089B     		ldr	r3, [sp, #32]
 3524 0686 B3F90630 		ldrsh	r3, [r3, #6]
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3525              		.loc 1 468 13 discriminator 1 view .LVU1100
 3526 068a 6345     		cmp	r3, ip
 3527 068c FFF620AD 		blt	.L124
 3528              	.LBB203:
 469:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3529              		.loc 1 469 34 view .LVU1101
 3530 0690 7746     		mov	r7, lr
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3531              		.loc 1 470 23 view .LVU1102
 3532 0692 0023     		movs	r3, #0
 3533 0694 8A46     		mov	r10, r1
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3534              		.loc 1 470 23 view .LVU1103
 3535 0696 D8E7     		b	.L166
 3536              	.LBE203:
 3537              	.LBE218:
 3538              	.LBE231:
 3539              		.cfi_endproc
 3540              	.LFE150:
 3542              		.section	.text.fill_blended,"ax",%progbits
 3543              		.align	1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 111


 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu fpv4-sp-d16
 3549              	fill_blended:
 3550              	.LVL400:
 3551              	.LFB151:
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3552              		.loc 1 518 1 is_stmt 1 view -0
 3553              		.cfi_startproc
 3554              		@ args = 16, pretend = 0, frame = 16
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3556              		.loc 1 518 1 is_stmt 0 view .LVU1105
 3557 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3558              	.LCFI21:
 3559              		.cfi_def_cfa_offset 36
 3560              		.cfi_offset 4, -36
 3561              		.cfi_offset 5, -32
 3562              		.cfi_offset 6, -28
 3563              		.cfi_offset 7, -24
 3564              		.cfi_offset 8, -20
 3565              		.cfi_offset 9, -16
 3566              		.cfi_offset 10, -12
 3567              		.cfi_offset 11, -8
 3568              		.cfi_offset 14, -4
 3569 0004 85B0     		sub	sp, sp, #20
 3570              	.LCFI22:
 3571              		.cfi_def_cfa_offset 56
 3572 0006 9046     		mov	r8, r2
 3573 0008 9A46     		mov	r10, r3
 3574              	.LVL401:
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3575              		.loc 1 518 1 view .LVU1106
 3576 000a 9DF83830 		ldrb	r3, [sp, #56]	@ zero_extendqisi2
 3577 000e 0093     		str	r3, [sp]
 3578 0010 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2
 520:lvgl/src/draw/lv_draw_blend.c **** 
 3579              		.loc 1 520 5 is_stmt 1 view .LVU1107
 3580              	.LVL402:
 3581              	.LBB244:
 3582              	.LBI244:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 3583              		.loc 2 133 26 view .LVU1108
 3584              	.LBB245:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3585              		.loc 2 135 5 view .LVU1109
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3586              		.loc 2 135 31 is_stmt 0 view .LVU1110
 3587 0014 8388     		ldrh	r3, [r0, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3588              		.loc 2 135 44 view .LVU1111
 3589 0016 0288     		ldrh	r2, [r0]
 3590              	.LVL403:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3591              		.loc 2 135 36 view .LVU1112
 3592 0018 9B1A     		subs	r3, r3, r2
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 112


 3593 001a 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3594              		.loc 2 135 49 view .LVU1113
 3595 001c 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3596              		.loc 2 135 12 view .LVU1114
 3597 001e 1BB2     		sxth	r3, r3
 3598 0020 0293     		str	r3, [sp, #8]
 3599              	.LVL404:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3600              		.loc 2 135 12 view .LVU1115
 3601              	.LBE245:
 3602              	.LBE244:
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3603              		.loc 1 523 5 is_stmt 1 view .LVU1116
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3604              		.loc 1 523 62 is_stmt 0 view .LVU1117
 3605 0022 B8F90220 		ldrsh	r2, [r8, #2]
 3606 0026 0192     		str	r2, [sp, #4]
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3607              		.loc 1 523 51 view .LVU1118
 3608 0028 03FB02F2 		mul	r2, r3, r2
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3609              		.loc 1 523 18 view .LVU1119
 3610 002c 01EB8205 		add	r5, r1, r2, lsl #2
 3611              	.LVL405:
 525:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 3612              		.loc 1 525 5 is_stmt 1 view .LVU1120
 526:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 3613              		.loc 1 526 5 view .LVU1121
 3614 0030 012C     		cmp	r4, #1
 3615 0032 19D0     		beq	.L206
 3616 0034 022C     		cmp	r4, #2
 3617 0036 40F0AF80 		bne	.L189
 531:lvgl/src/draw/lv_draw_blend.c ****             break;
 3618              		.loc 1 531 22 is_stmt 0 view .LVU1122
 3619 003a DFF864B1 		ldr	fp, .L214
 3620              	.L190:
 3621              	.LVL406:
 538:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 3622              		.loc 1 538 5 is_stmt 1 view .LVU1123
 539:lvgl/src/draw/lv_draw_blend.c **** 
 3623              		.loc 1 539 5 view .LVU1124
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3624              		.loc 1 542 5 view .LVU1125
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3625              		.loc 1 542 7 is_stmt 0 view .LVU1126
 3626 003e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 3627              	.LVL407:
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3628              		.loc 1 542 7 view .LVU1127
 3629 0042 012B     		cmp	r3, #1
 3630 0044 13D0     		beq	.L209
 3631              	.LBB246:
 559:lvgl/src/draw/lv_draw_blend.c **** 
 3632              		.loc 1 559 9 is_stmt 1 view .LVU1128
 3633              	.LVL408:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 113


 3634              	.LBB247:
 3635              	.LBI247:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 3636              		.loc 2 133 26 view .LVU1129
 3637              	.LBB248:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3638              		.loc 2 135 5 view .LVU1130
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3639              		.loc 2 135 31 is_stmt 0 view .LVU1131
 3640 0046 B8F80430 		ldrh	r3, [r8, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3641              		.loc 2 135 44 view .LVU1132
 3642 004a B8F90000 		ldrsh	r0, [r8]
 3643              	.LVL409:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3644              		.loc 2 135 44 view .LVU1133
 3645 004e 84B2     		uxth	r4, r0
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3646              		.loc 2 135 36 view .LVU1134
 3647 0050 1B1B     		subs	r3, r3, r4
 3648 0052 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3649              		.loc 2 135 49 view .LVU1135
 3650 0054 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3651              		.loc 2 135 12 view .LVU1136
 3652 0056 1BB2     		sxth	r3, r3
 3653 0058 0393     		str	r3, [sp, #12]
 3654              	.LVL410:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3655              		.loc 2 135 12 view .LVU1137
 3656              	.LBE248:
 3657              	.LBE247:
 564:lvgl/src/draw/lv_draw_blend.c **** 
 3658              		.loc 1 564 9 is_stmt 1 view .LVU1138
 564:lvgl/src/draw/lv_draw_blend.c **** 
 3659              		.loc 1 564 26 is_stmt 0 view .LVU1139
 3660 005a 0F9F     		ldr	r7, [sp, #60]
 3661 005c 3F1A     		subs	r7, r7, r0
 3662              	.LVL411:
 567:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 3663              		.loc 1 567 9 is_stmt 1 view .LVU1140
 568:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 3664              		.loc 1 568 9 view .LVU1141
 569:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3665              		.loc 1 569 9 view .LVU1142
 570:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3666              		.loc 1 570 9 view .LVU1143
 570:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3667              		.loc 1 570 47 is_stmt 0 view .LVU1144
 3668 005e 51F822C0 		ldr	ip, [r1, r2, lsl #2]
 3669              	.LVL412:
 571:lvgl/src/draw/lv_draw_blend.c **** 
 3670              		.loc 1 571 9 is_stmt 1 view .LVU1145
 571:lvgl/src/draw/lv_draw_blend.c **** 
 3671              		.loc 1 571 29 is_stmt 0 view .LVU1146
 3672 0062 6046     		mov	r0, ip
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 114


 3673              	.LVL413:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3674              		.loc 1 573 9 is_stmt 1 view .LVU1147
 569:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3675              		.loc 1 569 18 is_stmt 0 view .LVU1148
 3676 0064 0021     		movs	r1, #0
 3677              	.LVL414:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3678              		.loc 1 573 9 view .LVU1149
 3679 0066 8FE0     		b	.L198
 3680              	.LVL415:
 3681              	.L206:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3682              		.loc 1 573 9 view .LVU1150
 3683              	.LBE246:
 526:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 3684              		.loc 1 526 5 view .LVU1151
 3685 0068 DFF838B1 		ldr	fp, .L214+4
 3686 006c E7E7     		b	.L190
 3687              	.LVL416:
 3688              	.L209:
 3689              	.LBB251:
 543:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 3690              		.loc 1 543 9 is_stmt 1 view .LVU1152
 3691              	.LBB252:
 3692              	.LBI252:
 3693              		.loc 3 675 26 view .LVU1153
 3694              	.LBE252:
 3695              	.LBE251:
 3696              		.loc 3 675 49 view .LVU1154
 3697              	.LBB258:
 3698              	.LBB255:
 3699              	.LBB253:
 3700              	.LBI253:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 3701              		.loc 3 602 26 view .LVU1155
 3702              	.LBB254:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3703              		.loc 3 604 5 view .LVU1156
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3704              		.loc 3 604 12 is_stmt 0 view .LVU1157
 3705 006e 0021     		movs	r1, #0
 3706              	.LVL417:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3707              		.loc 3 604 12 view .LVU1158
 3708 0070 6FF30701 		bfc	r1, #0, #8
 3709 0074 6FF30F21 		bfc	r1, #8, #8
 3710 0078 6FF31741 		bfc	r1, #16, #8
 3711 007c 41F07F41 		orr	r1, r1, #-16777216
 3712              	.LVL418:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3713              		.loc 3 604 12 view .LVU1159
 3714 0080 0E46     		mov	r6, r1
 3715              	.LVL419:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3716              		.loc 3 604 12 view .LVU1160
 3717              	.LBE254:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 115


 3718              	.LBE253:
 3719              	.LBE255:
 544:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 3720              		.loc 1 544 9 is_stmt 1 view .LVU1161
 3721              	.LBB256:
 3722              	.LBI256:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3723              		.loc 3 459 48 view .LVU1162
 3724              	.LBB257:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3725              		.loc 3 461 5 view .LVU1163
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3726              		.loc 3 464 5 view .LVU1164
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3727              		.loc 3 464 5 is_stmt 0 view .LVU1165
 3728 0082 CAF30743 		ubfx	r3, r10, #16, #8
 3729 0086 C1F30740 		ubfx	r0, r1, #16, #8
 3730              	.LVL420:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3731              		.loc 3 464 5 view .LVU1166
 3732 008a 009F     		ldr	r7, [sp]
 3733 008c C7F1FF02 		rsb	r2, r7, #255
 3734 0090 02FB00F0 		mul	r0, r2, r0
 3735 0094 07FB0303 		mla	r3, r7, r3, r0
 3736 0098 03EB0320 		add	r0, r3, r3, lsl #8
 3737 009c 03EBC013 		add	r3, r3, r0, lsl #7
 3738 00a0 C3F3C753 		ubfx	r3, r3, #23, #8
 3739 00a4 0020     		movs	r0, #0
 3740              	.LVL421:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3741              		.loc 3 464 5 view .LVU1167
 3742 00a6 63F31740 		bfi	r0, r3, #16, #8
 3743              	.LVL422:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3744              		.loc 3 466 5 is_stmt 1 view .LVU1168
 3745 00aa CAF30723 		ubfx	r3, r10, #8, #8
 3746 00ae C1F30724 		ubfx	r4, r1, #8, #8
 3747 00b2 02FB04F4 		mul	r4, r2, r4
 3748 00b6 03FB0743 		mla	r3, r3, r7, r4
 3749 00ba 03EB0324 		add	r4, r3, r3, lsl #8
 3750 00be 03EBC413 		add	r3, r3, r4, lsl #7
 3751 00c2 C3F3C753 		ubfx	r3, r3, #23, #8
 3752 00c6 63F30F20 		bfi	r0, r3, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3753              		.loc 3 468 5 view .LVU1169
 3754 00ca 5FFA8AF3 		uxtb	r3, r10
 3755 00ce C9B2     		uxtb	r1, r1
 3756 00d0 01FB02F2 		mul	r2, r1, r2
 3757 00d4 03FB0723 		mla	r3, r3, r7, r2
 3758 00d8 03EB0322 		add	r2, r3, r3, lsl #8
 3759 00dc 03EBC213 		add	r3, r3, r2, lsl #7
 3760 00e0 C3F3C753 		ubfx	r3, r3, #23, #8
 3761 00e4 63F30700 		bfi	r0, r3, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3762              		.loc 3 470 5 view .LVU1170
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3763              		.loc 3 476 5 view .LVU1171
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 116


 3764 00e8 40F07F40 		orr	r0, r0, #-16777216
 3765              	.LVL423:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3766              		.loc 3 476 5 is_stmt 0 view .LVU1172
 3767              	.LBE257:
 3768              	.LBE256:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3769              		.loc 1 545 9 is_stmt 1 view .LVU1173
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3770              		.loc 1 545 9 is_stmt 0 view .LVU1174
 3771 00ec B946     		mov	r9, r7
 3772 00ee 17E0     		b	.L193
 3773              	.LVL424:
 3774              	.L211:
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3775              		.loc 1 548 21 is_stmt 1 view .LVU1175
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3776              		.loc 1 548 37 is_stmt 0 view .LVU1176
 3777 00f0 1E46     		mov	r6, r3
 3778              	.LVL425:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3779              		.loc 1 549 21 is_stmt 1 view .LVU1177
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3780              		.loc 1 549 38 is_stmt 0 view .LVU1178
 3781 00f2 4A46     		mov	r2, r9
 3782              	.LVL426:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3783              		.loc 1 549 38 view .LVU1179
 3784 00f4 1946     		mov	r1, r3
 3785 00f6 5046     		mov	r0, r10
 3786              	.LVL427:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3787              		.loc 1 549 38 view .LVU1180
 3788 00f8 D847     		blx	fp
 3789              	.LVL428:
 3790              	.L195:
 551:lvgl/src/draw/lv_draw_blend.c ****             }
 3791              		.loc 1 551 17 is_stmt 1 discriminator 2 view .LVU1181
 551:lvgl/src/draw/lv_draw_blend.c ****             }
 3792              		.loc 1 551 33 is_stmt 0 discriminator 2 view .LVU1182
 3793 00fa 3860     		str	r0, [r7]
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3794              		.loc 1 546 56 is_stmt 1 discriminator 2 view .LVU1183
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3795              		.loc 1 546 57 is_stmt 0 discriminator 2 view .LVU1184
 3796 00fc 0134     		adds	r4, r4, #1
 3797              	.LVL429:
 3798              	.L194:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3799              		.loc 1 546 36 is_stmt 1 discriminator 1 view .LVU1185
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3800              		.loc 1 546 50 is_stmt 0 discriminator 1 view .LVU1186
 3801 00fe B8F90430 		ldrsh	r3, [r8, #4]
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3802              		.loc 1 546 13 discriminator 1 view .LVU1187
 3803 0102 A342     		cmp	r3, r4
 3804 0104 06DB     		blt	.L210
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 117


 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3805              		.loc 1 547 17 is_stmt 1 view .LVU1188
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3806              		.loc 1 547 56 is_stmt 0 view .LVU1189
 3807 0106 05EB8407 		add	r7, r5, r4, lsl #2
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3808              		.loc 1 547 59 view .LVU1190
 3809 010a 55F82430 		ldr	r3, [r5, r4, lsl #2]
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3810              		.loc 1 547 19 view .LVU1191
 3811 010e 9E42     		cmp	r6, r3
 3812 0110 EED1     		bne	.L211
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3813              		.loc 1 547 19 view .LVU1192
 3814 0112 F2E7     		b	.L195
 3815              	.L210:
 553:lvgl/src/draw/lv_draw_blend.c ****         }
 3816              		.loc 1 553 13 is_stmt 1 discriminator 2 view .LVU1193
 553:lvgl/src/draw/lv_draw_blend.c ****         }
 3817              		.loc 1 553 26 is_stmt 0 discriminator 2 view .LVU1194
 3818 0114 029B     		ldr	r3, [sp, #8]
 3819 0116 05EB8305 		add	r5, r5, r3, lsl #2
 3820              	.LVL430:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3821              		.loc 1 545 52 is_stmt 1 discriminator 2 view .LVU1195
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3822              		.loc 1 545 53 is_stmt 0 discriminator 2 view .LVU1196
 3823 011a 019B     		ldr	r3, [sp, #4]
 3824 011c 0133     		adds	r3, r3, #1
 3825 011e 0193     		str	r3, [sp, #4]
 3826              	.LVL431:
 3827              	.L193:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3828              		.loc 1 545 32 is_stmt 1 discriminator 1 view .LVU1197
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3829              		.loc 1 545 46 is_stmt 0 discriminator 1 view .LVU1198
 3830 0120 B8F90630 		ldrsh	r3, [r8, #6]
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3831              		.loc 1 545 9 discriminator 1 view .LVU1199
 3832 0124 019A     		ldr	r2, [sp, #4]
 3833 0126 9342     		cmp	r3, r2
 3834 0128 36DB     		blt	.L189
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3835              		.loc 1 546 13 is_stmt 1 view .LVU1200
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3836              		.loc 1 546 30 is_stmt 0 view .LVU1201
 3837 012a B8F90040 		ldrsh	r4, [r8]
 3838              	.LVL432:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3839              		.loc 1 546 13 view .LVU1202
 3840 012e E6E7     		b	.L194
 3841              	.LVL433:
 3842              	.L213:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3843              		.loc 1 546 13 view .LVU1203
 3844              	.LBE258:
 3845              	.LBB259:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 118


 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3846              		.loc 1 576 87 discriminator 1 view .LVU1204
 3847 0130 55F82430 		ldr	r3, [r5, r4, lsl #2]
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3848              		.loc 1 576 45 discriminator 1 view .LVU1205
 3849 0134 9C45     		cmp	ip, r3
 3850 0136 18D1     		bne	.L201
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3851              		.loc 1 576 45 discriminator 1 view .LVU1206
 3852 0138 08E0     		b	.L202
 3853              	.L207:
 3854              	.LBB249:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3855              		.loc 1 577 30 view .LVU1207
 3856 013a 009A     		ldr	r2, [sp]
 3857              	.L203:
 3858              	.LVL434:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3859              		.loc 1 579 21 is_stmt 1 discriminator 4 view .LVU1208
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3860              		.loc 1 579 38 is_stmt 0 discriminator 4 view .LVU1209
 3861 013c 55F82610 		ldr	r1, [r5, r6, lsl #2]
 3862              	.LVL435:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3863              		.loc 1 579 38 discriminator 4 view .LVU1210
 3864 0140 5046     		mov	r0, r10
 3865              	.LVL436:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3866              		.loc 1 579 38 discriminator 4 view .LVU1211
 3867 0142 D847     		blx	fp
 3868              	.LVL437:
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3869              		.loc 1 580 21 is_stmt 1 discriminator 4 view .LVU1212
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3870              		.loc 1 580 31 is_stmt 0 discriminator 4 view .LVU1213
 3871 0144 99F80010 		ldrb	r1, [r9]	@ zero_extendqisi2
 3872              	.LVL438:
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3873              		.loc 1 581 21 is_stmt 1 discriminator 4 view .LVU1214
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3874              		.loc 1 581 59 is_stmt 0 discriminator 4 view .LVU1215
 3875 0148 55F826C0 		ldr	ip, [r5, r6, lsl #2]
 3876              	.LVL439:
 3877              	.L202:
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3878              		.loc 1 581 59 discriminator 4 view .LVU1216
 3879              	.LBE249:
 583:lvgl/src/draw/lv_draw_blend.c ****             }
 3880              		.loc 1 583 17 is_stmt 1 view .LVU1217
 583:lvgl/src/draw/lv_draw_blend.c ****             }
 3881              		.loc 1 583 33 is_stmt 0 view .LVU1218
 3882 014c 45F82600 		str	r0, [r5, r6, lsl #2]
 3883              	.L200:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3884              		.loc 1 574 56 is_stmt 1 discriminator 2 view .LVU1219
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3885              		.loc 1 574 57 is_stmt 0 discriminator 2 view .LVU1220
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 119


 3886 0150 0134     		adds	r4, r4, #1
 3887              	.LVL440:
 3888              	.L199:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3889              		.loc 1 574 36 is_stmt 1 discriminator 1 view .LVU1221
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3890              		.loc 1 574 50 is_stmt 0 discriminator 1 view .LVU1222
 3891 0152 B8F90430 		ldrsh	r3, [r8, #4]
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3892              		.loc 1 574 13 discriminator 1 view .LVU1223
 3893 0156 A342     		cmp	r3, r4
 3894 0158 0EDB     		blt	.L212
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3895              		.loc 1 575 17 is_stmt 1 view .LVU1224
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3896              		.loc 1 575 28 is_stmt 0 view .LVU1225
 3897 015a 2646     		mov	r6, r4
 3898 015c 07EB0409 		add	r9, r7, r4
 3899 0160 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3900              		.loc 1 575 19 view .LVU1226
 3901 0162 002A     		cmp	r2, #0
 3902 0164 F4D0     		beq	.L200
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3903              		.loc 1 576 17 is_stmt 1 view .LVU1227
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3904              		.loc 1 576 19 is_stmt 0 view .LVU1228
 3905 0166 8A42     		cmp	r2, r1
 3906 0168 E2D0     		beq	.L213
 3907              	.L201:
 3908              	.LBB250:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3909              		.loc 1 577 21 is_stmt 1 view .LVU1229
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3910              		.loc 1 577 30 is_stmt 0 view .LVU1230
 3911 016a FC2A     		cmp	r2, #252
 3912 016c E5D8     		bhi	.L207
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3913              		.loc 1 577 74 discriminator 1 view .LVU1231
 3914 016e 009B     		ldr	r3, [sp]
 3915 0170 03FB02F2 		mul	r2, r3, r2
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3916              		.loc 1 577 30 discriminator 1 view .LVU1232
 3917 0174 120A     		lsrs	r2, r2, #8
 3918 0176 E1E7     		b	.L203
 3919              	.L212:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3920              		.loc 1 577 30 discriminator 1 view .LVU1233
 3921              	.LBE250:
 585:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3922              		.loc 1 585 13 is_stmt 1 discriminator 2 view .LVU1234
 585:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3923              		.loc 1 585 26 is_stmt 0 discriminator 2 view .LVU1235
 3924 0178 029B     		ldr	r3, [sp, #8]
 3925 017a 05EB8305 		add	r5, r5, r3, lsl #2
 3926              	.LVL441:
 586:lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 120


 3927              		.loc 1 586 13 is_stmt 1 discriminator 2 view .LVU1236
 586:lvgl/src/draw/lv_draw_blend.c ****         }
 3928              		.loc 1 586 22 is_stmt 0 discriminator 2 view .LVU1237
 3929 017e 039B     		ldr	r3, [sp, #12]
 3930 0180 1F44     		add	r7, r7, r3
 3931              	.LVL442:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3932              		.loc 1 573 52 is_stmt 1 discriminator 2 view .LVU1238
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3933              		.loc 1 573 53 is_stmt 0 discriminator 2 view .LVU1239
 3934 0182 019B     		ldr	r3, [sp, #4]
 3935 0184 0133     		adds	r3, r3, #1
 3936 0186 0193     		str	r3, [sp, #4]
 3937              	.LVL443:
 3938              	.L198:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3939              		.loc 1 573 32 is_stmt 1 discriminator 1 view .LVU1240
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3940              		.loc 1 573 46 is_stmt 0 discriminator 1 view .LVU1241
 3941 0188 B8F90630 		ldrsh	r3, [r8, #6]
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3942              		.loc 1 573 9 discriminator 1 view .LVU1242
 3943 018c 019A     		ldr	r2, [sp, #4]
 3944 018e 9342     		cmp	r3, r2
 3945 0190 02DB     		blt	.L189
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3946              		.loc 1 574 13 is_stmt 1 view .LVU1243
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3947              		.loc 1 574 30 is_stmt 0 view .LVU1244
 3948 0192 B8F90040 		ldrsh	r4, [r8]
 3949              	.LVL444:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3950              		.loc 1 574 13 view .LVU1245
 3951 0196 DCE7     		b	.L199
 3952              	.LVL445:
 3953              	.L189:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3954              		.loc 1 574 13 view .LVU1246
 3955              	.LBE259:
 589:lvgl/src/draw/lv_draw_blend.c **** #endif
 3956              		.loc 1 589 1 view .LVU1247
 3957 0198 05B0     		add	sp, sp, #20
 3958              	.LCFI23:
 3959              		.cfi_def_cfa_offset 36
 3960              		@ sp needed
 3961 019a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3962              	.LVL446:
 3963              	.L215:
 589:lvgl/src/draw/lv_draw_blend.c **** #endif
 3964              		.loc 1 589 1 view .LVU1248
 3965 019e 00BF     		.align	2
 3966              	.L214:
 3967 01a0 00000000 		.word	color_blend_true_color_subtractive
 3968 01a4 00000000 		.word	color_blend_true_color_additive
 3969              		.cfi_endproc
 3970              	.LFE151:
 3972              		.section	.text._lv_blend_fill,"ax",%progbits
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 121


 3973              		.align	1
 3974              		.global	_lv_blend_fill
 3975              		.syntax unified
 3976              		.thumb
 3977              		.thumb_func
 3978              		.fpu fpv4-sp-d16
 3980              	_lv_blend_fill:
 3981              	.LVL447:
 3982              	.LFB147:
 129:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 3983              		.loc 1 129 1 is_stmt 1 view -0
 3984              		.cfi_startproc
 3985              		@ args = 12, pretend = 0, frame = 24
 3986              		@ frame_needed = 0, uses_anonymous_args = 0
 129:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 3987              		.loc 1 129 1 is_stmt 0 view .LVU1250
 3988 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3989              	.LCFI24:
 3990              		.cfi_def_cfa_offset 36
 3991              		.cfi_offset 4, -36
 3992              		.cfi_offset 5, -32
 3993              		.cfi_offset 6, -28
 3994              		.cfi_offset 7, -24
 3995              		.cfi_offset 8, -20
 3996              		.cfi_offset 9, -16
 3997              		.cfi_offset 10, -12
 3998              		.cfi_offset 11, -8
 3999              		.cfi_offset 14, -4
 4000 0004 8BB0     		sub	sp, sp, #44
 4001              	.LCFI25:
 4002              		.cfi_def_cfa_offset 80
 4003 0006 0590     		str	r0, [sp, #20]
 4004 0008 0691     		str	r1, [sp, #24]
 4005 000a 0792     		str	r2, [sp, #28]
 4006 000c 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 4007 0010 9DF85460 		ldrb	r6, [sp, #84]	@ zero_extendqisi2
 4008 0014 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 131:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4009              		.loc 1 131 5 is_stmt 1 view .LVU1251
 131:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4010              		.loc 1 131 7 is_stmt 0 view .LVU1252
 4011 0018 012E     		cmp	r6, #1
 4012 001a 01D9     		bls	.L216
 4013 001c 1C46     		mov	r4, r3
 132:lvgl/src/draw/lv_draw_blend.c **** 
 4014              		.loc 1 132 5 is_stmt 1 view .LVU1253
 132:lvgl/src/draw/lv_draw_blend.c **** 
 4015              		.loc 1 132 7 is_stmt 0 view .LVU1254
 4016 001e 17B9     		cbnz	r7, .L229
 4017              	.LVL448:
 4018              	.L216:
 173:lvgl/src/draw/lv_draw_blend.c **** 
 4019              		.loc 1 173 1 view .LVU1255
 4020 0020 0BB0     		add	sp, sp, #44
 4021              	.LCFI26:
 4022              		.cfi_remember_state
 4023              		.cfi_def_cfa_offset 36
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 122


 4024              		@ sp needed
 4025 0022 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4026              	.LVL449:
 4027              	.L229:
 4028              	.LCFI27:
 4029              		.cfi_restore_state
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4030              		.loc 1 134 5 is_stmt 1 view .LVU1256
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4031              		.loc 1 134 24 is_stmt 0 view .LVU1257
 4032 0026 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4033              	.LVL450:
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4034              		.loc 1 134 24 view .LVU1258
 4035 002a 8046     		mov	r8, r0
 4036              	.LVL451:
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4037              		.loc 1 135 5 is_stmt 1 view .LVU1259
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4038              		.loc 1 135 37 is_stmt 0 view .LVU1260
 4039 002c FFF7FEFF 		bl	lv_disp_get_draw_buf
 4040              	.LVL452:
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4041              		.loc 1 135 37 view .LVU1261
 4042 0030 0546     		mov	r5, r0
 4043              	.LVL453:
 136:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4044              		.loc 1 136 5 is_stmt 1 view .LVU1262
 136:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4045              		.loc 1 136 23 is_stmt 0 view .LVU1263
 4046 0032 00F1100A 		add	r10, r0, #16
 4047              	.LVL454:
 137:lvgl/src/draw/lv_draw_blend.c **** 
 4048              		.loc 1 137 5 is_stmt 1 view .LVU1264
 137:lvgl/src/draw/lv_draw_blend.c **** 
 4049              		.loc 1 137 18 is_stmt 0 view .LVU1265
 4050 0036 D0F808B0 		ldr	fp, [r0, #8]
 4051              	.LVL455:
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4052              		.loc 1 139 5 is_stmt 1 view .LVU1266
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4053              		.loc 1 139 12 is_stmt 0 view .LVU1267
 4054 003a D8F80000 		ldr	r0, [r8]
 4055              	.LVL456:
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4056              		.loc 1 139 20 view .LVU1268
 4057 003e 436A     		ldr	r3, [r0, #36]
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4058              		.loc 1 139 7 view .LVU1269
 4059 0040 03B1     		cbz	r3, .L218
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4060              		.loc 1 139 35 is_stmt 1 discriminator 1 view .LVU1270
 4061 0042 9847     		blx	r3
 4062              	.LVL457:
 4063              	.L218:
 143:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 4064              		.loc 1 143 5 view .LVU1271
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 123


 144:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 4065              		.loc 1 144 5 view .LVU1272
 145:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4066              		.loc 1 145 5 view .LVU1273
 145:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4067              		.loc 1 145 17 is_stmt 0 view .LVU1274
 4068 0044 069A     		ldr	r2, [sp, #24]
 4069 0046 0599     		ldr	r1, [sp, #20]
 4070 0048 08A8     		add	r0, sp, #32
 4071 004a FFF7FEFF 		bl	_lv_area_intersect
 4072              	.LVL458:
 146:lvgl/src/draw/lv_draw_blend.c **** 
 4073              		.loc 1 146 5 is_stmt 1 view .LVU1275
 146:lvgl/src/draw/lv_draw_blend.c **** 
 4074              		.loc 1 146 7 is_stmt 0 view .LVU1276
 4075 004e 0028     		cmp	r0, #0
 4076 0050 E6D0     		beq	.L216
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4077              		.loc 1 150 5 is_stmt 1 view .LVU1277
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4078              		.loc 1 150 30 is_stmt 0 view .LVU1278
 4079 0052 B5F810C0 		ldrh	ip, [r5, #16]
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4080              		.loc 1 150 18 view .LVU1279
 4081 0056 BDF82020 		ldrh	r2, [sp, #32]
 4082 005a A2EB0C02 		sub	r2, r2, ip
 4083 005e 92B2     		uxth	r2, r2
 4084 0060 ADF82020 		strh	r2, [sp, #32]	@ movhi
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4085              		.loc 1 151 5 is_stmt 1 view .LVU1280
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4086              		.loc 1 151 30 is_stmt 0 view .LVU1281
 4087 0064 688A     		ldrh	r0, [r5, #18]
 4088              	.LVL459:
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4089              		.loc 1 151 18 view .LVU1282
 4090 0066 BDF82210 		ldrh	r1, [sp, #34]
 4091 006a 091A     		subs	r1, r1, r0
 4092 006c ADF82210 		strh	r1, [sp, #34]	@ movhi
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4093              		.loc 1 152 5 is_stmt 1 view .LVU1283
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4094              		.loc 1 152 18 is_stmt 0 view .LVU1284
 4095 0070 BDF82430 		ldrh	r3, [sp, #36]
 4096 0074 A3EB0C03 		sub	r3, r3, ip
 4097 0078 9BB2     		uxth	r3, r3
 4098 007a ADF82430 		strh	r3, [sp, #36]	@ movhi
 153:lvgl/src/draw/lv_draw_blend.c **** 
 4099              		.loc 1 153 5 is_stmt 1 view .LVU1285
 153:lvgl/src/draw/lv_draw_blend.c **** 
 4100              		.loc 1 153 18 is_stmt 0 view .LVU1286
 4101 007e BDF82610 		ldrh	r1, [sp, #38]
 4102 0082 091A     		subs	r1, r1, r0
 4103 0084 ADF82610 		strh	r1, [sp, #38]	@ movhi
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4104              		.loc 1 156 5 is_stmt 1 view .LVU1287
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 124


 4105              		.loc 1 156 7 is_stmt 0 view .LVU1288
 4106 0088 B4B1     		cbz	r4, .L219
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4107              		.loc 1 156 20 discriminator 1 view .LVU1289
 4108 008a D8F80010 		ldr	r1, [r8]
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4109              		.loc 1 156 43 discriminator 1 view .LVU1290
 4110 008e 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4111              		.loc 1 156 13 discriminator 1 view .LVU1291
 4112 0090 11F00401 		ands	r1, r1, #4
 4113 0094 10D1     		bne	.L219
 4114              	.LBB260:
 157:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 4115              		.loc 1 157 9 is_stmt 1 view .LVU1292
 4116              	.LVL460:
 4117              	.LBB261:
 4118              	.LBI261:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 4119              		.loc 2 133 26 view .LVU1293
 4120              	.LBB262:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4121              		.loc 2 135 5 view .LVU1294
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4122              		.loc 2 135 36 is_stmt 0 view .LVU1295
 4123 0096 9A1A     		subs	r2, r3, r2
 4124 0098 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4125              		.loc 2 135 49 view .LVU1296
 4126 009a 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4127              		.loc 2 135 12 view .LVU1297
 4128 009c 12B2     		sxth	r2, r2
 4129              	.LVL461:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4130              		.loc 2 135 12 view .LVU1298
 4131              	.LBE262:
 4132              	.LBE261:
 158:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4133              		.loc 1 158 9 is_stmt 1 view .LVU1299
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4134              		.loc 1 159 9 view .LVU1300
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4135              		.loc 1 159 15 is_stmt 0 view .LVU1301
 4136 009e 0023     		movs	r3, #0
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4137              		.loc 1 159 9 view .LVU1302
 4138 00a0 02E0     		b	.L220
 4139              	.LVL462:
 4140              	.L227:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4141              		.loc 1 159 46 view .LVU1303
 4142 00a2 0D46     		mov	r5, r1
 4143              	.L221:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4144              		.loc 1 159 46 discriminator 5 view .LVU1304
 4145 00a4 0570     		strb	r5, [r0]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 125


 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4146              		.loc 1 159 32 is_stmt 1 discriminator 5 view .LVU1305
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4147              		.loc 1 159 33 is_stmt 0 discriminator 5 view .LVU1306
 4148 00a6 0133     		adds	r3, r3, #1
 4149              	.LVL463:
 4150              	.L220:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4151              		.loc 1 159 20 is_stmt 1 discriminator 6 view .LVU1307
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4152              		.loc 1 159 9 is_stmt 0 discriminator 6 view .LVU1308
 4153 00a8 9342     		cmp	r3, r2
 4154 00aa 05DA     		bge	.L219
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4155              		.loc 1 159 38 is_stmt 1 discriminator 7 view .LVU1309
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4156              		.loc 1 159 52 is_stmt 0 discriminator 7 view .LVU1310
 4157 00ac E018     		adds	r0, r4, r3
 4158 00ae E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4159              		.loc 1 159 46 discriminator 7 view .LVU1311
 4160 00b0 802D     		cmp	r5, #128
 4161 00b2 F6D9     		bls	.L227
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4162              		.loc 1 159 46 view .LVU1312
 4163 00b4 FF25     		movs	r5, #255
 4164 00b6 F5E7     		b	.L221
 4165              	.LVL464:
 4166              	.L219:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4167              		.loc 1 159 46 view .LVU1313
 4168              	.LBE260:
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4169              		.loc 1 162 5 is_stmt 1 view .LVU1314
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4170              		.loc 1 162 12 is_stmt 0 view .LVU1315
 4171 00b8 D8F80030 		ldr	r3, [r8]
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4172              		.loc 1 162 20 view .LVU1316
 4173 00bc 5B69     		ldr	r3, [r3, #20]
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4174              		.loc 1 162 7 view .LVU1317
 4175 00be 4BB1     		cbz	r3, .L223
 163:lvgl/src/draw/lv_draw_blend.c ****     }
 4176              		.loc 1 163 9 is_stmt 1 view .LVU1318
 4177 00c0 0297     		str	r7, [sp, #8]
 4178 00c2 0194     		str	r4, [sp, #4]
 4179 00c4 0096     		str	r6, [sp]
 4180 00c6 079B     		ldr	r3, [sp, #28]
 4181 00c8 08AA     		add	r2, sp, #32
 4182 00ca 5946     		mov	r1, fp
 4183 00cc 5046     		mov	r0, r10
 4184 00ce FFF7FEFF 		bl	fill_set_px
 4185              	.LVL465:
 4186 00d2 A5E7     		b	.L216
 4187              	.L223:
 165:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 126


 4188              		.loc 1 165 10 view .LVU1319
 165:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4189              		.loc 1 165 12 is_stmt 0 view .LVU1320
 4190 00d4 B9F1000F 		cmp	r9, #0
 4191 00d8 09D1     		bne	.L225
 166:lvgl/src/draw/lv_draw_blend.c ****     }
 4192              		.loc 1 166 9 is_stmt 1 view .LVU1321
 4193 00da 0297     		str	r7, [sp, #8]
 4194 00dc 0194     		str	r4, [sp, #4]
 4195 00de 0096     		str	r6, [sp]
 4196 00e0 079B     		ldr	r3, [sp, #28]
 4197 00e2 08AA     		add	r2, sp, #32
 4198 00e4 5946     		mov	r1, fp
 4199 00e6 5046     		mov	r0, r10
 4200 00e8 FFF7FEFF 		bl	fill_normal
 4201              	.LVL466:
 4202 00ec 98E7     		b	.L216
 4203              	.L225:
 170:lvgl/src/draw/lv_draw_blend.c ****     }
 4204              		.loc 1 170 9 view .LVU1322
 4205 00ee CDF80C90 		str	r9, [sp, #12]
 4206 00f2 0297     		str	r7, [sp, #8]
 4207 00f4 0194     		str	r4, [sp, #4]
 4208 00f6 0096     		str	r6, [sp]
 4209 00f8 079B     		ldr	r3, [sp, #28]
 4210 00fa 08AA     		add	r2, sp, #32
 4211 00fc 5946     		mov	r1, fp
 4212 00fe 5046     		mov	r0, r10
 4213 0100 FFF7FEFF 		bl	fill_blended
 4214              	.LVL467:
 4215 0104 8CE7     		b	.L216
 4216              		.cfi_endproc
 4217              	.LFE147:
 4219              		.section	.text._lv_blend_map,"ax",%progbits
 4220              		.align	1
 4221              		.global	_lv_blend_map
 4222              		.syntax unified
 4223              		.thumb
 4224              		.thumb_func
 4225              		.fpu fpv4-sp-d16
 4227              	_lv_blend_map:
 4228              	.LVL468:
 4229              	.LFB148:
 192:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4230              		.loc 1 192 1 view -0
 4231              		.cfi_startproc
 4232              		@ args = 12, pretend = 0, frame = 16
 4233              		@ frame_needed = 0, uses_anonymous_args = 0
 192:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4234              		.loc 1 192 1 is_stmt 0 view .LVU1324
 4235 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4236              	.LCFI28:
 4237              		.cfi_def_cfa_offset 36
 4238              		.cfi_offset 4, -36
 4239              		.cfi_offset 5, -32
 4240              		.cfi_offset 6, -28
 4241              		.cfi_offset 7, -24
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 127


 4242              		.cfi_offset 8, -20
 4243              		.cfi_offset 9, -16
 4244              		.cfi_offset 10, -12
 4245              		.cfi_offset 11, -8
 4246              		.cfi_offset 14, -4
 4247 0004 8BB0     		sub	sp, sp, #44
 4248              	.LCFI29:
 4249              		.cfi_def_cfa_offset 80
 4250 0006 0692     		str	r2, [sp, #24]
 4251 0008 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 4252 000c 9DF85460 		ldrb	r6, [sp, #84]	@ zero_extendqisi2
 4253 0010 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 194:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4254              		.loc 1 194 5 is_stmt 1 view .LVU1325
 194:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4255              		.loc 1 194 7 is_stmt 0 view .LVU1326
 4256 0014 012E     		cmp	r6, #1
 4257 0016 02D9     		bls	.L230
 4258 0018 0D46     		mov	r5, r1
 4259 001a 1C46     		mov	r4, r3
 195:lvgl/src/draw/lv_draw_blend.c **** 
 4260              		.loc 1 195 5 is_stmt 1 view .LVU1327
 195:lvgl/src/draw/lv_draw_blend.c **** 
 4261              		.loc 1 195 7 is_stmt 0 view .LVU1328
 4262 001c 17B9     		cbnz	r7, .L243
 4263              	.LVL469:
 4264              	.L230:
 236:lvgl/src/draw/lv_draw_blend.c **** 
 4265              		.loc 1 236 1 view .LVU1329
 4266 001e 0BB0     		add	sp, sp, #44
 4267              	.LCFI30:
 4268              		.cfi_remember_state
 4269              		.cfi_def_cfa_offset 36
 4270              		@ sp needed
 4271 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4272              	.LVL470:
 4273              	.L243:
 4274              	.LCFI31:
 4275              		.cfi_restore_state
 199:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 4276              		.loc 1 199 5 is_stmt 1 view .LVU1330
 200:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 4277              		.loc 1 200 5 view .LVU1331
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4278              		.loc 1 201 5 view .LVU1332
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4279              		.loc 1 201 17 is_stmt 0 view .LVU1333
 4280 0024 0A46     		mov	r2, r1
 4281              	.LVL471:
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4282              		.loc 1 201 17 view .LVU1334
 4283 0026 0146     		mov	r1, r0
 4284              	.LVL472:
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4285              		.loc 1 201 17 view .LVU1335
 4286 0028 08A8     		add	r0, sp, #32
 4287              	.LVL473:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 128


 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4288              		.loc 1 201 17 view .LVU1336
 4289 002a FFF7FEFF 		bl	_lv_area_intersect
 4290              	.LVL474:
 202:lvgl/src/draw/lv_draw_blend.c **** 
 4291              		.loc 1 202 5 is_stmt 1 view .LVU1337
 202:lvgl/src/draw/lv_draw_blend.c **** 
 4292              		.loc 1 202 7 is_stmt 0 view .LVU1338
 4293 002e 0028     		cmp	r0, #0
 4294 0030 F5D0     		beq	.L230
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4295              		.loc 1 204 5 is_stmt 1 view .LVU1339
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4296              		.loc 1 204 24 is_stmt 0 view .LVU1340
 4297 0032 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4298              	.LVL475:
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4299              		.loc 1 204 24 view .LVU1341
 4300 0036 8246     		mov	r10, r0
 4301              	.LVL476:
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4302              		.loc 1 205 5 is_stmt 1 view .LVU1342
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4303              		.loc 1 205 37 is_stmt 0 view .LVU1343
 4304 0038 FFF7FEFF 		bl	lv_disp_get_draw_buf
 4305              	.LVL477:
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4306              		.loc 1 205 37 view .LVU1344
 4307 003c 8046     		mov	r8, r0
 4308              	.LVL478:
 206:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4309              		.loc 1 206 5 is_stmt 1 view .LVU1345
 206:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4310              		.loc 1 206 23 is_stmt 0 view .LVU1346
 4311 003e 00F1100B 		add	fp, r0, #16
 4312              	.LVL479:
 207:lvgl/src/draw/lv_draw_blend.c **** 
 4313              		.loc 1 207 5 is_stmt 1 view .LVU1347
 207:lvgl/src/draw/lv_draw_blend.c **** 
 4314              		.loc 1 207 18 is_stmt 0 view .LVU1348
 4315 0042 8368     		ldr	r3, [r0, #8]
 4316 0044 0793     		str	r3, [sp, #28]
 4317              	.LVL480:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4318              		.loc 1 209 5 is_stmt 1 view .LVU1349
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4319              		.loc 1 209 12 is_stmt 0 view .LVU1350
 4320 0046 DAF80000 		ldr	r0, [r10]
 4321              	.LVL481:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4322              		.loc 1 209 20 view .LVU1351
 4323 004a 436A     		ldr	r3, [r0, #36]
 4324              	.LVL482:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4325              		.loc 1 209 7 view .LVU1352
 4326 004c 03B1     		cbz	r3, .L232
 209:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 129


 4327              		.loc 1 209 35 is_stmt 1 discriminator 1 view .LVU1353
 4328 004e 9847     		blx	r3
 4329              	.LVL483:
 4330              	.L232:
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4331              		.loc 1 213 5 view .LVU1354
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4332              		.loc 1 213 30 is_stmt 0 view .LVU1355
 4333 0050 B8F810C0 		ldrh	ip, [r8, #16]
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4334              		.loc 1 213 18 view .LVU1356
 4335 0054 BDF82020 		ldrh	r2, [sp, #32]
 4336 0058 A2EB0C02 		sub	r2, r2, ip
 4337 005c 92B2     		uxth	r2, r2
 4338 005e ADF82020 		strh	r2, [sp, #32]	@ movhi
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4339              		.loc 1 214 5 is_stmt 1 view .LVU1357
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4340              		.loc 1 214 30 is_stmt 0 view .LVU1358
 4341 0062 B8F81200 		ldrh	r0, [r8, #18]
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4342              		.loc 1 214 18 view .LVU1359
 4343 0066 BDF82210 		ldrh	r1, [sp, #34]
 4344 006a 091A     		subs	r1, r1, r0
 4345 006c ADF82210 		strh	r1, [sp, #34]	@ movhi
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4346              		.loc 1 215 5 is_stmt 1 view .LVU1360
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4347              		.loc 1 215 18 is_stmt 0 view .LVU1361
 4348 0070 BDF82430 		ldrh	r3, [sp, #36]
 4349 0074 A3EB0C03 		sub	r3, r3, ip
 4350 0078 9BB2     		uxth	r3, r3
 4351 007a ADF82430 		strh	r3, [sp, #36]	@ movhi
 216:lvgl/src/draw/lv_draw_blend.c **** 
 4352              		.loc 1 216 5 is_stmt 1 view .LVU1362
 216:lvgl/src/draw/lv_draw_blend.c **** 
 4353              		.loc 1 216 18 is_stmt 0 view .LVU1363
 4354 007e BDF82610 		ldrh	r1, [sp, #38]
 4355 0082 091A     		subs	r1, r1, r0
 4356 0084 ADF82610 		strh	r1, [sp, #38]	@ movhi
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4357              		.loc 1 219 5 is_stmt 1 view .LVU1364
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4358              		.loc 1 219 7 is_stmt 0 view .LVU1365
 4359 0088 D4B1     		cbz	r4, .L233
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4360              		.loc 1 219 20 discriminator 1 view .LVU1366
 4361 008a DAF80010 		ldr	r1, [r10]
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4362              		.loc 1 219 43 discriminator 1 view .LVU1367
 4363 008e 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4364              		.loc 1 219 13 discriminator 1 view .LVU1368
 4365 0090 11F00401 		ands	r1, r1, #4
 4366 0094 14D1     		bne	.L233
 4367              	.LBB263:
 221:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 130


 4368              		.loc 1 221 9 is_stmt 1 view .LVU1369
 4369              	.LVL484:
 4370              	.LBB264:
 4371              	.LBI264:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 4372              		.loc 2 133 26 view .LVU1370
 4373              	.LBB265:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4374              		.loc 2 135 5 view .LVU1371
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4375              		.loc 2 135 36 is_stmt 0 view .LVU1372
 4376 0096 9A1A     		subs	r2, r3, r2
 4377 0098 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4378              		.loc 2 135 49 view .LVU1373
 4379 009a 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4380              		.loc 2 135 12 view .LVU1374
 4381 009c 12B2     		sxth	r2, r2
 4382              	.LVL485:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4383              		.loc 2 135 12 view .LVU1375
 4384              	.LBE265:
 4385              	.LBE264:
 222:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4386              		.loc 1 222 9 is_stmt 1 view .LVU1376
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4387              		.loc 1 223 9 view .LVU1377
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4388              		.loc 1 223 15 is_stmt 0 view .LVU1378
 4389 009e 0023     		movs	r3, #0
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4390              		.loc 1 223 9 view .LVU1379
 4391 00a0 03E0     		b	.L234
 4392              	.LVL486:
 4393              	.L241:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4394              		.loc 1 223 46 view .LVU1380
 4395 00a2 8C46     		mov	ip, r1
 4396              	.L235:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4397              		.loc 1 223 46 discriminator 5 view .LVU1381
 4398 00a4 80F800C0 		strb	ip, [r0]
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4399              		.loc 1 223 32 is_stmt 1 discriminator 5 view .LVU1382
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4400              		.loc 1 223 33 is_stmt 0 discriminator 5 view .LVU1383
 4401 00a8 0133     		adds	r3, r3, #1
 4402              	.LVL487:
 4403              	.L234:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4404              		.loc 1 223 20 is_stmt 1 discriminator 6 view .LVU1384
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4405              		.loc 1 223 9 is_stmt 0 discriminator 6 view .LVU1385
 4406 00aa 9342     		cmp	r3, r2
 4407 00ac 08DA     		bge	.L233
 223:lvgl/src/draw/lv_draw_blend.c ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 131


 4408              		.loc 1 223 38 is_stmt 1 discriminator 7 view .LVU1386
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4409              		.loc 1 223 52 is_stmt 0 discriminator 7 view .LVU1387
 4410 00ae E018     		adds	r0, r4, r3
 4411 00b0 14F803C0 		ldrb	ip, [r4, r3]	@ zero_extendqisi2
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4412              		.loc 1 223 46 discriminator 7 view .LVU1388
 4413 00b4 BCF1800F 		cmp	ip, #128
 4414 00b8 F3D9     		bls	.L241
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4415              		.loc 1 223 46 view .LVU1389
 4416 00ba 4FF0FF0C 		mov	ip, #255
 4417 00be F1E7     		b	.L235
 4418              	.LVL488:
 4419              	.L233:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4420              		.loc 1 223 46 view .LVU1390
 4421              	.LBE263:
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4422              		.loc 1 225 5 is_stmt 1 view .LVU1391
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4423              		.loc 1 225 12 is_stmt 0 view .LVU1392
 4424 00c0 DAF80030 		ldr	r3, [r10]
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4425              		.loc 1 225 20 view .LVU1393
 4426 00c4 5B69     		ldr	r3, [r3, #20]
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4427              		.loc 1 225 7 view .LVU1394
 4428 00c6 5BB1     		cbz	r3, .L237
 226:lvgl/src/draw/lv_draw_blend.c ****     }
 4429              		.loc 1 226 9 is_stmt 1 view .LVU1395
 4430 00c8 0397     		str	r7, [sp, #12]
 4431 00ca 0294     		str	r4, [sp, #8]
 4432 00cc 0196     		str	r6, [sp, #4]
 4433 00ce 069B     		ldr	r3, [sp, #24]
 4434 00d0 0093     		str	r3, [sp]
 4435 00d2 2B46     		mov	r3, r5
 4436 00d4 08AA     		add	r2, sp, #32
 4437 00d6 0799     		ldr	r1, [sp, #28]
 4438 00d8 5846     		mov	r0, fp
 4439 00da FFF7FEFF 		bl	map_set_px
 4440              	.LVL489:
 4441 00de 9EE7     		b	.L230
 4442              	.L237:
 228:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4443              		.loc 1 228 10 view .LVU1396
 228:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4444              		.loc 1 228 12 is_stmt 0 view .LVU1397
 4445 00e0 B9F1000F 		cmp	r9, #0
 4446 00e4 0BD1     		bne	.L239
 229:lvgl/src/draw/lv_draw_blend.c ****     }
 4447              		.loc 1 229 9 is_stmt 1 view .LVU1398
 4448 00e6 0397     		str	r7, [sp, #12]
 4449 00e8 0294     		str	r4, [sp, #8]
 4450 00ea 0196     		str	r6, [sp, #4]
 4451 00ec 069B     		ldr	r3, [sp, #24]
 4452 00ee 0093     		str	r3, [sp]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 132


 4453 00f0 2B46     		mov	r3, r5
 4454 00f2 08AA     		add	r2, sp, #32
 4455 00f4 0799     		ldr	r1, [sp, #28]
 4456 00f6 5846     		mov	r0, fp
 4457 00f8 FFF7FEFF 		bl	map_normal
 4458              	.LVL490:
 4459 00fc 8FE7     		b	.L230
 4460              	.L239:
 233:lvgl/src/draw/lv_draw_blend.c ****     }
 4461              		.loc 1 233 9 view .LVU1399
 4462 00fe CDF81090 		str	r9, [sp, #16]
 4463 0102 0397     		str	r7, [sp, #12]
 4464 0104 0294     		str	r4, [sp, #8]
 4465 0106 0196     		str	r6, [sp, #4]
 4466 0108 069B     		ldr	r3, [sp, #24]
 4467 010a 0093     		str	r3, [sp]
 4468 010c 2B46     		mov	r3, r5
 4469 010e 08AA     		add	r2, sp, #32
 4470 0110 0799     		ldr	r1, [sp, #28]
 4471 0112 5846     		mov	r0, fp
 4472 0114 FFF7FEFF 		bl	map_blended
 4473              	.LVL491:
 4474 0118 81E7     		b	.L230
 4475              		.cfi_endproc
 4476              	.LFE148:
 4478              		.text
 4479              	.Letext0:
 4480              		.file 4 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machin
 4481              		.file 5 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_s
 4482              		.file 6 "lvgl/src/draw/../misc/lv_types.h"
 4483              		.file 7 "lvgl/src/draw/../misc/lv_style.h"
 4484              		.file 8 "lvgl/src/draw/lv_draw_mask.h"
 4485              		.file 9 "lvgl/src/draw/../hal/../misc/lv_ll.h"
 4486              		.file 10 "lvgl/src/draw/../hal/../misc/lv_timer.h"
 4487              		.file 11 "lvgl/src/draw/../hal/lv_hal_disp.h"
 4488              		.file 12 "lvgl/src/draw/../core/lv_obj.h"
 4489              		.file 13 "lvgl/src/draw/../core/lv_group.h"
 4490              		.file 14 "lvgl/src/draw/../core/lv_obj_scroll.h"
 4491              		.file 15 "lvgl/src/draw/../core/lv_obj_style.h"
 4492              		.file 16 "lvgl/src/draw/../core/lv_obj_class.h"
 4493              		.file 17 "lvgl/src/draw/../core/lv_event.h"
 4494              		.file 18 "lvgl/src/draw/../hal/../misc/lv_mem.h"
 4495              		.file 19 "lvgl/src/draw/../core/lv_refr.h"
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s 			page 133


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_blend.c
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:18     .text.map_blended:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:25     .text.map_blended:0000000000000000 map_blended
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:354    .text.map_blended:0000000000000144 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:1084   .text.color_blend_true_color_subtractive:0000000000000000 color_blend_true_color_subtractive
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:933    .text.color_blend_true_color_additive:0000000000000000 color_blend_true_color_additive
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:360    .text.fill_set_px:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:366    .text.fill_set_px:0000000000000000 fill_set_px
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:618    .text.map_set_px:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:624    .text.map_set_px:0000000000000000 map_set_px
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:927    .text.color_blend_true_color_additive:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:1078   .text.color_blend_true_color_subtractive:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:1226   .text.map_normal:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:1232   .text.map_normal:0000000000000000 map_normal
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:2315   .text.fill_normal:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:2321   .text.fill_normal:0000000000000000 fill_normal
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:3543   .text.fill_blended:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:3549   .text.fill_blended:0000000000000000 fill_blended
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:3967   .text.fill_blended:00000000000001a0 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:3973   .text._lv_blend_fill:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:3980   .text._lv_blend_fill:0000000000000000 _lv_blend_fill
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:4220   .text._lv_blend_map:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccK7PKgz.s:4227   .text._lv_blend_map:0000000000000000 _lv_blend_map

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_memcpy
lv_area_get_size
lv_color_fill
lv_disp_get_draw_buf
_lv_area_intersect
