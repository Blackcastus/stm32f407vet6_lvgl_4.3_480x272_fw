ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_draw_blend.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.map_blended,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	map_blended:
  26              	.LVL0:
  27              	.LFB154:
  28              		.file 1 "lvgl/src/draw/lv_draw_blend.c"
   1:lvgl/src/draw/lv_draw_blend.c **** /**
   2:lvgl/src/draw/lv_draw_blend.c ****  * @file lv_draw_blend.c
   3:lvgl/src/draw/lv_draw_blend.c ****  *
   4:lvgl/src/draw/lv_draw_blend.c ****  */
   5:lvgl/src/draw/lv_draw_blend.c **** 
   6:lvgl/src/draw/lv_draw_blend.c **** /*********************
   7:lvgl/src/draw/lv_draw_blend.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_blend.c ****  *********************/
   9:lvgl/src/draw/lv_draw_blend.c **** #include "lv_draw_blend.h"
  10:lvgl/src/draw/lv_draw_blend.c **** #include "lv_img_decoder.h"
  11:lvgl/src/draw/lv_draw_blend.c **** #include "../misc/lv_math.h"
  12:lvgl/src/draw/lv_draw_blend.c **** #include "../hal/lv_hal_disp.h"
  13:lvgl/src/draw/lv_draw_blend.c **** #include "../core/lv_refr.h"
  14:lvgl/src/draw/lv_draw_blend.c **** 
  15:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
  16:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_pxp.h"
  17:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
  18:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_vglite.h"
  19:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
  20:lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_stm32_dma2d.h"
  21:lvgl/src/draw/lv_draw_blend.c **** #endif
  22:lvgl/src/draw/lv_draw_blend.c **** 
  23:lvgl/src/draw/lv_draw_blend.c **** /*********************
  24:lvgl/src/draw/lv_draw_blend.c ****  *      DEFINES
  25:lvgl/src/draw/lv_draw_blend.c ****  *********************/
  26:lvgl/src/draw/lv_draw_blend.c **** #define GPU_SIZE_LIMIT      240
  27:lvgl/src/draw/lv_draw_blend.c **** 
  28:lvgl/src/draw/lv_draw_blend.c **** /**********************
  29:lvgl/src/draw/lv_draw_blend.c ****  *      TYPEDEFS
  30:lvgl/src/draw/lv_draw_blend.c ****  **********************/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 2


  31:lvgl/src/draw/lv_draw_blend.c **** 
  32:lvgl/src/draw/lv_draw_blend.c **** /**********************
  33:lvgl/src/draw/lv_draw_blend.c ****  *  STATIC PROTOTYPES
  34:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  35:lvgl/src/draw/lv_draw_blend.c **** 
  36:lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  37:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
  38:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  39:lvgl/src/draw/lv_draw_blend.c **** 
  40:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  41:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
  42:lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
  43:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  44:lvgl/src/draw/lv_draw_blend.c **** 
  45:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  46:lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
  47:lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
  48:lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  49:lvgl/src/draw/lv_draw_blend.c **** #endif
  50:lvgl/src/draw/lv_draw_blend.c **** 
  51:lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
  52:lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  53:lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  54:lvgl/src/draw/lv_draw_blend.c **** 
  55:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  56:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
  57:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
  58:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  59:lvgl/src/draw/lv_draw_blend.c **** 
  60:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  61:lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  62:lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  63:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  64:lvgl/src/draw/lv_draw_blend.c **** 
  65:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  66:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  67:lvgl/src/draw/lv_draw_blend.c **** #endif
  68:lvgl/src/draw/lv_draw_blend.c **** 
  69:lvgl/src/draw/lv_draw_blend.c **** /**********************
  70:lvgl/src/draw/lv_draw_blend.c ****  *  STATIC VARIABLES
  71:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  72:lvgl/src/draw/lv_draw_blend.c **** 
  73:lvgl/src/draw/lv_draw_blend.c **** /**********************
  74:lvgl/src/draw/lv_draw_blend.c ****  *      MACROS
  75:lvgl/src/draw/lv_draw_blend.c ****  **********************/
  76:lvgl/src/draw/lv_draw_blend.c **** 
  77:lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX(out_x,  color)                                                         
  78:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  79:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  80:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  81:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  82:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  83:lvgl/src/draw/lv_draw_blend.c **** 
  84:lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX_SCR_TRANSP(out_x,  color)                                              
  85:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  86:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  87:lvgl/src/draw/lv_draw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(disp_buf_first[out_x], disp_bu
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 3


  88:lvgl/src/draw/lv_draw_blend.c ****                                                                         color, *mask_tmp_x, &disp_b
  89:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  90:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  91:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  92:lvgl/src/draw/lv_draw_blend.c **** 
  93:lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  94:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  95:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
  96:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
  97:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  98:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  99:lvgl/src/draw/lv_draw_blend.c **** 
 100:lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX_SCR_TRANSP(x)                        \
 101:lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
 102:lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
 103:lvgl/src/draw/lv_draw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_fi
 104:lvgl/src/draw/lv_draw_blend.c ****                                                                         map_buf_first[x], *mask_tmp
 105:lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
 106:lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
 107:lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
 108:lvgl/src/draw/lv_draw_blend.c **** 
 109:lvgl/src/draw/lv_draw_blend.c **** /**********************
 110:lvgl/src/draw/lv_draw_blend.c ****  *   GLOBAL FUNCTIONS
 111:lvgl/src/draw/lv_draw_blend.c ****  **********************/
 112:lvgl/src/draw/lv_draw_blend.c **** 
 113:lvgl/src/draw/lv_draw_blend.c **** /**
 114:lvgl/src/draw/lv_draw_blend.c ****  * Fill and area in the display buffer.
 115:lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the fill to this area  (absolute coordinates)
 116:lvgl/src/draw/lv_draw_blend.c ****  * @param fill_area fill this area  (absolute coordinates) (should be clipped)
 117:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 118:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on the fill (uint8_t array with 0x00..0xff values).
 119:lvgl/src/draw/lv_draw_blend.c ****  *             Relative to fill area but its width is truncated to clip area.
 120:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 121:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 122:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 123:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 124:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 125:lvgl/src/draw/lv_draw_blend.c ****  */
 126:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,
 127:lvgl/src/draw/lv_draw_blend.c ****                                           lv_color_t color, lv_opa_t * mask, lv_draw_mask_res_t mas
 128:lvgl/src/draw/lv_draw_blend.c ****                                           lv_blend_mode_t mode)
 129:lvgl/src/draw/lv_draw_blend.c **** {
 130:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 131:lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 132:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 133:lvgl/src/draw/lv_draw_blend.c **** 
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 135:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 136:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 137:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 138:lvgl/src/draw/lv_draw_blend.c **** 
 139:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 140:lvgl/src/draw/lv_draw_blend.c **** 
 141:lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 142:lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 143:lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 144:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 4


 145:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 146:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 147:lvgl/src/draw/lv_draw_blend.c **** 
 148:lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 149:lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 153:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 154:lvgl/src/draw/lv_draw_blend.c **** 
 155:lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 156:lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0 && mask) {
 157:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 158:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 159:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 160:lvgl/src/draw/lv_draw_blend.c ****     }
 161:lvgl/src/draw/lv_draw_blend.c **** 
 162:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 163:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 164:lvgl/src/draw/lv_draw_blend.c ****     }
 165:lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 166:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 167:lvgl/src/draw/lv_draw_blend.c ****     }
 168:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 169:lvgl/src/draw/lv_draw_blend.c ****     else {
 170:lvgl/src/draw/lv_draw_blend.c ****         fill_blended(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res, mode);
 171:lvgl/src/draw/lv_draw_blend.c ****     }
 172:lvgl/src/draw/lv_draw_blend.c **** #endif
 173:lvgl/src/draw/lv_draw_blend.c **** }
 174:lvgl/src/draw/lv_draw_blend.c **** 
 175:lvgl/src/draw/lv_draw_blend.c **** /**
 176:lvgl/src/draw/lv_draw_blend.c ****  * Copy a map (image) to a display buffer.
 177:lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the map to this area (absolute coordinates)
 178:lvgl/src/draw/lv_draw_blend.c ****  * @param map_area area of the image  (absolute coordinates)
 179:lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf a pixels of the map (image)
 180:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 181:lvgl/src/draw/lv_draw_blend.c ****  *                Relative to map area but its width is truncated to clip area.
 182:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 183:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 184:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 185:lvgl/src/draw/lv_draw_blend.c ****  * @param opa  overall opacity in 0x00..0xff range
 186:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 187:lvgl/src/draw/lv_draw_blend.c ****  */
 188:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,
 189:lvgl/src/draw/lv_draw_blend.c ****                                          const lv_color_t * map_buf,
 190:lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t * mask, lv_draw_mask_res_t mask_res,
 191:lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t opa, lv_blend_mode_t mode)
 192:lvgl/src/draw/lv_draw_blend.c **** {
 193:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 194:lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 195:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 196:lvgl/src/draw/lv_draw_blend.c **** 
 197:lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 198:lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 199:lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 200:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 201:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 5


 202:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 203:lvgl/src/draw/lv_draw_blend.c **** 
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 205:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 206:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 207:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 208:lvgl/src/draw/lv_draw_blend.c **** 
 209:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 210:lvgl/src/draw/lv_draw_blend.c **** 
 211:lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 212:lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 216:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 217:lvgl/src/draw/lv_draw_blend.c **** 
 218:lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 219:lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0)
 220:lvgl/src/draw/lv_draw_blend.c ****     {
 221:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 222:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 223:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 224:lvgl/src/draw/lv_draw_blend.c ****     }
 225:lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 226:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 227:lvgl/src/draw/lv_draw_blend.c ****     }
 228:lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 229:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 230:lvgl/src/draw/lv_draw_blend.c ****     }
 231:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 232:lvgl/src/draw/lv_draw_blend.c ****     else {
 233:lvgl/src/draw/lv_draw_blend.c ****         map_blended(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res, mode);
 234:lvgl/src/draw/lv_draw_blend.c ****     }
 235:lvgl/src/draw/lv_draw_blend.c **** #endif
 236:lvgl/src/draw/lv_draw_blend.c **** }
 237:lvgl/src/draw/lv_draw_blend.c **** 
 238:lvgl/src/draw/lv_draw_blend.c **** /**********************
 239:lvgl/src/draw/lv_draw_blend.c ****  *   STATIC FUNCTIONS
 240:lvgl/src/draw/lv_draw_blend.c ****  **********************/
 241:lvgl/src/draw/lv_draw_blend.c **** 
 242:lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 243:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
 244:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 245:lvgl/src/draw/lv_draw_blend.c **** {
 246:lvgl/src/draw/lv_draw_blend.c **** 
 247:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 248:lvgl/src/draw/lv_draw_blend.c **** 
 249:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 250:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 251:lvgl/src/draw/lv_draw_blend.c **** 
 252:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 253:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 254:lvgl/src/draw/lv_draw_blend.c **** 
 255:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 256:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 257:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 258:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 6


 259:lvgl/src/draw/lv_draw_blend.c ****             }
 260:lvgl/src/draw/lv_draw_blend.c ****         }
 261:lvgl/src/draw/lv_draw_blend.c ****     }
 262:lvgl/src/draw/lv_draw_blend.c ****     else {
 263:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 264:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 265:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 266:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 267:lvgl/src/draw/lv_draw_blend.c **** 
 268:lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 269:lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 270:lvgl/src/draw/lv_draw_blend.c **** 
 271:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 272:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 273:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 274:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 275:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 276:lvgl/src/draw/lv_draw_blend.c ****                 }
 277:lvgl/src/draw/lv_draw_blend.c ****             }
 278:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 279:lvgl/src/draw/lv_draw_blend.c ****         }
 280:lvgl/src/draw/lv_draw_blend.c ****     }
 281:lvgl/src/draw/lv_draw_blend.c **** }
 282:lvgl/src/draw/lv_draw_blend.c **** 
 283:lvgl/src/draw/lv_draw_blend.c **** /**
 284:lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color
 285:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 286:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 287:lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 288:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 289:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 290:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 291:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 292:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 293:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 294:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 295:lvgl/src/draw/lv_draw_blend.c ****  */
 296:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 297:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
 298:lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
 299:lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 300:lvgl/src/draw/lv_draw_blend.c **** {
 301:lvgl/src/draw/lv_draw_blend.c **** 
 302:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 303:lvgl/src/draw/lv_draw_blend.c **** 
 304:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 305:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 306:lvgl/src/draw/lv_draw_blend.c **** 
 307:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 308:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 309:lvgl/src/draw/lv_draw_blend.c **** 
 310:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to the first pixel of the destination area*/
 311:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 312:lvgl/src/draw/lv_draw_blend.c **** 
 313:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 314:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 315:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 7


 316:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 317:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 318:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 319:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 320:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_SIZE_LIMIT) {
 321:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 322:lvgl/src/draw/lv_draw_blend.c ****                 return;
 323:lvgl/src/draw/lv_draw_blend.c ****             }
 324:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 325:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT) {
 326:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 327:lvgl/src/draw/lv_draw_blend.c ****                     return;
 328:lvgl/src/draw/lv_draw_blend.c ****                 }
 329:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 330:lvgl/src/draw/lv_draw_blend.c ****             }
 331:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 332:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 333:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_fill(disp_buf_first, disp_w, color, draw_area_w, draw_area_h);
 334:lvgl/src/draw/lv_draw_blend.c ****                 return;
 335:lvgl/src/draw/lv_draw_blend.c ****             }
 336:lvgl/src/draw/lv_draw_blend.c **** #endif
 337:lvgl/src/draw/lv_draw_blend.c **** 
 338:lvgl/src/draw/lv_draw_blend.c ****             if(disp->driver->gpu_fill_cb && lv_area_get_size(draw_area) > GPU_SIZE_LIMIT) {
 339:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 340:lvgl/src/draw/lv_draw_blend.c ****                 return;
 341:lvgl/src/draw/lv_draw_blend.c ****             }
 342:lvgl/src/draw/lv_draw_blend.c **** 
 343:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 344:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 345:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 346:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 347:lvgl/src/draw/lv_draw_blend.c ****             }
 348:lvgl/src/draw/lv_draw_blend.c ****         }
 349:lvgl/src/draw/lv_draw_blend.c ****         /*No mask with opacity*/
 350:lvgl/src/draw/lv_draw_blend.c ****         else {
 351:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 352:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT) {
 353:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 354:lvgl/src/draw/lv_draw_blend.c ****                 return;
 355:lvgl/src/draw/lv_draw_blend.c ****             }
 356:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 357:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT) {
 358:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 359:lvgl/src/draw/lv_draw_blend.c ****                     return;
 360:lvgl/src/draw/lv_draw_blend.c ****                 }
 361:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 362:lvgl/src/draw/lv_draw_blend.c ****             }
 363:lvgl/src/draw/lv_draw_blend.c **** #endif
 364:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 365:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 366:lvgl/src/draw/lv_draw_blend.c **** 
 367:lvgl/src/draw/lv_draw_blend.c ****             uint16_t color_premult[3];
 368:lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 369:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 370:lvgl/src/draw/lv_draw_blend.c **** 
 371:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 372:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 8


 373:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 374:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 375:lvgl/src/draw/lv_draw_blend.c **** 
 376:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 377:lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 378:lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 379:lvgl/src/draw/lv_draw_blend.c ****                                                     &last_res_color.ch.alpha);
 380:lvgl/src/draw/lv_draw_blend.c ****                         }
 381:lvgl/src/draw/lv_draw_blend.c ****                         else
 382:lvgl/src/draw/lv_draw_blend.c **** #endif
 383:lvgl/src/draw/lv_draw_blend.c ****                         {
 384:lvgl/src/draw/lv_draw_blend.c ****                             last_res_color = lv_color_mix_premult(color_premult, disp_buf_first[x],
 385:lvgl/src/draw/lv_draw_blend.c ****                         }
 386:lvgl/src/draw/lv_draw_blend.c ****                     }
 387:lvgl/src/draw/lv_draw_blend.c ****                     disp_buf_first[x] = last_res_color;
 388:lvgl/src/draw/lv_draw_blend.c ****                 }
 389:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 390:lvgl/src/draw/lv_draw_blend.c ****             }
 391:lvgl/src/draw/lv_draw_blend.c ****         }
 392:lvgl/src/draw/lv_draw_blend.c ****     }
 393:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 394:lvgl/src/draw/lv_draw_blend.c ****     else {
 395:lvgl/src/draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 396:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 397:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 398:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 399:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 400:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 401:lvgl/src/draw/lv_draw_blend.c **** 
 402:lvgl/src/draw/lv_draw_blend.c ****         int32_t x_end4 = draw_area_w - 4;
 403:lvgl/src/draw/lv_draw_blend.c **** 
 404:lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 405:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 406:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 407:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 408:lvgl/src/draw/lv_draw_blend.c **** #if 0
 409:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 410:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 411:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 412:lvgl/src/draw/lv_draw_blend.c **** #else
 413:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 414:lvgl/src/draw/lv_draw_blend.c **** #endif
 415:lvgl/src/draw/lv_draw_blend.c ****                 }
 416:lvgl/src/draw/lv_draw_blend.c **** #else
 417:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 418:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 419:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 420:lvgl/src/draw/lv_draw_blend.c **** #else
 421:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 422:lvgl/src/draw/lv_draw_blend.c **** #endif
 423:lvgl/src/draw/lv_draw_blend.c ****                 }
 424:lvgl/src/draw/lv_draw_blend.c **** 
 425:lvgl/src/draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 426:lvgl/src/draw/lv_draw_blend.c ****                 for(; x <= x_end4; x += 4) {
 427:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 428:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 9


 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 432:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 433:lvgl/src/draw/lv_draw_blend.c ****                         }
 434:lvgl/src/draw/lv_draw_blend.c ****                         else {
 435:lvgl/src/draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 436:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 437:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 438:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 1, color)
 439:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 2, color)
 440:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 3, color)
 441:lvgl/src/draw/lv_draw_blend.c **** #else
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x, color)
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 445:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 446:lvgl/src/draw/lv_draw_blend.c **** #endif
 447:lvgl/src/draw/lv_draw_blend.c ****                         }
 448:lvgl/src/draw/lv_draw_blend.c ****                     }
 449:lvgl/src/draw/lv_draw_blend.c ****                     mask32++;
 450:lvgl/src/draw/lv_draw_blend.c ****                 }
 451:lvgl/src/draw/lv_draw_blend.c **** 
 452:lvgl/src/draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 453:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 454:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 455:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 456:lvgl/src/draw/lv_draw_blend.c **** #else
 457:lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 458:lvgl/src/draw/lv_draw_blend.c **** #endif
 459:lvgl/src/draw/lv_draw_blend.c ****                 }
 460:lvgl/src/draw/lv_draw_blend.c **** #endif
 461:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 462:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 463:lvgl/src/draw/lv_draw_blend.c ****             }
 464:lvgl/src/draw/lv_draw_blend.c ****         }
 465:lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 466:lvgl/src/draw/lv_draw_blend.c ****         else {
 467:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 468:lvgl/src/draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 469:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 470:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 471:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 472:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 473:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 474:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 475:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 476:lvgl/src/draw/lv_draw_blend.c ****                             if(disp->driver->screen_transp) {
 477:lvgl/src/draw/lv_draw_blend.c ****                                 lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alp
 478:lvgl/src/draw/lv_draw_blend.c ****                                                         &last_res_color.ch.alpha);
 479:lvgl/src/draw/lv_draw_blend.c ****                             }
 480:lvgl/src/draw/lv_draw_blend.c ****                             else
 481:lvgl/src/draw/lv_draw_blend.c **** #endif
 482:lvgl/src/draw/lv_draw_blend.c ****                             {
 483:lvgl/src/draw/lv_draw_blend.c ****                                 if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 484:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 485:lvgl/src/draw/lv_draw_blend.c ****                             }
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_mask = *mask_tmp_x;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 10


 487:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 488:lvgl/src/draw/lv_draw_blend.c ****                         }
 489:lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = last_res_color;
 490:lvgl/src/draw/lv_draw_blend.c ****                     }
 491:lvgl/src/draw/lv_draw_blend.c ****                     mask_tmp_x++;
 492:lvgl/src/draw/lv_draw_blend.c ****                 }
 493:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 494:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 495:lvgl/src/draw/lv_draw_blend.c ****             }
 496:lvgl/src/draw/lv_draw_blend.c ****         }
 497:lvgl/src/draw/lv_draw_blend.c ****     }
 498:lvgl/src/draw/lv_draw_blend.c **** }
 499:lvgl/src/draw/lv_draw_blend.c **** 
 500:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 501:lvgl/src/draw/lv_draw_blend.c **** /**
 502:lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color but apply blending algorithms
 503:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 504:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 505:lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 506:lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 507:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 508:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 509:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 510:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 511:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 512:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 513:lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 514:lvgl/src/draw/lv_draw_blend.c ****  */
 515:lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
 516:lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
 517:lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 518:lvgl/src/draw/lv_draw_blend.c **** {
 519:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 520:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 521:lvgl/src/draw/lv_draw_blend.c **** 
 522:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 523:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 524:lvgl/src/draw/lv_draw_blend.c **** 
 525:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 526:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 527:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 528:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 529:lvgl/src/draw/lv_draw_blend.c ****             break;
 530:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 531:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 532:lvgl/src/draw/lv_draw_blend.c ****             break;
 533:lvgl/src/draw/lv_draw_blend.c ****         default:
 534:lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 535:lvgl/src/draw/lv_draw_blend.c ****             return;
 536:lvgl/src/draw/lv_draw_blend.c ****     }
 537:lvgl/src/draw/lv_draw_blend.c **** 
 538:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 539:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 540:lvgl/src/draw/lv_draw_blend.c **** 
 541:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 542:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 543:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 11


 544:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 545:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 546:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 547:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 549:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 550:lvgl/src/draw/lv_draw_blend.c ****                 }
 551:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 552:lvgl/src/draw/lv_draw_blend.c ****             }
 553:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 554:lvgl/src/draw/lv_draw_blend.c ****         }
 555:lvgl/src/draw/lv_draw_blend.c ****     }
 556:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 557:lvgl/src/draw/lv_draw_blend.c ****     else {
 558:lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 559:lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 560:lvgl/src/draw/lv_draw_blend.c **** 
 561:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 562:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 563:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 564:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 565:lvgl/src/draw/lv_draw_blend.c **** 
 566:lvgl/src/draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 567:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 568:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 569:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 570:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 571:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 572:lvgl/src/draw/lv_draw_blend.c **** 
 573:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 574:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 576:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 577:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 578:lvgl/src/draw/lv_draw_blend.c **** 
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa_tmp);
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 581:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 582:lvgl/src/draw/lv_draw_blend.c ****                 }
 583:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 584:lvgl/src/draw/lv_draw_blend.c ****             }
 585:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 586:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 587:lvgl/src/draw/lv_draw_blend.c ****         }
 588:lvgl/src/draw/lv_draw_blend.c ****     }
 589:lvgl/src/draw/lv_draw_blend.c **** }
 590:lvgl/src/draw/lv_draw_blend.c **** #endif
 591:lvgl/src/draw/lv_draw_blend.c **** 
 592:lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
 593:lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 594:lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 595:lvgl/src/draw/lv_draw_blend.c **** 
 596:lvgl/src/draw/lv_draw_blend.c **** {
 597:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 598:lvgl/src/draw/lv_draw_blend.c **** 
 599:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 600:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 12


 601:lvgl/src/draw/lv_draw_blend.c **** 
 602:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 603:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 604:lvgl/src/draw/lv_draw_blend.c **** 
 605:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 606:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 607:lvgl/src/draw/lv_draw_blend.c **** 
 608:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 609:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 610:lvgl/src/draw/lv_draw_blend.c **** 
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 612:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 613:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 614:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 615:lvgl/src/draw/lv_draw_blend.c **** 
 616:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 617:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 618:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 619:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 620:lvgl/src/draw/lv_draw_blend.c ****             }
 621:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 622:lvgl/src/draw/lv_draw_blend.c ****         }
 623:lvgl/src/draw/lv_draw_blend.c ****     }
 624:lvgl/src/draw/lv_draw_blend.c ****     else {
 625:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 626:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 627:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 628:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 629:lvgl/src/draw/lv_draw_blend.c **** 
 630:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 631:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 632:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 633:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 634:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 635:lvgl/src/draw/lv_draw_blend.c ****                 }
 636:lvgl/src/draw/lv_draw_blend.c ****             }
 637:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 638:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 639:lvgl/src/draw/lv_draw_blend.c ****         }
 640:lvgl/src/draw/lv_draw_blend.c ****     }
 641:lvgl/src/draw/lv_draw_blend.c **** }
 642:lvgl/src/draw/lv_draw_blend.c **** 
 643:lvgl/src/draw/lv_draw_blend.c **** /**
 644:lvgl/src/draw/lv_draw_blend.c ****  * Copy an image to an area
 645:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 646:lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 647:lvgl/src/draw/lv_draw_blend.c ****  * @param map_area coordinates of the map (image) to copy. (absolute coordinates)
 648:lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf the pixel of the image
 649:lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 650:lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 651:lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 652:lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 653:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 654:lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 655:lvgl/src/draw/lv_draw_blend.c ****  */
 656:lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 657:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 13


 658:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
 659:lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 660:lvgl/src/draw/lv_draw_blend.c **** {
 661:lvgl/src/draw/lv_draw_blend.c **** 
 662:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 663:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 664:lvgl/src/draw/lv_draw_blend.c **** 
 665:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 666:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 667:lvgl/src/draw/lv_draw_blend.c **** 
 668:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 669:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 670:lvgl/src/draw/lv_draw_blend.c **** 
 671:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to first pixel to draw*/
 672:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 673:lvgl/src/draw/lv_draw_blend.c **** 
 674:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to first pixel to draw from the map*/
 675:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_first = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area
 676:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 677:lvgl/src/draw/lv_draw_blend.c **** 
 678:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 679:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 680:lvgl/src/draw/lv_draw_blend.c **** #endif
 681:lvgl/src/draw/lv_draw_blend.c **** 
 682:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 683:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 684:lvgl/src/draw/lv_draw_blend.c **** 
 685:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 686:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 687:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 688:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 689:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT) {
 690:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 691:lvgl/src/draw/lv_draw_blend.c ****                 return;
 692:lvgl/src/draw/lv_draw_blend.c ****             }
 693:lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 694:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT) {
 695:lvgl/src/draw/lv_draw_blend.c **** 
 696:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 697:lvgl/src/draw/lv_draw_blend.c **** 
 698:lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 699:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = draw_area_w;
 700:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = draw_area_h;
 701:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 702:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 703:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 704:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w - 1;
 705:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h - 1;
 706:lvgl/src/draw/lv_draw_blend.c **** 
 707:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 708:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 709:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 710:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 711:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 712:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 713:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w - 1;
 714:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h - 1;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 14


 715:lvgl/src/draw/lv_draw_blend.c **** 
 716:lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 717:lvgl/src/draw/lv_draw_blend.c **** 
 718:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 719:lvgl/src/draw/lv_draw_blend.c ****                     return;
 720:lvgl/src/draw/lv_draw_blend.c ****                 }
 721:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 722:lvgl/src/draw/lv_draw_blend.c ****             }
 723:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 724:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 725:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_copy(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, 
 726:lvgl/src/draw/lv_draw_blend.c ****                 return;
 727:lvgl/src/draw/lv_draw_blend.c ****             }
 728:lvgl/src/draw/lv_draw_blend.c **** #endif
 729:lvgl/src/draw/lv_draw_blend.c **** 
 730:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 731:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 732:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 733:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 734:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 735:lvgl/src/draw/lv_draw_blend.c ****             }
 736:lvgl/src/draw/lv_draw_blend.c ****         }
 737:lvgl/src/draw/lv_draw_blend.c ****         else {
 738:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 739:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT) {
 740:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 741:lvgl/src/draw/lv_draw_blend.c ****                 return;
 742:lvgl/src/draw/lv_draw_blend.c ****             }
 743:lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 744:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT) {
 745:lvgl/src/draw/lv_draw_blend.c **** 
 746:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 747:lvgl/src/draw/lv_draw_blend.c **** 
 748:lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 749:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = lv_area_get_width(map_area);
 750:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = lv_area_get_height(map_area);
 751:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 752:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 753:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 754:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w - 1;
 755:lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h - 1;
 756:lvgl/src/draw/lv_draw_blend.c **** 
 757:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 758:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 759:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 760:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 761:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 762:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 763:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w - 1;
 764:lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h - 1;
 765:lvgl/src/draw/lv_draw_blend.c **** 
 766:lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 767:lvgl/src/draw/lv_draw_blend.c **** 
 768:lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 769:lvgl/src/draw/lv_draw_blend.c ****                     return;
 770:lvgl/src/draw/lv_draw_blend.c ****                 }
 771:lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 15


 772:lvgl/src/draw/lv_draw_blend.c ****             }
 773:lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 774:lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 775:lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, map_buf_first, opa, map_w, draw_ar
 776:lvgl/src/draw/lv_draw_blend.c ****                 return;
 777:lvgl/src/draw/lv_draw_blend.c ****             }
 778:lvgl/src/draw/lv_draw_blend.c **** #endif
 779:lvgl/src/draw/lv_draw_blend.c **** 
 780:lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 781:lvgl/src/draw/lv_draw_blend.c **** 
 782:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 783:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 784:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 785:lvgl/src/draw/lv_draw_blend.c ****                     if(disp->driver->screen_transp) {
 786:lvgl/src/draw/lv_draw_blend.c ****                         lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, map_
 787:lvgl/src/draw/lv_draw_blend.c ****                                                 &disp_buf_first[x].ch.alpha);
 788:lvgl/src/draw/lv_draw_blend.c ****                     }
 789:lvgl/src/draw/lv_draw_blend.c ****                     else
 790:lvgl/src/draw/lv_draw_blend.c **** #endif
 791:lvgl/src/draw/lv_draw_blend.c ****                     {
 792:lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], opa);
 793:lvgl/src/draw/lv_draw_blend.c ****                     }
 794:lvgl/src/draw/lv_draw_blend.c ****                 }
 795:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 796:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 797:lvgl/src/draw/lv_draw_blend.c ****             }
 798:lvgl/src/draw/lv_draw_blend.c ****         }
 799:lvgl/src/draw/lv_draw_blend.c ****     }
 800:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 801:lvgl/src/draw/lv_draw_blend.c ****     else {
 802:lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 803:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 804:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 805:lvgl/src/draw/lv_draw_blend.c **** 
 806:lvgl/src/draw/lv_draw_blend.c ****             int32_t x_end4 = draw_area_w - 4;
 807:lvgl/src/draw/lv_draw_blend.c **** 
 808:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 809:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 810:lvgl/src/draw/lv_draw_blend.c **** #if 0
 811:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 812:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 813:lvgl/src/draw/lv_draw_blend.c ****                 }
 814:lvgl/src/draw/lv_draw_blend.c **** #else
 815:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 816:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 817:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 818:lvgl/src/draw/lv_draw_blend.c **** #else
 819:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 820:lvgl/src/draw/lv_draw_blend.c **** #endif
 821:lvgl/src/draw/lv_draw_blend.c ****                 }
 822:lvgl/src/draw/lv_draw_blend.c **** 
 823:lvgl/src/draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 824:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < x_end4; x += 4) {
 825:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 826:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 16


 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 830:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 831:lvgl/src/draw/lv_draw_blend.c ****                         }
 832:lvgl/src/draw/lv_draw_blend.c ****                         else {
 833:lvgl/src/draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 834:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 835:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 836:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 1)
 837:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 2)
 838:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 3)
 839:lvgl/src/draw/lv_draw_blend.c **** #else
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 843:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 844:lvgl/src/draw/lv_draw_blend.c **** #endif
 845:lvgl/src/draw/lv_draw_blend.c ****                         }
 846:lvgl/src/draw/lv_draw_blend.c ****                     }
 847:lvgl/src/draw/lv_draw_blend.c ****                     mask32++;
 848:lvgl/src/draw/lv_draw_blend.c ****                 }
 849:lvgl/src/draw/lv_draw_blend.c **** 
 850:lvgl/src/draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 851:lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 852:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 853:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 854:lvgl/src/draw/lv_draw_blend.c **** #else
 855:lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 856:lvgl/src/draw/lv_draw_blend.c **** #endif
 857:lvgl/src/draw/lv_draw_blend.c ****                 }
 858:lvgl/src/draw/lv_draw_blend.c **** #endif
 859:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 860:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 861:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 862:lvgl/src/draw/lv_draw_blend.c ****             }
 863:lvgl/src/draw/lv_draw_blend.c ****         }
 864:lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 865:lvgl/src/draw/lv_draw_blend.c ****         else {
 866:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 867:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 868:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 869:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 870:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 871:lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 872:lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 873:lvgl/src/draw/lv_draw_blend.c ****                                                     &disp_buf_first[x].ch.alpha);
 874:lvgl/src/draw/lv_draw_blend.c ****                         }
 875:lvgl/src/draw/lv_draw_blend.c ****                         else
 876:lvgl/src/draw/lv_draw_blend.c **** #endif
 877:lvgl/src/draw/lv_draw_blend.c ****                         {
 878:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], o
 879:lvgl/src/draw/lv_draw_blend.c ****                         }
 880:lvgl/src/draw/lv_draw_blend.c ****                     }
 881:lvgl/src/draw/lv_draw_blend.c ****                 }
 882:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 883:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 884:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 885:lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 17


 886:lvgl/src/draw/lv_draw_blend.c ****         }
 887:lvgl/src/draw/lv_draw_blend.c ****     }
 888:lvgl/src/draw/lv_draw_blend.c **** }
 889:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 890:lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 891:lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 892:lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 893:lvgl/src/draw/lv_draw_blend.c **** {
  29              		.loc 1 893 1 view -0
  30              		.cfi_startproc
  31              		@ args = 20, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 893 1 is_stmt 0 view .LVU1
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 85B0     		sub	sp, sp, #20
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 56
  49 0006 1746     		mov	r7, r2
  50 0008 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
  51 000c 9DF848E0 		ldrb	lr, [sp, #72]	@ zero_extendqisi2
 894:lvgl/src/draw/lv_draw_blend.c **** 
 895:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 896:lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
  52              		.loc 1 896 5 is_stmt 1 view .LVU2
  53              	.LVL1:
  54              	.LBB69:
  55              	.LBI69:
  56              		.file 2 "lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_area.h **** #include <string.h>
  18:lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 18


  19:lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/draw/../misc/lv_area.h **** 
  21:lvgl/src/draw/../misc/lv_area.h **** /*********************
  22:lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  23:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  24:lvgl/src/draw/../misc/lv_area.h **** 
  25:lvgl/src/draw/../misc/lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:lvgl/src/draw/../misc/lv_area.h **** 
  27:lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  28:lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  29:lvgl/src/draw/../misc/lv_area.h **** #else
  30:lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  31:lvgl/src/draw/../misc/lv_area.h **** #endif
  32:lvgl/src/draw/../misc/lv_area.h **** 
  33:lvgl/src/draw/../misc/lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:lvgl/src/draw/../misc/lv_area.h **** 
  37:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  39:lvgl/src/draw/../misc/lv_area.h **** 
  40:lvgl/src/draw/../misc/lv_area.h **** /**********************
  41:lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  42:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  43:lvgl/src/draw/../misc/lv_area.h **** 
  44:lvgl/src/draw/../misc/lv_area.h **** /**
  45:lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  46:lvgl/src/draw/../misc/lv_area.h ****  */
  47:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  48:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  49:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  50:lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  51:lvgl/src/draw/../misc/lv_area.h **** 
  52:lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  53:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  54:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  55:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  56:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  57:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  58:lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  59:lvgl/src/draw/../misc/lv_area.h **** 
  60:lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  61:lvgl/src/draw/../misc/lv_area.h **** enum {
  62:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  65:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  72:lvgl/src/draw/../misc/lv_area.h **** 
  73:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 19


  76:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  79:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:lvgl/src/draw/../misc/lv_area.h **** };
  86:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  87:lvgl/src/draw/../misc/lv_area.h **** 
  88:lvgl/src/draw/../misc/lv_area.h **** enum {
  89:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  96:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:lvgl/src/draw/../misc/lv_area.h **** };
  98:lvgl/src/draw/../misc/lv_area.h **** 
  99:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
 100:lvgl/src/draw/../misc/lv_area.h **** 
 101:lvgl/src/draw/../misc/lv_area.h **** /**********************
 102:lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/draw/../misc/lv_area.h ****  **********************/
 104:lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
 107:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 108:lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
 109:lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 110:lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 111:lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 112:lvgl/src/draw/../misc/lv_area.h ****  */
 113:lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:lvgl/src/draw/../misc/lv_area.h **** 
 115:lvgl/src/draw/../misc/lv_area.h **** /**
 116:lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 117:lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 118:lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 119:lvgl/src/draw/../misc/lv_area.h ****  */
 120:lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 121:lvgl/src/draw/../misc/lv_area.h **** {
 122:lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
 123:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 124:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 125:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 126:lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 130:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:lvgl/src/draw/../misc/lv_area.h ****  */
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 20


 133:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
  57              		.loc 2 133 26 view .LVU3
  58              	.LBB70:
 134:lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
  59              		.loc 2 135 5 view .LVU4
  60              		.loc 2 135 31 is_stmt 0 view .LVU5
  61 0010 8288     		ldrh	r2, [r0, #4]
  62              	.LVL2:
  63              		.loc 2 135 44 view .LVU6
  64 0012 B0F90040 		ldrsh	r4, [r0]
  65 0016 A5B2     		uxth	r5, r4
  66              		.loc 2 135 36 view .LVU7
  67 0018 521B     		subs	r2, r2, r5
  68 001a 92B2     		uxth	r2, r2
  69              		.loc 2 135 49 view .LVU8
  70 001c 0132     		adds	r2, r2, #1
  71              		.loc 2 135 12 view .LVU9
  72 001e 12B2     		sxth	r2, r2
  73 0020 0292     		str	r2, [sp, #8]
  74              	.LVL3:
  75              		.loc 2 135 12 view .LVU10
  76              	.LBE70:
  77              	.LBE69:
 897:lvgl/src/draw/lv_draw_blend.c **** 
 898:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 899:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
  78              		.loc 1 899 5 is_stmt 1 view .LVU11
  79              	.LBB71:
  80              	.LBI71:
 133:lvgl/src/draw/../misc/lv_area.h **** {
  81              		.loc 2 133 26 view .LVU12
  82              	.LBB72:
  83              		.loc 2 135 5 view .LVU13
  84              		.loc 2 135 31 is_stmt 0 view .LVU14
  85 0022 BD88     		ldrh	r5, [r7, #4]
  86              		.loc 2 135 44 view .LVU15
  87 0024 B7F90020 		ldrsh	r2, [r7]
  88              	.LVL4:
  89              		.loc 2 135 44 view .LVU16
  90 0028 96B2     		uxth	r6, r2
  91              		.loc 2 135 36 view .LVU17
  92 002a AD1B     		subs	r5, r5, r6
  93 002c ADB2     		uxth	r5, r5
  94              		.loc 2 135 49 view .LVU18
  95 002e 0135     		adds	r5, r5, #1
  96              		.loc 2 135 12 view .LVU19
  97 0030 2DB2     		sxth	r5, r5
  98 0032 0395     		str	r5, [sp, #12]
  99              	.LVL5:
 100              		.loc 2 135 12 view .LVU20
 101              	.LBE72:
 102              	.LBE71:
 900:lvgl/src/draw/lv_draw_blend.c **** 
 901:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 902:lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 103              		.loc 1 902 5 is_stmt 1 view .LVU21
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 21


 104              	.LBB73:
 105              	.LBI73:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 106              		.loc 2 133 26 view .LVU22
 107              	.LBB74:
 108              		.loc 2 135 5 view .LVU23
 109              		.loc 2 135 31 is_stmt 0 view .LVU24
 110 0034 9D88     		ldrh	r5, [r3, #4]
 111              		.loc 2 135 44 view .LVU25
 112 0036 B3F900C0 		ldrsh	ip, [r3]
 113 003a 1FFA8CF6 		uxth	r6, ip
 114              		.loc 2 135 36 view .LVU26
 115 003e AD1B     		subs	r5, r5, r6
 116 0040 ADB2     		uxth	r5, r5
 117              		.loc 2 135 49 view .LVU27
 118 0042 0135     		adds	r5, r5, #1
 119              		.loc 2 135 12 view .LVU28
 120 0044 2DB2     		sxth	r5, r5
 121 0046 0195     		str	r5, [sp, #4]
 122              	.LVL6:
 123              		.loc 2 135 12 view .LVU29
 124              	.LBE74:
 125              	.LBE73:
 903:lvgl/src/draw/lv_draw_blend.c **** 
 904:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 905:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 126              		.loc 1 905 5 is_stmt 1 view .LVU30
 127              		.loc 1 905 62 is_stmt 0 view .LVU31
 128 0048 B7F90250 		ldrsh	r5, [r7, #2]
 129              	.LVL7:
 130              		.loc 1 905 51 view .LVU32
 131 004c 0095     		str	r5, [sp]
 132 004e 029E     		ldr	r6, [sp, #8]
 133 0050 06FB05F6 		mul	r6, r6, r5
 134              		.loc 1 905 18 view .LVU33
 135 0054 01EB4606 		add	r6, r1, r6, lsl #1
 136              	.LVL8:
 906:lvgl/src/draw/lv_draw_blend.c **** 
 907:lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 908:lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 137              		.loc 1 908 5 is_stmt 1 view .LVU34
 138              		.loc 1 908 82 is_stmt 0 view .LVU35
 139 0058 B3F90250 		ldrsh	r5, [r3, #2]
 140              		.loc 1 908 98 view .LVU36
 141 005c B0F90230 		ldrsh	r3, [r0, #2]
 142              	.LVL9:
 143              		.loc 1 908 87 view .LVU37
 144 0060 ED1A     		subs	r5, r5, r3
 145              		.loc 1 908 71 view .LVU38
 146 0062 009B     		ldr	r3, [sp]
 147 0064 5D1B     		subs	r5, r3, r5
 148              		.loc 1 908 54 view .LVU39
 149 0066 019B     		ldr	r3, [sp, #4]
 150 0068 03FB05F5 		mul	r5, r3, r5
 151              		.loc 1 908 24 view .LVU40
 152 006c 0E9B     		ldr	r3, [sp, #56]
 153 006e 03EB4505 		add	r5, r3, r5, lsl #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 22


 154              	.LVL10:
 909:lvgl/src/draw/lv_draw_blend.c **** 
 910:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 155              		.loc 1 910 5 is_stmt 1 view .LVU41
 911:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 156              		.loc 1 911 5 view .LVU42
 157 0072 BEF1010F 		cmp	lr, #1
 158 0076 0ED0     		beq	.L15
 159 0078 BEF1020F 		cmp	lr, #2
 160 007c 5DD1     		bne	.L1
 912:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 913:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 914:lvgl/src/draw/lv_draw_blend.c ****             break;
 915:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 916:lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 161              		.loc 1 916 22 is_stmt 0 view .LVU43
 162 007e DFF8C0B0 		ldr	fp, .L21
 163              	.L2:
 164              	.LVL11:
 917:lvgl/src/draw/lv_draw_blend.c ****             break;
 918:lvgl/src/draw/lv_draw_blend.c ****         default:
 919:lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 920:lvgl/src/draw/lv_draw_blend.c ****             return;
 921:lvgl/src/draw/lv_draw_blend.c ****     }
 922:lvgl/src/draw/lv_draw_blend.c **** 
 923:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 165              		.loc 1 923 5 is_stmt 1 view .LVU44
 924:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 166              		.loc 1 924 5 view .LVU45
 925:lvgl/src/draw/lv_draw_blend.c **** 
 926:lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 927:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 167              		.loc 1 927 5 view .LVU46
 168              		.loc 1 927 7 is_stmt 0 view .LVU47
 169 0082 9DF84430 		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 170 0086 012B     		cmp	r3, #1
 171 0088 08D0     		beq	.L18
 172              	.LBB75:
 928:lvgl/src/draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 929:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 930:lvgl/src/draw/lv_draw_blend.c **** 
 931:lvgl/src/draw/lv_draw_blend.c ****         /*The map will be indexed from `draw_area->x1` so compensate it.*/
 932:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 933:lvgl/src/draw/lv_draw_blend.c **** 
 934:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 935:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 936:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 937:lvgl/src/draw/lv_draw_blend.c ****             }
 938:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 939:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 940:lvgl/src/draw/lv_draw_blend.c ****         }
 941:lvgl/src/draw/lv_draw_blend.c ****     }
 942:lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 943:lvgl/src/draw/lv_draw_blend.c ****     else {
 944:lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 945:lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 946:lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 23


 947:lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 173              		.loc 1 947 9 is_stmt 1 view .LVU48
 174              		.loc 1 947 26 is_stmt 0 view .LVU49
 175 008a 109B     		ldr	r3, [sp, #64]
 176 008c A3EB0209 		sub	r9, r3, r2
 177              	.LVL12:
 948:lvgl/src/draw/lv_draw_blend.c **** 
 949:lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 178              		.loc 1 949 9 is_stmt 1 view .LVU50
 179              		.loc 1 949 21 is_stmt 0 view .LVU51
 180 0090 A5EB4208 		sub	r8, r5, r2, lsl #1
 181              	.LVL13:
 950:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 182              		.loc 1 950 9 is_stmt 1 view .LVU52
 183              		.loc 1 950 9 is_stmt 0 view .LVU53
 184 0094 49E0     		b	.L9
 185              	.LVL14:
 186              	.L15:
 187              		.loc 1 950 9 view .LVU54
 188              	.LBE75:
 911:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 189              		.loc 1 911 5 view .LVU55
 190 0096 DFF8ACB0 		ldr	fp, .L21+4
 191 009a F2E7     		b	.L2
 192              	.LVL15:
 193              	.L18:
 929:lvgl/src/draw/lv_draw_blend.c **** 
 194              		.loc 1 929 9 is_stmt 1 view .LVU56
 932:lvgl/src/draw/lv_draw_blend.c **** 
 195              		.loc 1 932 9 view .LVU57
 932:lvgl/src/draw/lv_draw_blend.c **** 
 196              		.loc 1 932 21 is_stmt 0 view .LVU58
 197 009c A4EB0C04 		sub	r4, r4, ip
 198 00a0 05EB4405 		add	r5, r5, r4, lsl #1
 199              	.LVL16:
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 200              		.loc 1 934 9 is_stmt 1 view .LVU59
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 201              		.loc 1 934 9 is_stmt 0 view .LVU60
 202 00a4 DDF80080 		ldr	r8, [sp]
 203 00a8 DDF80890 		ldr	r9, [sp, #8]
 204 00ac 06E0     		b	.L5
 205              	.LVL17:
 206              	.L19:
 938:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 207              		.loc 1 938 13 is_stmt 1 discriminator 2 view .LVU61
 938:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 208              		.loc 1 938 26 is_stmt 0 discriminator 2 view .LVU62
 209 00ae 06EB4906 		add	r6, r6, r9, lsl #1
 210              	.LVL18:
 939:lvgl/src/draw/lv_draw_blend.c ****         }
 211              		.loc 1 939 13 is_stmt 1 discriminator 2 view .LVU63
 939:lvgl/src/draw/lv_draw_blend.c ****         }
 212              		.loc 1 939 25 is_stmt 0 discriminator 2 view .LVU64
 213 00b2 019B     		ldr	r3, [sp, #4]
 214 00b4 05EB4305 		add	r5, r5, r3, lsl #1
 215              	.LVL19:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 24


 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 216              		.loc 1 934 52 is_stmt 1 discriminator 2 view .LVU65
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 217              		.loc 1 934 53 is_stmt 0 discriminator 2 view .LVU66
 218 00b8 08F10108 		add	r8, r8, #1
 219              	.LVL20:
 220              	.L5:
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 221              		.loc 1 934 32 is_stmt 1 discriminator 1 view .LVU67
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 222              		.loc 1 934 46 is_stmt 0 discriminator 1 view .LVU68
 223 00bc B7F90630 		ldrsh	r3, [r7, #6]
 934:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 224              		.loc 1 934 9 discriminator 1 view .LVU69
 225 00c0 4345     		cmp	r3, r8
 226 00c2 3ADB     		blt	.L1
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 227              		.loc 1 935 13 is_stmt 1 view .LVU70
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 228              		.loc 1 935 30 is_stmt 0 view .LVU71
 229 00c4 B7F90040 		ldrsh	r4, [r7]
 230              	.LVL21:
 231              	.L6:
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 232              		.loc 1 935 36 is_stmt 1 discriminator 1 view .LVU72
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 233              		.loc 1 935 50 is_stmt 0 discriminator 1 view .LVU73
 234 00c8 B7F90430 		ldrsh	r3, [r7, #4]
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 235              		.loc 1 935 13 discriminator 1 view .LVU74
 236 00cc A342     		cmp	r3, r4
 237 00ce EEDB     		blt	.L19
 936:lvgl/src/draw/lv_draw_blend.c ****             }
 238              		.loc 1 936 17 is_stmt 1 discriminator 3 view .LVU75
 936:lvgl/src/draw/lv_draw_blend.c ****             }
 239              		.loc 1 936 35 is_stmt 0 discriminator 3 view .LVU76
 240 00d0 5246     		mov	r2, r10
 241 00d2 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 242 00d6 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 243 00da D847     		blx	fp
 244              	.LVL22:
 245 00dc 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 246              		.loc 1 935 56 is_stmt 1 discriminator 3 view .LVU77
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 247              		.loc 1 935 57 is_stmt 0 discriminator 3 view .LVU78
 248 00e0 0134     		adds	r4, r4, #1
 249              	.LVL23:
 935:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 250              		.loc 1 935 57 discriminator 3 view .LVU79
 251 00e2 F1E7     		b	.L6
 252              	.LVL24:
 253              	.L16:
 254              	.LBB78:
 255              	.LBB76:
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 952:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 25


 953:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 256              		.loc 1 953 26 view .LVU80
 257 00e4 5246     		mov	r2, r10
 258              	.L12:
 259              	.LVL25:
 954:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 260              		.loc 1 954 17 is_stmt 1 discriminator 4 view .LVU81
 261              		.loc 1 954 35 is_stmt 0 discriminator 4 view .LVU82
 262 00e6 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 263 00ea 38F81500 		ldrh	r0, [r8, r5, lsl #1]
 264 00ee D847     		blx	fp
 265              	.LVL26:
 266              		.loc 1 954 35 discriminator 4 view .LVU83
 267 00f0 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 268              	.L11:
 269              		.loc 1 954 35 discriminator 4 view .LVU84
 270              	.LBE76:
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 271              		.loc 1 951 56 is_stmt 1 discriminator 2 view .LVU85
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 272              		.loc 1 951 57 is_stmt 0 discriminator 2 view .LVU86
 273 00f4 0134     		adds	r4, r4, #1
 274              	.LVL27:
 275              	.L10:
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 276              		.loc 1 951 36 is_stmt 1 discriminator 1 view .LVU87
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 277              		.loc 1 951 50 is_stmt 0 discriminator 1 view .LVU88
 278 00f6 B7F90430 		ldrsh	r3, [r7, #4]
 951:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 279              		.loc 1 951 13 discriminator 1 view .LVU89
 280 00fa A342     		cmp	r3, r4
 281 00fc 0ADB     		blt	.L20
 282              	.LBB77:
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 283              		.loc 1 952 17 is_stmt 1 view .LVU90
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 284              		.loc 1 952 28 is_stmt 0 view .LVU91
 285 00fe 2546     		mov	r5, r4
 286 0100 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 952:lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 287              		.loc 1 952 19 view .LVU92
 288 0104 002A     		cmp	r2, #0
 289 0106 F5D0     		beq	.L11
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 290              		.loc 1 953 17 is_stmt 1 view .LVU93
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 291              		.loc 1 953 26 is_stmt 0 view .LVU94
 292 0108 FC2A     		cmp	r2, #252
 293 010a EBD8     		bhi	.L16
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 294              		.loc 1 953 76 discriminator 1 view .LVU95
 295 010c 02FB0AF2 		mul	r2, r2, r10
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 296              		.loc 1 953 26 discriminator 1 view .LVU96
 297 0110 120A     		lsrs	r2, r2, #8
 298 0112 E8E7     		b	.L12
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 26


 299              	.L20:
 953:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 300              		.loc 1 953 26 discriminator 1 view .LVU97
 301              	.LBE77:
 955:lvgl/src/draw/lv_draw_blend.c ****             }
 956:lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 302              		.loc 1 956 13 is_stmt 1 discriminator 2 view .LVU98
 303              		.loc 1 956 26 is_stmt 0 discriminator 2 view .LVU99
 304 0114 029B     		ldr	r3, [sp, #8]
 305 0116 06EB4306 		add	r6, r6, r3, lsl #1
 306              	.LVL28:
 957:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 307              		.loc 1 957 13 is_stmt 1 discriminator 2 view .LVU100
 308              		.loc 1 957 22 is_stmt 0 discriminator 2 view .LVU101
 309 011a 039B     		ldr	r3, [sp, #12]
 310 011c 9944     		add	r9, r9, r3
 311              	.LVL29:
 958:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 312              		.loc 1 958 13 is_stmt 1 discriminator 2 view .LVU102
 313              		.loc 1 958 25 is_stmt 0 discriminator 2 view .LVU103
 314 011e 019B     		ldr	r3, [sp, #4]
 315 0120 08EB4308 		add	r8, r8, r3, lsl #1
 316              	.LVL30:
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 317              		.loc 1 950 52 is_stmt 1 discriminator 2 view .LVU104
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 318              		.loc 1 950 53 is_stmt 0 discriminator 2 view .LVU105
 319 0124 009B     		ldr	r3, [sp]
 320 0126 0133     		adds	r3, r3, #1
 321 0128 0093     		str	r3, [sp]
 322              	.LVL31:
 323              	.L9:
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 324              		.loc 1 950 32 is_stmt 1 discriminator 1 view .LVU106
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 325              		.loc 1 950 46 is_stmt 0 discriminator 1 view .LVU107
 326 012a B7F90630 		ldrsh	r3, [r7, #6]
 950:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 327              		.loc 1 950 9 discriminator 1 view .LVU108
 328 012e 009A     		ldr	r2, [sp]
 329 0130 9342     		cmp	r3, r2
 330 0132 02DB     		blt	.L1
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 331              		.loc 1 951 13 is_stmt 1 view .LVU109
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 332              		.loc 1 951 30 is_stmt 0 view .LVU110
 333 0134 B7F90040 		ldrsh	r4, [r7]
 334              	.LVL32:
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 335              		.loc 1 951 13 view .LVU111
 336 0138 DDE7     		b	.L10
 337              	.LVL33:
 338              	.L1:
 951:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 339              		.loc 1 951 13 view .LVU112
 340              	.LBE78:
 959:lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 27


 960:lvgl/src/draw/lv_draw_blend.c ****     }
 961:lvgl/src/draw/lv_draw_blend.c **** }
 341              		.loc 1 961 1 view .LVU113
 342 013a 05B0     		add	sp, sp, #20
 343              	.LCFI2:
 344              		.cfi_def_cfa_offset 36
 345              		@ sp needed
 346 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 347              	.LVL34:
 348              	.L22:
 349              		.loc 1 961 1 view .LVU114
 350              		.align	2
 351              	.L21:
 352 0140 00000000 		.word	color_blend_true_color_subtractive
 353 0144 00000000 		.word	color_blend_true_color_additive
 354              		.cfi_endproc
 355              	.LFE154:
 357              		.section	.text.fill_set_px,"ax",%progbits
 358              		.align	1
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	fill_set_px:
 364              	.LVL35:
 365              	.LFB149:
 245:lvgl/src/draw/lv_draw_blend.c **** 
 366              		.loc 1 245 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 12, pretend = 0, frame = 16
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 245:lvgl/src/draw/lv_draw_blend.c **** 
 370              		.loc 1 245 1 is_stmt 0 view .LVU116
 371 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 372              	.LCFI3:
 373              		.cfi_def_cfa_offset 36
 374              		.cfi_offset 4, -36
 375              		.cfi_offset 5, -32
 376              		.cfi_offset 6, -28
 377              		.cfi_offset 7, -24
 378              		.cfi_offset 8, -20
 379              		.cfi_offset 9, -16
 380              		.cfi_offset 10, -12
 381              		.cfi_offset 11, -8
 382              		.cfi_offset 14, -4
 383 0004 89B0     		sub	sp, sp, #36
 384              	.LCFI4:
 385              		.cfi_def_cfa_offset 72
 386 0006 0446     		mov	r4, r0
 387 0008 0691     		str	r1, [sp, #24]
 388 000a 1546     		mov	r5, r2
 389 000c 9946     		mov	r9, r3	@ movhi
 390              	.LVL36:
 245:lvgl/src/draw/lv_draw_blend.c **** 
 391              		.loc 1 245 1 view .LVU117
 392 000e 9DF848A0 		ldrb	r10, [sp, #72]	@ zero_extendqisi2
 247:lvgl/src/draw/lv_draw_blend.c **** 
 393              		.loc 1 247 5 is_stmt 1 view .LVU118
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 28


 247:lvgl/src/draw/lv_draw_blend.c **** 
 394              		.loc 1 247 24 is_stmt 0 view .LVU119
 395 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 396              	.LVL37:
 247:lvgl/src/draw/lv_draw_blend.c **** 
 397              		.loc 1 247 24 view .LVU120
 398 0016 8046     		mov	r8, r0
 399              	.LVL38:
 250:lvgl/src/draw/lv_draw_blend.c **** 
 400              		.loc 1 250 5 is_stmt 1 view .LVU121
 401              	.LBB79:
 402              	.LBI79:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 403              		.loc 2 133 26 view .LVU122
 404              	.LBB80:
 405              		.loc 2 135 5 view .LVU123
 406              		.loc 2 135 31 is_stmt 0 view .LVU124
 407 0018 A788     		ldrh	r7, [r4, #4]
 408              		.loc 2 135 44 view .LVU125
 409 001a 2388     		ldrh	r3, [r4]
 410              		.loc 2 135 36 view .LVU126
 411 001c FF1A     		subs	r7, r7, r3
 412 001e BFB2     		uxth	r7, r7
 413              		.loc 2 135 49 view .LVU127
 414 0020 0137     		adds	r7, r7, #1
 415              		.loc 2 135 12 view .LVU128
 416 0022 3FB2     		sxth	r7, r7
 417              	.LVL39:
 418              		.loc 2 135 12 view .LVU129
 419              	.LBE80:
 420              	.LBE79:
 252:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 421              		.loc 1 252 5 is_stmt 1 view .LVU130
 253:lvgl/src/draw/lv_draw_blend.c **** 
 422              		.loc 1 253 5 view .LVU131
 255:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 423              		.loc 1 255 5 view .LVU132
 255:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 424              		.loc 1 255 7 is_stmt 0 view .LVU133
 425 0024 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 426 0028 012B     		cmp	r3, #1
 427 002a 0FD0     		beq	.L36
 428              	.LBB81:
 266:lvgl/src/draw/lv_draw_blend.c **** 
 429              		.loc 1 266 9 is_stmt 1 view .LVU134
 266:lvgl/src/draw/lv_draw_blend.c **** 
 430              		.loc 1 266 53 is_stmt 0 view .LVU135
 431 002c B5F90020 		ldrsh	r2, [r5]
 266:lvgl/src/draw/lv_draw_blend.c **** 
 432              		.loc 1 266 26 view .LVU136
 433 0030 139E     		ldr	r6, [sp, #76]
 434 0032 B61A     		subs	r6, r6, r2
 435              	.LVL40:
 269:lvgl/src/draw/lv_draw_blend.c **** 
 436              		.loc 1 269 9 is_stmt 1 view .LVU137
 437              	.LBB82:
 438              	.LBI82:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 29


 133:lvgl/src/draw/../misc/lv_area.h **** {
 439              		.loc 2 133 26 view .LVU138
 440              	.LBB83:
 441              		.loc 2 135 5 view .LVU139
 442              		.loc 2 135 31 is_stmt 0 view .LVU140
 443 0034 AB88     		ldrh	r3, [r5, #4]
 444              		.loc 2 135 44 view .LVU141
 445 0036 92B2     		uxth	r2, r2
 446              		.loc 2 135 36 view .LVU142
 447 0038 9B1A     		subs	r3, r3, r2
 448 003a 9BB2     		uxth	r3, r3
 449              		.loc 2 135 49 view .LVU143
 450 003c 0133     		adds	r3, r3, #1
 451              		.loc 2 135 12 view .LVU144
 452 003e 1BB2     		sxth	r3, r3
 453 0040 0793     		str	r3, [sp, #28]
 454              	.LVL41:
 455              		.loc 2 135 12 view .LVU145
 456              	.LBE83:
 457              	.LBE82:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 458              		.loc 1 271 9 is_stmt 1 view .LVU146
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 459              		.loc 1 271 26 is_stmt 0 view .LVU147
 460 0042 B5F90230 		ldrsh	r3, [r5, #2]
 461              	.LVL42:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 462              		.loc 1 271 26 view .LVU148
 463 0046 9B46     		mov	fp, r3
 464 0048 0597     		str	r7, [sp, #20]
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 465              		.loc 1 271 9 view .LVU149
 466 004a 41E0     		b	.L30
 467              	.LVL43:
 468              	.L36:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 469              		.loc 1 271 9 view .LVU150
 470              	.LBE81:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 471              		.loc 1 256 9 is_stmt 1 view .LVU151
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 472              		.loc 1 256 26 is_stmt 0 view .LVU152
 473 004c B5F902B0 		ldrsh	fp, [r5, #2]
 474              	.LVL44:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 475              		.loc 1 256 26 view .LVU153
 476 0050 CDF814B0 		str	fp, [sp, #20]
 477 0054 DDF818B0 		ldr	fp, [sp, #24]
 478              	.LVL45:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 479              		.loc 1 256 9 view .LVU154
 480 0058 15E0     		b	.L25
 481              	.LVL46:
 482              	.L27:
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 483              		.loc 1 258 17 is_stmt 1 discriminator 3 view .LVU155
 258:lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 30


 484              		.loc 1 258 21 is_stmt 0 discriminator 3 view .LVU156
 485 005a D8F80000 		ldr	r0, [r8]
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 486              		.loc 1 258 29 discriminator 3 view .LVU157
 487 005e 4669     		ldr	r6, [r0, #20]
 258:lvgl/src/draw/lv_draw_blend.c ****             }
 488              		.loc 1 258 17 discriminator 3 view .LVU158
 489 0060 CDF808A0 		str	r10, [sp, #8]
 490 0064 ADF80490 		strh	r9, [sp, #4]	@ movhi
 491 0068 BDF91430 		ldrsh	r3, [sp, #20]
 492 006c 0093     		str	r3, [sp]
 493 006e 23B2     		sxth	r3, r4
 494 0070 3A46     		mov	r2, r7
 495 0072 5946     		mov	r1, fp
 496 0074 B047     		blx	r6
 497              	.LVL47:
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 498              		.loc 1 257 56 is_stmt 1 discriminator 3 view .LVU159
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 499              		.loc 1 257 57 is_stmt 0 discriminator 3 view .LVU160
 500 0076 0134     		adds	r4, r4, #1
 501              	.LVL48:
 502              	.L26:
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 503              		.loc 1 257 36 is_stmt 1 discriminator 1 view .LVU161
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 504              		.loc 1 257 50 is_stmt 0 discriminator 1 view .LVU162
 505 0078 B5F90430 		ldrsh	r3, [r5, #4]
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 506              		.loc 1 257 13 discriminator 1 view .LVU163
 507 007c A342     		cmp	r3, r4
 508 007e ECDA     		bge	.L27
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 509              		.loc 1 256 52 is_stmt 1 discriminator 2 view .LVU164
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 510              		.loc 1 256 53 is_stmt 0 discriminator 2 view .LVU165
 511 0080 059B     		ldr	r3, [sp, #20]
 512 0082 0133     		adds	r3, r3, #1
 513 0084 0593     		str	r3, [sp, #20]
 514              	.LVL49:
 515              	.L25:
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 516              		.loc 1 256 32 is_stmt 1 discriminator 1 view .LVU166
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 517              		.loc 1 256 46 is_stmt 0 discriminator 1 view .LVU167
 518 0086 B5F90630 		ldrsh	r3, [r5, #6]
 256:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 519              		.loc 1 256 9 discriminator 1 view .LVU168
 520 008a 059A     		ldr	r2, [sp, #20]
 521 008c 9342     		cmp	r3, r2
 522 008e 26DB     		blt	.L23
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 523              		.loc 1 257 13 is_stmt 1 view .LVU169
 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 524              		.loc 1 257 30 is_stmt 0 view .LVU170
 525 0090 B5F90040 		ldrsh	r4, [r5]
 526              	.LVL50:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 31


 257:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 527              		.loc 1 257 13 view .LVU171
 528 0094 F0E7     		b	.L26
 529              	.LVL51:
 530              	.L32:
 531              	.LBB84:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 532              		.loc 1 272 56 is_stmt 1 discriminator 2 view .LVU172
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 533              		.loc 1 272 57 is_stmt 0 discriminator 2 view .LVU173
 534 0096 0134     		adds	r4, r4, #1
 535              	.LVL52:
 536              	.L31:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 537              		.loc 1 272 36 is_stmt 1 discriminator 1 view .LVU174
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 538              		.loc 1 272 50 is_stmt 0 discriminator 1 view .LVU175
 539 0098 B5F90430 		ldrsh	r3, [r5, #4]
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 540              		.loc 1 272 13 discriminator 1 view .LVU176
 541 009c A342     		cmp	r3, r4
 542 009e 13DB     		blt	.L37
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 543              		.loc 1 273 17 is_stmt 1 view .LVU177
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 544              		.loc 1 273 28 is_stmt 0 view .LVU178
 545 00a0 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 273:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 546              		.loc 1 273 19 view .LVU179
 547 00a2 002B     		cmp	r3, #0
 548 00a4 F7D0     		beq	.L32
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 549              		.loc 1 274 21 is_stmt 1 view .LVU180
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 550              		.loc 1 274 25 is_stmt 0 view .LVU181
 551 00a6 D8F80000 		ldr	r0, [r8]
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 552              		.loc 1 274 33 view .LVU182
 553 00aa 4769     		ldr	r7, [r0, #20]
 275:lvgl/src/draw/lv_draw_blend.c ****                 }
 554              		.loc 1 275 44 view .LVU183
 555 00ac 03FB0AF3 		mul	r3, r3, r10
 274:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 556              		.loc 1 274 21 view .LVU184
 557 00b0 1B0A     		lsrs	r3, r3, #8
 558 00b2 0293     		str	r3, [sp, #8]
 559 00b4 ADF80490 		strh	r9, [sp, #4]	@ movhi
 560 00b8 0FFA8BF3 		sxth	r3, fp
 561 00bc 0093     		str	r3, [sp]
 562 00be 23B2     		sxth	r3, r4
 563 00c0 059A     		ldr	r2, [sp, #20]
 564 00c2 0699     		ldr	r1, [sp, #24]
 565 00c4 B847     		blx	r7
 566              	.LVL53:
 567 00c6 E6E7     		b	.L32
 568              	.L37:
 278:lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 32


 569              		.loc 1 278 13 is_stmt 1 discriminator 2 view .LVU185
 278:lvgl/src/draw/lv_draw_blend.c ****         }
 570              		.loc 1 278 22 is_stmt 0 discriminator 2 view .LVU186
 571 00c8 079B     		ldr	r3, [sp, #28]
 572 00ca 1E44     		add	r6, r6, r3
 573              	.LVL54:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 574              		.loc 1 271 52 is_stmt 1 discriminator 2 view .LVU187
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 575              		.loc 1 271 53 is_stmt 0 discriminator 2 view .LVU188
 576 00cc 0BF1010B 		add	fp, fp, #1
 577              	.LVL55:
 578              	.L30:
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 579              		.loc 1 271 32 is_stmt 1 discriminator 1 view .LVU189
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 580              		.loc 1 271 46 is_stmt 0 discriminator 1 view .LVU190
 581 00d0 B5F90630 		ldrsh	r3, [r5, #6]
 271:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 582              		.loc 1 271 9 discriminator 1 view .LVU191
 583 00d4 5B45     		cmp	r3, fp
 584 00d6 02DB     		blt	.L23
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 585              		.loc 1 272 13 is_stmt 1 view .LVU192
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 586              		.loc 1 272 30 is_stmt 0 view .LVU193
 587 00d8 B5F90040 		ldrsh	r4, [r5]
 588              	.LVL56:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 589              		.loc 1 272 13 view .LVU194
 590 00dc DCE7     		b	.L31
 591              	.LVL57:
 592              	.L23:
 272:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 593              		.loc 1 272 13 view .LVU195
 594              	.LBE84:
 281:lvgl/src/draw/lv_draw_blend.c **** 
 595              		.loc 1 281 1 view .LVU196
 596 00de 09B0     		add	sp, sp, #36
 597              	.LCFI5:
 598              		.cfi_def_cfa_offset 36
 599              		@ sp needed
 600 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 281:lvgl/src/draw/lv_draw_blend.c **** 
 601              		.loc 1 281 1 view .LVU197
 602              		.cfi_endproc
 603              	.LFE149:
 605              		.section	.text.map_set_px,"ax",%progbits
 606              		.align	1
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	map_set_px:
 612              	.LVL58:
 613              	.LFB152:
 596:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 614              		.loc 1 596 1 is_stmt 1 view -0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 33


 615              		.cfi_startproc
 616              		@ args = 16, pretend = 0, frame = 24
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 596:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 618              		.loc 1 596 1 is_stmt 0 view .LVU199
 619 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 620              	.LCFI6:
 621              		.cfi_def_cfa_offset 36
 622              		.cfi_offset 4, -36
 623              		.cfi_offset 5, -32
 624              		.cfi_offset 6, -28
 625              		.cfi_offset 7, -24
 626              		.cfi_offset 8, -20
 627              		.cfi_offset 9, -16
 628              		.cfi_offset 10, -12
 629              		.cfi_offset 11, -8
 630              		.cfi_offset 14, -4
 631 0004 8BB0     		sub	sp, sp, #44
 632              	.LCFI7:
 633              		.cfi_def_cfa_offset 80
 634 0006 0446     		mov	r4, r0
 635 0008 0691     		str	r1, [sp, #24]
 636 000a 1546     		mov	r5, r2
 637 000c 1E46     		mov	r6, r3
 638 000e 9DF854A0 		ldrb	r10, [sp, #84]	@ zero_extendqisi2
 597:lvgl/src/draw/lv_draw_blend.c **** 
 639              		.loc 1 597 5 is_stmt 1 view .LVU200
 597:lvgl/src/draw/lv_draw_blend.c **** 
 640              		.loc 1 597 24 is_stmt 0 view .LVU201
 641 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 642              	.LVL59:
 597:lvgl/src/draw/lv_draw_blend.c **** 
 643              		.loc 1 597 24 view .LVU202
 644 0016 8146     		mov	r9, r0
 645              	.LVL60:
 600:lvgl/src/draw/lv_draw_blend.c **** 
 646              		.loc 1 600 5 is_stmt 1 view .LVU203
 647              	.LBB85:
 648              	.LBI85:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 649              		.loc 2 133 26 view .LVU204
 650              	.LBB86:
 651              		.loc 2 135 5 view .LVU205
 652              		.loc 2 135 31 is_stmt 0 view .LVU206
 653 0018 B4F80480 		ldrh	r8, [r4, #4]
 654              		.loc 2 135 44 view .LVU207
 655 001c B4F90000 		ldrsh	r0, [r4]
 656              	.LVL61:
 657              		.loc 2 135 44 view .LVU208
 658 0020 83B2     		uxth	r3, r0
 659              		.loc 2 135 36 view .LVU209
 660 0022 A8EB0308 		sub	r8, r8, r3
 661 0026 1FFA88F8 		uxth	r8, r8
 662              		.loc 2 135 49 view .LVU210
 663 002a 08F10108 		add	r8, r8, #1
 664              		.loc 2 135 12 view .LVU211
 665 002e 0FFA88F8 		sxth	r8, r8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 34


 666              	.LVL62:
 667              		.loc 2 135 12 view .LVU212
 668              	.LBE86:
 669              	.LBE85:
 603:lvgl/src/draw/lv_draw_blend.c **** 
 670              		.loc 1 603 5 is_stmt 1 view .LVU213
 671              	.LBB87:
 672              	.LBI87:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 673              		.loc 2 133 26 view .LVU214
 674              	.LBB88:
 675              		.loc 2 135 5 view .LVU215
 676              		.loc 2 135 31 is_stmt 0 view .LVU216
 677 0032 AB88     		ldrh	r3, [r5, #4]
 678              		.loc 2 135 44 view .LVU217
 679 0034 B5F90020 		ldrsh	r2, [r5]
 680 0038 91B2     		uxth	r1, r2
 681              		.loc 2 135 36 view .LVU218
 682 003a 5B1A     		subs	r3, r3, r1
 683 003c 9BB2     		uxth	r3, r3
 684              		.loc 2 135 49 view .LVU219
 685 003e 0133     		adds	r3, r3, #1
 686              		.loc 2 135 12 view .LVU220
 687 0040 1BB2     		sxth	r3, r3
 688 0042 0993     		str	r3, [sp, #36]
 689              	.LVL63:
 690              		.loc 2 135 12 view .LVU221
 691              	.LBE88:
 692              	.LBE87:
 606:lvgl/src/draw/lv_draw_blend.c **** 
 693              		.loc 1 606 5 is_stmt 1 view .LVU222
 694              	.LBB89:
 695              	.LBI89:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 696              		.loc 2 133 26 view .LVU223
 697              	.LBB90:
 698              		.loc 2 135 5 view .LVU224
 699              		.loc 2 135 31 is_stmt 0 view .LVU225
 700 0044 B188     		ldrh	r1, [r6, #4]
 701              		.loc 2 135 44 view .LVU226
 702 0046 B6F90030 		ldrsh	r3, [r6]
 703 004a 9FB2     		uxth	r7, r3
 704              		.loc 2 135 36 view .LVU227
 705 004c C91B     		subs	r1, r1, r7
 706 004e 89B2     		uxth	r1, r1
 707              		.loc 2 135 49 view .LVU228
 708 0050 0131     		adds	r1, r1, #1
 709              		.loc 2 135 12 view .LVU229
 710 0052 0FB2     		sxth	r7, r1
 711 0054 0897     		str	r7, [sp, #32]
 712              	.LVL64:
 713              		.loc 2 135 12 view .LVU230
 714              	.LBE90:
 715              	.LBE89:
 609:lvgl/src/draw/lv_draw_blend.c **** 
 716              		.loc 1 609 5 is_stmt 1 view .LVU231
 609:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 35


 717              		.loc 1 609 66 is_stmt 0 view .LVU232
 718 0056 B5F90210 		ldrsh	r1, [r5, #2]
 719 005a 0591     		str	r1, [sp, #20]
 609:lvgl/src/draw/lv_draw_blend.c **** 
 720              		.loc 1 609 82 view .LVU233
 721 005c B6F90260 		ldrsh	r6, [r6, #2]
 722              	.LVL65:
 609:lvgl/src/draw/lv_draw_blend.c **** 
 723              		.loc 1 609 98 view .LVU234
 724 0060 B4F90210 		ldrsh	r1, [r4, #2]
 609:lvgl/src/draw/lv_draw_blend.c **** 
 725              		.loc 1 609 87 view .LVU235
 726 0064 761A     		subs	r6, r6, r1
 609:lvgl/src/draw/lv_draw_blend.c **** 
 727              		.loc 1 609 71 view .LVU236
 728 0066 0599     		ldr	r1, [sp, #20]
 729 0068 8E1B     		subs	r6, r1, r6
 730              	.LVL66:
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 731              		.loc 1 611 5 is_stmt 1 view .LVU237
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 732              		.loc 1 611 51 is_stmt 0 view .LVU238
 733 006a 1B1A     		subs	r3, r3, r0
 611:lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 734              		.loc 1 611 35 view .LVU239
 735 006c D31A     		subs	r3, r2, r3
 736              	.LVL67:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 737              		.loc 1 612 5 is_stmt 1 view .LVU240
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 738              		.loc 1 612 17 is_stmt 0 view .LVU241
 739 006e 07FB0636 		mla	r6, r7, r6, r3
 740              	.LVL68:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 741              		.loc 1 612 17 view .LVU242
 742 0072 B31A     		subs	r3, r6, r2
 743              	.LVL69:
 612:lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 744              		.loc 1 612 17 view .LVU243
 745 0074 149E     		ldr	r6, [sp, #80]
 746 0076 06EB4306 		add	r6, r6, r3, lsl #1
 747              	.LVL70:
 613:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 748              		.loc 1 613 5 is_stmt 1 view .LVU244
 614:lvgl/src/draw/lv_draw_blend.c **** 
 749              		.loc 1 614 5 view .LVU245
 616:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 750              		.loc 1 616 5 view .LVU246
 616:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 751              		.loc 1 616 7 is_stmt 0 view .LVU247
 752 007a 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
 753 007e 012B     		cmp	r3, #1
 754 0080 07D0     		beq	.L52
 755              	.LBB91:
 628:lvgl/src/draw/lv_draw_blend.c **** 
 756              		.loc 1 628 9 is_stmt 1 view .LVU248
 628:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 36


 757              		.loc 1 628 26 is_stmt 0 view .LVU249
 758 0082 169F     		ldr	r7, [sp, #88]
 759              	.LVL71:
 628:lvgl/src/draw/lv_draw_blend.c **** 
 760              		.loc 1 628 26 view .LVU250
 761 0084 BF1A     		subs	r7, r7, r2
 762              	.LVL72:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 763              		.loc 1 630 9 is_stmt 1 view .LVU251
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 764              		.loc 1 630 9 is_stmt 0 view .LVU252
 765 0086 B346     		mov	fp, r6
 766 0088 CDF81C80 		str	r8, [sp, #28]
 767 008c DDF81480 		ldr	r8, [sp, #20]
 768              	.LVL73:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 769              		.loc 1 630 9 view .LVU253
 770 0090 47E0     		b	.L45
 771              	.LVL74:
 772              	.L52:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 773              		.loc 1 630 9 view .LVU254
 774 0092 DDF818B0 		ldr	fp, [sp, #24]
 775              	.LBE91:
 776 0096 1AE0     		b	.L39
 777              	.LVL75:
 778              	.L42:
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 779              		.loc 1 619 17 is_stmt 1 discriminator 3 view .LVU255
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 780              		.loc 1 619 21 is_stmt 0 discriminator 3 view .LVU256
 781 0098 D9F80000 		ldr	r0, [r9]
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 782              		.loc 1 619 29 discriminator 3 view .LVU257
 783 009c 4769     		ldr	r7, [r0, #20]
 619:lvgl/src/draw/lv_draw_blend.c ****             }
 784              		.loc 1 619 17 discriminator 3 view .LVU258
 785 009e CDF808A0 		str	r10, [sp, #8]
 786 00a2 36F81430 		ldrh	r3, [r6, r4, lsl #1]
 787 00a6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 788 00aa BDF91430 		ldrsh	r3, [sp, #20]
 789 00ae 0093     		str	r3, [sp]
 790 00b0 23B2     		sxth	r3, r4
 791 00b2 4246     		mov	r2, r8
 792 00b4 5946     		mov	r1, fp
 793 00b6 B847     		blx	r7
 794              	.LVL76:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 795              		.loc 1 618 56 is_stmt 1 discriminator 3 view .LVU259
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 796              		.loc 1 618 57 is_stmt 0 discriminator 3 view .LVU260
 797 00b8 0134     		adds	r4, r4, #1
 798              	.LVL77:
 799              	.L41:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 800              		.loc 1 618 36 is_stmt 1 discriminator 1 view .LVU261
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 37


 801              		.loc 1 618 50 is_stmt 0 discriminator 1 view .LVU262
 802 00ba B5F90430 		ldrsh	r3, [r5, #4]
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 803              		.loc 1 618 13 discriminator 1 view .LVU263
 804 00be A342     		cmp	r3, r4
 805 00c0 EADA     		bge	.L42
 621:lvgl/src/draw/lv_draw_blend.c ****         }
 806              		.loc 1 621 13 is_stmt 1 discriminator 2 view .LVU264
 621:lvgl/src/draw/lv_draw_blend.c ****         }
 807              		.loc 1 621 25 is_stmt 0 discriminator 2 view .LVU265
 808 00c2 089B     		ldr	r3, [sp, #32]
 809 00c4 06EB4306 		add	r6, r6, r3, lsl #1
 810              	.LVL78:
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 811              		.loc 1 617 52 is_stmt 1 discriminator 2 view .LVU266
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 812              		.loc 1 617 53 is_stmt 0 discriminator 2 view .LVU267
 813 00c8 059B     		ldr	r3, [sp, #20]
 814 00ca 0133     		adds	r3, r3, #1
 815 00cc 0593     		str	r3, [sp, #20]
 816              	.LVL79:
 817              	.L39:
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 818              		.loc 1 617 32 is_stmt 1 discriminator 1 view .LVU268
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 819              		.loc 1 617 46 is_stmt 0 discriminator 1 view .LVU269
 820 00ce B5F90630 		ldrsh	r3, [r5, #6]
 617:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 821              		.loc 1 617 9 discriminator 1 view .LVU270
 822 00d2 059A     		ldr	r2, [sp, #20]
 823 00d4 9342     		cmp	r3, r2
 824 00d6 2BDB     		blt	.L38
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 825              		.loc 1 618 13 is_stmt 1 view .LVU271
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 826              		.loc 1 618 30 is_stmt 0 view .LVU272
 827 00d8 B5F90040 		ldrsh	r4, [r5]
 828              	.LVL80:
 618:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 829              		.loc 1 618 13 view .LVU273
 830 00dc EDE7     		b	.L41
 831              	.LVL81:
 832              	.L47:
 833              	.LBB92:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 834              		.loc 1 631 56 is_stmt 1 discriminator 2 view .LVU274
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 835              		.loc 1 631 57 is_stmt 0 discriminator 2 view .LVU275
 836 00de 0134     		adds	r4, r4, #1
 837              	.LVL82:
 838              	.L46:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 839              		.loc 1 631 36 is_stmt 1 discriminator 1 view .LVU276
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 840              		.loc 1 631 50 is_stmt 0 discriminator 1 view .LVU277
 841 00e0 B5F90430 		ldrsh	r3, [r5, #4]
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 38


 842              		.loc 1 631 13 discriminator 1 view .LVU278
 843 00e4 A342     		cmp	r3, r4
 844 00e6 15DB     		blt	.L53
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 845              		.loc 1 632 17 is_stmt 1 view .LVU279
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 846              		.loc 1 632 28 is_stmt 0 view .LVU280
 847 00e8 3B5D     		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 632:lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 848              		.loc 1 632 19 view .LVU281
 849 00ea 002B     		cmp	r3, #0
 850 00ec F7D0     		beq	.L47
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 851              		.loc 1 633 21 is_stmt 1 view .LVU282
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 852              		.loc 1 633 25 is_stmt 0 view .LVU283
 853 00ee D9F80000 		ldr	r0, [r9]
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 854              		.loc 1 633 33 view .LVU284
 855 00f2 4669     		ldr	r6, [r0, #20]
 634:lvgl/src/draw/lv_draw_blend.c ****                 }
 856              		.loc 1 634 44 view .LVU285
 857 00f4 03FB0AF3 		mul	r3, r3, r10
 633:lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 858              		.loc 1 633 21 view .LVU286
 859 00f8 1B0A     		lsrs	r3, r3, #8
 860 00fa 0293     		str	r3, [sp, #8]
 861 00fc 3BF81430 		ldrh	r3, [fp, r4, lsl #1]
 862 0100 ADF80430 		strh	r3, [sp, #4]	@ movhi
 863 0104 0FFA88F3 		sxth	r3, r8
 864 0108 0093     		str	r3, [sp]
 865 010a 23B2     		sxth	r3, r4
 866 010c 079A     		ldr	r2, [sp, #28]
 867 010e 0699     		ldr	r1, [sp, #24]
 868 0110 B047     		blx	r6
 869              	.LVL83:
 870 0112 E4E7     		b	.L47
 871              	.L53:
 637:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 872              		.loc 1 637 13 is_stmt 1 discriminator 2 view .LVU287
 637:lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 873              		.loc 1 637 22 is_stmt 0 discriminator 2 view .LVU288
 874 0114 099B     		ldr	r3, [sp, #36]
 875 0116 1F44     		add	r7, r7, r3
 876              	.LVL84:
 638:lvgl/src/draw/lv_draw_blend.c ****         }
 877              		.loc 1 638 13 is_stmt 1 discriminator 2 view .LVU289
 638:lvgl/src/draw/lv_draw_blend.c ****         }
 878              		.loc 1 638 25 is_stmt 0 discriminator 2 view .LVU290
 879 0118 089B     		ldr	r3, [sp, #32]
 880 011a 0BEB430B 		add	fp, fp, r3, lsl #1
 881              	.LVL85:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 882              		.loc 1 630 52 is_stmt 1 discriminator 2 view .LVU291
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 883              		.loc 1 630 53 is_stmt 0 discriminator 2 view .LVU292
 884 011e 08F10108 		add	r8, r8, #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 39


 885              	.LVL86:
 886              	.L45:
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 887              		.loc 1 630 32 is_stmt 1 discriminator 1 view .LVU293
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 888              		.loc 1 630 46 is_stmt 0 discriminator 1 view .LVU294
 889 0122 B5F90630 		ldrsh	r3, [r5, #6]
 630:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 890              		.loc 1 630 9 discriminator 1 view .LVU295
 891 0126 4345     		cmp	r3, r8
 892 0128 02DB     		blt	.L38
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 893              		.loc 1 631 13 is_stmt 1 view .LVU296
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 894              		.loc 1 631 30 is_stmt 0 view .LVU297
 895 012a B5F90040 		ldrsh	r4, [r5]
 896              	.LVL87:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 897              		.loc 1 631 13 view .LVU298
 898 012e D7E7     		b	.L46
 899              	.LVL88:
 900              	.L38:
 631:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 901              		.loc 1 631 13 view .LVU299
 902              	.LBE92:
 641:lvgl/src/draw/lv_draw_blend.c **** 
 903              		.loc 1 641 1 view .LVU300
 904 0130 0BB0     		add	sp, sp, #44
 905              	.LCFI8:
 906              		.cfi_def_cfa_offset 36
 907              		@ sp needed
 908 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 641:lvgl/src/draw/lv_draw_blend.c **** 
 909              		.loc 1 641 1 view .LVU301
 910              		.cfi_endproc
 911              	.LFE152:
 913              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 914              		.align	1
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	color_blend_true_color_additive:
 920              	.LVL89:
 921              	.LFB155:
 962:lvgl/src/draw/lv_draw_blend.c **** 
 963:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 964:lvgl/src/draw/lv_draw_blend.c **** {
 922              		.loc 1 964 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 965:lvgl/src/draw/lv_draw_blend.c **** 
 966:lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 926              		.loc 1 966 5 view .LVU303
 927              		.loc 1 966 7 is_stmt 0 view .LVU304
 928 0000 022A     		cmp	r2, #2
 929 0002 5BD9     		bls	.L62
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 40


 967:lvgl/src/draw/lv_draw_blend.c **** 
 968:lvgl/src/draw/lv_draw_blend.c ****     uint32_t tmp;
 930              		.loc 1 968 5 is_stmt 1 view .LVU305
 969:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 1
 970:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.full + fg.full;
 971:lvgl/src/draw/lv_draw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 972:lvgl/src/draw/lv_draw_blend.c **** #else
 973:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 931              		.loc 1 973 5 view .LVU306
 932              		.loc 1 973 16 is_stmt 0 view .LVU307
 933 0004 C1F3C423 		ubfx	r3, r1, #11, #5
 934              		.loc 1 973 28 view .LVU308
 935 0008 C0F3C42C 		ubfx	ip, r0, #11, #5
 936              		.loc 1 973 21 view .LVU309
 937 000c 6344     		add	r3, r3, ip
 938              	.LVL90:
 974:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 975:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 976:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 977:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 939              		.loc 1 977 5 is_stmt 1 view .LVU310
 940              		.loc 1 977 17 is_stmt 0 view .LVU311
 941 000e 1F2B     		cmp	r3, #31
 942 0010 28BF     		it	cs
 943 0012 1F23     		movcs	r3, #31
 944              	.LVL91:
 945              		.loc 1 977 15 view .LVU312
 946 0014 63F3CF20 		bfi	r0, r3, #11, #5
 978:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 979:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 980:lvgl/src/draw/lv_draw_blend.c **** #endif
 981:lvgl/src/draw/lv_draw_blend.c **** 
 982:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 983:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 984:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 985:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 986:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
 987:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 947              		.loc 1 987 5 is_stmt 1 view .LVU313
 948              		.loc 1 987 16 is_stmt 0 view .LVU314
 949 0018 C1F34513 		ubfx	r3, r1, #5, #6
 950              		.loc 1 987 30 view .LVU315
 951 001c C0F3451C 		ubfx	ip, r0, #5, #6
 952              	.LVL92:
 953              		.loc 1 987 23 view .LVU316
 954 0020 6344     		add	r3, r3, ip
 955              	.LVL93:
 988:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 956              		.loc 1 988 5 is_stmt 1 view .LVU317
 957              		.loc 1 988 19 is_stmt 0 view .LVU318
 958 0022 3F2B     		cmp	r3, #63
 959 0024 28BF     		it	cs
 960 0026 3F23     		movcs	r3, #63
 961              	.LVL94:
 962              		.loc 1 988 17 view .LVU319
 963 0028 63F34A10 		bfi	r0, r3, #5, #6
 989:lvgl/src/draw/lv_draw_blend.c **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 41


 990:lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 991:lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MIN(tmp, 63);
 992:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
 993:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 994:lvgl/src/draw/lv_draw_blend.c **** #endif
 995:lvgl/src/draw/lv_draw_blend.c **** 
 996:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 997:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 998:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 999:lvgl/src/draw/lv_draw_blend.c **** #endif
1000:lvgl/src/draw/lv_draw_blend.c **** 
1001:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 964              		.loc 1 1001 5 is_stmt 1 view .LVU320
 965              		.loc 1 1001 16 is_stmt 0 view .LVU321
 966 002c 01F01F03 		and	r3, r1, #31
 967              		.loc 1 1001 29 view .LVU322
 968 0030 00F01F0C 		and	ip, r0, #31
 969              	.LVL95:
 970              		.loc 1 1001 22 view .LVU323
 971 0034 6344     		add	r3, r3, ip
 972              	.LVL96:
1002:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
1003:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
1004:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
1005:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
 973              		.loc 1 1005 5 is_stmt 1 view .LVU324
 974              		.loc 1 1005 18 is_stmt 0 view .LVU325
 975 0036 1F2B     		cmp	r3, #31
 976 0038 28BF     		it	cs
 977 003a 1F23     		movcs	r3, #31
 978              	.LVL97:
 979              		.loc 1 1005 16 view .LVU326
 980 003c 63F30400 		bfi	r0, r3, #0, #5
1006:lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
1007:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
1008:lvgl/src/draw/lv_draw_blend.c **** #endif
1009:lvgl/src/draw/lv_draw_blend.c **** #endif
1010:lvgl/src/draw/lv_draw_blend.c **** 
1011:lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 981              		.loc 1 1011 5 is_stmt 1 view .LVU327
 982              		.loc 1 1011 7 is_stmt 0 view .LVU328
 983 0040 FF2A     		cmp	r2, #255
 984 0042 3DD0     		beq	.L59
 964:lvgl/src/draw/lv_draw_blend.c **** 
 985              		.loc 1 964 1 view .LVU329
 986 0044 10B5     		push	{r4, lr}
 987              	.LCFI9:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 4, -8
 990              		.cfi_offset 14, -4
1012:lvgl/src/draw/lv_draw_blend.c **** 
1013:lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 991              		.loc 1 1013 5 is_stmt 1 view .LVU330
 992              	.LVL98:
 993              	.LBB95:
 994              	.LBI95:
 995              		.file 3 "lvgl/src/draw/../misc/lv_color.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 42


   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/src/draw/../misc/lv_color.h **** enum {
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 43


  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/src/draw/../misc/lv_color.h **** #endif
 100:lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/src/draw/../misc/lv_color.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 44


 115:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/src/draw/../misc/lv_color.h **** 
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 45


 172:lvgl/src/draw/../misc/lv_color.h **** #endif
 173:lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/src/draw/../misc/lv_color.h **** typedef union {
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 46


 229:lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 47


 286:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/src/draw/../misc/lv_color.h ****     else {
 328:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/src/draw/../misc/lv_color.h ****     }
 330:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/src/draw/../misc/lv_color.h ****         return 0;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 48


 343:lvgl/src/draw/../misc/lv_color.h ****     }
 344:lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/src/draw/../misc/lv_color.h ****     else
 353:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 49


 400:lvgl/src/draw/../misc/lv_color.h ****     else
 401:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 50


 457:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 996              		.loc 3 459 48 view .LVU331
 997              	.LBB96:
 460:lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 998              		.loc 3 461 5 view .LVU332
 462:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 463:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 464:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 999              		.loc 3 464 5 view .LVU333
 1000 0046 C0F3C424 		ubfx	r4, r0, #11, #5
 1001 004a C1F3C42C 		ubfx	ip, r1, #11, #5
 1002              	.LVL99:
 1003              		.loc 3 464 5 is_stmt 0 view .LVU334
 1004 004e C2F1FF03 		rsb	r3, r2, #255
 1005 0052 03FB0CFC 		mul	ip, r3, ip
 1006 0056 02FB04CC 		mla	ip, r2, r4, ip
 1007 005a 0CF1800C 		add	ip, ip, #128
 1008 005e 0CEB0C24 		add	r4, ip, ip, lsl #8
 1009 0062 0CEBC41C 		add	ip, ip, r4, lsl #7
 1010 0066 CCF3C45C 		ubfx	ip, ip, #23, #5
 1011 006a 4FF0000E 		mov	lr, #0	@ movhi
 1012              	.LVL100:
 1013              		.loc 3 464 5 view .LVU335
 1014 006e 6CF3CF2E 		bfi	lr, ip, #11, #5
 1015              	.LVL101:
 465:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 1016              		.loc 3 466 5 is_stmt 1 view .LVU336
 1017 0072 C0F34514 		ubfx	r4, r0, #5, #6
 1018 0076 C1F3451C 		ubfx	ip, r1, #5, #6
 1019 007a 0CFB03FC 		mul	ip, ip, r3
 1020 007e 04FB02CC 		mla	ip, r4, r2, ip
 1021 0082 0CF1800C 		add	ip, ip, #128
 1022 0086 0CEB0C24 		add	r4, ip, ip, lsl #8
 1023 008a 0CEBC41C 		add	ip, ip, r4, lsl #7
 1024 008e CCF3C55C 		ubfx	ip, ip, #23, #6
 1025 0092 6CF34A1E 		bfi	lr, ip, #5, #6
 467:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 468:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 1026              		.loc 3 468 5 view .LVU337
 1027 0096 00F01F0C 		and	ip, r0, #31
 1028 009a 01F01F01 		and	r1, r1, #31
 1029              	.LVL102:
 1030              		.loc 3 468 5 is_stmt 0 view .LVU338
 1031 009e 01FB03F3 		mul	r3, r1, r3
 1032 00a2 0CFB0232 		mla	r2, ip, r2, r3
 1033              	.LVL103:
 1034              		.loc 3 468 5 view .LVU339
 1035 00a6 8032     		adds	r2, r2, #128
 1036 00a8 02EB0220 		add	r0, r2, r2, lsl #8
 1037              	.LVL104:
 1038              		.loc 3 468 5 view .LVU340
 1039 00ac 02EBC012 		add	r2, r2, r0, lsl #7
 1040 00b0 C2F3C452 		ubfx	r2, r2, #23, #5
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 51


 1041 00b4 62F3040E 		bfi	lr, r2, #0, #5
 469:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 470:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1042              		.loc 3 470 5 is_stmt 1 view .LVU341
 1043              		.loc 3 470 5 view .LVU342
 1044              		.loc 3 470 5 view .LVU343
 471:lvgl/src/draw/../misc/lv_color.h **** #else
 472:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 473:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 474:lvgl/src/draw/../misc/lv_color.h **** #endif
 475:lvgl/src/draw/../misc/lv_color.h **** 
 476:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 1045              		.loc 3 476 5 view .LVU344
 1046 00b8 7046     		mov	r0, lr	@ movhi
 1047              	.LVL105:
 1048              		.loc 3 476 5 is_stmt 0 view .LVU345
 1049              	.LBE96:
 1050              	.LBE95:
1014:lvgl/src/draw/lv_draw_blend.c **** }
 1051              		.loc 1 1014 1 view .LVU346
 1052 00ba 10BD     		pop	{r4, pc}
 1053              	.LVL106:
 1054              	.L62:
 1055              	.LCFI10:
 1056              		.cfi_def_cfa_offset 0
 1057              		.cfi_restore 4
 1058              		.cfi_restore 14
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1059              		.loc 1 966 27 is_stmt 1 discriminator 1 view .LVU347
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1060              		.loc 1 966 34 is_stmt 0 discriminator 1 view .LVU348
 1061 00bc 0846     		mov	r0, r1	@ movhi
 1062              	.LVL107:
 966:lvgl/src/draw/lv_draw_blend.c **** 
 1063              		.loc 1 966 34 discriminator 1 view .LVU349
 1064 00be 7047     		bx	lr
 1065              	.LVL108:
 1066              	.L59:
 1067              	.LVL109:
 1068              		.loc 1 1014 1 view .LVU350
 1069 00c0 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE155:
 1073              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 1074              		.align	1
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1079              	color_blend_true_color_subtractive:
 1080              	.LVL110:
 1081              	.LFB156:
1015:lvgl/src/draw/lv_draw_blend.c **** 
1016:lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
1017:lvgl/src/draw/lv_draw_blend.c **** {
 1082              		.loc 1 1017 1 is_stmt 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 52


 1085              		@ frame_needed = 0, uses_anonymous_args = 0
1018:lvgl/src/draw/lv_draw_blend.c **** 
1019:lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1086              		.loc 1 1019 5 view .LVU352
 1087              		.loc 1 1019 7 is_stmt 0 view .LVU353
 1088 0000 022A     		cmp	r2, #2
 1089 0002 5BD9     		bls	.L71
1020:lvgl/src/draw/lv_draw_blend.c **** 
1021:lvgl/src/draw/lv_draw_blend.c ****     int32_t tmp;
 1090              		.loc 1 1021 5 is_stmt 1 view .LVU354
1022:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 1091              		.loc 1 1022 5 view .LVU355
 1092              		.loc 1 1022 16 is_stmt 0 view .LVU356
 1093 0004 C1F3C423 		ubfx	r3, r1, #11, #5
 1094              		.loc 1 1022 28 view .LVU357
 1095 0008 C0F3C42C 		ubfx	ip, r0, #11, #5
 1096              		.loc 1 1022 9 view .LVU358
 1097 000c A3EB0C03 		sub	r3, r3, ip
 1098              	.LVL111:
1023:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 1099              		.loc 1 1023 5 is_stmt 1 view .LVU359
 1100              		.loc 1 1023 17 is_stmt 0 view .LVU360
 1101 0010 23EAE373 		bic	r3, r3, r3, asr #31
 1102              	.LVL112:
 1103              		.loc 1 1023 15 view .LVU361
 1104 0014 63F3CF20 		bfi	r0, r3, #11, #5
1024:lvgl/src/draw/lv_draw_blend.c **** 
1025:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
1026:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 1105              		.loc 1 1026 5 is_stmt 1 view .LVU362
 1106              		.loc 1 1026 16 is_stmt 0 view .LVU363
 1107 0018 C1F34513 		ubfx	r3, r1, #5, #6
 1108              		.loc 1 1026 30 view .LVU364
 1109 001c C0F3451C 		ubfx	ip, r0, #5, #6
 1110              	.LVL113:
 1111              		.loc 1 1026 9 view .LVU365
 1112 0020 A3EB0C03 		sub	r3, r3, ip
 1113              	.LVL114:
1027:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 1114              		.loc 1 1027 5 is_stmt 1 view .LVU366
 1115              		.loc 1 1027 19 is_stmt 0 view .LVU367
 1116 0024 23EAE373 		bic	r3, r3, r3, asr #31
 1117              	.LVL115:
 1118              		.loc 1 1027 17 view .LVU368
 1119 0028 63F34A10 		bfi	r0, r3, #5, #6
1028:lvgl/src/draw/lv_draw_blend.c **** #else
1029:lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1030:lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MAX(tmp, 0);
1031:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
1032:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1033:lvgl/src/draw/lv_draw_blend.c **** #endif
1034:lvgl/src/draw/lv_draw_blend.c **** 
1035:lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 1120              		.loc 1 1035 5 is_stmt 1 view .LVU369
 1121              		.loc 1 1035 16 is_stmt 0 view .LVU370
 1122 002c 01F01F03 		and	r3, r1, #31
 1123              		.loc 1 1035 29 view .LVU371
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 53


 1124 0030 00F01F0C 		and	ip, r0, #31
 1125              	.LVL116:
 1126              		.loc 1 1035 9 view .LVU372
 1127 0034 A3EB0C03 		sub	r3, r3, ip
 1128              	.LVL117:
1036:lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 1129              		.loc 1 1036 5 is_stmt 1 view .LVU373
 1130              		.loc 1 1036 18 is_stmt 0 view .LVU374
 1131 0038 23EAE373 		bic	r3, r3, r3, asr #31
 1132              	.LVL118:
 1133              		.loc 1 1036 16 view .LVU375
 1134 003c 63F30400 		bfi	r0, r3, #0, #5
1037:lvgl/src/draw/lv_draw_blend.c **** 
1038:lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1135              		.loc 1 1038 5 is_stmt 1 view .LVU376
 1136              		.loc 1 1038 7 is_stmt 0 view .LVU377
 1137 0040 FF2A     		cmp	r2, #255
 1138 0042 3DD0     		beq	.L68
1017:lvgl/src/draw/lv_draw_blend.c **** 
 1139              		.loc 1 1017 1 view .LVU378
 1140 0044 10B5     		push	{r4, lr}
 1141              	.LCFI11:
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 4, -8
 1144              		.cfi_offset 14, -4
1039:lvgl/src/draw/lv_draw_blend.c **** 
1040:lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1145              		.loc 1 1040 5 is_stmt 1 view .LVU379
 1146              	.LVL119:
 1147              	.LBB99:
 1148              	.LBI99:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1149              		.loc 3 459 48 view .LVU380
 1150              	.LBB100:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1151              		.loc 3 461 5 view .LVU381
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1152              		.loc 3 464 5 view .LVU382
 1153 0046 C0F3C424 		ubfx	r4, r0, #11, #5
 1154 004a C1F3C42C 		ubfx	ip, r1, #11, #5
 1155              	.LVL120:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1156              		.loc 3 464 5 is_stmt 0 view .LVU383
 1157 004e C2F1FF03 		rsb	r3, r2, #255
 1158 0052 03FB0CFC 		mul	ip, r3, ip
 1159 0056 02FB04CC 		mla	ip, r2, r4, ip
 1160 005a 0CF1800C 		add	ip, ip, #128
 1161 005e 0CEB0C24 		add	r4, ip, ip, lsl #8
 1162 0062 0CEBC41C 		add	ip, ip, r4, lsl #7
 1163 0066 CCF3C45C 		ubfx	ip, ip, #23, #5
 1164 006a 4FF0000E 		mov	lr, #0	@ movhi
 1165              	.LVL121:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1166              		.loc 3 464 5 view .LVU384
 1167 006e 6CF3CF2E 		bfi	lr, ip, #11, #5
 1168              	.LVL122:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 54


 1169              		.loc 3 466 5 is_stmt 1 view .LVU385
 1170 0072 C0F34514 		ubfx	r4, r0, #5, #6
 1171 0076 C1F3451C 		ubfx	ip, r1, #5, #6
 1172 007a 0CFB03FC 		mul	ip, ip, r3
 1173 007e 04FB02CC 		mla	ip, r4, r2, ip
 1174 0082 0CF1800C 		add	ip, ip, #128
 1175 0086 0CEB0C24 		add	r4, ip, ip, lsl #8
 1176 008a 0CEBC41C 		add	ip, ip, r4, lsl #7
 1177 008e CCF3C55C 		ubfx	ip, ip, #23, #6
 1178 0092 6CF34A1E 		bfi	lr, ip, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1179              		.loc 3 468 5 view .LVU386
 1180 0096 00F01F0C 		and	ip, r0, #31
 1181 009a 01F01F01 		and	r1, r1, #31
 1182              	.LVL123:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1183              		.loc 3 468 5 is_stmt 0 view .LVU387
 1184 009e 01FB03F3 		mul	r3, r1, r3
 1185 00a2 0CFB0232 		mla	r2, ip, r2, r3
 1186              	.LVL124:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1187              		.loc 3 468 5 view .LVU388
 1188 00a6 8032     		adds	r2, r2, #128
 1189 00a8 02EB0220 		add	r0, r2, r2, lsl #8
 1190              	.LVL125:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1191              		.loc 3 468 5 view .LVU389
 1192 00ac 02EBC012 		add	r2, r2, r0, lsl #7
 1193 00b0 C2F3C452 		ubfx	r2, r2, #23, #5
 1194 00b4 62F3040E 		bfi	lr, r2, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1195              		.loc 3 470 5 is_stmt 1 view .LVU390
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1196              		.loc 3 470 5 view .LVU391
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1197              		.loc 3 470 5 view .LVU392
 1198              		.loc 3 476 5 view .LVU393
 1199 00b8 7046     		mov	r0, lr	@ movhi
 1200              	.LVL126:
 1201              		.loc 3 476 5 is_stmt 0 view .LVU394
 1202              	.LBE100:
 1203              	.LBE99:
1041:lvgl/src/draw/lv_draw_blend.c **** }
 1204              		.loc 1 1041 1 view .LVU395
 1205 00ba 10BD     		pop	{r4, pc}
 1206              	.LVL127:
 1207              	.L71:
 1208              	.LCFI12:
 1209              		.cfi_def_cfa_offset 0
 1210              		.cfi_restore 4
 1211              		.cfi_restore 14
1019:lvgl/src/draw/lv_draw_blend.c **** 
 1212              		.loc 1 1019 27 is_stmt 1 discriminator 1 view .LVU396
1019:lvgl/src/draw/lv_draw_blend.c **** 
 1213              		.loc 1 1019 34 is_stmt 0 discriminator 1 view .LVU397
 1214 00bc 0846     		mov	r0, r1	@ movhi
 1215              	.LVL128:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 55


1019:lvgl/src/draw/lv_draw_blend.c **** 
 1216              		.loc 1 1019 34 discriminator 1 view .LVU398
 1217 00be 7047     		bx	lr
 1218              	.LVL129:
 1219              	.L68:
 1220              	.LVL130:
 1221              		.loc 1 1041 1 view .LVU399
 1222 00c0 7047     		bx	lr
 1223              		.cfi_endproc
 1224              	.LFE156:
 1226              		.section	.text.map_normal,"ax",%progbits
 1227              		.align	1
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1232              	map_normal:
 1233              	.LVL131:
 1234              	.LFB153:
 660:lvgl/src/draw/lv_draw_blend.c **** 
 1235              		.loc 1 660 1 is_stmt 1 view -0
 1236              		.cfi_startproc
 1237              		@ args = 16, pretend = 0, frame = 48
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 660:lvgl/src/draw/lv_draw_blend.c **** 
 1239              		.loc 1 660 1 is_stmt 0 view .LVU401
 1240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1241              	.LCFI13:
 1242              		.cfi_def_cfa_offset 36
 1243              		.cfi_offset 4, -36
 1244              		.cfi_offset 5, -32
 1245              		.cfi_offset 6, -28
 1246              		.cfi_offset 7, -24
 1247              		.cfi_offset 8, -20
 1248              		.cfi_offset 9, -16
 1249              		.cfi_offset 10, -12
 1250              		.cfi_offset 11, -8
 1251              		.cfi_offset 14, -4
 1252 0004 8DB0     		sub	sp, sp, #52
 1253              	.LCFI14:
 1254              		.cfi_def_cfa_offset 88
 1255 0006 0391     		str	r1, [sp, #12]
 1256 0008 9DF85C80 		ldrb	r8, [sp, #92]	@ zero_extendqisi2
 663:lvgl/src/draw/lv_draw_blend.c **** 
 1257              		.loc 1 663 5 is_stmt 1 view .LVU402
 1258              	.LVL132:
 1259              	.LBB128:
 1260              	.LBI128:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1261              		.loc 2 133 26 view .LVU403
 1262              	.LBB129:
 1263              		.loc 2 135 5 view .LVU404
 1264              		.loc 2 135 31 is_stmt 0 view .LVU405
 1265 000c 8188     		ldrh	r1, [r0, #4]
 1266              	.LVL133:
 1267              		.loc 2 135 44 view .LVU406
 1268 000e B0F90040 		ldrsh	r4, [r0]
 1269 0012 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 56


 1270 0014 BDF80440 		ldrh	r4, [sp, #4]
 1271              		.loc 2 135 36 view .LVU407
 1272 0018 091B     		subs	r1, r1, r4
 1273 001a 89B2     		uxth	r1, r1
 1274              		.loc 2 135 49 view .LVU408
 1275 001c 0131     		adds	r1, r1, #1
 1276              		.loc 2 135 12 view .LVU409
 1277 001e 0DB2     		sxth	r5, r1
 1278 0020 0595     		str	r5, [sp, #20]
 1279              	.LVL134:
 1280              		.loc 2 135 12 view .LVU410
 1281              	.LBE129:
 1282              	.LBE128:
 665:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 1283              		.loc 1 665 5 is_stmt 1 view .LVU411
 1284              	.LBB130:
 1285              	.LBI130:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1286              		.loc 2 133 26 view .LVU412
 1287              	.LBB131:
 1288              		.loc 2 135 5 view .LVU413
 1289              		.loc 2 135 31 is_stmt 0 view .LVU414
 1290 0022 9188     		ldrh	r1, [r2, #4]
 1291              		.loc 2 135 44 view .LVU415
 1292 0024 B2F90060 		ldrsh	r6, [r2]
 1293 0028 B4B2     		uxth	r4, r6
 1294              		.loc 2 135 36 view .LVU416
 1295 002a 0D1B     		subs	r5, r1, r4
 1296              	.LVL135:
 1297              		.loc 2 135 36 view .LVU417
 1298 002c ADB2     		uxth	r5, r5
 1299              		.loc 2 135 49 view .LVU418
 1300 002e 0135     		adds	r5, r5, #1
 1301              		.loc 2 135 12 view .LVU419
 1302 0030 2DB2     		sxth	r5, r5
 1303              	.LVL136:
 1304              		.loc 2 135 12 view .LVU420
 1305              	.LBE131:
 1306              	.LBE130:
 666:lvgl/src/draw/lv_draw_blend.c **** 
 1307              		.loc 1 666 5 is_stmt 1 view .LVU421
 1308              	.LBB132:
 1309              	.LBI132:
 136:lvgl/src/draw/../misc/lv_area.h **** }
 137:lvgl/src/draw/../misc/lv_area.h **** 
 138:lvgl/src/draw/../misc/lv_area.h **** /**
 139:lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 140:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 141:lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:lvgl/src/draw/../misc/lv_area.h ****  */
 143:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 1310              		.loc 2 143 26 view .LVU422
 1311              	.LBB133:
 144:lvgl/src/draw/../misc/lv_area.h **** {
 145:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 1312              		.loc 2 145 5 view .LVU423
 1313              		.loc 2 145 31 is_stmt 0 view .LVU424
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 57


 1314 0032 D188     		ldrh	r1, [r2, #6]
 1315              		.loc 2 145 44 view .LVU425
 1316 0034 B2F902B0 		ldrsh	fp, [r2, #2]
 1317 0038 1FFA8BF2 		uxth	r2, fp
 1318              	.LVL137:
 1319              		.loc 2 145 36 view .LVU426
 1320 003c 8A1A     		subs	r2, r1, r2
 1321 003e 92B2     		uxth	r2, r2
 1322              		.loc 2 145 49 view .LVU427
 1323 0040 0132     		adds	r2, r2, #1
 1324              		.loc 2 145 12 view .LVU428
 1325 0042 0FFA82FA 		sxth	r10, r2
 1326 0046 CDF818A0 		str	r10, [sp, #24]
 1327              	.LVL138:
 1328              		.loc 2 145 12 view .LVU429
 1329              	.LBE133:
 1330              	.LBE132:
 669:lvgl/src/draw/lv_draw_blend.c **** 
 1331              		.loc 1 669 5 is_stmt 1 view .LVU430
 1332              	.LBB134:
 1333              	.LBI134:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 1334              		.loc 2 133 26 view .LVU431
 1335              	.LBB135:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1336              		.loc 2 135 5 view .LVU432
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1337              		.loc 2 135 31 is_stmt 0 view .LVU433
 1338 004a 9A88     		ldrh	r2, [r3, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1339              		.loc 2 135 44 view .LVU434
 1340 004c B3F900A0 		ldrsh	r10, [r3]
 1341              	.LVL139:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1342              		.loc 2 135 44 view .LVU435
 1343 0050 1FFA8AF1 		uxth	r1, r10
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1344              		.loc 2 135 36 view .LVU436
 1345 0054 521A     		subs	r2, r2, r1
 1346 0056 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1347              		.loc 2 135 49 view .LVU437
 1348 0058 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1349              		.loc 2 135 12 view .LVU438
 1350 005a 11B2     		sxth	r1, r2
 1351 005c 0491     		str	r1, [sp, #16]
 1352              	.LVL140:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 1353              		.loc 2 135 12 view .LVU439
 1354              	.LBE135:
 1355              	.LBE134:
 672:lvgl/src/draw/lv_draw_blend.c **** 
 1356              		.loc 1 672 5 is_stmt 1 view .LVU440
 672:lvgl/src/draw/lv_draw_blend.c **** 
 1357              		.loc 1 672 69 is_stmt 0 view .LVU441
 1358 005e 059C     		ldr	r4, [sp, #20]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 58


 1359 0060 04FB0B64 		mla	r4, r4, fp, r6
 672:lvgl/src/draw/lv_draw_blend.c **** 
 1360              		.loc 1 672 18 view .LVU442
 1361 0064 039A     		ldr	r2, [sp, #12]
 1362 0066 02EB4404 		add	r4, r2, r4, lsl #1
 1363              	.LVL141:
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1364              		.loc 1 675 5 is_stmt 1 view .LVU443
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1365              		.loc 1 675 84 is_stmt 0 view .LVU444
 1366 006a B3F90230 		ldrsh	r3, [r3, #2]
 1367              	.LVL142:
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1368              		.loc 1 675 100 view .LVU445
 1369 006e B0F90220 		ldrsh	r2, [r0, #2]
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1370              		.loc 1 675 89 view .LVU446
 1371 0072 9B1A     		subs	r3, r3, r2
 675:lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 1372              		.loc 1 675 73 view .LVU447
 1373 0074 ABEB0303 		sub	r3, fp, r3
 1374              	.LVL143:
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1375              		.loc 1 676 5 is_stmt 1 view .LVU448
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1376              		.loc 1 676 53 is_stmt 0 view .LVU449
 1377 0078 019A     		ldr	r2, [sp, #4]
 1378 007a AAEB020A 		sub	r10, r10, r2
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1379              		.loc 1 676 37 view .LVU450
 1380 007e A6EB0A06 		sub	r6, r6, r10
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1381              		.loc 1 676 19 view .LVU451
 1382 0082 01FB0363 		mla	r3, r1, r3, r6
 1383              	.LVL144:
 676:lvgl/src/draw/lv_draw_blend.c **** 
 1384              		.loc 1 676 19 view .LVU452
 1385 0086 169E     		ldr	r6, [sp, #88]
 1386 0088 06EB4306 		add	r6, r6, r3, lsl #1
 1387              	.LVL145:
 682:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 1388              		.loc 1 682 5 is_stmt 1 view .LVU453
 683:lvgl/src/draw/lv_draw_blend.c **** 
 1389              		.loc 1 683 5 view .LVU454
 686:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1390              		.loc 1 686 5 view .LVU455
 686:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1391              		.loc 1 686 7 is_stmt 0 view .LVU456
 1392 008c 9DF86430 		ldrb	r3, [sp, #100]	@ zero_extendqisi2
 1393 0090 012B     		cmp	r3, #1
 1394 0092 08D0     		beq	.L114
 803:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 1395              		.loc 1 803 9 is_stmt 1 view .LVU457
 803:lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 1396              		.loc 1 803 11 is_stmt 0 view .LVU458
 1397 0094 B8F1FD0F 		cmp	r8, #253
 1398 0098 40F2F082 		bls	.L108
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 59


 1399              	.LBB136:
 806:lvgl/src/draw/lv_draw_blend.c **** 
 1400              		.loc 1 806 13 is_stmt 1 view .LVU459
 806:lvgl/src/draw/lv_draw_blend.c **** 
 1401              		.loc 1 806 21 is_stmt 0 view .LVU460
 1402 009c 2B1F     		subs	r3, r5, #4
 1403 009e 0193     		str	r3, [sp, #4]
 1404              	.LVL146:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1405              		.loc 1 808 13 is_stmt 1 view .LVU461
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1406              		.loc 1 808 19 is_stmt 0 view .LVU462
 1407 00a0 0023     		movs	r3, #0
 1408              	.LVL147:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1409              		.loc 1 808 19 view .LVU463
 1410 00a2 0393     		str	r3, [sp, #12]
 1411              	.LVL148:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1412              		.loc 1 808 13 view .LVU464
 1413 00a4 88E2     		b	.L81
 1414              	.LVL149:
 1415              	.L114:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1416              		.loc 1 808 13 view .LVU465
 1417              	.LBE136:
 687:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1418              		.loc 1 687 9 is_stmt 1 view .LVU466
 687:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1419              		.loc 1 687 11 is_stmt 0 view .LVU467
 1420 00a6 B8F1FD0F 		cmp	r8, #253
 1421 00aa 15D8     		bhi	.L106
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1422              		.loc 1 782 19 view .LVU468
 1423 00ac 4FF0000C 		mov	ip, #0
 1424 00b0 DDF818E0 		ldr	lr, [sp, #24]
 1425 00b4 DDF814A0 		ldr	r10, [sp, #20]
 1426 00b8 5BE0     		b	.L75
 1427              	.LVL150:
 1428              	.L76:
 732:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 1429              		.loc 1 732 17 is_stmt 1 discriminator 3 view .LVU469
 1430 00ba 6A00     		lsls	r2, r5, #1
 1431 00bc 3146     		mov	r1, r6
 1432 00be 2046     		mov	r0, r4
 1433 00c0 FFF7FEFF 		bl	lv_memcpy
 1434              	.LVL151:
 733:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1435              		.loc 1 733 17 discriminator 3 view .LVU470
 733:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1436              		.loc 1 733 32 is_stmt 0 discriminator 3 view .LVU471
 1437 00c4 04EB4A04 		add	r4, r4, r10, lsl #1
 1438              	.LVL152:
 734:lvgl/src/draw/lv_draw_blend.c ****             }
 1439              		.loc 1 734 17 is_stmt 1 discriminator 3 view .LVU472
 734:lvgl/src/draw/lv_draw_blend.c ****             }
 1440              		.loc 1 734 31 is_stmt 0 discriminator 3 view .LVU473
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 60


 1441 00c8 06EB4906 		add	r6, r6, r9, lsl #1
 1442              	.LVL153:
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1443              		.loc 1 731 41 is_stmt 1 discriminator 3 view .LVU474
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1444              		.loc 1 731 42 is_stmt 0 discriminator 3 view .LVU475
 1445 00cc 0137     		adds	r7, r7, #1
 1446              	.LVL154:
 1447              	.L74:
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1448              		.loc 1 731 24 is_stmt 1 discriminator 1 view .LVU476
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1449              		.loc 1 731 13 is_stmt 0 discriminator 1 view .LVU477
 1450 00ce 4745     		cmp	r7, r8
 1451 00d0 F3DB     		blt	.L76
 1452              	.LVL155:
 1453              	.L72:
 888:lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 1454              		.loc 1 888 1 view .LVU478
 1455 00d2 0DB0     		add	sp, sp, #52
 1456              	.LCFI15:
 1457              		.cfi_remember_state
 1458              		.cfi_def_cfa_offset 36
 1459              		@ sp needed
 1460 00d4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1461              	.LVL156:
 1462              	.L106:
 1463              	.LCFI16:
 1464              		.cfi_restore_state
 731:lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 1465              		.loc 1 731 19 view .LVU479
 1466 00d8 0027     		movs	r7, #0
 1467 00da DDF81880 		ldr	r8, [sp, #24]
 1468 00de DDF81090 		ldr	r9, [sp, #16]
 1469 00e2 DDF814A0 		ldr	r10, [sp, #20]
 1470 00e6 F2E7     		b	.L74
 1471              	.LVL157:
 1472              	.L78:
 792:lvgl/src/draw/lv_draw_blend.c ****                     }
 1473              		.loc 1 792 25 is_stmt 1 discriminator 3 view .LVU480
 1474 00e8 36F81170 		ldrh	r7, [r6, r1, lsl #1]
 1475 00ec 34F811B0 		ldrh	fp, [r4, r1, lsl #1]
 1476              	.LVL158:
 1477              	.LBB151:
 1478              	.LBI151:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1479              		.loc 3 459 48 discriminator 3 view .LVU481
 1480              	.LBB152:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1481              		.loc 3 461 5 discriminator 3 view .LVU482
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1482              		.loc 3 464 5 discriminator 3 view .LVU483
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1483              		.loc 3 464 5 is_stmt 0 discriminator 3 view .LVU484
 1484 00f0 C7F3C420 		ubfx	r0, r7, #11, #5
 1485              	.LVL159:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 61


 1486              		.loc 3 464 5 discriminator 3 view .LVU485
 1487 00f4 CBF3C423 		ubfx	r3, fp, #11, #5
 1488 00f8 C8F1FF02 		rsb	r2, r8, #255
 1489 00fc 02FB03F3 		mul	r3, r2, r3
 1490 0100 08FB0033 		mla	r3, r8, r0, r3
 1491 0104 8033     		adds	r3, r3, #128
 1492 0106 03EB0320 		add	r0, r3, r3, lsl #8
 1493 010a 03EBC013 		add	r3, r3, r0, lsl #7
 1494 010e C3F3C453 		ubfx	r3, r3, #23, #5
 1495 0112 63F3CF29 		bfi	r9, r3, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1496              		.loc 3 466 5 is_stmt 1 discriminator 3 view .LVU486
 1497 0116 C7F34513 		ubfx	r3, r7, #5, #6
 1498 011a CBF34510 		ubfx	r0, fp, #5, #6
 1499 011e 02FB00F0 		mul	r0, r2, r0
 1500 0122 03FB0800 		mla	r0, r3, r8, r0
 1501 0126 8030     		adds	r0, r0, #128
 1502 0128 00EB0023 		add	r3, r0, r0, lsl #8
 1503 012c 00EBC310 		add	r0, r0, r3, lsl #7
 1504 0130 C0F3C550 		ubfx	r0, r0, #23, #6
 1505 0134 60F34A19 		bfi	r9, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1506              		.loc 3 468 5 discriminator 3 view .LVU487
 1507 0138 07F01F07 		and	r7, r7, #31
 1508              	.LVL160:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1509              		.loc 3 468 5 is_stmt 0 discriminator 3 view .LVU488
 1510 013c 0BF01F03 		and	r3, fp, #31
 1511 0140 02FB03F3 		mul	r3, r2, r3
 1512 0144 07FB0833 		mla	r3, r7, r8, r3
 1513 0148 8033     		adds	r3, r3, #128
 1514 014a 03EB0322 		add	r2, r3, r3, lsl #8
 1515 014e 03EBC213 		add	r3, r3, r2, lsl #7
 1516 0152 C3F3C453 		ubfx	r3, r3, #23, #5
 1517 0156 63F30409 		bfi	r9, r3, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1518              		.loc 3 470 5 is_stmt 1 discriminator 3 view .LVU489
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1519              		.loc 3 470 5 discriminator 3 view .LVU490
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1520              		.loc 3 470 5 discriminator 3 view .LVU491
 1521              		.loc 3 476 5 discriminator 3 view .LVU492
 1522              	.LVL161:
 1523              		.loc 3 476 5 is_stmt 0 discriminator 3 view .LVU493
 1524              	.LBE152:
 1525              	.LBE151:
 792:lvgl/src/draw/lv_draw_blend.c ****                     }
 1526              		.loc 1 792 45 discriminator 3 view .LVU494
 1527 015a 24F81190 		strh	r9, [r4, r1, lsl #1]	@ movhi
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1528              		.loc 1 783 45 is_stmt 1 discriminator 3 view .LVU495
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1529              		.loc 1 783 46 is_stmt 0 discriminator 3 view .LVU496
 1530 015e 0131     		adds	r1, r1, #1
 1531              	.LVL162:
 1532              	.L79:
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 62


 1533              		.loc 1 783 28 is_stmt 1 discriminator 1 view .LVU497
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1534              		.loc 1 783 17 is_stmt 0 discriminator 1 view .LVU498
 1535 0160 A942     		cmp	r1, r5
 1536 0162 C1DB     		blt	.L78
 795:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1537              		.loc 1 795 17 is_stmt 1 discriminator 2 view .LVU499
 795:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 1538              		.loc 1 795 32 is_stmt 0 discriminator 2 view .LVU500
 1539 0164 04EB4A04 		add	r4, r4, r10, lsl #1
 1540              	.LVL163:
 796:lvgl/src/draw/lv_draw_blend.c ****             }
 1541              		.loc 1 796 17 is_stmt 1 discriminator 2 view .LVU501
 796:lvgl/src/draw/lv_draw_blend.c ****             }
 1542              		.loc 1 796 31 is_stmt 0 discriminator 2 view .LVU502
 1543 0168 049B     		ldr	r3, [sp, #16]
 1544 016a 06EB4306 		add	r6, r6, r3, lsl #1
 1545              	.LVL164:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1546              		.loc 1 782 41 is_stmt 1 discriminator 2 view .LVU503
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1547              		.loc 1 782 42 is_stmt 0 discriminator 2 view .LVU504
 1548 016e 0CF1010C 		add	ip, ip, #1
 1549              	.LVL165:
 1550              	.L75:
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1551              		.loc 1 782 24 is_stmt 1 discriminator 1 view .LVU505
 782:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1552              		.loc 1 782 13 is_stmt 0 discriminator 1 view .LVU506
 1553 0172 F445     		cmp	ip, lr
 1554 0174 ADDA     		bge	.L72
 783:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1555              		.loc 1 783 23 view .LVU507
 1556 0176 0021     		movs	r1, #0
 1557 0178 F2E7     		b	.L79
 1558              	.LVL166:
 1559              	.L83:
 1560              	.LBB153:
 1561              	.LBB137:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1562              		.loc 1 819 21 is_stmt 1 discriminator 4 view .LVU508
 1563 017a 36F81390 		ldrh	r9, [r6, r3, lsl #1]
 1564 017e 34F813A0 		ldrh	r10, [r4, r3, lsl #1]
 1565              	.LVL167:
 1566              	.LBB138:
 1567              	.LBI138:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1568              		.loc 3 459 48 discriminator 4 view .LVU509
 1569              	.LBB139:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1570              		.loc 3 461 5 discriminator 4 view .LVU510
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1571              		.loc 3 464 5 discriminator 4 view .LVU511
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1572              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU512
 1573 0182 C9F3C42E 		ubfx	lr, r9, #11, #5
 1574              	.LVL168:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 63


 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1575              		.loc 3 464 5 discriminator 4 view .LVU513
 1576 0186 CAF3C421 		ubfx	r1, r10, #11, #5
 1577 018a C8F1FF00 		rsb	r0, r8, #255
 1578              	.LVL169:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1579              		.loc 3 464 5 discriminator 4 view .LVU514
 1580 018e 00FB01F1 		mul	r1, r0, r1
 1581 0192 08FB0E11 		mla	r1, r8, lr, r1
 1582 0196 8031     		adds	r1, r1, #128
 1583 0198 01EB012E 		add	lr, r1, r1, lsl #8
 1584 019c 01EBCE11 		add	r1, r1, lr, lsl #7
 1585 01a0 C1F3C451 		ubfx	r1, r1, #23, #5
 1586 01a4 61F3CF27 		bfi	r7, r1, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1587              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU515
 1588 01a8 C9F34511 		ubfx	r1, r9, #5, #6
 1589 01ac CAF3451E 		ubfx	lr, r10, #5, #6
 1590 01b0 0EFB00FE 		mul	lr, lr, r0
 1591 01b4 01FB08EE 		mla	lr, r1, r8, lr
 1592 01b8 0EF1800E 		add	lr, lr, #128
 1593 01bc 0EEB0E21 		add	r1, lr, lr, lsl #8
 1594 01c0 0EEBC11E 		add	lr, lr, r1, lsl #7
 1595 01c4 CEF3C55E 		ubfx	lr, lr, #23, #6
 1596 01c8 6EF34A17 		bfi	r7, lr, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1597              		.loc 3 468 5 discriminator 4 view .LVU516
 1598 01cc 09F01F09 		and	r9, r9, #31
 1599              	.LVL170:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1600              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU517
 1601 01d0 0AF01F01 		and	r1, r10, #31
 1602 01d4 00FB01F1 		mul	r1, r0, r1
 1603 01d8 09FB0811 		mla	r1, r9, r8, r1
 1604 01dc 8031     		adds	r1, r1, #128
 1605 01de 01EB0120 		add	r0, r1, r1, lsl #8
 1606 01e2 01EBC011 		add	r1, r1, r0, lsl #7
 1607 01e6 C1F3C451 		ubfx	r1, r1, #23, #5
 1608 01ea 61F30407 		bfi	r7, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1609              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU518
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1610              		.loc 3 470 5 discriminator 4 view .LVU519
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1611              		.loc 3 470 5 discriminator 4 view .LVU520
 1612              		.loc 3 476 5 discriminator 4 view .LVU521
 1613              	.LVL171:
 1614              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU522
 1615              	.LBE139:
 1616              	.LBE138:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1617              		.loc 1 819 21 discriminator 4 view .LVU523
 1618 01ee 24F81370 		strh	r7, [r4, r3, lsl #1]	@ movhi
 1619              	.LVL172:
 1620              	.L82:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1621              		.loc 1 819 21 is_stmt 1 discriminator 6 view .LVU524
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 64


 1622 01f2 0132     		adds	r2, r2, #1
 1623              	.LVL173:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1624              		.loc 1 815 81 discriminator 6 view .LVU525
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1625              		.loc 1 815 82 is_stmt 0 discriminator 6 view .LVU526
 1626 01f4 0133     		adds	r3, r3, #1
 1627              	.LVL174:
 1628              	.L101:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1629              		.loc 1 815 28 is_stmt 1 discriminator 2 view .LVU527
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1630              		.loc 1 815 17 is_stmt 0 discriminator 2 view .LVU528
 1631 01f6 AB42     		cmp	r3, r5
 1632 01f8 80F26D81 		bge	.L112
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1633              		.loc 1 815 44 discriminator 3 view .LVU529
 1634 01fc 12F0030F 		tst	r2, #3
 1635 0200 0CD0     		beq	.L115
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1636              		.loc 1 819 21 is_stmt 1 view .LVU530
 1637 0202 92F80080 		ldrb	r8, [r2]	@ zero_extendqisi2
 1638              	.LVL175:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1639              		.loc 1 819 21 is_stmt 0 view .LVU531
 1640 0206 B8F1000F 		cmp	r8, #0
 1641 020a F2D0     		beq	.L82
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1642              		.loc 1 819 21 is_stmt 1 discriminator 1 view .LVU532
 1643 020c B8F1FF0F 		cmp	r8, #255
 1644 0210 B3D1     		bne	.L83
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1645              		.loc 1 819 21 discriminator 3 view .LVU533
 1646 0212 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 1647 0216 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 1648 021a EAE7     		b	.L82
 1649              	.LVL176:
 1650              	.L115:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1651              		.loc 1 819 21 is_stmt 0 discriminator 3 view .LVU534
 1652 021c 0995     		str	r5, [sp, #36]
 1653 021e ADF828C0 		strh	ip, [sp, #40]	@ movhi
 1654 0222 BDF808C0 		ldrh	ip, [sp, #8]
 1655              	.LVL177:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1656              		.loc 1 819 21 discriminator 3 view .LVU535
 1657 0226 BDF81CE0 		ldrh	lr, [sp, #28]
 1658              	.LVL178:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1659              		.loc 1 819 21 discriminator 3 view .LVU536
 1660 022a BDF82280 		ldrh	r8, [sp, #34]
 1661              	.LVL179:
 819:lvgl/src/draw/lv_draw_blend.c **** #endif
 1662              		.loc 1 819 21 discriminator 3 view .LVU537
 1663 022e ADF82A70 		strh	r7, [sp, #42]	@ movhi
 1664 0232 14E0     		b	.L95
 1665              	.LVL180:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 65


 1666              	.L117:
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 1667              		.loc 1 827 29 is_stmt 1 view .LVU538
 827:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 1668              		.loc 1 827 47 is_stmt 0 view .LVU539
 1669 0234 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 1670 0238 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1671              		.loc 1 828 29 is_stmt 1 view .LVU540
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1672              		.loc 1 828 66 is_stmt 0 view .LVU541
 1673 023c 591C     		adds	r1, r3, #1
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1674              		.loc 1 828 51 view .LVU542
 1675 023e 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 1676              	.LVL181:
 828:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 1677              		.loc 1 828 51 view .LVU543
 1678 0242 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1679              		.loc 1 829 29 is_stmt 1 view .LVU544
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1680              		.loc 1 829 66 is_stmt 0 view .LVU545
 1681 0246 991C     		adds	r1, r3, #2
 829:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 1682              		.loc 1 829 51 view .LVU546
 1683 0248 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 1684 024c 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1685              		.loc 1 830 29 is_stmt 1 view .LVU547
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1686              		.loc 1 830 66 is_stmt 0 view .LVU548
 1687 0250 D91C     		adds	r1, r3, #3
 830:lvgl/src/draw/lv_draw_blend.c ****                         }
 1688              		.loc 1 830 51 view .LVU549
 1689 0252 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 1690 0256 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 1691              	.LVL182:
 1692              	.L86:
 847:lvgl/src/draw/lv_draw_blend.c ****                 }
 1693              		.loc 1 847 21 is_stmt 1 view .LVU550
 847:lvgl/src/draw/lv_draw_blend.c ****                 }
 1694              		.loc 1 847 27 is_stmt 0 view .LVU551
 1695 025a 0432     		adds	r2, r2, #4
 1696              	.LVL183:
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1697              		.loc 1 824 35 is_stmt 1 view .LVU552
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1698              		.loc 1 824 37 is_stmt 0 view .LVU553
 1699 025c 0433     		adds	r3, r3, #4
 1700              	.LVL184:
 1701              	.L95:
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1702              		.loc 1 824 23 is_stmt 1 discriminator 1 view .LVU554
 824:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 1703              		.loc 1 824 17 is_stmt 0 discriminator 1 view .LVU555
 1704 025e 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 66


 1705 0260 8B42     		cmp	r3, r1
 1706 0262 80F24481 		bge	.L116
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1707              		.loc 1 825 21 is_stmt 1 view .LVU556
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1708              		.loc 1 825 24 is_stmt 0 view .LVU557
 1709 0266 1168     		ldr	r1, [r2]
 825:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1710              		.loc 1 825 23 view .LVU558
 1711 0268 0029     		cmp	r1, #0
 1712 026a F6D0     		beq	.L86
 826:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 1713              		.loc 1 826 25 is_stmt 1 view .LVU559
 826:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 1714              		.loc 1 826 27 is_stmt 0 view .LVU560
 1715 026c B1F1FF3F 		cmp	r1, #-1
 1716 0270 E0D0     		beq	.L117
 833:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1717              		.loc 1 833 29 is_stmt 1 view .LVU561
 1718              	.LVL185:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1719              		.loc 1 840 29 view .LVU562
 1720 0272 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1721 0274 F5B3     		cbz	r5, .L88
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1722              		.loc 1 840 29 discriminator 1 view .LVU563
 1723 0276 FF2D     		cmp	r5, #255
 1724 0278 00F01681 		beq	.L118
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1725              		.loc 1 840 29 discriminator 4 view .LVU564
 1726 027c 36F81370 		ldrh	r7, [r6, r3, lsl #1]
 1727              	.LVL186:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1728              		.loc 1 840 29 is_stmt 0 discriminator 4 view .LVU565
 1729 0280 34F81390 		ldrh	r9, [r4, r3, lsl #1]
 1730              	.LVL187:
 1731              	.LBB140:
 1732              	.LBI140:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1733              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU566
 1734              	.LBB141:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1735              		.loc 3 461 5 discriminator 4 view .LVU567
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1736              		.loc 3 464 5 discriminator 4 view .LVU568
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1737              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU569
 1738 0284 C7F3C42A 		ubfx	r10, r7, #11, #5
 1739              	.LVL188:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1740              		.loc 3 464 5 discriminator 4 view .LVU570
 1741 0288 C9F3C420 		ubfx	r0, r9, #11, #5
 1742              	.LVL189:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1743              		.loc 3 464 5 discriminator 4 view .LVU571
 1744 028c C5F1FF01 		rsb	r1, r5, #255
 1745 0290 01FB00F0 		mul	r0, r1, r0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 67


 1746 0294 05FB0A00 		mla	r0, r5, r10, r0
 1747 0298 8030     		adds	r0, r0, #128
 1748 029a 00EB002A 		add	r10, r0, r0, lsl #8
 1749 029e 00EBCA10 		add	r0, r0, r10, lsl #7
 1750 02a2 C0F3C450 		ubfx	r0, r0, #23, #5
 1751 02a6 60F3CF28 		bfi	r8, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1752              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU572
 1753 02aa C7F3451A 		ubfx	r10, r7, #5, #6
 1754 02ae C9F34510 		ubfx	r0, r9, #5, #6
 1755 02b2 01FB00F0 		mul	r0, r1, r0
 1756 02b6 0AFB0500 		mla	r0, r10, r5, r0
 1757 02ba 8030     		adds	r0, r0, #128
 1758 02bc 00EB002A 		add	r10, r0, r0, lsl #8
 1759 02c0 00EBCA10 		add	r0, r0, r10, lsl #7
 1760 02c4 C0F3C550 		ubfx	r0, r0, #23, #6
 1761 02c8 60F34A18 		bfi	r8, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1762              		.loc 3 468 5 discriminator 4 view .LVU573
 1763 02cc 07F01F07 		and	r7, r7, #31
 1764              	.LVL190:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1765              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU574
 1766 02d0 09F01F09 		and	r9, r9, #31
 1767              	.LVL191:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1768              		.loc 3 468 5 discriminator 4 view .LVU575
 1769 02d4 09FB01F9 		mul	r9, r9, r1
 1770 02d8 07FB0599 		mla	r9, r7, r5, r9
 1771 02dc 09F18009 		add	r9, r9, #128
 1772 02e0 09EB0925 		add	r5, r9, r9, lsl #8
 1773              	.LVL192:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1774              		.loc 3 468 5 discriminator 4 view .LVU576
 1775 02e4 09EBC519 		add	r9, r9, r5, lsl #7
 1776 02e8 C9F3C459 		ubfx	r9, r9, #23, #5
 1777 02ec 69F30408 		bfi	r8, r9, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1778              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU577
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1779              		.loc 3 470 5 discriminator 4 view .LVU578
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1780              		.loc 3 470 5 discriminator 4 view .LVU579
 1781              		.loc 3 476 5 discriminator 4 view .LVU580
 1782              	.LVL193:
 1783              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU581
 1784              	.LBE141:
 1785              	.LBE140:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1786              		.loc 1 840 29 discriminator 4 view .LVU582
 1787 02f0 24F81380 		strh	r8, [r4, r3, lsl #1]	@ movhi
 1788              	.LVL194:
 1789              	.L88:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 1790              		.loc 1 840 29 is_stmt 1 discriminator 6 view .LVU583
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1791              		.loc 1 841 29 discriminator 6 view .LVU584
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 68


 1792 02f4 5578     		ldrb	r5, [r2, #1]	@ zero_extendqisi2
 1793 02f6 002D     		cmp	r5, #0
 1794 02f8 40D0     		beq	.L90
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1795              		.loc 1 841 29 discriminator 1 view .LVU585
 1796 02fa FF2D     		cmp	r5, #255
 1797 02fc 00F0D980 		beq	.L119
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1798              		.loc 1 841 29 discriminator 4 view .LVU586
 1799 0300 03F1010A 		add	r10, r3, #1
 1800              	.LVL195:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1801              		.loc 1 841 29 is_stmt 0 discriminator 4 view .LVU587
 1802 0304 36F81A70 		ldrh	r7, [r6, r10, lsl #1]
 1803              	.LVL196:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1804              		.loc 1 841 29 discriminator 4 view .LVU588
 1805 0308 34F81A90 		ldrh	r9, [r4, r10, lsl #1]
 1806              	.LVL197:
 1807              	.LBB142:
 1808              	.LBI142:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1809              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU589
 1810              	.LBB143:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1811              		.loc 3 461 5 discriminator 4 view .LVU590
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1812              		.loc 3 464 5 discriminator 4 view .LVU591
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1813              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU592
 1814 030c C7F3C42B 		ubfx	fp, r7, #11, #5
 1815              	.LVL198:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1816              		.loc 3 464 5 discriminator 4 view .LVU593
 1817 0310 C9F3C420 		ubfx	r0, r9, #11, #5
 1818              	.LVL199:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1819              		.loc 3 464 5 discriminator 4 view .LVU594
 1820 0314 C5F1FF01 		rsb	r1, r5, #255
 1821 0318 01FB00F0 		mul	r0, r1, r0
 1822 031c 05FB0B00 		mla	r0, r5, fp, r0
 1823 0320 8030     		adds	r0, r0, #128
 1824 0322 00EB002B 		add	fp, r0, r0, lsl #8
 1825 0326 00EBCB10 		add	r0, r0, fp, lsl #7
 1826 032a C0F3C450 		ubfx	r0, r0, #23, #5
 1827 032e 60F3CF2E 		bfi	lr, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1828              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU595
 1829 0332 C7F3451B 		ubfx	fp, r7, #5, #6
 1830 0336 C9F34510 		ubfx	r0, r9, #5, #6
 1831 033a 01FB00F0 		mul	r0, r1, r0
 1832 033e 0BFB0500 		mla	r0, fp, r5, r0
 1833 0342 8030     		adds	r0, r0, #128
 1834 0344 00EB002B 		add	fp, r0, r0, lsl #8
 1835 0348 00EBCB10 		add	r0, r0, fp, lsl #7
 1836 034c C0F3C550 		ubfx	r0, r0, #23, #6
 1837 0350 60F34A1E 		bfi	lr, r0, #5, #6
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 69


 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1838              		.loc 3 468 5 discriminator 4 view .LVU596
 1839 0354 07F01F07 		and	r7, r7, #31
 1840              	.LVL200:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1841              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU597
 1842 0358 09F01F09 		and	r9, r9, #31
 1843              	.LVL201:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1844              		.loc 3 468 5 discriminator 4 view .LVU598
 1845 035c 09FB01F9 		mul	r9, r9, r1
 1846 0360 07FB0599 		mla	r9, r7, r5, r9
 1847 0364 09F18009 		add	r9, r9, #128
 1848 0368 09EB0921 		add	r1, r9, r9, lsl #8
 1849 036c 09EBC119 		add	r9, r9, r1, lsl #7
 1850 0370 C9F3C459 		ubfx	r9, r9, #23, #5
 1851 0374 69F3040E 		bfi	lr, r9, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1852              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU599
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1853              		.loc 3 470 5 discriminator 4 view .LVU600
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1854              		.loc 3 470 5 discriminator 4 view .LVU601
 1855              		.loc 3 476 5 discriminator 4 view .LVU602
 1856              	.LVL202:
 1857              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU603
 1858              	.LBE143:
 1859              	.LBE142:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1860              		.loc 1 841 29 discriminator 4 view .LVU604
 1861 0378 24F81AE0 		strh	lr, [r4, r10, lsl #1]	@ movhi
 1862              	.LVL203:
 1863              	.L90:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 1864              		.loc 1 841 29 is_stmt 1 discriminator 6 view .LVU605
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1865              		.loc 1 842 29 discriminator 6 view .LVU606
 1866 037c 9578     		ldrb	r5, [r2, #2]	@ zero_extendqisi2
 1867 037e 002D     		cmp	r5, #0
 1868 0380 40D0     		beq	.L92
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1869              		.loc 1 842 29 discriminator 1 view .LVU607
 1870 0382 FF2D     		cmp	r5, #255
 1871 0384 00F09B80 		beq	.L120
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1872              		.loc 1 842 29 discriminator 4 view .LVU608
 1873 0388 03F1020A 		add	r10, r3, #2
 1874              	.LVL204:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1875              		.loc 1 842 29 is_stmt 0 discriminator 4 view .LVU609
 1876 038c 36F81A70 		ldrh	r7, [r6, r10, lsl #1]
 1877              	.LVL205:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1878              		.loc 1 842 29 discriminator 4 view .LVU610
 1879 0390 34F81A90 		ldrh	r9, [r4, r10, lsl #1]
 1880              	.LVL206:
 1881              	.LBB144:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 70


 1882              	.LBI144:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1883              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU611
 1884              	.LBB145:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1885              		.loc 3 461 5 discriminator 4 view .LVU612
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1886              		.loc 3 464 5 discriminator 4 view .LVU613
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1887              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU614
 1888 0394 C7F3C42B 		ubfx	fp, r7, #11, #5
 1889              	.LVL207:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1890              		.loc 3 464 5 discriminator 4 view .LVU615
 1891 0398 C9F3C420 		ubfx	r0, r9, #11, #5
 1892              	.LVL208:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1893              		.loc 3 464 5 discriminator 4 view .LVU616
 1894 039c C5F1FF01 		rsb	r1, r5, #255
 1895 03a0 01FB00F0 		mul	r0, r1, r0
 1896 03a4 05FB0B00 		mla	r0, r5, fp, r0
 1897 03a8 8030     		adds	r0, r0, #128
 1898 03aa 00EB002B 		add	fp, r0, r0, lsl #8
 1899 03ae 00EBCB10 		add	r0, r0, fp, lsl #7
 1900 03b2 C0F3C450 		ubfx	r0, r0, #23, #5
 1901 03b6 60F3CF2C 		bfi	ip, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1902              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU617
 1903 03ba C7F3451B 		ubfx	fp, r7, #5, #6
 1904 03be C9F34510 		ubfx	r0, r9, #5, #6
 1905 03c2 01FB00F0 		mul	r0, r1, r0
 1906 03c6 0BFB0500 		mla	r0, fp, r5, r0
 1907 03ca 8030     		adds	r0, r0, #128
 1908 03cc 00EB002B 		add	fp, r0, r0, lsl #8
 1909 03d0 00EBCB10 		add	r0, r0, fp, lsl #7
 1910 03d4 C0F3C550 		ubfx	r0, r0, #23, #6
 1911 03d8 60F34A1C 		bfi	ip, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1912              		.loc 3 468 5 discriminator 4 view .LVU618
 1913 03dc 07F01F07 		and	r7, r7, #31
 1914              	.LVL209:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1915              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU619
 1916 03e0 09F01F09 		and	r9, r9, #31
 1917              	.LVL210:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1918              		.loc 3 468 5 discriminator 4 view .LVU620
 1919 03e4 09FB01F9 		mul	r9, r9, r1
 1920 03e8 07FB0599 		mla	r9, r7, r5, r9
 1921 03ec 09F18009 		add	r9, r9, #128
 1922 03f0 09EB0921 		add	r1, r9, r9, lsl #8
 1923 03f4 09EBC119 		add	r9, r9, r1, lsl #7
 1924 03f8 C9F3C459 		ubfx	r9, r9, #23, #5
 1925 03fc 69F3040C 		bfi	ip, r9, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1926              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU621
 470:lvgl/src/draw/../misc/lv_color.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 71


 1927              		.loc 3 470 5 discriminator 4 view .LVU622
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 1928              		.loc 3 470 5 discriminator 4 view .LVU623
 1929              		.loc 3 476 5 discriminator 4 view .LVU624
 1930              	.LVL211:
 1931              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU625
 1932              	.LBE145:
 1933              	.LBE144:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1934              		.loc 1 842 29 discriminator 4 view .LVU626
 1935 0400 24F81AC0 		strh	ip, [r4, r10, lsl #1]	@ movhi
 1936              	.LVL212:
 1937              	.L92:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 1938              		.loc 1 842 29 is_stmt 1 discriminator 6 view .LVU627
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1939              		.loc 1 843 29 discriminator 6 view .LVU628
 1940 0404 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1941 0406 002D     		cmp	r5, #0
 1942 0408 3FF427AF 		beq	.L86
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1943              		.loc 1 843 29 discriminator 1 view .LVU629
 1944 040c FF2D     		cmp	r5, #255
 1945 040e 5CD0     		beq	.L121
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1946              		.loc 1 843 29 discriminator 4 view .LVU630
 1947 0410 03F1030A 		add	r10, r3, #3
 1948              	.LVL213:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1949              		.loc 1 843 29 is_stmt 0 discriminator 4 view .LVU631
 1950 0414 36F81A10 		ldrh	r1, [r6, r10, lsl #1]
 1951              	.LVL214:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 1952              		.loc 1 843 29 discriminator 4 view .LVU632
 1953 0418 ADF80810 		strh	r1, [sp, #8]	@ movhi
 1954 041c 34F81A90 		ldrh	r9, [r4, r10, lsl #1]
 1955              	.LVL215:
 1956              	.LBB146:
 1957              	.LBI146:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 1958              		.loc 3 459 48 is_stmt 1 discriminator 4 view .LVU633
 1959              	.LBB147:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1960              		.loc 3 461 5 discriminator 4 view .LVU634
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1961              		.loc 3 464 5 discriminator 4 view .LVU635
 1962 0420 0299     		ldr	r1, [sp, #8]
 1963              	.LVL216:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1964              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU636
 1965 0422 C1F3C42B 		ubfx	fp, r1, #11, #5
 1966              	.LVL217:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1967              		.loc 3 464 5 discriminator 4 view .LVU637
 1968 0426 C9F3C420 		ubfx	r0, r9, #11, #5
 1969              	.LVL218:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 72


 1970              		.loc 3 464 5 discriminator 4 view .LVU638
 1971 042a C5F1FF01 		rsb	r1, r5, #255
 1972 042e 0F46     		mov	r7, r1
 1973              	.LVL219:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1974              		.loc 3 464 5 discriminator 4 view .LVU639
 1975 0430 01FB00F0 		mul	r0, r1, r0
 1976 0434 05FB0B00 		mla	r0, r5, fp, r0
 1977 0438 8030     		adds	r0, r0, #128
 1978 043a 00EB002B 		add	fp, r0, r0, lsl #8
 1979 043e 00EBCB10 		add	r0, r0, fp, lsl #7
 1980 0442 C0F3C450 		ubfx	r0, r0, #23, #5
 1981 0446 0B99     		ldr	r1, [sp, #44]
 1982 0448 60F3CF21 		bfi	r1, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1983              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU640
 1984 044c 0298     		ldr	r0, [sp, #8]
 1985 044e C0F3451B 		ubfx	fp, r0, #5, #6
 1986 0452 C9F34510 		ubfx	r0, r9, #5, #6
 1987 0456 0797     		str	r7, [sp, #28]
 1988 0458 07FB00F0 		mul	r0, r7, r0
 1989 045c 0BFB0500 		mla	r0, fp, r5, r0
 1990 0460 8030     		adds	r0, r0, #128
 1991 0462 00EB002B 		add	fp, r0, r0, lsl #8
 1992 0466 00EBCB10 		add	r0, r0, fp, lsl #7
 1993 046a C0F3C550 		ubfx	r0, r0, #23, #6
 1994 046e 60F34A11 		bfi	r1, r0, #5, #6
 1995 0472 0846     		mov	r0, r1
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1996              		.loc 3 468 5 discriminator 4 view .LVU641
 1997 0474 0299     		ldr	r1, [sp, #8]
 1998 0476 01F01F07 		and	r7, r1, #31
 1999 047a 09F01F09 		and	r9, r9, #31
 2000              	.LVL220:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2001              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU642
 2002 047e 0799     		ldr	r1, [sp, #28]
 2003 0480 09FB01F9 		mul	r9, r9, r1
 2004 0484 07FB0599 		mla	r9, r7, r5, r9
 2005 0488 09F18009 		add	r9, r9, #128
 2006 048c 09EB0921 		add	r1, r9, r9, lsl #8
 2007 0490 09EBC119 		add	r9, r9, r1, lsl #7
 2008 0494 C9F3C459 		ubfx	r9, r9, #23, #5
 2009              	.LVL221:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2010              		.loc 3 468 5 discriminator 4 view .LVU643
 2011 0498 0146     		mov	r1, r0
 2012 049a 69F30401 		bfi	r1, r9, #0, #5
 2013 049e ADF82C10 		strh	r1, [sp, #44]	@ movhi
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2014              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU644
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2015              		.loc 3 470 5 discriminator 4 view .LVU645
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2016              		.loc 3 470 5 discriminator 4 view .LVU646
 2017              		.loc 3 476 5 discriminator 4 view .LVU647
 2018              	.LVL222:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 73


 2019              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU648
 2020              	.LBE147:
 2021              	.LBE146:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2022              		.loc 1 843 29 discriminator 4 view .LVU649
 2023 04a2 24F81A10 		strh	r1, [r4, r10, lsl #1]	@ movhi
 2024 04a6 D8E6     		b	.L86
 2025              	.LVL223:
 2026              	.L118:
 840:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2027              		.loc 1 840 29 is_stmt 1 discriminator 3 view .LVU650
 2028 04a8 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2029 04ac 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 2030 04b0 20E7     		b	.L88
 2031              	.LVL224:
 2032              	.L119:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2033              		.loc 1 841 29 discriminator 3 view .LVU651
 2034 04b2 591C     		adds	r1, r3, #1
 2035 04b4 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 2036              	.LVL225:
 841:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2037              		.loc 1 841 29 is_stmt 0 discriminator 3 view .LVU652
 2038 04b8 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 2039 04bc 5EE7     		b	.L90
 2040              	.LVL226:
 2041              	.L120:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2042              		.loc 1 842 29 is_stmt 1 discriminator 3 view .LVU653
 2043 04be 991C     		adds	r1, r3, #2
 2044 04c0 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 2045              	.LVL227:
 842:lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2046              		.loc 1 842 29 is_stmt 0 discriminator 3 view .LVU654
 2047 04c4 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 2048 04c8 9CE7     		b	.L92
 2049              	.LVL228:
 2050              	.L121:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2051              		.loc 1 843 29 is_stmt 1 discriminator 3 view .LVU655
 2052 04ca D91C     		adds	r1, r3, #3
 2053 04cc 36F81100 		ldrh	r0, [r6, r1, lsl #1]
 2054              	.LVL229:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2055              		.loc 1 843 29 is_stmt 0 discriminator 3 view .LVU656
 2056 04d0 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 2057 04d4 C1E6     		b	.L86
 2058              	.LVL230:
 2059              	.L112:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2060              		.loc 1 843 29 discriminator 3 view .LVU657
 2061 04d6 0995     		str	r5, [sp, #36]
 2062 04d8 ADF828C0 		strh	ip, [sp, #40]	@ movhi
 2063 04dc BDF808C0 		ldrh	ip, [sp, #8]
 2064              	.LVL231:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2065              		.loc 1 843 29 discriminator 3 view .LVU658
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 74


 2066 04e0 BDF81CE0 		ldrh	lr, [sp, #28]
 2067              	.LVL232:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2068              		.loc 1 843 29 discriminator 3 view .LVU659
 2069 04e4 BDF82280 		ldrh	r8, [sp, #34]
 2070              	.LVL233:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2071              		.loc 1 843 29 discriminator 3 view .LVU660
 2072 04e8 ADF82A70 		strh	r7, [sp, #42]	@ movhi
 2073 04ec B7E6     		b	.L95
 2074              	.LVL234:
 2075              	.L116:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2076              		.loc 1 843 29 discriminator 3 view .LVU661
 2077 04ee 099D     		ldr	r5, [sp, #36]
 2078 04f0 ADF808C0 		strh	ip, [sp, #8]	@ movhi
 2079 04f4 BDF828C0 		ldrh	ip, [sp, #40]
 2080              	.LVL235:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2081              		.loc 1 843 29 discriminator 3 view .LVU662
 2082 04f8 ADF81CE0 		strh	lr, [sp, #28]	@ movhi
 2083 04fc ADF82280 		strh	r8, [sp, #34]	@ movhi
 2084 0500 BDF82A70 		ldrh	r7, [sp, #42]
 2085              	.LVL236:
 843:lvgl/src/draw/lv_draw_blend.c **** #endif
 2086              		.loc 1 843 29 discriminator 3 view .LVU663
 2087 0504 3DE0     		b	.L97
 2088              	.LVL237:
 2089              	.L99:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2090              		.loc 1 855 21 is_stmt 1 discriminator 4 view .LVU664
 2091 0506 36F81390 		ldrh	r9, [r6, r3, lsl #1]
 2092 050a 34F813A0 		ldrh	r10, [r4, r3, lsl #1]
 2093              	.LVL238:
 2094              	.LBB148:
 2095              	.LBI148:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2096              		.loc 3 459 48 discriminator 4 view .LVU665
 2097              	.LBB149:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2098              		.loc 3 461 5 discriminator 4 view .LVU666
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2099              		.loc 3 464 5 discriminator 4 view .LVU667
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2100              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU668
 2101 050e C9F3C42E 		ubfx	lr, r9, #11, #5
 2102              	.LVL239:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2103              		.loc 3 464 5 discriminator 4 view .LVU669
 2104 0512 CAF3C421 		ubfx	r1, r10, #11, #5
 2105 0516 C8F1FF00 		rsb	r0, r8, #255
 2106              	.LVL240:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2107              		.loc 3 464 5 discriminator 4 view .LVU670
 2108 051a 00FB01F1 		mul	r1, r0, r1
 2109 051e 08FB0E11 		mla	r1, r8, lr, r1
 2110 0522 8031     		adds	r1, r1, #128
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 75


 2111 0524 01EB012E 		add	lr, r1, r1, lsl #8
 2112 0528 01EBCE11 		add	r1, r1, lr, lsl #7
 2113 052c C1F3C451 		ubfx	r1, r1, #23, #5
 2114 0530 61F3CF2C 		bfi	ip, r1, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2115              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU671
 2116 0534 C9F34511 		ubfx	r1, r9, #5, #6
 2117 0538 CAF3451E 		ubfx	lr, r10, #5, #6
 2118 053c 0EFB00FE 		mul	lr, lr, r0
 2119 0540 01FB08EE 		mla	lr, r1, r8, lr
 2120 0544 0EF1800E 		add	lr, lr, #128
 2121 0548 0EEB0E21 		add	r1, lr, lr, lsl #8
 2122 054c 0EEBC11E 		add	lr, lr, r1, lsl #7
 2123 0550 CEF3C55E 		ubfx	lr, lr, #23, #6
 2124 0554 6EF34A1C 		bfi	ip, lr, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2125              		.loc 3 468 5 discriminator 4 view .LVU672
 2126 0558 09F01F09 		and	r9, r9, #31
 2127              	.LVL241:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2128              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU673
 2129 055c 0AF01F01 		and	r1, r10, #31
 2130 0560 00FB01F1 		mul	r1, r0, r1
 2131 0564 09FB0811 		mla	r1, r9, r8, r1
 2132 0568 8031     		adds	r1, r1, #128
 2133 056a 01EB0120 		add	r0, r1, r1, lsl #8
 2134 056e 01EBC011 		add	r1, r1, r0, lsl #7
 2135 0572 C1F3C451 		ubfx	r1, r1, #23, #5
 2136 0576 61F3040C 		bfi	ip, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2137              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU674
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2138              		.loc 3 470 5 discriminator 4 view .LVU675
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2139              		.loc 3 470 5 discriminator 4 view .LVU676
 2140              		.loc 3 476 5 discriminator 4 view .LVU677
 2141              	.LVL242:
 2142              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU678
 2143              	.LBE149:
 2144              	.LBE148:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2145              		.loc 1 855 21 discriminator 4 view .LVU679
 2146 057a 24F813C0 		strh	ip, [r4, r3, lsl #1]	@ movhi
 2147              	.LVL243:
 2148              	.L98:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2149              		.loc 1 855 21 is_stmt 1 discriminator 6 view .LVU680
 2150 057e 0132     		adds	r2, r2, #1
 2151              	.LVL244:
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2152              		.loc 1 851 41 discriminator 6 view .LVU681
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2153              		.loc 1 851 42 is_stmt 0 discriminator 6 view .LVU682
 2154 0580 0133     		adds	r3, r3, #1
 2155              	.LVL245:
 2156              	.L97:
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 76


 2157              		.loc 1 851 23 is_stmt 1 discriminator 1 view .LVU683
 851:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2158              		.loc 1 851 17 is_stmt 0 discriminator 1 view .LVU684
 2159 0582 AB42     		cmp	r3, r5
 2160 0584 0CDA     		bge	.L122
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2161              		.loc 1 855 21 is_stmt 1 view .LVU685
 2162 0586 92F80080 		ldrb	r8, [r2]	@ zero_extendqisi2
 2163              	.LVL246:
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2164              		.loc 1 855 21 is_stmt 0 view .LVU686
 2165 058a B8F1000F 		cmp	r8, #0
 2166 058e F6D0     		beq	.L98
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2167              		.loc 1 855 21 is_stmt 1 discriminator 1 view .LVU687
 2168 0590 B8F1FF0F 		cmp	r8, #255
 2169 0594 B7D1     		bne	.L99
 855:lvgl/src/draw/lv_draw_blend.c **** #endif
 2170              		.loc 1 855 21 discriminator 3 view .LVU688
 2171 0596 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2172 059a 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 2173 059e EEE7     		b	.L98
 2174              	.LVL247:
 2175              	.L122:
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2176              		.loc 1 859 17 discriminator 2 view .LVU689
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2177              		.loc 1 859 32 is_stmt 0 discriminator 2 view .LVU690
 2178 05a0 059B     		ldr	r3, [sp, #20]
 2179              	.LVL248:
 859:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2180              		.loc 1 859 32 discriminator 2 view .LVU691
 2181 05a2 04EB4304 		add	r4, r4, r3, lsl #1
 2182              	.LVL249:
 860:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2183              		.loc 1 860 17 is_stmt 1 discriminator 2 view .LVU692
 860:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2184              		.loc 1 860 22 is_stmt 0 discriminator 2 view .LVU693
 2185 05a6 189B     		ldr	r3, [sp, #96]
 2186 05a8 2B44     		add	r3, r3, r5
 2187 05aa 1893     		str	r3, [sp, #96]
 2188              	.LVL250:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2189              		.loc 1 861 17 is_stmt 1 discriminator 2 view .LVU694
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2190              		.loc 1 861 31 is_stmt 0 discriminator 2 view .LVU695
 2191 05ac 049B     		ldr	r3, [sp, #16]
 2192              	.LVL251:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2193              		.loc 1 861 31 discriminator 2 view .LVU696
 2194 05ae 06EB4306 		add	r6, r6, r3, lsl #1
 2195              	.LVL252:
 861:lvgl/src/draw/lv_draw_blend.c ****             }
 2196              		.loc 1 861 31 discriminator 2 view .LVU697
 2197              	.LBE137:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2198              		.loc 1 808 41 is_stmt 1 discriminator 2 view .LVU698
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 77


 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2199              		.loc 1 808 42 is_stmt 0 discriminator 2 view .LVU699
 2200 05b2 039B     		ldr	r3, [sp, #12]
 2201 05b4 0133     		adds	r3, r3, #1
 2202 05b6 0393     		str	r3, [sp, #12]
 2203              	.LVL253:
 2204              	.L81:
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2205              		.loc 1 808 24 is_stmt 1 discriminator 1 view .LVU700
 808:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2206              		.loc 1 808 13 is_stmt 0 discriminator 1 view .LVU701
 2207 05b8 039B     		ldr	r3, [sp, #12]
 2208 05ba 069A     		ldr	r2, [sp, #24]
 2209 05bc 9342     		cmp	r3, r2
 2210 05be BFF688AD 		bge	.L72
 2211              	.LBB150:
 809:lvgl/src/draw/lv_draw_blend.c **** #if 0
 2212              		.loc 1 809 34 view .LVU702
 2213 05c2 189A     		ldr	r2, [sp, #96]
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2214              		.loc 1 815 23 view .LVU703
 2215 05c4 0023     		movs	r3, #0
 2216 05c6 16E6     		b	.L101
 2217              	.LVL254:
 2218              	.L110:
 815:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2219              		.loc 1 815 23 view .LVU704
 2220              	.LBE150:
 2221              	.LBE153:
 2222              	.LBB154:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2223              		.loc 1 869 34 view .LVU705
 2224 05c8 0199     		ldr	r1, [sp, #4]
 2225              	.L103:
 2226              	.LVL255:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2227              		.loc 1 878 29 is_stmt 1 discriminator 4 view .LVU706
 2228 05ca 36F81870 		ldrh	r7, [r6, r8, lsl #1]
 2229 05ce 34F818C0 		ldrh	ip, [r4, r8, lsl #1]
 2230              	.LVL256:
 2231              	.LBB155:
 2232              	.LBI155:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2233              		.loc 3 459 48 discriminator 4 view .LVU707
 2234              	.LBB156:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2235              		.loc 3 461 5 discriminator 4 view .LVU708
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2236              		.loc 3 464 5 discriminator 4 view .LVU709
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2237              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU710
 2238 05d2 C7F3C42B 		ubfx	fp, r7, #11, #5
 2239              	.LVL257:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2240              		.loc 3 464 5 discriminator 4 view .LVU711
 2241 05d6 CCF3C422 		ubfx	r2, ip, #11, #5
 2242 05da C1F1FF03 		rsb	r3, r1, #255
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 78


 2243 05de 03FB02F2 		mul	r2, r3, r2
 2244 05e2 01FB0B22 		mla	r2, r1, fp, r2
 2245 05e6 8032     		adds	r2, r2, #128
 2246 05e8 02EB022B 		add	fp, r2, r2, lsl #8
 2247 05ec 02EBCB12 		add	r2, r2, fp, lsl #7
 2248 05f0 C2F3C452 		ubfx	r2, r2, #23, #5
 2249 05f4 62F3CF2E 		bfi	lr, r2, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2250              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU712
 2251 05f8 C7F3451B 		ubfx	fp, r7, #5, #6
 2252 05fc CCF34512 		ubfx	r2, ip, #5, #6
 2253 0600 03FB02F2 		mul	r2, r3, r2
 2254 0604 0BFB0122 		mla	r2, fp, r1, r2
 2255 0608 8032     		adds	r2, r2, #128
 2256 060a 02EB022B 		add	fp, r2, r2, lsl #8
 2257 060e 02EBCB12 		add	r2, r2, fp, lsl #7
 2258 0612 C2F3C552 		ubfx	r2, r2, #23, #6
 2259 0616 62F34A1E 		bfi	lr, r2, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2260              		.loc 3 468 5 discriminator 4 view .LVU713
 2261 061a 07F01F07 		and	r7, r7, #31
 2262              	.LVL258:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2263              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU714
 2264 061e 0CF01F0C 		and	ip, ip, #31
 2265              	.LVL259:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2266              		.loc 3 468 5 discriminator 4 view .LVU715
 2267 0622 0CFB03F3 		mul	r3, ip, r3
 2268 0626 07FB0131 		mla	r1, r7, r1, r3
 2269              	.LVL260:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2270              		.loc 3 468 5 discriminator 4 view .LVU716
 2271 062a 8031     		adds	r1, r1, #128
 2272 062c 01EB0123 		add	r3, r1, r1, lsl #8
 2273 0630 01EBC311 		add	r1, r1, r3, lsl #7
 2274 0634 C1F3C451 		ubfx	r1, r1, #23, #5
 2275 0638 61F3040E 		bfi	lr, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2276              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU717
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2277              		.loc 3 470 5 discriminator 4 view .LVU718
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2278              		.loc 3 470 5 discriminator 4 view .LVU719
 2279              		.loc 3 476 5 discriminator 4 view .LVU720
 2280              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU721
 2281              	.LBE156:
 2282              	.LBE155:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2283              		.loc 1 878 49 discriminator 4 view .LVU722
 2284 063c 24F818E0 		strh	lr, [r4, r8, lsl #1]	@ movhi
 2285              	.L102:
 878:lvgl/src/draw/lv_draw_blend.c ****                         }
 2286              		.loc 1 878 49 discriminator 4 view .LVU723
 2287              	.LBE154:
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2288              		.loc 1 867 45 is_stmt 1 discriminator 2 view .LVU724
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 79


 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2289              		.loc 1 867 46 is_stmt 0 discriminator 2 view .LVU725
 2290 0640 0130     		adds	r0, r0, #1
 2291              	.LVL261:
 2292              	.L105:
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2293              		.loc 1 867 28 is_stmt 1 discriminator 1 view .LVU726
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2294              		.loc 1 867 17 is_stmt 0 discriminator 1 view .LVU727
 2295 0642 A842     		cmp	r0, r5
 2296 0644 0BDA     		bge	.L123
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2297              		.loc 1 868 21 is_stmt 1 view .LVU728
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2298              		.loc 1 868 28 is_stmt 0 view .LVU729
 2299 0646 8046     		mov	r8, r0
 2300 0648 19F80010 		ldrb	r1, [r9, r0]	@ zero_extendqisi2
 868:lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2301              		.loc 1 868 23 view .LVU730
 2302 064c 0029     		cmp	r1, #0
 2303 064e F7D0     		beq	.L102
 2304              	.LBB157:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2305              		.loc 1 869 25 is_stmt 1 view .LVU731
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2306              		.loc 1 869 34 is_stmt 0 view .LVU732
 2307 0650 FC29     		cmp	r1, #252
 2308 0652 B9D8     		bhi	.L110
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2309              		.loc 1 869 80 discriminator 1 view .LVU733
 2310 0654 019B     		ldr	r3, [sp, #4]
 2311 0656 03FB01F1 		mul	r1, r3, r1
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2312              		.loc 1 869 34 discriminator 1 view .LVU734
 2313 065a 090A     		lsrs	r1, r1, #8
 2314 065c B5E7     		b	.L103
 2315              	.L123:
 869:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2316              		.loc 1 869 34 discriminator 1 view .LVU735
 2317              	.LBE157:
 882:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2318              		.loc 1 882 17 is_stmt 1 discriminator 2 view .LVU736
 882:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2319              		.loc 1 882 32 is_stmt 0 discriminator 2 view .LVU737
 2320 065e 059B     		ldr	r3, [sp, #20]
 2321 0660 04EB4304 		add	r4, r4, r3, lsl #1
 2322              	.LVL262:
 883:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2323              		.loc 1 883 17 is_stmt 1 discriminator 2 view .LVU738
 883:lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2324              		.loc 1 883 22 is_stmt 0 discriminator 2 view .LVU739
 2325 0664 A944     		add	r9, r9, r5
 2326              	.LVL263:
 884:lvgl/src/draw/lv_draw_blend.c ****             }
 2327              		.loc 1 884 17 is_stmt 1 discriminator 2 view .LVU740
 884:lvgl/src/draw/lv_draw_blend.c ****             }
 2328              		.loc 1 884 31 is_stmt 0 discriminator 2 view .LVU741
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 80


 2329 0666 049B     		ldr	r3, [sp, #16]
 2330 0668 06EB4306 		add	r6, r6, r3, lsl #1
 2331              	.LVL264:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2332              		.loc 1 866 41 is_stmt 1 discriminator 2 view .LVU742
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2333              		.loc 1 866 42 is_stmt 0 discriminator 2 view .LVU743
 2334 066c 0AF1010A 		add	r10, r10, #1
 2335              	.LVL265:
 2336              	.L80:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2337              		.loc 1 866 24 is_stmt 1 discriminator 1 view .LVU744
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2338              		.loc 1 866 13 is_stmt 0 discriminator 1 view .LVU745
 2339 0670 069B     		ldr	r3, [sp, #24]
 2340 0672 9A45     		cmp	r10, r3
 2341 0674 BFF62DAD 		bge	.L72
 867:lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 2342              		.loc 1 867 23 view .LVU746
 2343 0678 0020     		movs	r0, #0
 2344 067a E2E7     		b	.L105
 2345              	.LVL266:
 2346              	.L108:
 866:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2347              		.loc 1 866 19 view .LVU747
 2348 067c 4FF0000A 		mov	r10, #0
 2349 0680 CDF80480 		str	r8, [sp, #4]
 2350 0684 DDF86090 		ldr	r9, [sp, #96]
 2351 0688 F2E7     		b	.L80
 2352              		.cfi_endproc
 2353              	.LFE153:
 2355              		.section	.text.fill_normal,"ax",%progbits
 2356              		.align	1
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2361              	fill_normal:
 2362              	.LVL267:
 2363              	.LFB150:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2364              		.loc 1 300 1 is_stmt 1 view -0
 2365              		.cfi_startproc
 2366              		@ args = 12, pretend = 0, frame = 40
 2367              		@ frame_needed = 0, uses_anonymous_args = 0
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2368              		.loc 1 300 1 is_stmt 0 view .LVU749
 2369 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2370              	.LCFI17:
 2371              		.cfi_def_cfa_offset 36
 2372              		.cfi_offset 4, -36
 2373              		.cfi_offset 5, -32
 2374              		.cfi_offset 6, -28
 2375              		.cfi_offset 7, -24
 2376              		.cfi_offset 8, -20
 2377              		.cfi_offset 9, -16
 2378              		.cfi_offset 10, -12
 2379              		.cfi_offset 11, -8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 81


 2380              		.cfi_offset 14, -4
 2381 0004 8DB0     		sub	sp, sp, #52
 2382              	.LCFI18:
 2383              		.cfi_def_cfa_offset 88
 2384 0006 0446     		mov	r4, r0
 2385 0008 0291     		str	r1, [sp, #8]
 2386 000a 1646     		mov	r6, r2
 2387 000c 0692     		str	r2, [sp, #24]
 2388 000e 1D46     		mov	r5, r3	@ movhi
 2389              	.LVL268:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2390              		.loc 1 300 1 view .LVU750
 2391 0010 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 2392 0014 0393     		str	r3, [sp, #12]
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2393              		.loc 1 302 5 is_stmt 1 view .LVU751
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2394              		.loc 1 302 24 is_stmt 0 view .LVU752
 2395 0016 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 2396              	.LVL269:
 302:lvgl/src/draw/lv_draw_blend.c **** 
 2397              		.loc 1 302 24 view .LVU753
 2398 001a 0790     		str	r0, [sp, #28]
 2399              	.LVL270:
 305:lvgl/src/draw/lv_draw_blend.c **** 
 2400              		.loc 1 305 5 is_stmt 1 view .LVU754
 2401              	.LBB192:
 2402              	.LBI192:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 2403              		.loc 2 133 26 view .LVU755
 2404              	.LBB193:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2405              		.loc 2 135 5 view .LVU756
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2406              		.loc 2 135 31 is_stmt 0 view .LVU757
 2407 001c A388     		ldrh	r3, [r4, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2408              		.loc 2 135 44 view .LVU758
 2409 001e 2288     		ldrh	r2, [r4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2410              		.loc 2 135 36 view .LVU759
 2411 0020 9B1A     		subs	r3, r3, r2
 2412 0022 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2413              		.loc 2 135 49 view .LVU760
 2414 0024 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2415              		.loc 2 135 12 view .LVU761
 2416 0026 1CB2     		sxth	r4, r3
 2417              	.LVL271:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2418              		.loc 2 135 12 view .LVU762
 2419 0028 0494     		str	r4, [sp, #16]
 2420              	.LVL272:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2421              		.loc 2 135 12 view .LVU763
 2422              	.LBE193:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 82


 2423              	.LBE192:
 307:lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2424              		.loc 1 307 5 is_stmt 1 view .LVU764
 2425              	.LBB194:
 2426              	.LBI194:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 2427              		.loc 2 133 26 view .LVU765
 2428              	.LBB195:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2429              		.loc 2 135 5 view .LVU766
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2430              		.loc 2 135 31 is_stmt 0 view .LVU767
 2431 002a 3046     		mov	r0, r6
 2432              	.LVL273:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2433              		.loc 2 135 31 view .LVU768
 2434 002c B688     		ldrh	r6, [r6, #4]
 2435              	.LVL274:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2436              		.loc 2 135 44 view .LVU769
 2437 002e B0F90020 		ldrsh	r2, [r0]
 2438 0032 93B2     		uxth	r3, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2439              		.loc 2 135 36 view .LVU770
 2440 0034 F61A     		subs	r6, r6, r3
 2441 0036 B6B2     		uxth	r6, r6
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2442              		.loc 2 135 49 view .LVU771
 2443 0038 0136     		adds	r6, r6, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2444              		.loc 2 135 12 view .LVU772
 2445 003a 36B2     		sxth	r6, r6
 2446              	.LVL275:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 2447              		.loc 2 135 12 view .LVU773
 2448              	.LBE195:
 2449              	.LBE194:
 308:lvgl/src/draw/lv_draw_blend.c **** 
 2450              		.loc 1 308 5 is_stmt 1 view .LVU774
 2451              	.LBB196:
 2452              	.LBI196:
 143:lvgl/src/draw/../misc/lv_area.h **** {
 2453              		.loc 2 143 26 view .LVU775
 2454              	.LBB197:
 2455              		.loc 2 145 5 view .LVU776
 2456              		.loc 2 145 31 is_stmt 0 view .LVU777
 2457 003c C388     		ldrh	r3, [r0, #6]
 2458              		.loc 2 145 44 view .LVU778
 2459 003e B0F90210 		ldrsh	r1, [r0, #2]
 2460 0042 88B2     		uxth	r0, r1
 2461              	.LVL276:
 2462              		.loc 2 145 36 view .LVU779
 2463 0044 1B1A     		subs	r3, r3, r0
 2464 0046 9BB2     		uxth	r3, r3
 2465              		.loc 2 145 49 view .LVU780
 2466 0048 0133     		adds	r3, r3, #1
 2467              		.loc 2 145 12 view .LVU781
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 83


 2468 004a 1BB2     		sxth	r3, r3
 2469 004c 0993     		str	r3, [sp, #36]
 2470              	.LVL277:
 2471              		.loc 2 145 12 view .LVU782
 2472              	.LBE197:
 2473              	.LBE196:
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2474              		.loc 1 311 5 is_stmt 1 view .LVU783
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2475              		.loc 1 311 69 is_stmt 0 view .LVU784
 2476 004e 04FB0122 		mla	r2, r4, r1, r2
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2477              		.loc 1 311 18 view .LVU785
 2478 0052 029B     		ldr	r3, [sp, #8]
 2479              	.LVL278:
 311:lvgl/src/draw/lv_draw_blend.c **** 
 2480              		.loc 1 311 18 view .LVU786
 2481 0054 03EB4204 		add	r4, r3, r2, lsl #1
 2482              	.LVL279:
 313:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 2483              		.loc 1 313 5 is_stmt 1 view .LVU787
 314:lvgl/src/draw/lv_draw_blend.c **** 
 2484              		.loc 1 314 5 view .LVU788
 317:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2485              		.loc 1 317 5 view .LVU789
 317:lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2486              		.loc 1 317 7 is_stmt 0 view .LVU790
 2487 0058 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 2488 005c 012B     		cmp	r3, #1
 2489 005e 0ED0     		beq	.L174
 2490 0060 8C46     		mov	ip, r1
 2491              	.LBB198:
 396:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 2492              		.loc 1 396 9 is_stmt 1 view .LVU791
 397:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 2493              		.loc 1 397 9 view .LVU792
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2494              		.loc 1 398 9 view .LVU793
 2495              	.LVL280:
 399:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 2496              		.loc 1 399 9 view .LVU794
 399:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 2497              		.loc 1 399 49 is_stmt 0 view .LVU795
 2498 0062 029B     		ldr	r3, [sp, #8]
 2499 0064 33F81210 		ldrh	r1, [r3, r2, lsl #1]
 399:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 2500              		.loc 1 399 30 view .LVU796
 2501 0068 0846     		mov	r0, r1	@ movhi
 2502              	.LVL281:
 400:lvgl/src/draw/lv_draw_blend.c **** 
 2503              		.loc 1 400 9 is_stmt 1 view .LVU797
 402:lvgl/src/draw/lv_draw_blend.c **** 
 2504              		.loc 1 402 9 view .LVU798
 402:lvgl/src/draw/lv_draw_blend.c **** 
 2505              		.loc 1 402 17 is_stmt 0 view .LVU799
 2506 006a 331F     		subs	r3, r6, #4
 2507 006c 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 84


 2508              	.LVL282:
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2509              		.loc 1 405 9 is_stmt 1 view .LVU800
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2510              		.loc 1 405 11 is_stmt 0 view .LVU801
 2511 006e 039B     		ldr	r3, [sp, #12]
 2512              	.LVL283:
 405:lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 2513              		.loc 1 405 11 view .LVU802
 2514 0070 FD2B     		cmp	r3, #253
 2515 0072 00F29E82 		bhi	.L168
 2516              	.LBB199:
 467:lvgl/src/draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2517              		.loc 1 467 22 view .LVU803
 2518 0076 4FF0000E 		mov	lr, #0
 2519              	.LBE199:
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2520              		.loc 1 398 18 view .LVU804
 2521 007a F046     		mov	r8, lr
 2522 007c 05E3     		b	.L137
 2523              	.LVL284:
 2524              	.L174:
 398:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 2525              		.loc 1 398 18 view .LVU805
 2526              	.LBE198:
 318:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2527              		.loc 1 318 9 is_stmt 1 view .LVU806
 318:lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2528              		.loc 1 318 11 is_stmt 0 view .LVU807
 2529 007e 039B     		ldr	r3, [sp, #12]
 2530 0080 FD2B     		cmp	r3, #253
 2531 0082 25D9     		bls	.L126
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2532              		.loc 1 338 13 is_stmt 1 view .LVU808
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2533              		.loc 1 338 20 is_stmt 0 view .LVU809
 2534 0084 079B     		ldr	r3, [sp, #28]
 2535 0086 1B68     		ldr	r3, [r3]
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2536              		.loc 1 338 28 view .LVU810
 2537 0088 DB6A     		ldr	r3, [r3, #44]
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2538              		.loc 1 338 15 view .LVU811
 2539 008a 23B1     		cbz	r3, .L127
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2540              		.loc 1 338 45 discriminator 1 view .LVU812
 2541 008c 0698     		ldr	r0, [sp, #24]
 2542 008e FFF7FEFF 		bl	lv_area_get_size
 2543              	.LVL285:
 338:lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 2544              		.loc 1 338 42 discriminator 1 view .LVU813
 2545 0092 F028     		cmp	r0, #240
 2546 0094 05D8     		bhi	.L128
 2547              	.L127:
 300:lvgl/src/draw/lv_draw_blend.c **** 
 2548              		.loc 1 300 1 discriminator 1 view .LVU814
 2549 0096 0027     		movs	r7, #0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 85


 2550 0098 DDF82480 		ldr	r8, [sp, #36]
 2551 009c DDF81090 		ldr	r9, [sp, #16]
 2552 00a0 11E0     		b	.L129
 2553              	.L128:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2554              		.loc 1 339 17 is_stmt 1 view .LVU815
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2555              		.loc 1 339 21 is_stmt 0 view .LVU816
 2556 00a2 079B     		ldr	r3, [sp, #28]
 2557 00a4 1868     		ldr	r0, [r3]
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2558              		.loc 1 339 29 view .LVU817
 2559 00a6 C46A     		ldr	r4, [r0, #44]
 2560              	.LVL286:
 339:lvgl/src/draw/lv_draw_blend.c ****                 return;
 2561              		.loc 1 339 17 view .LVU818
 2562 00a8 ADF80050 		strh	r5, [sp]	@ movhi
 2563 00ac 069B     		ldr	r3, [sp, #24]
 2564 00ae 049A     		ldr	r2, [sp, #16]
 2565 00b0 0299     		ldr	r1, [sp, #8]
 2566 00b2 A047     		blx	r4
 2567              	.LVL287:
 340:lvgl/src/draw/lv_draw_blend.c ****             }
 2568              		.loc 1 340 17 is_stmt 1 view .LVU819
 2569 00b4 09E0     		b	.L124
 2570              	.LVL288:
 2571              	.L131:
 345:lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2572              		.loc 1 345 17 discriminator 3 view .LVU820
 2573 00b6 3246     		mov	r2, r6
 2574 00b8 2946     		mov	r1, r5	@ movhi
 2575 00ba 2046     		mov	r0, r4
 2576 00bc FFF7FEFF 		bl	lv_color_fill
 2577              	.LVL289:
 346:lvgl/src/draw/lv_draw_blend.c ****             }
 2578              		.loc 1 346 17 discriminator 3 view .LVU821
 346:lvgl/src/draw/lv_draw_blend.c ****             }
 2579              		.loc 1 346 32 is_stmt 0 discriminator 3 view .LVU822
 2580 00c0 04EB4904 		add	r4, r4, r9, lsl #1
 2581              	.LVL290:
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2582              		.loc 1 344 41 is_stmt 1 discriminator 3 view .LVU823
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2583              		.loc 1 344 42 is_stmt 0 discriminator 3 view .LVU824
 2584 00c4 0137     		adds	r7, r7, #1
 2585              	.LVL291:
 2586              	.L129:
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2587              		.loc 1 344 24 is_stmt 1 discriminator 1 view .LVU825
 344:lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 2588              		.loc 1 344 13 is_stmt 0 discriminator 1 view .LVU826
 2589 00c6 4745     		cmp	r7, r8
 2590 00c8 F5DB     		blt	.L131
 2591              	.LVL292:
 2592              	.L124:
 498:lvgl/src/draw/lv_draw_blend.c **** 
 2593              		.loc 1 498 1 view .LVU827
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 86


 2594 00ca 0DB0     		add	sp, sp, #52
 2595              	.LCFI19:
 2596              		.cfi_remember_state
 2597              		.cfi_def_cfa_offset 36
 2598              		@ sp needed
 2599 00cc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2600              	.LVL293:
 2601              	.L126:
 2602              	.LCFI20:
 2603              		.cfi_restore_state
 2604              	.LBB219:
 364:lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 2605              		.loc 1 364 13 is_stmt 1 view .LVU828
 2606              	.LBB220:
 2607              	.LBI220:
 477:lvgl/src/draw/../misc/lv_color.h **** }
 478:lvgl/src/draw/../misc/lv_color.h **** 
 479:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 480:lvgl/src/draw/../misc/lv_color.h **** {
 481:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 482:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 483:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 484:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 485:lvgl/src/draw/../misc/lv_color.h **** #else
 486:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 487:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 488:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 489:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 490:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 491:lvgl/src/draw/../misc/lv_color.h **** #endif
 492:lvgl/src/draw/../misc/lv_color.h **** 
 493:lvgl/src/draw/../misc/lv_color.h **** }
 494:lvgl/src/draw/../misc/lv_color.h **** 
 495:lvgl/src/draw/../misc/lv_color.h **** /**
 496:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 500:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 502:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl/src/draw/../misc/lv_color.h ****  */
 504:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl/src/draw/../misc/lv_color.h **** {
 506:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 507:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 513:lvgl/src/draw/../misc/lv_color.h **** #else
 514:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 515:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 516:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 517:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 87


 519:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 521:lvgl/src/draw/../misc/lv_color.h **** #endif
 522:lvgl/src/draw/../misc/lv_color.h **** 
 523:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 524:lvgl/src/draw/../misc/lv_color.h **** }
 525:lvgl/src/draw/../misc/lv_color.h **** 
 526:lvgl/src/draw/../misc/lv_color.h **** /**
 527:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 529:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 530:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 531:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 532:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 533:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 534:lvgl/src/draw/../misc/lv_color.h ****  */
 535:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 536:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 537:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 538:lvgl/src/draw/../misc/lv_color.h **** {
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 540:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 546:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 551:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 552:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 553:lvgl/src/draw/../misc/lv_color.h ****     }
 554:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 555:lvgl/src/draw/../misc/lv_color.h ****     else {
 556:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 558:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 559:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 560:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 563:lvgl/src/draw/../misc/lv_color.h **** 
 564:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 565:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 566:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 567:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 568:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 569:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 570:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 571:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 572:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 573:lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 574:lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 575:lvgl/src/draw/../misc/lv_color.h ****                     ;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 88


 576:lvgl/src/draw/../misc/lv_color.h ****             }
 577:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 578:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 579:lvgl/src/draw/../misc/lv_color.h **** 
 580:lvgl/src/draw/../misc/lv_color.h ****         }
 581:lvgl/src/draw/../misc/lv_color.h **** 
 582:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 583:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 584:lvgl/src/draw/../misc/lv_color.h ****     }
 585:lvgl/src/draw/../misc/lv_color.h **** }
 586:lvgl/src/draw/../misc/lv_color.h **** 
 587:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 588:lvgl/src/draw/../misc/lv_color.h **** 
 589:lvgl/src/draw/../misc/lv_color.h **** /**
 590:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 591:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 592:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 593:lvgl/src/draw/../misc/lv_color.h ****  */
 594:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 597:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 598:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 599:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 600:lvgl/src/draw/../misc/lv_color.h **** }
 601:lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 603:lvgl/src/draw/../misc/lv_color.h **** {
 604:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 605:lvgl/src/draw/../misc/lv_color.h **** }
 606:lvgl/src/draw/../misc/lv_color.h **** 
 607:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 608:lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 610:lvgl/src/draw/../misc/lv_color.h **** }
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 613:lvgl/src/draw/../misc/lv_color.h **** {
 614:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 615:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 616:lvgl/src/draw/../misc/lv_color.h **** }
 617:lvgl/src/draw/../misc/lv_color.h **** 
 618:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 619:lvgl/src/draw/../misc/lv_color.h **** {
 620:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 621:lvgl/src/draw/../misc/lv_color.h **** }
 622:lvgl/src/draw/../misc/lv_color.h **** 
 623:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 624:lvgl/src/draw/../misc/lv_color.h **** //!
 625:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 626:lvgl/src/draw/../misc/lv_color.h **** 
 627:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 628:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 629:lvgl/src/draw/../misc/lv_color.h **** 
 630:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 631:lvgl/src/draw/../misc/lv_color.h **** 
 632:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 89


 633:lvgl/src/draw/../misc/lv_color.h **** 
 634:lvgl/src/draw/../misc/lv_color.h **** /**
 635:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 636:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 637:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 638:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 639:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 640:lvgl/src/draw/../misc/lv_color.h ****  */
 641:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 642:lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/src/draw/../misc/lv_color.h **** /**
 644:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 645:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 646:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 647:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 648:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 649:lvgl/src/draw/../misc/lv_color.h ****  */
 650:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 651:lvgl/src/draw/../misc/lv_color.h **** 
 652:lvgl/src/draw/../misc/lv_color.h **** /**
 653:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 654:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 655:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 656:lvgl/src/draw/../misc/lv_color.h ****  */
 657:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 658:lvgl/src/draw/../misc/lv_color.h **** 
 659:lvgl/src/draw/../misc/lv_color.h **** /**
 660:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 661:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 662:lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 664:lvgl/src/draw/../misc/lv_color.h **** {
 665:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 666:lvgl/src/draw/../misc/lv_color.h **** }
 667:lvgl/src/draw/../misc/lv_color.h **** 
 668:lvgl/src/draw/../misc/lv_color.h **** /**********************
 669:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 670:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 671:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 674:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 675:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
 2608              		.loc 3 675 26 view .LVU829
 2609              	.LBE220:
 2610              	.LBE219:
 2611              		.loc 3 675 49 view .LVU830
 2612              	.LBB230:
 2613              	.LBB223:
 2614              	.LBB221:
 2615              	.LBI221:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 2616              		.loc 3 602 26 view .LVU831
 2617              	.LBB222:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2618              		.loc 3 604 5 view .LVU832
 604:lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 90


 2619              		.loc 3 604 5 is_stmt 0 view .LVU833
 2620 00d0 4FF00001 		mov	r1, #0	@ movhi
 604:lvgl/src/draw/../misc/lv_color.h **** }
 2621              		.loc 3 604 5 view .LVU834
 2622              	.LBE222:
 2623              	.LBE221:
 2624              	.LBE223:
 365:lvgl/src/draw/lv_draw_blend.c **** 
 2625              		.loc 1 365 13 is_stmt 1 view .LVU835
 2626              	.LVL294:
 2627              	.LBB224:
 2628              	.LBI224:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2629              		.loc 3 459 48 view .LVU836
 2630              	.LBB225:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2631              		.loc 3 461 5 view .LVU837
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2632              		.loc 3 464 5 view .LVU838
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2633              		.loc 3 464 5 is_stmt 0 view .LVU839
 2634 00d4 C5F3C423 		ubfx	r3, r5, #11, #5
 2635 00d8 0398     		ldr	r0, [sp, #12]
 2636 00da 00FB03F3 		mul	r3, r0, r3
 2637 00de 8033     		adds	r3, r3, #128
 2638 00e0 03EB0322 		add	r2, r3, r3, lsl #8
 2639 00e4 03EBC213 		add	r3, r3, r2, lsl #7
 2640 00e8 C3F3C453 		ubfx	r3, r3, #23, #5
 2641              	.LVL295:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2642              		.loc 3 464 5 view .LVU840
 2643 00ec 8C46     		mov	ip, r1	@ movhi
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2644              		.loc 3 464 5 view .LVU841
 2645 00ee 63F3CF2C 		bfi	ip, r3, #11, #5
 2646              	.LVL296:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2647              		.loc 3 466 5 is_stmt 1 view .LVU842
 2648 00f2 C5F34513 		ubfx	r3, r5, #5, #6
 2649 00f6 00FB03F3 		mul	r3, r0, r3
 2650 00fa 8033     		adds	r3, r3, #128
 2651 00fc 03EB0322 		add	r2, r3, r3, lsl #8
 2652 0100 03EBC213 		add	r3, r3, r2, lsl #7
 2653 0104 C3F3C553 		ubfx	r3, r3, #23, #6
 2654 0108 63F34A1C 		bfi	ip, r3, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2655              		.loc 3 468 5 view .LVU843
 2656 010c 05F01F03 		and	r3, r5, #31
 2657 0110 00FB03F3 		mul	r3, r0, r3
 2658 0114 8033     		adds	r3, r3, #128
 2659 0116 03EB0322 		add	r2, r3, r3, lsl #8
 2660 011a 03EBC213 		add	r3, r3, r2, lsl #7
 2661 011e C3F3C453 		ubfx	r3, r3, #23, #5
 2662 0122 63F3040C 		bfi	ip, r3, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2663              		.loc 3 470 5 view .LVU844
 470:lvgl/src/draw/../misc/lv_color.h **** #else
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 91


 2664              		.loc 3 470 5 view .LVU845
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2665              		.loc 3 470 5 view .LVU846
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2666              		.loc 3 476 5 view .LVU847
 2667              	.LVL297:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2668              		.loc 3 476 5 is_stmt 0 view .LVU848
 2669              	.LBE225:
 2670              	.LBE224:
 367:lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 2671              		.loc 1 367 13 is_stmt 1 view .LVU849
 368:lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 2672              		.loc 1 368 13 view .LVU850
 2673              	.LBB226:
 2674              	.LBI226:
 479:lvgl/src/draw/../misc/lv_color.h **** {
 2675              		.loc 3 479 42 view .LVU851
 2676              	.LBB227:
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2677              		.loc 3 482 5 view .LVU852
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2678              		.loc 3 482 25 is_stmt 0 view .LVU853
 2679 0126 C5F3C423 		ubfx	r3, r5, #11, #5
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2680              		.loc 3 482 43 view .LVU854
 2681 012a 00FB03F3 		mul	r3, r0, r3
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 2682              		.loc 3 482 12 view .LVU855
 2683 012e ADF82830 		strh	r3, [sp, #40]	@ movhi
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2684              		.loc 3 483 5 is_stmt 1 view .LVU856
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2685              		.loc 3 483 25 is_stmt 0 view .LVU857
 2686 0132 C5F34513 		ubfx	r3, r5, #5, #6
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2687              		.loc 3 483 43 view .LVU858
 2688 0136 00FB03F3 		mul	r3, r0, r3
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 2689              		.loc 3 483 12 view .LVU859
 2690 013a ADF82A30 		strh	r3, [sp, #42]	@ movhi
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2691              		.loc 3 484 5 is_stmt 1 view .LVU860
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2692              		.loc 3 484 25 is_stmt 0 view .LVU861
 2693 013e 05F01F03 		and	r3, r5, #31
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2694              		.loc 3 484 43 view .LVU862
 2695 0142 00FB03F3 		mul	r3, r0, r3
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2696              		.loc 3 484 12 view .LVU863
 2697 0146 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 2698              	.LVL298:
 484:lvgl/src/draw/../misc/lv_color.h **** #else
 2699              		.loc 3 484 12 view .LVU864
 2700              	.LBE227:
 2701              	.LBE226:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 92


 369:lvgl/src/draw/lv_draw_blend.c **** 
 2702              		.loc 1 369 13 is_stmt 1 view .LVU865
 369:lvgl/src/draw/lv_draw_blend.c **** 
 2703              		.loc 1 369 22 is_stmt 0 view .LVU866
 2704 014a C043     		mvns	r0, r0
 2705 014c C0B2     		uxtb	r0, r0
 2706              	.LVL299:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2707              		.loc 1 371 13 is_stmt 1 view .LVU867
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2708              		.loc 1 371 19 is_stmt 0 view .LVU868
 2709 014e 0027     		movs	r7, #0
 2710 0150 DDF824E0 		ldr	lr, [sp, #36]
 2711 0154 DDF81080 		ldr	r8, [sp, #16]
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2712              		.loc 1 371 13 view .LVU869
 2713 0158 3FE0     		b	.L132
 2714              	.LVL300:
 2715              	.L176:
 374:lvgl/src/draw/lv_draw_blend.c **** 
 2716              		.loc 1 374 25 is_stmt 1 view .LVU870
 374:lvgl/src/draw/lv_draw_blend.c **** 
 2717              		.loc 1 374 41 is_stmt 0 view .LVU871
 2718 015a 34F81210 		ldrh	r1, [r4, r2, lsl #1]
 2719              	.LVL301:
 384:lvgl/src/draw/lv_draw_blend.c ****                         }
 2720              		.loc 1 384 29 is_stmt 1 view .LVU872
 2721              	.LBB228:
 2722              	.LBI228:
 504:lvgl/src/draw/../misc/lv_color.h **** {
 2723              		.loc 3 504 48 view .LVU873
 2724              	.LBB229:
 506:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2725              		.loc 3 506 5 view .LVU874
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2726              		.loc 3 509 5 view .LVU875
 2727 015e BDF82830 		ldrh	r3, [sp, #40]
 2728              	.LVL302:
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2729              		.loc 3 509 5 is_stmt 0 view .LVU876
 2730 0162 C1F3C42C 		ubfx	ip, r1, #11, #5
 2731              	.LVL303:
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2732              		.loc 3 509 5 view .LVU877
 2733 0166 00FB0C33 		mla	r3, r0, ip, r3
 2734 016a 8033     		adds	r3, r3, #128
 2735 016c 03EB032C 		add	ip, r3, r3, lsl #8
 2736 0170 03EBCC13 		add	r3, r3, ip, lsl #7
 2737 0174 C3F3C453 		ubfx	r3, r3, #23, #5
 2738 0178 63F3CF2A 		bfi	r10, r3, #11, #5
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 2739              		.loc 3 510 5 is_stmt 1 view .LVU878
 2740 017c BDF82A30 		ldrh	r3, [sp, #42]
 2741 0180 C1F3451C 		ubfx	ip, r1, #5, #6
 2742 0184 0CFB0033 		mla	r3, ip, r0, r3
 2743 0188 8033     		adds	r3, r3, #128
 2744 018a 03EB032C 		add	ip, r3, r3, lsl #8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 93


 2745 018e 03EBCC13 		add	r3, r3, ip, lsl #7
 2746 0192 C3F3C553 		ubfx	r3, r3, #23, #6
 2747 0196 63F34A1A 		bfi	r10, r3, #5, #6
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 2748              		.loc 3 511 5 view .LVU879
 2749 019a BDF82C30 		ldrh	r3, [sp, #44]
 2750 019e 01F01F0C 		and	ip, r1, #31
 2751 01a2 0CFB0033 		mla	r3, ip, r0, r3
 2752 01a6 8033     		adds	r3, r3, #128
 2753 01a8 03EB032C 		add	ip, r3, r3, lsl #8
 2754 01ac 03EBCC13 		add	r3, r3, ip, lsl #7
 2755 01b0 C3F3C453 		ubfx	r3, r3, #23, #5
 2756 01b4 63F3040A 		bfi	r10, r3, #0, #5
 512:lvgl/src/draw/../misc/lv_color.h **** #else
 2757              		.loc 3 512 5 view .LVU880
 512:lvgl/src/draw/../misc/lv_color.h **** #else
 2758              		.loc 3 512 5 view .LVU881
 512:lvgl/src/draw/../misc/lv_color.h **** #else
 2759              		.loc 3 512 5 view .LVU882
 523:lvgl/src/draw/../misc/lv_color.h **** }
 2760              		.loc 3 523 5 view .LVU883
 2761 01b8 D446     		mov	ip, r10	@ movhi
 2762              	.LVL304:
 2763              	.L133:
 523:lvgl/src/draw/../misc/lv_color.h **** }
 2764              		.loc 3 523 5 is_stmt 0 view .LVU884
 2765              	.LBE229:
 2766              	.LBE228:
 387:lvgl/src/draw/lv_draw_blend.c ****                 }
 2767              		.loc 1 387 21 is_stmt 1 discriminator 2 view .LVU885
 387:lvgl/src/draw/lv_draw_blend.c ****                 }
 2768              		.loc 1 387 39 is_stmt 0 discriminator 2 view .LVU886
 2769 01ba A5F800C0 		strh	ip, [r5]	@ movhi
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2770              		.loc 1 372 45 is_stmt 1 discriminator 2 view .LVU887
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2771              		.loc 1 372 46 is_stmt 0 discriminator 2 view .LVU888
 2772 01be 0132     		adds	r2, r2, #1
 2773              	.LVL305:
 2774              	.L135:
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2775              		.loc 1 372 28 is_stmt 1 discriminator 1 view .LVU889
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2776              		.loc 1 372 17 is_stmt 0 discriminator 1 view .LVU890
 2777 01c0 B242     		cmp	r2, r6
 2778 01c2 07DA     		bge	.L175
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2779              		.loc 1 373 21 is_stmt 1 view .LVU891
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2780              		.loc 1 373 39 is_stmt 0 view .LVU892
 2781 01c4 8BB2     		uxth	r3, r1
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2782              		.loc 1 373 62 view .LVU893
 2783 01c6 04EB4205 		add	r5, r4, r2, lsl #1
 2784              	.LVL306:
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2785              		.loc 1 373 65 view .LVU894
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 94


 2786 01ca 34F81290 		ldrh	r9, [r4, r2, lsl #1]
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2787              		.loc 1 373 23 view .LVU895
 2788 01ce 4B45     		cmp	r3, r9
 2789 01d0 C3D1     		bne	.L176
 373:lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 2790              		.loc 1 373 23 view .LVU896
 2791 01d2 F2E7     		b	.L133
 2792              	.LVL307:
 2793              	.L175:
 389:lvgl/src/draw/lv_draw_blend.c ****             }
 2794              		.loc 1 389 17 is_stmt 1 discriminator 2 view .LVU897
 389:lvgl/src/draw/lv_draw_blend.c ****             }
 2795              		.loc 1 389 32 is_stmt 0 discriminator 2 view .LVU898
 2796 01d4 04EB4804 		add	r4, r4, r8, lsl #1
 2797              	.LVL308:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2798              		.loc 1 371 41 is_stmt 1 discriminator 2 view .LVU899
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2799              		.loc 1 371 42 is_stmt 0 discriminator 2 view .LVU900
 2800 01d8 0137     		adds	r7, r7, #1
 2801              	.LVL309:
 2802              	.L132:
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2803              		.loc 1 371 24 is_stmt 1 discriminator 1 view .LVU901
 371:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2804              		.loc 1 371 13 is_stmt 0 discriminator 1 view .LVU902
 2805 01da 7745     		cmp	r7, lr
 2806 01dc BFF675AF 		bge	.L124
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2807              		.loc 1 372 23 view .LVU903
 2808 01e0 0022     		movs	r2, #0
 2809 01e2 EDE7     		b	.L135
 2810              	.LVL310:
 2811              	.L139:
 372:lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 2812              		.loc 1 372 23 view .LVU904
 2813              	.LBE230:
 2814              	.LBB231:
 2815              	.LBB204:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2816              		.loc 1 421 21 is_stmt 1 discriminator 4 view .LVU905
 2817 01e4 34F813E0 		ldrh	lr, [r4, r3, lsl #1]
 2818              	.LVL311:
 2819              	.LBB205:
 2820              	.LBI205:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2821              		.loc 3 459 48 discriminator 4 view .LVU906
 2822              	.LBB206:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2823              		.loc 3 461 5 discriminator 4 view .LVU907
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2824              		.loc 3 464 5 discriminator 4 view .LVU908
 2825 01e8 C5F3C42C 		ubfx	ip, r5, #11, #5
 2826              	.LVL312:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2827              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU909
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 95


 2828 01ec CEF3C42A 		ubfx	r10, lr, #11, #5
 2829 01f0 C1F1FF00 		rsb	r0, r1, #255
 2830 01f4 00FB0AFA 		mul	r10, r0, r10
 2831 01f8 01FB0CAC 		mla	ip, r1, ip, r10
 2832 01fc 0CF1800C 		add	ip, ip, #128
 2833 0200 0CEB0C2A 		add	r10, ip, ip, lsl #8
 2834 0204 0CEBCA1C 		add	ip, ip, r10, lsl #7
 2835 0208 CCF3C45C 		ubfx	ip, ip, #23, #5
 2836 020c 6CF3CF27 		bfi	r7, ip, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2837              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU910
 2838 0210 C5F3451C 		ubfx	ip, r5, #5, #6
 2839 0214 CEF3451A 		ubfx	r10, lr, #5, #6
 2840 0218 0AFB00FA 		mul	r10, r10, r0
 2841 021c 0CFB01AC 		mla	ip, ip, r1, r10
 2842 0220 0CF1800C 		add	ip, ip, #128
 2843 0224 0CEB0C2A 		add	r10, ip, ip, lsl #8
 2844 0228 0CEBCA1C 		add	ip, ip, r10, lsl #7
 2845 022c CCF3C55C 		ubfx	ip, ip, #23, #6
 2846 0230 6CF34A17 		bfi	r7, ip, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2847              		.loc 3 468 5 discriminator 4 view .LVU911
 2848 0234 05F01F0C 		and	ip, r5, #31
 2849 0238 0EF01F0E 		and	lr, lr, #31
 2850              	.LVL313:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2851              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU912
 2852 023c 0EFB00F0 		mul	r0, lr, r0
 2853 0240 0CFB0101 		mla	r1, ip, r1, r0
 2854              	.LVL314:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2855              		.loc 3 468 5 discriminator 4 view .LVU913
 2856 0244 8031     		adds	r1, r1, #128
 2857 0246 01EB0120 		add	r0, r1, r1, lsl #8
 2858 024a 01EBC011 		add	r1, r1, r0, lsl #7
 2859 024e C1F3C451 		ubfx	r1, r1, #23, #5
 2860 0252 61F30407 		bfi	r7, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2861              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU914
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2862              		.loc 3 470 5 discriminator 4 view .LVU915
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 2863              		.loc 3 470 5 discriminator 4 view .LVU916
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2864              		.loc 3 476 5 discriminator 4 view .LVU917
 476:lvgl/src/draw/../misc/lv_color.h **** }
 2865              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU918
 2866              	.LBE206:
 2867              	.LBE205:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2868              		.loc 1 421 21 discriminator 4 view .LVU919
 2869 0256 24F81370 		strh	r7, [r4, r3, lsl #1]	@ movhi
 2870              	.LVL315:
 2871              	.L138:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2872              		.loc 1 421 21 is_stmt 1 discriminator 6 view .LVU920
 2873 025a 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 96


 2874              	.LVL316:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2875              		.loc 1 417 81 discriminator 6 view .LVU921
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2876              		.loc 1 417 82 is_stmt 0 discriminator 6 view .LVU922
 2877 025c 0133     		adds	r3, r3, #1
 2878              	.LVL317:
 2879              	.L157:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2880              		.loc 1 417 28 is_stmt 1 discriminator 2 view .LVU923
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2881              		.loc 1 417 17 is_stmt 0 discriminator 2 view .LVU924
 2882 025e B342     		cmp	r3, r6
 2883 0260 80F23B81 		bge	.L172
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2884              		.loc 1 417 44 discriminator 3 view .LVU925
 2885 0264 12F0030F 		tst	r2, #3
 2886 0268 07D0     		beq	.L177
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2887              		.loc 1 421 21 is_stmt 1 view .LVU926
 2888 026a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2889 026c 0029     		cmp	r1, #0
 2890 026e F4D0     		beq	.L138
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2891              		.loc 1 421 21 discriminator 1 view .LVU927
 2892 0270 FF29     		cmp	r1, #255
 2893 0272 B7D1     		bne	.L139
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2894              		.loc 1 421 21 discriminator 3 view .LVU928
 2895 0274 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 2896 0278 EFE7     		b	.L138
 2897              	.L177:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2898              		.loc 1 421 21 is_stmt 0 discriminator 3 view .LVU929
 2899 027a 0696     		str	r6, [sp, #24]
 2900 027c ADF81C80 		strh	r8, [sp, #28]	@ movhi
 2901 0280 BDF816C0 		ldrh	ip, [sp, #22]
 2902              	.LVL318:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2903              		.loc 1 421 21 discriminator 3 view .LVU930
 2904 0284 BDF820E0 		ldrh	lr, [sp, #32]
 2905              	.LVL319:
 421:lvgl/src/draw/lv_draw_blend.c **** #endif
 2906              		.loc 1 421 21 discriminator 3 view .LVU931
 2907 0288 ADF82270 		strh	r7, [sp, #34]	@ movhi
 2908 028c 0CE0     		b	.L151
 2909              	.LVL320:
 2910              	.L179:
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 2911              		.loc 1 429 29 is_stmt 1 view .LVU932
 429:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 2912              		.loc 1 429 47 is_stmt 0 view .LVU933
 2913 028e 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2914              		.loc 1 430 29 is_stmt 1 view .LVU934
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2915              		.loc 1 430 43 is_stmt 0 view .LVU935
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 97


 2916 0292 591C     		adds	r1, r3, #1
 430:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 2917              		.loc 1 430 51 view .LVU936
 2918 0294 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2919              		.loc 1 431 29 is_stmt 1 view .LVU937
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2920              		.loc 1 431 43 is_stmt 0 view .LVU938
 2921 0298 991C     		adds	r1, r3, #2
 431:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 2922              		.loc 1 431 51 view .LVU939
 2923 029a 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2924              		.loc 1 432 29 is_stmt 1 view .LVU940
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2925              		.loc 1 432 43 is_stmt 0 view .LVU941
 2926 029e D91C     		adds	r1, r3, #3
 432:lvgl/src/draw/lv_draw_blend.c ****                         }
 2927              		.loc 1 432 51 view .LVU942
 2928 02a0 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2929              	.L142:
 449:lvgl/src/draw/lv_draw_blend.c ****                 }
 2930              		.loc 1 449 21 is_stmt 1 view .LVU943
 449:lvgl/src/draw/lv_draw_blend.c ****                 }
 2931              		.loc 1 449 27 is_stmt 0 view .LVU944
 2932 02a4 0432     		adds	r2, r2, #4
 2933              	.LVL321:
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2934              		.loc 1 426 36 is_stmt 1 view .LVU945
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2935              		.loc 1 426 38 is_stmt 0 view .LVU946
 2936 02a6 0433     		adds	r3, r3, #4
 2937              	.LVL322:
 2938              	.L151:
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2939              		.loc 1 426 23 is_stmt 1 discriminator 1 view .LVU947
 426:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 2940              		.loc 1 426 17 is_stmt 0 discriminator 1 view .LVU948
 2941 02a8 0299     		ldr	r1, [sp, #8]
 2942 02aa 8B42     		cmp	r3, r1
 2943 02ac 00F31F81 		bgt	.L178
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2944              		.loc 1 427 21 is_stmt 1 view .LVU949
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2945              		.loc 1 427 24 is_stmt 0 view .LVU950
 2946 02b0 1168     		ldr	r1, [r2]
 427:lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2947              		.loc 1 427 23 view .LVU951
 2948 02b2 0029     		cmp	r1, #0
 2949 02b4 F6D0     		beq	.L142
 428:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 2950              		.loc 1 428 25 is_stmt 1 view .LVU952
 428:lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 2951              		.loc 1 428 27 is_stmt 0 view .LVU953
 2952 02b6 B1F1FF3F 		cmp	r1, #-1
 2953 02ba E8D0     		beq	.L179
 435:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 98


 2954              		.loc 1 435 29 is_stmt 1 view .LVU954
 2955              	.LVL323:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2956              		.loc 1 442 29 view .LVU955
 2957 02bc 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
 2958              	.LVL324:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2959              		.loc 1 442 29 is_stmt 0 view .LVU956
 2960 02be DFB3     		cbz	r7, .L144
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2961              		.loc 1 442 29 is_stmt 1 discriminator 1 view .LVU957
 2962 02c0 FF2F     		cmp	r7, #255
 2963 02c2 00F0FB80 		beq	.L180
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2964              		.loc 1 442 29 discriminator 4 view .LVU958
 2965 02c6 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 2966              	.LVL325:
 2967              	.LBB207:
 2968              	.LBI207:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 2969              		.loc 3 459 48 discriminator 4 view .LVU959
 2970              	.LBB208:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2971              		.loc 3 461 5 discriminator 4 view .LVU960
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2972              		.loc 3 464 5 discriminator 4 view .LVU961
 2973 02ca C5F3C420 		ubfx	r0, r5, #11, #5
 2974              	.LVL326:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2975              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU962
 2976 02ce C1F3C426 		ubfx	r6, r1, #11, #5
 2977 02d2 C7F1FF08 		rsb	r8, r7, #255
 2978              	.LVL327:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2979              		.loc 3 464 5 discriminator 4 view .LVU963
 2980 02d6 08FB06F6 		mul	r6, r8, r6
 2981 02da 07FB0060 		mla	r0, r7, r0, r6
 2982 02de 8030     		adds	r0, r0, #128
 2983 02e0 00EB0026 		add	r6, r0, r0, lsl #8
 2984 02e4 00EBC610 		add	r0, r0, r6, lsl #7
 2985 02e8 C0F3C450 		ubfx	r0, r0, #23, #5
 2986 02ec 60F3CF29 		bfi	r9, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2987              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU964
 2988 02f0 C5F34510 		ubfx	r0, r5, #5, #6
 2989 02f4 C1F34516 		ubfx	r6, r1, #5, #6
 2990 02f8 06FB08F6 		mul	r6, r6, r8
 2991 02fc 00FB0760 		mla	r0, r0, r7, r6
 2992 0300 8030     		adds	r0, r0, #128
 2993 0302 00EB0026 		add	r6, r0, r0, lsl #8
 2994 0306 00EBC610 		add	r0, r0, r6, lsl #7
 2995 030a C0F3C550 		ubfx	r0, r0, #23, #6
 2996 030e 60F34A19 		bfi	r9, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2997              		.loc 3 468 5 discriminator 4 view .LVU965
 2998 0312 05F01F00 		and	r0, r5, #31
 2999 0316 01F01F01 		and	r1, r1, #31
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 99


 3000              	.LVL328:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3001              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU966
 3002 031a 01FB08F1 		mul	r1, r1, r8
 3003 031e 00FB0711 		mla	r1, r0, r7, r1
 3004 0322 8031     		adds	r1, r1, #128
 3005 0324 01EB0120 		add	r0, r1, r1, lsl #8
 3006 0328 01EBC011 		add	r1, r1, r0, lsl #7
 3007 032c C1F3C451 		ubfx	r1, r1, #23, #5
 3008 0330 61F30409 		bfi	r9, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3009              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU967
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3010              		.loc 3 470 5 discriminator 4 view .LVU968
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3011              		.loc 3 470 5 discriminator 4 view .LVU969
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3012              		.loc 3 476 5 discriminator 4 view .LVU970
 3013              	.LVL329:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3014              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU971
 3015              	.LBE208:
 3016              	.LBE207:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3017              		.loc 1 442 29 discriminator 4 view .LVU972
 3018 0334 24F81390 		strh	r9, [r4, r3, lsl #1]	@ movhi
 3019              	.LVL330:
 3020              	.L144:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3021              		.loc 1 442 29 is_stmt 1 discriminator 6 view .LVU973
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3022              		.loc 1 443 29 discriminator 6 view .LVU974
 3023 0338 5778     		ldrb	r7, [r2, #1]	@ zero_extendqisi2
 3024 033a EFB3     		cbz	r7, .L146
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3025              		.loc 1 443 29 discriminator 1 view .LVU975
 3026 033c FF2F     		cmp	r7, #255
 3027 033e 00F0C080 		beq	.L181
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3028              		.loc 1 443 29 discriminator 4 view .LVU976
 3029 0342 03F1010A 		add	r10, r3, #1
 3030 0346 34F81A10 		ldrh	r1, [r4, r10, lsl #1]
 3031              	.LVL331:
 3032              	.LBB209:
 3033              	.LBI209:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3034              		.loc 3 459 48 discriminator 4 view .LVU977
 3035              	.LBB210:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3036              		.loc 3 461 5 discriminator 4 view .LVU978
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3037              		.loc 3 464 5 discriminator 4 view .LVU979
 3038 034a C5F3C420 		ubfx	r0, r5, #11, #5
 3039              	.LVL332:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3040              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU980
 3041 034e C1F3C426 		ubfx	r6, r1, #11, #5
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 100


 3042 0352 C7F1FF08 		rsb	r8, r7, #255
 3043              	.LVL333:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3044              		.loc 3 464 5 discriminator 4 view .LVU981
 3045 0356 08FB06F6 		mul	r6, r8, r6
 3046 035a 07FB0060 		mla	r0, r7, r0, r6
 3047 035e 8030     		adds	r0, r0, #128
 3048 0360 00EB0026 		add	r6, r0, r0, lsl #8
 3049 0364 00EBC610 		add	r0, r0, r6, lsl #7
 3050 0368 C0F3C450 		ubfx	r0, r0, #23, #5
 3051 036c 60F3CF2E 		bfi	lr, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3052              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU982
 3053 0370 C5F34510 		ubfx	r0, r5, #5, #6
 3054 0374 C1F34516 		ubfx	r6, r1, #5, #6
 3055 0378 06FB08F6 		mul	r6, r6, r8
 3056 037c 00FB0760 		mla	r0, r0, r7, r6
 3057 0380 8030     		adds	r0, r0, #128
 3058 0382 00EB0026 		add	r6, r0, r0, lsl #8
 3059 0386 00EBC610 		add	r0, r0, r6, lsl #7
 3060 038a C0F3C550 		ubfx	r0, r0, #23, #6
 3061 038e 60F34A1E 		bfi	lr, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3062              		.loc 3 468 5 discriminator 4 view .LVU983
 3063 0392 05F01F00 		and	r0, r5, #31
 3064 0396 01F01F01 		and	r1, r1, #31
 3065              	.LVL334:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3066              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU984
 3067 039a 01FB08F1 		mul	r1, r1, r8
 3068 039e 00FB0711 		mla	r1, r0, r7, r1
 3069 03a2 8031     		adds	r1, r1, #128
 3070 03a4 01EB0120 		add	r0, r1, r1, lsl #8
 3071 03a8 01EBC010 		add	r0, r1, r0, lsl #7
 3072 03ac C0F3C450 		ubfx	r0, r0, #23, #5
 3073 03b0 60F3040E 		bfi	lr, r0, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3074              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU985
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3075              		.loc 3 470 5 discriminator 4 view .LVU986
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3076              		.loc 3 470 5 discriminator 4 view .LVU987
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3077              		.loc 3 476 5 discriminator 4 view .LVU988
 3078              	.LVL335:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3079              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU989
 3080              	.LBE210:
 3081              	.LBE209:
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3082              		.loc 1 443 29 discriminator 4 view .LVU990
 3083 03b4 24F81AE0 		strh	lr, [r4, r10, lsl #1]	@ movhi
 3084              	.LVL336:
 3085              	.L146:
 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3086              		.loc 1 443 29 is_stmt 1 discriminator 6 view .LVU991
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 101


 3087              		.loc 1 444 29 discriminator 6 view .LVU992
 3088 03b8 9778     		ldrb	r7, [r2, #2]	@ zero_extendqisi2
 3089 03ba EFB3     		cbz	r7, .L148
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3090              		.loc 1 444 29 discriminator 1 view .LVU993
 3091 03bc FF2F     		cmp	r7, #255
 3092 03be 00F08480 		beq	.L182
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3093              		.loc 1 444 29 discriminator 4 view .LVU994
 3094 03c2 03F1020A 		add	r10, r3, #2
 3095 03c6 34F81A10 		ldrh	r1, [r4, r10, lsl #1]
 3096              	.LVL337:
 3097              	.LBB211:
 3098              	.LBI211:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3099              		.loc 3 459 48 discriminator 4 view .LVU995
 3100              	.LBB212:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3101              		.loc 3 461 5 discriminator 4 view .LVU996
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3102              		.loc 3 464 5 discriminator 4 view .LVU997
 3103 03ca C5F3C420 		ubfx	r0, r5, #11, #5
 3104              	.LVL338:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3105              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU998
 3106 03ce C1F3C426 		ubfx	r6, r1, #11, #5
 3107 03d2 C7F1FF08 		rsb	r8, r7, #255
 3108              	.LVL339:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3109              		.loc 3 464 5 discriminator 4 view .LVU999
 3110 03d6 08FB06F6 		mul	r6, r8, r6
 3111 03da 07FB0060 		mla	r0, r7, r0, r6
 3112 03de 8030     		adds	r0, r0, #128
 3113 03e0 00EB0026 		add	r6, r0, r0, lsl #8
 3114 03e4 00EBC610 		add	r0, r0, r6, lsl #7
 3115 03e8 C0F3C450 		ubfx	r0, r0, #23, #5
 3116 03ec 60F3CF2C 		bfi	ip, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3117              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU1000
 3118 03f0 C5F34510 		ubfx	r0, r5, #5, #6
 3119 03f4 C1F34516 		ubfx	r6, r1, #5, #6
 3120 03f8 06FB08F6 		mul	r6, r6, r8
 3121 03fc 00FB0760 		mla	r0, r0, r7, r6
 3122 0400 8030     		adds	r0, r0, #128
 3123 0402 00EB0026 		add	r6, r0, r0, lsl #8
 3124 0406 00EBC610 		add	r0, r0, r6, lsl #7
 3125 040a C0F3C550 		ubfx	r0, r0, #23, #6
 3126 040e 60F34A1C 		bfi	ip, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3127              		.loc 3 468 5 discriminator 4 view .LVU1001
 3128 0412 05F01F00 		and	r0, r5, #31
 3129 0416 01F01F01 		and	r1, r1, #31
 3130              	.LVL340:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3131              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU1002
 3132 041a 01FB08F1 		mul	r1, r1, r8
 3133 041e 00FB0711 		mla	r1, r0, r7, r1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 102


 3134 0422 8031     		adds	r1, r1, #128
 3135 0424 01EB0120 		add	r0, r1, r1, lsl #8
 3136 0428 01EBC010 		add	r0, r1, r0, lsl #7
 3137 042c C0F3C450 		ubfx	r0, r0, #23, #5
 3138 0430 60F3040C 		bfi	ip, r0, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3139              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU1003
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3140              		.loc 3 470 5 discriminator 4 view .LVU1004
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3141              		.loc 3 470 5 discriminator 4 view .LVU1005
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3142              		.loc 3 476 5 discriminator 4 view .LVU1006
 3143              	.LVL341:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3144              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU1007
 3145              	.LBE212:
 3146              	.LBE211:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3147              		.loc 1 444 29 discriminator 4 view .LVU1008
 3148 0434 24F81AC0 		strh	ip, [r4, r10, lsl #1]	@ movhi
 3149              	.LVL342:
 3150              	.L148:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3151              		.loc 1 444 29 is_stmt 1 discriminator 6 view .LVU1009
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3152              		.loc 1 445 29 discriminator 6 view .LVU1010
 3153 0438 D778     		ldrb	r7, [r2, #3]	@ zero_extendqisi2
 3154 043a 002F     		cmp	r7, #0
 3155 043c 3FF432AF 		beq	.L142
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3156              		.loc 1 445 29 discriminator 1 view .LVU1011
 3157 0440 FF2F     		cmp	r7, #255
 3158 0442 46D0     		beq	.L183
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3159              		.loc 1 445 29 discriminator 4 view .LVU1012
 3160 0444 03F1030A 		add	r10, r3, #3
 3161 0448 34F81A10 		ldrh	r1, [r4, r10, lsl #1]
 3162              	.LVL343:
 3163              	.LBB213:
 3164              	.LBI213:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3165              		.loc 3 459 48 discriminator 4 view .LVU1013
 3166              	.LBB214:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3167              		.loc 3 461 5 discriminator 4 view .LVU1014
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3168              		.loc 3 464 5 discriminator 4 view .LVU1015
 3169 044c C5F3C420 		ubfx	r0, r5, #11, #5
 3170              	.LVL344:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3171              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1016
 3172 0450 C1F3C426 		ubfx	r6, r1, #11, #5
 3173 0454 C7F1FF08 		rsb	r8, r7, #255
 3174              	.LVL345:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3175              		.loc 3 464 5 discriminator 4 view .LVU1017
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 103


 3176 0458 08FB06F6 		mul	r6, r8, r6
 3177 045c 07FB0060 		mla	r0, r7, r0, r6
 3178 0460 8030     		adds	r0, r0, #128
 3179 0462 00EB0026 		add	r6, r0, r0, lsl #8
 3180 0466 00EBC610 		add	r0, r0, r6, lsl #7
 3181 046a C0F3C450 		ubfx	r0, r0, #23, #5
 3182 046e 60F3CF2B 		bfi	fp, r0, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3183              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU1018
 3184 0472 C5F34510 		ubfx	r0, r5, #5, #6
 3185 0476 C1F34516 		ubfx	r6, r1, #5, #6
 3186 047a 06FB08F6 		mul	r6, r6, r8
 3187 047e 00FB0760 		mla	r0, r0, r7, r6
 3188 0482 8030     		adds	r0, r0, #128
 3189 0484 00EB0026 		add	r6, r0, r0, lsl #8
 3190 0488 00EBC610 		add	r0, r0, r6, lsl #7
 3191 048c C0F3C550 		ubfx	r0, r0, #23, #6
 3192 0490 60F34A1B 		bfi	fp, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3193              		.loc 3 468 5 discriminator 4 view .LVU1019
 3194 0494 05F01F00 		and	r0, r5, #31
 3195 0498 01F01F01 		and	r1, r1, #31
 3196              	.LVL346:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3197              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU1020
 3198 049c 01FB08F1 		mul	r1, r1, r8
 3199 04a0 00FB0711 		mla	r1, r0, r7, r1
 3200 04a4 8031     		adds	r1, r1, #128
 3201 04a6 01EB0120 		add	r0, r1, r1, lsl #8
 3202 04aa 01EBC010 		add	r0, r1, r0, lsl #7
 3203 04ae C0F3C450 		ubfx	r0, r0, #23, #5
 3204 04b2 60F3040B 		bfi	fp, r0, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3205              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU1021
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3206              		.loc 3 470 5 discriminator 4 view .LVU1022
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3207              		.loc 3 470 5 discriminator 4 view .LVU1023
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3208              		.loc 3 476 5 discriminator 4 view .LVU1024
 3209              	.LVL347:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3210              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU1025
 3211              	.LBE214:
 3212              	.LBE213:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3213              		.loc 1 445 29 discriminator 4 view .LVU1026
 3214 04b6 24F81AB0 		strh	fp, [r4, r10, lsl #1]	@ movhi
 3215 04ba F3E6     		b	.L142
 3216              	.LVL348:
 3217              	.L180:
 442:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 3218              		.loc 1 442 29 is_stmt 1 discriminator 3 view .LVU1027
 3219 04bc 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 3220 04c0 3AE7     		b	.L144
 3221              	.LVL349:
 3222              	.L181:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 104


 443:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 3223              		.loc 1 443 29 discriminator 3 view .LVU1028
 3224 04c2 591C     		adds	r1, r3, #1
 3225 04c4 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 3226 04c8 76E7     		b	.L146
 3227              	.LVL350:
 3228              	.L182:
 444:lvgl/src/draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 3229              		.loc 1 444 29 discriminator 3 view .LVU1029
 3230 04ca 991C     		adds	r1, r3, #2
 3231 04cc 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 3232 04d0 B2E7     		b	.L148
 3233              	.LVL351:
 3234              	.L183:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3235              		.loc 1 445 29 discriminator 3 view .LVU1030
 3236 04d2 D91C     		adds	r1, r3, #3
 3237 04d4 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 3238 04d8 E4E6     		b	.L142
 3239              	.LVL352:
 3240              	.L172:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3241              		.loc 1 445 29 is_stmt 0 discriminator 3 view .LVU1031
 3242 04da 0696     		str	r6, [sp, #24]
 3243 04dc ADF81C80 		strh	r8, [sp, #28]	@ movhi
 3244 04e0 BDF816C0 		ldrh	ip, [sp, #22]
 3245              	.LVL353:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3246              		.loc 1 445 29 discriminator 3 view .LVU1032
 3247 04e4 BDF820E0 		ldrh	lr, [sp, #32]
 3248              	.LVL354:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3249              		.loc 1 445 29 discriminator 3 view .LVU1033
 3250 04e8 ADF82270 		strh	r7, [sp, #34]	@ movhi
 3251 04ec DCE6     		b	.L151
 3252              	.LVL355:
 3253              	.L178:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3254              		.loc 1 445 29 discriminator 3 view .LVU1034
 3255 04ee 069E     		ldr	r6, [sp, #24]
 3256 04f0 BDF81C80 		ldrh	r8, [sp, #28]
 3257              	.LVL356:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3258              		.loc 1 445 29 discriminator 3 view .LVU1035
 3259 04f4 ADF816C0 		strh	ip, [sp, #22]	@ movhi
 3260 04f8 ADF820E0 		strh	lr, [sp, #32]	@ movhi
 3261 04fc BDF82270 		ldrh	r7, [sp, #34]
 3262              	.LVL357:
 445:lvgl/src/draw/lv_draw_blend.c **** #endif
 3263              		.loc 1 445 29 discriminator 3 view .LVU1036
 3264 0500 03E0     		b	.L153
 3265              	.LVL358:
 3266              	.L185:
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3267              		.loc 1 457 21 is_stmt 1 discriminator 3 view .LVU1037
 3268 0502 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 3269              	.L154:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 105


 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3270              		.loc 1 457 21 discriminator 6 view .LVU1038
 3271 0506 0132     		adds	r2, r2, #1
 3272              	.LVL359:
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3273              		.loc 1 453 41 discriminator 6 view .LVU1039
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3274              		.loc 1 453 42 is_stmt 0 discriminator 6 view .LVU1040
 3275 0508 0133     		adds	r3, r3, #1
 3276              	.LVL360:
 3277              	.L153:
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3278              		.loc 1 453 23 is_stmt 1 discriminator 1 view .LVU1041
 453:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3279              		.loc 1 453 17 is_stmt 0 discriminator 1 view .LVU1042
 3280 050a B342     		cmp	r3, r6
 3281 050c 40DA     		bge	.L184
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3282              		.loc 1 457 21 is_stmt 1 view .LVU1043
 3283 050e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3284 0510 0029     		cmp	r1, #0
 3285 0512 F8D0     		beq	.L154
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3286              		.loc 1 457 21 discriminator 1 view .LVU1044
 3287 0514 FF29     		cmp	r1, #255
 3288 0516 F4D0     		beq	.L185
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3289              		.loc 1 457 21 discriminator 4 view .LVU1045
 3290 0518 34F813E0 		ldrh	lr, [r4, r3, lsl #1]
 3291              	.LVL361:
 3292              	.LBB215:
 3293              	.LBI215:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3294              		.loc 3 459 48 discriminator 4 view .LVU1046
 3295              	.LBB216:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3296              		.loc 3 461 5 discriminator 4 view .LVU1047
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3297              		.loc 3 464 5 discriminator 4 view .LVU1048
 3298 051c C5F3C42C 		ubfx	ip, r5, #11, #5
 3299              	.LVL362:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3300              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1049
 3301 0520 CEF3C42A 		ubfx	r10, lr, #11, #5
 3302 0524 C1F1FF00 		rsb	r0, r1, #255
 3303 0528 00FB0AFA 		mul	r10, r0, r10
 3304 052c 01FB0CAC 		mla	ip, r1, ip, r10
 3305 0530 0CF1800C 		add	ip, ip, #128
 3306 0534 0CEB0C2A 		add	r10, ip, ip, lsl #8
 3307 0538 0CEBCA1C 		add	ip, ip, r10, lsl #7
 3308 053c CCF3C45C 		ubfx	ip, ip, #23, #5
 3309 0540 6CF3CF28 		bfi	r8, ip, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3310              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU1050
 3311 0544 C5F3451C 		ubfx	ip, r5, #5, #6
 3312 0548 CEF3451A 		ubfx	r10, lr, #5, #6
 3313 054c 0AFB00FA 		mul	r10, r10, r0
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 106


 3314 0550 0CFB01AC 		mla	ip, ip, r1, r10
 3315 0554 0CF1800C 		add	ip, ip, #128
 3316 0558 0CEB0C2A 		add	r10, ip, ip, lsl #8
 3317 055c 0CEBCA1C 		add	ip, ip, r10, lsl #7
 3318 0560 CCF3C55C 		ubfx	ip, ip, #23, #6
 3319 0564 6CF34A18 		bfi	r8, ip, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3320              		.loc 3 468 5 discriminator 4 view .LVU1051
 3321 0568 05F01F0C 		and	ip, r5, #31
 3322 056c 0EF01F0E 		and	lr, lr, #31
 3323              	.LVL363:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3324              		.loc 3 468 5 is_stmt 0 discriminator 4 view .LVU1052
 3325 0570 0EFB00F0 		mul	r0, lr, r0
 3326 0574 0CFB0101 		mla	r1, ip, r1, r0
 3327              	.LVL364:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3328              		.loc 3 468 5 discriminator 4 view .LVU1053
 3329 0578 8031     		adds	r1, r1, #128
 3330 057a 01EB0120 		add	r0, r1, r1, lsl #8
 3331 057e 01EBC011 		add	r1, r1, r0, lsl #7
 3332 0582 C1F3C451 		ubfx	r1, r1, #23, #5
 3333 0586 61F30408 		bfi	r8, r1, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3334              		.loc 3 470 5 is_stmt 1 discriminator 4 view .LVU1054
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3335              		.loc 3 470 5 discriminator 4 view .LVU1055
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3336              		.loc 3 470 5 discriminator 4 view .LVU1056
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3337              		.loc 3 476 5 discriminator 4 view .LVU1057
 3338              	.LVL365:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3339              		.loc 3 476 5 is_stmt 0 discriminator 4 view .LVU1058
 3340              	.LBE216:
 3341              	.LBE215:
 457:lvgl/src/draw/lv_draw_blend.c **** #endif
 3342              		.loc 1 457 21 discriminator 4 view .LVU1059
 3343 058a 24F81380 		strh	r8, [r4, r3, lsl #1]	@ movhi
 3344 058e BAE7     		b	.L154
 3345              	.LVL366:
 3346              	.L184:
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3347              		.loc 1 461 17 is_stmt 1 discriminator 2 view .LVU1060
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3348              		.loc 1 461 32 is_stmt 0 discriminator 2 view .LVU1061
 3349 0590 049B     		ldr	r3, [sp, #16]
 3350              	.LVL367:
 461:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3351              		.loc 1 461 32 discriminator 2 view .LVU1062
 3352 0592 04EB4304 		add	r4, r4, r3, lsl #1
 3353              	.LVL368:
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3354              		.loc 1 462 17 is_stmt 1 discriminator 2 view .LVU1063
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3355              		.loc 1 462 22 is_stmt 0 discriminator 2 view .LVU1064
 3356 0596 179B     		ldr	r3, [sp, #92]
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 107


 3357 0598 3344     		add	r3, r3, r6
 3358 059a 1793     		str	r3, [sp, #92]
 3359              	.LVL369:
 462:lvgl/src/draw/lv_draw_blend.c ****             }
 3360              		.loc 1 462 22 discriminator 2 view .LVU1065
 3361              	.LBE204:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3362              		.loc 1 406 41 is_stmt 1 discriminator 2 view .LVU1066
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3363              		.loc 1 406 42 is_stmt 0 discriminator 2 view .LVU1067
 3364 059c 039B     		ldr	r3, [sp, #12]
 3365              	.LVL370:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3366              		.loc 1 406 42 discriminator 2 view .LVU1068
 3367 059e 0133     		adds	r3, r3, #1
 3368 05a0 0393     		str	r3, [sp, #12]
 3369              	.LVL371:
 3370              	.L136:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3371              		.loc 1 406 24 is_stmt 1 discriminator 1 view .LVU1069
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3372              		.loc 1 406 13 is_stmt 0 discriminator 1 view .LVU1070
 3373 05a2 039B     		ldr	r3, [sp, #12]
 3374 05a4 099A     		ldr	r2, [sp, #36]
 3375 05a6 9342     		cmp	r3, r2
 3376 05a8 BFF68FAD 		bge	.L124
 3377              	.LBB217:
 407:lvgl/src/draw/lv_draw_blend.c **** #if 0
 3378              		.loc 1 407 34 view .LVU1071
 3379 05ac 179A     		ldr	r2, [sp, #92]
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3380              		.loc 1 417 23 view .LVU1072
 3381 05ae 0023     		movs	r3, #0
 3382 05b0 55E6     		b	.L157
 3383              	.LVL372:
 3384              	.L168:
 417:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3385              		.loc 1 417 23 view .LVU1073
 3386              	.LBE217:
 406:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3387              		.loc 1 406 19 view .LVU1074
 3388 05b2 0023     		movs	r3, #0
 3389 05b4 0393     		str	r3, [sp, #12]
 3390 05b6 BDF822B0 		ldrh	fp, [sp, #34]
 3391 05ba F2E7     		b	.L136
 3392              	.LVL373:
 3393              	.L170:
 3394              	.LBB218:
 3395              	.LBB200:
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3396              		.loc 1 472 62 view .LVU1075
 3397 05bc DDF80CE0 		ldr	lr, [sp, #12]
 3398              	.LVL374:
 3399              	.L160:
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3400              		.loc 1 474 25 is_stmt 1 view .LVU1076
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 108


 3401              		.loc 1 474 27 is_stmt 0 view .LVU1077
 3402 05c0 4745     		cmp	r7, r8
 3403 05c2 52D0     		beq	.L186
 3404              	.L161:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3405              		.loc 1 483 33 is_stmt 1 view .LVU1078
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3406              		.loc 1 483 35 is_stmt 0 view .LVU1079
 3407 05c4 BEF1FF0F 		cmp	lr, #255
 3408 05c8 55D0     		beq	.L187
 484:lvgl/src/draw/lv_draw_blend.c ****                             }
 3409              		.loc 1 484 38 is_stmt 1 view .LVU1080
 3410 05ca 34F81380 		ldrh	r8, [r4, r3, lsl #1]
 3411              	.LVL375:
 3412              	.LBB201:
 3413              	.LBI201:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3414              		.loc 3 459 48 view .LVU1081
 3415              	.LBB202:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3416              		.loc 3 461 5 view .LVU1082
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3417              		.loc 3 464 5 view .LVU1083
 3418 05ce C5F3C422 		ubfx	r2, r5, #11, #5
 3419              	.LVL376:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3420              		.loc 3 464 5 is_stmt 0 view .LVU1084
 3421 05d2 C8F3C420 		ubfx	r0, r8, #11, #5
 3422              	.LVL377:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3423              		.loc 3 464 5 view .LVU1085
 3424 05d6 CEF1FF01 		rsb	r1, lr, #255
 3425              	.LVL378:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3426              		.loc 3 464 5 view .LVU1086
 3427 05da 01FB00F0 		mul	r0, r1, r0
 3428 05de 0EFB0202 		mla	r2, lr, r2, r0
 3429 05e2 8032     		adds	r2, r2, #128
 3430 05e4 02EB0220 		add	r0, r2, r2, lsl #8
 3431 05e8 02EBC012 		add	r2, r2, r0, lsl #7
 3432 05ec C2F3C452 		ubfx	r2, r2, #23, #5
 3433 05f0 62F3CF2B 		bfi	fp, r2, #11, #5
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3434              		.loc 3 466 5 is_stmt 1 view .LVU1087
 3435 05f4 C5F34510 		ubfx	r0, r5, #5, #6
 3436 05f8 C8F34512 		ubfx	r2, r8, #5, #6
 3437 05fc 01FB02F2 		mul	r2, r1, r2
 3438 0600 00FB0E20 		mla	r0, r0, lr, r2
 3439 0604 8030     		adds	r0, r0, #128
 3440 0606 00EB0022 		add	r2, r0, r0, lsl #8
 3441 060a 00EBC210 		add	r0, r0, r2, lsl #7
 3442 060e C0F3C550 		ubfx	r0, r0, #23, #6
 3443 0612 60F34A1B 		bfi	fp, r0, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3444              		.loc 3 468 5 view .LVU1088
 3445 0616 05F01F02 		and	r2, r5, #31
 3446 061a 08F01F08 		and	r8, r8, #31
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 109


 3447              	.LVL379:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3448              		.loc 3 468 5 is_stmt 0 view .LVU1089
 3449 061e 08FB01F1 		mul	r1, r8, r1
 3450 0622 02FB0E12 		mla	r2, r2, lr, r1
 3451 0626 8032     		adds	r2, r2, #128
 3452 0628 02EB0221 		add	r1, r2, r2, lsl #8
 3453 062c 02EBC112 		add	r2, r2, r1, lsl #7
 3454 0630 C2F3C452 		ubfx	r2, r2, #23, #5
 3455 0634 62F3040B 		bfi	fp, r2, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3456              		.loc 3 470 5 is_stmt 1 view .LVU1090
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3457              		.loc 3 470 5 view .LVU1091
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3458              		.loc 3 470 5 view .LVU1092
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3459              		.loc 3 476 5 view .LVU1093
 3460 0638 5946     		mov	r1, fp	@ movhi
 3461              	.LVL380:
 3462              	.L164:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3463              		.loc 3 476 5 is_stmt 0 view .LVU1094
 3464              	.LBE202:
 3465              	.LBE201:
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 3466              		.loc 1 486 29 is_stmt 1 view .LVU1095
 487:lvgl/src/draw/lv_draw_blend.c ****                         }
 3467              		.loc 1 487 29 view .LVU1096
 487:lvgl/src/draw/lv_draw_blend.c ****                         }
 3468              		.loc 1 487 50 is_stmt 0 view .LVU1097
 3469 063a 34F81300 		ldrh	r0, [r4, r3, lsl #1]
 3470              	.LVL381:
 486:lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 3471              		.loc 1 486 39 view .LVU1098
 3472 063e B846     		mov	r8, r7
 3473              	.LVL382:
 3474              	.L162:
 489:lvgl/src/draw/lv_draw_blend.c ****                     }
 3475              		.loc 1 489 25 is_stmt 1 view .LVU1099
 489:lvgl/src/draw/lv_draw_blend.c ****                     }
 3476              		.loc 1 489 43 is_stmt 0 view .LVU1100
 3477 0640 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 3478              	.L159:
 491:lvgl/src/draw/lv_draw_blend.c ****                 }
 3479              		.loc 1 491 21 is_stmt 1 discriminator 2 view .LVU1101
 491:lvgl/src/draw/lv_draw_blend.c ****                 }
 3480              		.loc 1 491 31 is_stmt 0 discriminator 2 view .LVU1102
 3481 0644 09F10109 		add	r9, r9, #1
 3482              	.LVL383:
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3483              		.loc 1 470 45 is_stmt 1 discriminator 2 view .LVU1103
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3484              		.loc 1 470 46 is_stmt 0 discriminator 2 view .LVU1104
 3485 0648 0133     		adds	r3, r3, #1
 3486              	.LVL384:
 3487              	.L166:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 110


 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3488              		.loc 1 470 28 is_stmt 1 discriminator 1 view .LVU1105
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3489              		.loc 1 470 17 is_stmt 0 discriminator 1 view .LVU1106
 3490 064a B342     		cmp	r3, r6
 3491 064c 15DA     		bge	.L188
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3492              		.loc 1 471 21 is_stmt 1 view .LVU1107
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3493              		.loc 1 471 24 is_stmt 0 view .LVU1108
 3494 064e 99F80070 		ldrb	r7, [r9]	@ zero_extendqisi2
 471:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 3495              		.loc 1 471 23 view .LVU1109
 3496 0652 002F     		cmp	r7, #0
 3497 0654 F6D0     		beq	.L159
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3498              		.loc 1 472 25 is_stmt 1 view .LVU1110
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3499              		.loc 1 472 27 is_stmt 0 view .LVU1111
 3500 0656 4745     		cmp	r7, r8
 3501 0658 B2D0     		beq	.L160
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3502              		.loc 1 472 54 is_stmt 1 discriminator 1 view .LVU1112
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3503              		.loc 1 472 62 is_stmt 0 discriminator 1 view .LVU1113
 3504 065a FF2F     		cmp	r7, #255
 3505 065c AED0     		beq	.L170
 473:lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 3506              		.loc 1 473 68 discriminator 2 view .LVU1114
 3507 065e 039A     		ldr	r2, [sp, #12]
 3508 0660 07FB02FE 		mul	lr, r7, r2
 3509              	.LVL385:
 472:lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 3510              		.loc 1 472 62 discriminator 2 view .LVU1115
 3511 0664 4FEA1E2E 		lsr	lr, lr, #8
 3512 0668 AAE7     		b	.L160
 3513              	.LVL386:
 3514              	.L186:
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3515              		.loc 1 474 71 discriminator 1 view .LVU1116
 3516 066a 82B2     		uxth	r2, r0
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3517              		.loc 1 474 97 discriminator 1 view .LVU1117
 3518 066c 34F813A0 		ldrh	r10, [r4, r3, lsl #1]
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3519              		.loc 1 474 53 discriminator 1 view .LVU1118
 3520 0670 5245     		cmp	r2, r10
 3521 0672 A7D1     		bne	.L161
 474:lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3522              		.loc 1 474 53 discriminator 1 view .LVU1119
 3523 0674 E4E7     		b	.L162
 3524              	.L187:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3525              		.loc 1 483 61 is_stmt 1 discriminator 1 view .LVU1120
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3526              		.loc 1 483 76 is_stmt 0 discriminator 1 view .LVU1121
 3527 0676 2946     		mov	r1, r5	@ movhi
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 111


 3528              	.LVL387:
 483:lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 3529              		.loc 1 483 76 discriminator 1 view .LVU1122
 3530 0678 DFE7     		b	.L164
 3531              	.LVL388:
 3532              	.L188:
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3533              		.loc 1 493 17 is_stmt 1 discriminator 2 view .LVU1123
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3534              		.loc 1 493 32 is_stmt 0 discriminator 2 view .LVU1124
 3535 067a 049B     		ldr	r3, [sp, #16]
 3536              	.LVL389:
 493:lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3537              		.loc 1 493 32 discriminator 2 view .LVU1125
 3538 067c 04EB4304 		add	r4, r4, r3, lsl #1
 3539              	.LVL390:
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3540              		.loc 1 494 17 is_stmt 1 discriminator 2 view .LVU1126
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3541              		.loc 1 494 22 is_stmt 0 discriminator 2 view .LVU1127
 3542 0680 179B     		ldr	r3, [sp, #92]
 3543 0682 3344     		add	r3, r3, r6
 3544 0684 1793     		str	r3, [sp, #92]
 3545              	.LVL391:
 494:lvgl/src/draw/lv_draw_blend.c ****             }
 3546              		.loc 1 494 22 discriminator 2 view .LVU1128
 3547              	.LBE200:
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3548              		.loc 1 468 56 is_stmt 1 discriminator 2 view .LVU1129
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3549              		.loc 1 468 57 is_stmt 0 discriminator 2 view .LVU1130
 3550 0686 0CF1010C 		add	ip, ip, #1
 3551              	.LVL392:
 3552              	.L137:
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3553              		.loc 1 468 36 is_stmt 1 discriminator 1 view .LVU1131
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3554              		.loc 1 468 50 is_stmt 0 discriminator 1 view .LVU1132
 3555 068a 069B     		ldr	r3, [sp, #24]
 3556 068c B3F90630 		ldrsh	r3, [r3, #6]
 468:lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3557              		.loc 1 468 13 discriminator 1 view .LVU1133
 3558 0690 6345     		cmp	r3, ip
 3559 0692 FFF61AAD 		blt	.L124
 3560              	.LBB203:
 469:lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3561              		.loc 1 469 34 view .LVU1134
 3562 0696 179F     		ldr	r7, [sp, #92]
 470:lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 3563              		.loc 1 470 23 view .LVU1135
 3564 0698 0023     		movs	r3, #0
 3565 069a B946     		mov	r9, r7
 3566 069c D5E7     		b	.L166
 3567              	.LBE203:
 3568              	.LBE218:
 3569              	.LBE231:
 3570              		.cfi_endproc
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 112


 3571              	.LFE150:
 3573              		.section	.text.fill_blended,"ax",%progbits
 3574              		.align	1
 3575              		.syntax unified
 3576              		.thumb
 3577              		.thumb_func
 3579              	fill_blended:
 3580              	.LVL393:
 3581              	.LFB151:
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3582              		.loc 1 518 1 is_stmt 1 view -0
 3583              		.cfi_startproc
 3584              		@ args = 16, pretend = 0, frame = 16
 3585              		@ frame_needed = 0, uses_anonymous_args = 0
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3586              		.loc 1 518 1 is_stmt 0 view .LVU1137
 3587 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3588              	.LCFI21:
 3589              		.cfi_def_cfa_offset 36
 3590              		.cfi_offset 4, -36
 3591              		.cfi_offset 5, -32
 3592              		.cfi_offset 6, -28
 3593              		.cfi_offset 7, -24
 3594              		.cfi_offset 8, -20
 3595              		.cfi_offset 9, -16
 3596              		.cfi_offset 10, -12
 3597              		.cfi_offset 11, -8
 3598              		.cfi_offset 14, -4
 3599 0004 85B0     		sub	sp, sp, #20
 3600              	.LCFI22:
 3601              		.cfi_def_cfa_offset 56
 3602 0006 9046     		mov	r8, r2
 3603 0008 9A46     		mov	r10, r3	@ movhi
 3604              	.LVL394:
 518:lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3605              		.loc 1 518 1 view .LVU1138
 3606 000a 9DF83830 		ldrb	r3, [sp, #56]	@ zero_extendqisi2
 3607 000e 0093     		str	r3, [sp]
 3608 0010 9DF84440 		ldrb	r4, [sp, #68]	@ zero_extendqisi2
 520:lvgl/src/draw/lv_draw_blend.c **** 
 3609              		.loc 1 520 5 is_stmt 1 view .LVU1139
 3610              	.LVL395:
 3611              	.LBB244:
 3612              	.LBI244:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 3613              		.loc 2 133 26 view .LVU1140
 3614              	.LBB245:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3615              		.loc 2 135 5 view .LVU1141
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3616              		.loc 2 135 31 is_stmt 0 view .LVU1142
 3617 0014 8388     		ldrh	r3, [r0, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3618              		.loc 2 135 44 view .LVU1143
 3619 0016 0288     		ldrh	r2, [r0]
 3620              	.LVL396:
 135:lvgl/src/draw/../misc/lv_area.h **** }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 113


 3621              		.loc 2 135 36 view .LVU1144
 3622 0018 9B1A     		subs	r3, r3, r2
 3623 001a 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3624              		.loc 2 135 49 view .LVU1145
 3625 001c 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3626              		.loc 2 135 12 view .LVU1146
 3627 001e 1BB2     		sxth	r3, r3
 3628 0020 0293     		str	r3, [sp, #8]
 3629              	.LVL397:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3630              		.loc 2 135 12 view .LVU1147
 3631              	.LBE245:
 3632              	.LBE244:
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3633              		.loc 1 523 5 is_stmt 1 view .LVU1148
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3634              		.loc 1 523 62 is_stmt 0 view .LVU1149
 3635 0022 B8F90220 		ldrsh	r2, [r8, #2]
 3636 0026 0192     		str	r2, [sp, #4]
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3637              		.loc 1 523 51 view .LVU1150
 3638 0028 03FB02F2 		mul	r2, r3, r2
 523:lvgl/src/draw/lv_draw_blend.c **** 
 3639              		.loc 1 523 18 view .LVU1151
 3640 002c 01EB4205 		add	r5, r1, r2, lsl #1
 3641              	.LVL398:
 525:lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 3642              		.loc 1 525 5 is_stmt 1 view .LVU1152
 526:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 3643              		.loc 1 526 5 view .LVU1153
 3644 0030 012C     		cmp	r4, #1
 3645 0032 19D0     		beq	.L206
 3646 0034 022C     		cmp	r4, #2
 3647 0036 40F09F80 		bne	.L189
 531:lvgl/src/draw/lv_draw_blend.c ****             break;
 3648              		.loc 1 531 22 is_stmt 0 view .LVU1154
 3649 003a DFF844B1 		ldr	fp, .L214
 3650              	.L190:
 3651              	.LVL399:
 538:lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 3652              		.loc 1 538 5 is_stmt 1 view .LVU1155
 539:lvgl/src/draw/lv_draw_blend.c **** 
 3653              		.loc 1 539 5 view .LVU1156
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3654              		.loc 1 542 5 view .LVU1157
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3655              		.loc 1 542 7 is_stmt 0 view .LVU1158
 3656 003e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 3657              	.LVL400:
 542:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 3658              		.loc 1 542 7 view .LVU1159
 3659 0042 012B     		cmp	r3, #1
 3660 0044 13D0     		beq	.L209
 3661              	.LBB246:
 559:lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 114


 3662              		.loc 1 559 9 is_stmt 1 view .LVU1160
 3663              	.LVL401:
 3664              	.LBB247:
 3665              	.LBI247:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 3666              		.loc 2 133 26 view .LVU1161
 3667              	.LBB248:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3668              		.loc 2 135 5 view .LVU1162
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3669              		.loc 2 135 31 is_stmt 0 view .LVU1163
 3670 0046 B8F80430 		ldrh	r3, [r8, #4]
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3671              		.loc 2 135 44 view .LVU1164
 3672 004a B8F90000 		ldrsh	r0, [r8]
 3673              	.LVL402:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3674              		.loc 2 135 44 view .LVU1165
 3675 004e 84B2     		uxth	r4, r0
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3676              		.loc 2 135 36 view .LVU1166
 3677 0050 1B1B     		subs	r3, r3, r4
 3678 0052 9BB2     		uxth	r3, r3
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3679              		.loc 2 135 49 view .LVU1167
 3680 0054 0133     		adds	r3, r3, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3681              		.loc 2 135 12 view .LVU1168
 3682 0056 1BB2     		sxth	r3, r3
 3683 0058 0393     		str	r3, [sp, #12]
 3684              	.LVL403:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 3685              		.loc 2 135 12 view .LVU1169
 3686              	.LBE248:
 3687              	.LBE247:
 564:lvgl/src/draw/lv_draw_blend.c **** 
 3688              		.loc 1 564 9 is_stmt 1 view .LVU1170
 564:lvgl/src/draw/lv_draw_blend.c **** 
 3689              		.loc 1 564 26 is_stmt 0 view .LVU1171
 3690 005a 0F9F     		ldr	r7, [sp, #60]
 3691 005c 3F1A     		subs	r7, r7, r0
 3692              	.LVL404:
 567:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 3693              		.loc 1 567 9 is_stmt 1 view .LVU1172
 568:lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 3694              		.loc 1 568 9 view .LVU1173
 569:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3695              		.loc 1 569 9 view .LVU1174
 570:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3696              		.loc 1 570 9 view .LVU1175
 570:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3697              		.loc 1 570 47 is_stmt 0 view .LVU1176
 3698 005e 31F81200 		ldrh	r0, [r1, r2, lsl #1]
 570:lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3699              		.loc 1 570 30 view .LVU1177
 3700 0062 8446     		mov	ip, r0	@ movhi
 3701              	.LVL405:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 115


 571:lvgl/src/draw/lv_draw_blend.c **** 
 3702              		.loc 1 571 9 is_stmt 1 view .LVU1178
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3703              		.loc 1 573 9 view .LVU1179
 569:lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3704              		.loc 1 569 18 is_stmt 0 view .LVU1180
 3705 0064 0021     		movs	r1, #0
 3706              	.LVL406:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3707              		.loc 1 573 9 view .LVU1181
 3708 0066 7FE0     		b	.L198
 3709              	.LVL407:
 3710              	.L206:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3711              		.loc 1 573 9 view .LVU1182
 3712              	.LBE246:
 526:lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 3713              		.loc 1 526 5 view .LVU1183
 3714 0068 DFF818B1 		ldr	fp, .L214+4
 3715 006c E7E7     		b	.L190
 3716              	.LVL408:
 3717              	.L209:
 3718              	.LBB251:
 543:lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 3719              		.loc 1 543 9 is_stmt 1 view .LVU1184
 3720              	.LBB252:
 3721              	.LBI252:
 3722              		.loc 3 675 26 view .LVU1185
 3723              	.LBE252:
 3724              	.LBE251:
 3725              		.loc 3 675 49 view .LVU1186
 3726              	.LBB258:
 3727              	.LBB255:
 3728              	.LBB253:
 3729              	.LBI253:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 3730              		.loc 3 602 26 view .LVU1187
 3731              	.LBB254:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3732              		.loc 3 604 5 view .LVU1188
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3733              		.loc 3 604 5 is_stmt 0 view .LVU1189
 3734 006e 4FF00006 		mov	r6, #0	@ movhi
 3735              	.LVL409:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3736              		.loc 3 604 5 view .LVU1190
 3737              	.LBE254:
 3738              	.LBE253:
 3739              	.LBE255:
 544:lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 3740              		.loc 1 544 9 is_stmt 1 view .LVU1191
 3741              	.LBB256:
 3742              	.LBI256:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3743              		.loc 3 459 48 view .LVU1192
 3744              	.LBB257:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 116


 3745              		.loc 3 461 5 view .LVU1193
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3746              		.loc 3 464 5 view .LVU1194
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3747              		.loc 3 464 5 is_stmt 0 view .LVU1195
 3748 0072 CAF3C423 		ubfx	r3, r10, #11, #5
 3749 0076 0099     		ldr	r1, [sp]
 3750              	.LVL410:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3751              		.loc 3 464 5 view .LVU1196
 3752 0078 01FB03F3 		mul	r3, r1, r3
 3753 007c 8033     		adds	r3, r3, #128
 3754 007e 03EB0322 		add	r2, r3, r3, lsl #8
 3755 0082 03EBC213 		add	r3, r3, r2, lsl #7
 3756 0086 C3F3C453 		ubfx	r3, r3, #23, #5
 3757              	.LVL411:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3758              		.loc 3 464 5 view .LVU1197
 3759 008a 3046     		mov	r0, r6	@ movhi
 3760              	.LVL412:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3761              		.loc 3 464 5 view .LVU1198
 3762 008c 63F3CF20 		bfi	r0, r3, #11, #5
 3763              	.LVL413:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3764              		.loc 3 466 5 is_stmt 1 view .LVU1199
 3765 0090 CAF34513 		ubfx	r3, r10, #5, #6
 3766 0094 01FB03F3 		mul	r3, r1, r3
 3767 0098 8033     		adds	r3, r3, #128
 3768 009a 03EB0322 		add	r2, r3, r3, lsl #8
 3769 009e 03EBC213 		add	r3, r3, r2, lsl #7
 3770 00a2 C3F3C553 		ubfx	r3, r3, #23, #6
 3771 00a6 63F34A10 		bfi	r0, r3, #5, #6
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3772              		.loc 3 468 5 view .LVU1200
 3773 00aa 0AF01F03 		and	r3, r10, #31
 3774 00ae 01FB03F3 		mul	r3, r1, r3
 3775 00b2 8033     		adds	r3, r3, #128
 3776 00b4 03EB0322 		add	r2, r3, r3, lsl #8
 3777 00b8 03EBC213 		add	r3, r3, r2, lsl #7
 3778 00bc C3F3C453 		ubfx	r3, r3, #23, #5
 3779 00c0 63F30400 		bfi	r0, r3, #0, #5
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3780              		.loc 3 470 5 view .LVU1201
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3781              		.loc 3 470 5 view .LVU1202
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3782              		.loc 3 470 5 view .LVU1203
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3783              		.loc 3 476 5 view .LVU1204
 3784              	.LVL414:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3785              		.loc 3 476 5 is_stmt 0 view .LVU1205
 3786              	.LBE257:
 3787              	.LBE256:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3788              		.loc 1 545 9 is_stmt 1 view .LVU1206
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 117


 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3789              		.loc 1 545 9 is_stmt 0 view .LVU1207
 3790 00c4 8946     		mov	r9, r1
 3791 00c6 19E0     		b	.L193
 3792              	.LVL415:
 3793              	.L211:
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3794              		.loc 1 548 21 is_stmt 1 view .LVU1208
 548:lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3795              		.loc 1 548 37 is_stmt 0 view .LVU1209
 3796 00c8 35F81460 		ldrh	r6, [r5, r4, lsl #1]
 3797              	.LVL416:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3798              		.loc 1 549 21 is_stmt 1 view .LVU1210
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3799              		.loc 1 549 38 is_stmt 0 view .LVU1211
 3800 00cc 4A46     		mov	r2, r9
 3801              	.LVL417:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3802              		.loc 1 549 38 view .LVU1212
 3803 00ce 3146     		mov	r1, r6	@ movhi
 3804 00d0 5046     		mov	r0, r10	@ movhi
 3805              	.LVL418:
 549:lvgl/src/draw/lv_draw_blend.c ****                 }
 3806              		.loc 1 549 38 view .LVU1213
 3807 00d2 D847     		blx	fp
 3808              	.LVL419:
 3809              	.L195:
 551:lvgl/src/draw/lv_draw_blend.c ****             }
 3810              		.loc 1 551 17 is_stmt 1 discriminator 2 view .LVU1214
 551:lvgl/src/draw/lv_draw_blend.c ****             }
 3811              		.loc 1 551 33 is_stmt 0 discriminator 2 view .LVU1215
 3812 00d4 3880     		strh	r0, [r7]	@ movhi
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3813              		.loc 1 546 56 is_stmt 1 discriminator 2 view .LVU1216
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3814              		.loc 1 546 57 is_stmt 0 discriminator 2 view .LVU1217
 3815 00d6 0134     		adds	r4, r4, #1
 3816              	.LVL420:
 3817              	.L194:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3818              		.loc 1 546 36 is_stmt 1 discriminator 1 view .LVU1218
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3819              		.loc 1 546 50 is_stmt 0 discriminator 1 view .LVU1219
 3820 00d8 B8F90430 		ldrsh	r3, [r8, #4]
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3821              		.loc 1 546 13 discriminator 1 view .LVU1220
 3822 00dc A342     		cmp	r3, r4
 3823 00de 07DB     		blt	.L210
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3824              		.loc 1 547 17 is_stmt 1 view .LVU1221
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3825              		.loc 1 547 35 is_stmt 0 view .LVU1222
 3826 00e0 B3B2     		uxth	r3, r6
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3827              		.loc 1 547 56 view .LVU1223
 3828 00e2 05EB4407 		add	r7, r5, r4, lsl #1
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 118


 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3829              		.loc 1 547 59 view .LVU1224
 3830 00e6 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3831              		.loc 1 547 19 view .LVU1225
 3832 00ea 9342     		cmp	r3, r2
 3833 00ec ECD1     		bne	.L211
 547:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3834              		.loc 1 547 19 view .LVU1226
 3835 00ee F1E7     		b	.L195
 3836              	.L210:
 553:lvgl/src/draw/lv_draw_blend.c ****         }
 3837              		.loc 1 553 13 is_stmt 1 discriminator 2 view .LVU1227
 553:lvgl/src/draw/lv_draw_blend.c ****         }
 3838              		.loc 1 553 26 is_stmt 0 discriminator 2 view .LVU1228
 3839 00f0 029B     		ldr	r3, [sp, #8]
 3840 00f2 05EB4305 		add	r5, r5, r3, lsl #1
 3841              	.LVL421:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3842              		.loc 1 545 52 is_stmt 1 discriminator 2 view .LVU1229
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3843              		.loc 1 545 53 is_stmt 0 discriminator 2 view .LVU1230
 3844 00f6 019B     		ldr	r3, [sp, #4]
 3845 00f8 0133     		adds	r3, r3, #1
 3846 00fa 0193     		str	r3, [sp, #4]
 3847              	.LVL422:
 3848              	.L193:
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3849              		.loc 1 545 32 is_stmt 1 discriminator 1 view .LVU1231
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3850              		.loc 1 545 46 is_stmt 0 discriminator 1 view .LVU1232
 3851 00fc B8F90630 		ldrsh	r3, [r8, #6]
 545:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3852              		.loc 1 545 9 discriminator 1 view .LVU1233
 3853 0100 019A     		ldr	r2, [sp, #4]
 3854 0102 9342     		cmp	r3, r2
 3855 0104 38DB     		blt	.L189
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3856              		.loc 1 546 13 is_stmt 1 view .LVU1234
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3857              		.loc 1 546 30 is_stmt 0 view .LVU1235
 3858 0106 B8F90040 		ldrsh	r4, [r8]
 3859              	.LVL423:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3860              		.loc 1 546 13 view .LVU1236
 3861 010a E5E7     		b	.L194
 3862              	.LVL424:
 3863              	.L213:
 546:lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3864              		.loc 1 546 13 view .LVU1237
 3865              	.LBE258:
 3866              	.LBB259:
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3867              		.loc 1 576 63 discriminator 1 view .LVU1238
 3868 010c 1FFA8CF3 		uxth	r3, ip
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3869              		.loc 1 576 87 discriminator 1 view .LVU1239
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 119


 3870 0110 35F814E0 		ldrh	lr, [r5, r4, lsl #1]
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3871              		.loc 1 576 45 discriminator 1 view .LVU1240
 3872 0114 7345     		cmp	r3, lr
 3873 0116 18D1     		bne	.L201
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3874              		.loc 1 576 45 discriminator 1 view .LVU1241
 3875 0118 08E0     		b	.L202
 3876              	.L207:
 3877              	.LBB249:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3878              		.loc 1 577 30 view .LVU1242
 3879 011a 009A     		ldr	r2, [sp]
 3880              	.L203:
 3881              	.LVL425:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3882              		.loc 1 579 21 is_stmt 1 discriminator 4 view .LVU1243
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3883              		.loc 1 579 38 is_stmt 0 discriminator 4 view .LVU1244
 3884 011c 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 3885              	.LVL426:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3886              		.loc 1 579 38 discriminator 4 view .LVU1245
 3887 0120 5046     		mov	r0, r10	@ movhi
 3888              	.LVL427:
 579:lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3889              		.loc 1 579 38 discriminator 4 view .LVU1246
 3890 0122 D847     		blx	fp
 3891              	.LVL428:
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3892              		.loc 1 580 21 is_stmt 1 discriminator 4 view .LVU1247
 580:lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3893              		.loc 1 580 31 is_stmt 0 discriminator 4 view .LVU1248
 3894 0124 99F80010 		ldrb	r1, [r9]	@ zero_extendqisi2
 3895              	.LVL429:
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3896              		.loc 1 581 21 is_stmt 1 discriminator 4 view .LVU1249
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3897              		.loc 1 581 42 is_stmt 0 discriminator 4 view .LVU1250
 3898 0128 35F816C0 		ldrh	ip, [r5, r6, lsl #1]
 3899              	.LVL430:
 3900              	.L202:
 581:lvgl/src/draw/lv_draw_blend.c ****                 }
 3901              		.loc 1 581 42 discriminator 4 view .LVU1251
 3902              	.LBE249:
 583:lvgl/src/draw/lv_draw_blend.c ****             }
 3903              		.loc 1 583 17 is_stmt 1 view .LVU1252
 583:lvgl/src/draw/lv_draw_blend.c ****             }
 3904              		.loc 1 583 33 is_stmt 0 view .LVU1253
 3905 012c 25F81600 		strh	r0, [r5, r6, lsl #1]	@ movhi
 3906              	.L200:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3907              		.loc 1 574 56 is_stmt 1 discriminator 2 view .LVU1254
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3908              		.loc 1 574 57 is_stmt 0 discriminator 2 view .LVU1255
 3909 0130 0134     		adds	r4, r4, #1
 3910              	.LVL431:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 120


 3911              	.L199:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3912              		.loc 1 574 36 is_stmt 1 discriminator 1 view .LVU1256
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3913              		.loc 1 574 50 is_stmt 0 discriminator 1 view .LVU1257
 3914 0132 B8F90430 		ldrsh	r3, [r8, #4]
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3915              		.loc 1 574 13 discriminator 1 view .LVU1258
 3916 0136 A342     		cmp	r3, r4
 3917 0138 0EDB     		blt	.L212
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3918              		.loc 1 575 17 is_stmt 1 view .LVU1259
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3919              		.loc 1 575 28 is_stmt 0 view .LVU1260
 3920 013a 2646     		mov	r6, r4
 3921 013c 07EB0409 		add	r9, r7, r4
 3922 0140 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 575:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3923              		.loc 1 575 19 view .LVU1261
 3924 0142 002A     		cmp	r2, #0
 3925 0144 F4D0     		beq	.L200
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3926              		.loc 1 576 17 is_stmt 1 view .LVU1262
 576:lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3927              		.loc 1 576 19 is_stmt 0 view .LVU1263
 3928 0146 8A42     		cmp	r2, r1
 3929 0148 E0D0     		beq	.L213
 3930              	.L201:
 3931              	.LBB250:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3932              		.loc 1 577 21 is_stmt 1 view .LVU1264
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3933              		.loc 1 577 30 is_stmt 0 view .LVU1265
 3934 014a FC2A     		cmp	r2, #252
 3935 014c E5D8     		bhi	.L207
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3936              		.loc 1 577 74 discriminator 1 view .LVU1266
 3937 014e 009B     		ldr	r3, [sp]
 3938 0150 03FB02F2 		mul	r2, r3, r2
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3939              		.loc 1 577 30 discriminator 1 view .LVU1267
 3940 0154 120A     		lsrs	r2, r2, #8
 3941 0156 E1E7     		b	.L203
 3942              	.L212:
 577:lvgl/src/draw/lv_draw_blend.c **** 
 3943              		.loc 1 577 30 discriminator 1 view .LVU1268
 3944              	.LBE250:
 585:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3945              		.loc 1 585 13 is_stmt 1 discriminator 2 view .LVU1269
 585:lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3946              		.loc 1 585 26 is_stmt 0 discriminator 2 view .LVU1270
 3947 0158 029B     		ldr	r3, [sp, #8]
 3948 015a 05EB4305 		add	r5, r5, r3, lsl #1
 3949              	.LVL432:
 586:lvgl/src/draw/lv_draw_blend.c ****         }
 3950              		.loc 1 586 13 is_stmt 1 discriminator 2 view .LVU1271
 586:lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 121


 3951              		.loc 1 586 22 is_stmt 0 discriminator 2 view .LVU1272
 3952 015e 039B     		ldr	r3, [sp, #12]
 3953 0160 1F44     		add	r7, r7, r3
 3954              	.LVL433:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3955              		.loc 1 573 52 is_stmt 1 discriminator 2 view .LVU1273
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3956              		.loc 1 573 53 is_stmt 0 discriminator 2 view .LVU1274
 3957 0162 019B     		ldr	r3, [sp, #4]
 3958 0164 0133     		adds	r3, r3, #1
 3959 0166 0193     		str	r3, [sp, #4]
 3960              	.LVL434:
 3961              	.L198:
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3962              		.loc 1 573 32 is_stmt 1 discriminator 1 view .LVU1275
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3963              		.loc 1 573 46 is_stmt 0 discriminator 1 view .LVU1276
 3964 0168 B8F90630 		ldrsh	r3, [r8, #6]
 573:lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3965              		.loc 1 573 9 discriminator 1 view .LVU1277
 3966 016c 019A     		ldr	r2, [sp, #4]
 3967 016e 9342     		cmp	r3, r2
 3968 0170 02DB     		blt	.L189
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3969              		.loc 1 574 13 is_stmt 1 view .LVU1278
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3970              		.loc 1 574 30 is_stmt 0 view .LVU1279
 3971 0172 B8F90040 		ldrsh	r4, [r8]
 3972              	.LVL435:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3973              		.loc 1 574 13 view .LVU1280
 3974 0176 DCE7     		b	.L199
 3975              	.LVL436:
 3976              	.L189:
 574:lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3977              		.loc 1 574 13 view .LVU1281
 3978              	.LBE259:
 589:lvgl/src/draw/lv_draw_blend.c **** #endif
 3979              		.loc 1 589 1 view .LVU1282
 3980 0178 05B0     		add	sp, sp, #20
 3981              	.LCFI23:
 3982              		.cfi_def_cfa_offset 36
 3983              		@ sp needed
 3984 017a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3985              	.LVL437:
 3986              	.L215:
 589:lvgl/src/draw/lv_draw_blend.c **** #endif
 3987              		.loc 1 589 1 view .LVU1283
 3988 017e 00BF     		.align	2
 3989              	.L214:
 3990 0180 00000000 		.word	color_blend_true_color_subtractive
 3991 0184 00000000 		.word	color_blend_true_color_additive
 3992              		.cfi_endproc
 3993              	.LFE151:
 3995              		.section	.text._lv_blend_fill,"ax",%progbits
 3996              		.align	1
 3997              		.global	_lv_blend_fill
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 122


 3998              		.syntax unified
 3999              		.thumb
 4000              		.thumb_func
 4002              	_lv_blend_fill:
 4003              	.LVL438:
 4004              	.LFB147:
 129:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4005              		.loc 1 129 1 is_stmt 1 view -0
 4006              		.cfi_startproc
 4007              		@ args = 12, pretend = 0, frame = 24
 4008              		@ frame_needed = 0, uses_anonymous_args = 0
 129:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4009              		.loc 1 129 1 is_stmt 0 view .LVU1285
 4010 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4011              	.LCFI24:
 4012              		.cfi_def_cfa_offset 36
 4013              		.cfi_offset 4, -36
 4014              		.cfi_offset 5, -32
 4015              		.cfi_offset 6, -28
 4016              		.cfi_offset 7, -24
 4017              		.cfi_offset 8, -20
 4018              		.cfi_offset 9, -16
 4019              		.cfi_offset 10, -12
 4020              		.cfi_offset 11, -8
 4021              		.cfi_offset 14, -4
 4022 0004 8BB0     		sub	sp, sp, #44
 4023              	.LCFI25:
 4024              		.cfi_def_cfa_offset 80
 4025 0006 0590     		str	r0, [sp, #20]
 4026 0008 0691     		str	r1, [sp, #24]
 4027 000a ADF81E20 		strh	r2, [sp, #30]	@ movhi
 4028 000e 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 4029 0012 9DF85460 		ldrb	r6, [sp, #84]	@ zero_extendqisi2
 4030 0016 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 131:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4031              		.loc 1 131 5 is_stmt 1 view .LVU1286
 131:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4032              		.loc 1 131 7 is_stmt 0 view .LVU1287
 4033 001a 012E     		cmp	r6, #1
 4034 001c 01D9     		bls	.L216
 4035 001e 1C46     		mov	r4, r3
 132:lvgl/src/draw/lv_draw_blend.c **** 
 4036              		.loc 1 132 5 is_stmt 1 view .LVU1288
 132:lvgl/src/draw/lv_draw_blend.c **** 
 4037              		.loc 1 132 7 is_stmt 0 view .LVU1289
 4038 0020 17B9     		cbnz	r7, .L229
 4039              	.LVL439:
 4040              	.L216:
 173:lvgl/src/draw/lv_draw_blend.c **** 
 4041              		.loc 1 173 1 view .LVU1290
 4042 0022 0BB0     		add	sp, sp, #44
 4043              	.LCFI26:
 4044              		.cfi_remember_state
 4045              		.cfi_def_cfa_offset 36
 4046              		@ sp needed
 4047 0024 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4048              	.LVL440:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 123


 4049              	.L229:
 4050              	.LCFI27:
 4051              		.cfi_restore_state
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4052              		.loc 1 134 5 is_stmt 1 view .LVU1291
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4053              		.loc 1 134 24 is_stmt 0 view .LVU1292
 4054 0028 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4055              	.LVL441:
 134:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4056              		.loc 1 134 24 view .LVU1293
 4057 002c 8046     		mov	r8, r0
 4058              	.LVL442:
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4059              		.loc 1 135 5 is_stmt 1 view .LVU1294
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4060              		.loc 1 135 37 is_stmt 0 view .LVU1295
 4061 002e FFF7FEFF 		bl	lv_disp_get_draw_buf
 4062              	.LVL443:
 135:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4063              		.loc 1 135 37 view .LVU1296
 4064 0032 0546     		mov	r5, r0
 4065              	.LVL444:
 136:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4066              		.loc 1 136 5 is_stmt 1 view .LVU1297
 136:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4067              		.loc 1 136 23 is_stmt 0 view .LVU1298
 4068 0034 00F1100A 		add	r10, r0, #16
 4069              	.LVL445:
 137:lvgl/src/draw/lv_draw_blend.c **** 
 4070              		.loc 1 137 5 is_stmt 1 view .LVU1299
 137:lvgl/src/draw/lv_draw_blend.c **** 
 4071              		.loc 1 137 18 is_stmt 0 view .LVU1300
 4072 0038 D0F808B0 		ldr	fp, [r0, #8]
 4073              	.LVL446:
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4074              		.loc 1 139 5 is_stmt 1 view .LVU1301
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4075              		.loc 1 139 12 is_stmt 0 view .LVU1302
 4076 003c D8F80000 		ldr	r0, [r8]
 4077              	.LVL447:
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4078              		.loc 1 139 20 view .LVU1303
 4079 0040 436A     		ldr	r3, [r0, #36]
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4080              		.loc 1 139 7 view .LVU1304
 4081 0042 03B1     		cbz	r3, .L218
 139:lvgl/src/draw/lv_draw_blend.c **** 
 4082              		.loc 1 139 35 is_stmt 1 discriminator 1 view .LVU1305
 4083 0044 9847     		blx	r3
 4084              	.LVL448:
 4085              	.L218:
 143:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 4086              		.loc 1 143 5 view .LVU1306
 144:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 4087              		.loc 1 144 5 view .LVU1307
 145:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 124


 4088              		.loc 1 145 5 view .LVU1308
 145:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4089              		.loc 1 145 17 is_stmt 0 view .LVU1309
 4090 0046 069A     		ldr	r2, [sp, #24]
 4091 0048 0599     		ldr	r1, [sp, #20]
 4092 004a 08A8     		add	r0, sp, #32
 4093 004c FFF7FEFF 		bl	_lv_area_intersect
 4094              	.LVL449:
 146:lvgl/src/draw/lv_draw_blend.c **** 
 4095              		.loc 1 146 5 is_stmt 1 view .LVU1310
 146:lvgl/src/draw/lv_draw_blend.c **** 
 4096              		.loc 1 146 7 is_stmt 0 view .LVU1311
 4097 0050 0028     		cmp	r0, #0
 4098 0052 E6D0     		beq	.L216
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4099              		.loc 1 150 5 is_stmt 1 view .LVU1312
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4100              		.loc 1 150 30 is_stmt 0 view .LVU1313
 4101 0054 B5F810C0 		ldrh	ip, [r5, #16]
 150:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4102              		.loc 1 150 18 view .LVU1314
 4103 0058 BDF82020 		ldrh	r2, [sp, #32]
 4104 005c A2EB0C02 		sub	r2, r2, ip
 4105 0060 92B2     		uxth	r2, r2
 4106 0062 ADF82020 		strh	r2, [sp, #32]	@ movhi
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4107              		.loc 1 151 5 is_stmt 1 view .LVU1315
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4108              		.loc 1 151 30 is_stmt 0 view .LVU1316
 4109 0066 688A     		ldrh	r0, [r5, #18]
 4110              	.LVL450:
 151:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4111              		.loc 1 151 18 view .LVU1317
 4112 0068 BDF82210 		ldrh	r1, [sp, #34]
 4113 006c 091A     		subs	r1, r1, r0
 4114 006e ADF82210 		strh	r1, [sp, #34]	@ movhi
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4115              		.loc 1 152 5 is_stmt 1 view .LVU1318
 152:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4116              		.loc 1 152 18 is_stmt 0 view .LVU1319
 4117 0072 BDF82430 		ldrh	r3, [sp, #36]
 4118 0076 A3EB0C03 		sub	r3, r3, ip
 4119 007a 9BB2     		uxth	r3, r3
 4120 007c ADF82430 		strh	r3, [sp, #36]	@ movhi
 153:lvgl/src/draw/lv_draw_blend.c **** 
 4121              		.loc 1 153 5 is_stmt 1 view .LVU1320
 153:lvgl/src/draw/lv_draw_blend.c **** 
 4122              		.loc 1 153 18 is_stmt 0 view .LVU1321
 4123 0080 BDF82610 		ldrh	r1, [sp, #38]
 4124 0084 091A     		subs	r1, r1, r0
 4125 0086 ADF82610 		strh	r1, [sp, #38]	@ movhi
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4126              		.loc 1 156 5 is_stmt 1 view .LVU1322
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4127              		.loc 1 156 7 is_stmt 0 view .LVU1323
 4128 008a B4B1     		cbz	r4, .L219
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 125


 4129              		.loc 1 156 20 discriminator 1 view .LVU1324
 4130 008c D8F80010 		ldr	r1, [r8]
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4131              		.loc 1 156 43 discriminator 1 view .LVU1325
 4132 0090 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 156:lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 4133              		.loc 1 156 13 discriminator 1 view .LVU1326
 4134 0092 11F00401 		ands	r1, r1, #4
 4135 0096 10D1     		bne	.L219
 4136              	.LBB260:
 157:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 4137              		.loc 1 157 9 is_stmt 1 view .LVU1327
 4138              	.LVL451:
 4139              	.LBB261:
 4140              	.LBI261:
 133:lvgl/src/draw/../misc/lv_area.h **** {
 4141              		.loc 2 133 26 view .LVU1328
 4142              	.LBB262:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4143              		.loc 2 135 5 view .LVU1329
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4144              		.loc 2 135 36 is_stmt 0 view .LVU1330
 4145 0098 9A1A     		subs	r2, r3, r2
 4146 009a 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4147              		.loc 2 135 49 view .LVU1331
 4148 009c 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4149              		.loc 2 135 12 view .LVU1332
 4150 009e 12B2     		sxth	r2, r2
 4151              	.LVL452:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4152              		.loc 2 135 12 view .LVU1333
 4153              	.LBE262:
 4154              	.LBE261:
 158:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4155              		.loc 1 158 9 is_stmt 1 view .LVU1334
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4156              		.loc 1 159 9 view .LVU1335
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4157              		.loc 1 159 15 is_stmt 0 view .LVU1336
 4158 00a0 0023     		movs	r3, #0
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4159              		.loc 1 159 9 view .LVU1337
 4160 00a2 02E0     		b	.L220
 4161              	.LVL453:
 4162              	.L227:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4163              		.loc 1 159 46 view .LVU1338
 4164 00a4 0D46     		mov	r5, r1
 4165              	.L221:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4166              		.loc 1 159 46 discriminator 5 view .LVU1339
 4167 00a6 0570     		strb	r5, [r0]
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4168              		.loc 1 159 32 is_stmt 1 discriminator 5 view .LVU1340
 159:lvgl/src/draw/lv_draw_blend.c ****     }
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 126


 4169              		.loc 1 159 33 is_stmt 0 discriminator 5 view .LVU1341
 4170 00a8 0133     		adds	r3, r3, #1
 4171              	.LVL454:
 4172              	.L220:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4173              		.loc 1 159 20 is_stmt 1 discriminator 6 view .LVU1342
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4174              		.loc 1 159 9 is_stmt 0 discriminator 6 view .LVU1343
 4175 00aa 9342     		cmp	r3, r2
 4176 00ac 05DA     		bge	.L219
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4177              		.loc 1 159 38 is_stmt 1 discriminator 7 view .LVU1344
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4178              		.loc 1 159 52 is_stmt 0 discriminator 7 view .LVU1345
 4179 00ae E018     		adds	r0, r4, r3
 4180 00b0 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4181              		.loc 1 159 46 discriminator 7 view .LVU1346
 4182 00b2 802D     		cmp	r5, #128
 4183 00b4 F6D9     		bls	.L227
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4184              		.loc 1 159 46 view .LVU1347
 4185 00b6 FF25     		movs	r5, #255
 4186 00b8 F5E7     		b	.L221
 4187              	.LVL455:
 4188              	.L219:
 159:lvgl/src/draw/lv_draw_blend.c ****     }
 4189              		.loc 1 159 46 view .LVU1348
 4190              	.LBE260:
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4191              		.loc 1 162 5 is_stmt 1 view .LVU1349
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4192              		.loc 1 162 12 is_stmt 0 view .LVU1350
 4193 00ba D8F80030 		ldr	r3, [r8]
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4194              		.loc 1 162 20 view .LVU1351
 4195 00be 5B69     		ldr	r3, [r3, #20]
 162:lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4196              		.loc 1 162 7 view .LVU1352
 4197 00c0 53B1     		cbz	r3, .L223
 163:lvgl/src/draw/lv_draw_blend.c ****     }
 4198              		.loc 1 163 9 is_stmt 1 view .LVU1353
 4199 00c2 0297     		str	r7, [sp, #8]
 4200 00c4 0194     		str	r4, [sp, #4]
 4201 00c6 0096     		str	r6, [sp]
 4202 00c8 BDF81E30 		ldrh	r3, [sp, #30]
 4203 00cc 08AA     		add	r2, sp, #32
 4204 00ce 5946     		mov	r1, fp
 4205 00d0 5046     		mov	r0, r10
 4206 00d2 FFF7FEFF 		bl	fill_set_px
 4207              	.LVL456:
 4208 00d6 A4E7     		b	.L216
 4209              	.L223:
 165:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4210              		.loc 1 165 10 view .LVU1354
 165:lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4211              		.loc 1 165 12 is_stmt 0 view .LVU1355
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 127


 4212 00d8 B9F1000F 		cmp	r9, #0
 4213 00dc 0AD1     		bne	.L225
 166:lvgl/src/draw/lv_draw_blend.c ****     }
 4214              		.loc 1 166 9 is_stmt 1 view .LVU1356
 4215 00de 0297     		str	r7, [sp, #8]
 4216 00e0 0194     		str	r4, [sp, #4]
 4217 00e2 0096     		str	r6, [sp]
 4218 00e4 BDF81E30 		ldrh	r3, [sp, #30]
 4219 00e8 08AA     		add	r2, sp, #32
 4220 00ea 5946     		mov	r1, fp
 4221 00ec 5046     		mov	r0, r10
 4222 00ee FFF7FEFF 		bl	fill_normal
 4223              	.LVL457:
 4224 00f2 96E7     		b	.L216
 4225              	.L225:
 170:lvgl/src/draw/lv_draw_blend.c ****     }
 4226              		.loc 1 170 9 view .LVU1357
 4227 00f4 CDF80C90 		str	r9, [sp, #12]
 4228 00f8 0297     		str	r7, [sp, #8]
 4229 00fa 0194     		str	r4, [sp, #4]
 4230 00fc 0096     		str	r6, [sp]
 4231 00fe BDF81E30 		ldrh	r3, [sp, #30]
 4232 0102 08AA     		add	r2, sp, #32
 4233 0104 5946     		mov	r1, fp
 4234 0106 5046     		mov	r0, r10
 4235 0108 FFF7FEFF 		bl	fill_blended
 4236              	.LVL458:
 4237 010c 89E7     		b	.L216
 4238              		.cfi_endproc
 4239              	.LFE147:
 4241              		.section	.text._lv_blend_map,"ax",%progbits
 4242              		.align	1
 4243              		.global	_lv_blend_map
 4244              		.syntax unified
 4245              		.thumb
 4246              		.thumb_func
 4248              	_lv_blend_map:
 4249              	.LVL459:
 4250              	.LFB148:
 192:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4251              		.loc 1 192 1 view -0
 4252              		.cfi_startproc
 4253              		@ args = 12, pretend = 0, frame = 16
 4254              		@ frame_needed = 0, uses_anonymous_args = 0
 192:lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4255              		.loc 1 192 1 is_stmt 0 view .LVU1359
 4256 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4257              	.LCFI28:
 4258              		.cfi_def_cfa_offset 36
 4259              		.cfi_offset 4, -36
 4260              		.cfi_offset 5, -32
 4261              		.cfi_offset 6, -28
 4262              		.cfi_offset 7, -24
 4263              		.cfi_offset 8, -20
 4264              		.cfi_offset 9, -16
 4265              		.cfi_offset 10, -12
 4266              		.cfi_offset 11, -8
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 128


 4267              		.cfi_offset 14, -4
 4268 0004 8BB0     		sub	sp, sp, #44
 4269              	.LCFI29:
 4270              		.cfi_def_cfa_offset 80
 4271 0006 0692     		str	r2, [sp, #24]
 4272 0008 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 4273 000c 9DF85460 		ldrb	r6, [sp, #84]	@ zero_extendqisi2
 4274 0010 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 194:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4275              		.loc 1 194 5 is_stmt 1 view .LVU1360
 194:lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4276              		.loc 1 194 7 is_stmt 0 view .LVU1361
 4277 0014 012E     		cmp	r6, #1
 4278 0016 02D9     		bls	.L230
 4279 0018 0D46     		mov	r5, r1
 4280 001a 1C46     		mov	r4, r3
 195:lvgl/src/draw/lv_draw_blend.c **** 
 4281              		.loc 1 195 5 is_stmt 1 view .LVU1362
 195:lvgl/src/draw/lv_draw_blend.c **** 
 4282              		.loc 1 195 7 is_stmt 0 view .LVU1363
 4283 001c 17B9     		cbnz	r7, .L243
 4284              	.LVL460:
 4285              	.L230:
 236:lvgl/src/draw/lv_draw_blend.c **** 
 4286              		.loc 1 236 1 view .LVU1364
 4287 001e 0BB0     		add	sp, sp, #44
 4288              	.LCFI30:
 4289              		.cfi_remember_state
 4290              		.cfi_def_cfa_offset 36
 4291              		@ sp needed
 4292 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4293              	.LVL461:
 4294              	.L243:
 4295              	.LCFI31:
 4296              		.cfi_restore_state
 199:lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 4297              		.loc 1 199 5 is_stmt 1 view .LVU1365
 200:lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 4298              		.loc 1 200 5 view .LVU1366
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4299              		.loc 1 201 5 view .LVU1367
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4300              		.loc 1 201 17 is_stmt 0 view .LVU1368
 4301 0024 0A46     		mov	r2, r1
 4302              	.LVL462:
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4303              		.loc 1 201 17 view .LVU1369
 4304 0026 0146     		mov	r1, r0
 4305              	.LVL463:
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4306              		.loc 1 201 17 view .LVU1370
 4307 0028 08A8     		add	r0, sp, #32
 4308              	.LVL464:
 201:lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4309              		.loc 1 201 17 view .LVU1371
 4310 002a FFF7FEFF 		bl	_lv_area_intersect
 4311              	.LVL465:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 129


 202:lvgl/src/draw/lv_draw_blend.c **** 
 4312              		.loc 1 202 5 is_stmt 1 view .LVU1372
 202:lvgl/src/draw/lv_draw_blend.c **** 
 4313              		.loc 1 202 7 is_stmt 0 view .LVU1373
 4314 002e 0028     		cmp	r0, #0
 4315 0030 F5D0     		beq	.L230
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4316              		.loc 1 204 5 is_stmt 1 view .LVU1374
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4317              		.loc 1 204 24 is_stmt 0 view .LVU1375
 4318 0032 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4319              	.LVL466:
 204:lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4320              		.loc 1 204 24 view .LVU1376
 4321 0036 8246     		mov	r10, r0
 4322              	.LVL467:
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4323              		.loc 1 205 5 is_stmt 1 view .LVU1377
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4324              		.loc 1 205 37 is_stmt 0 view .LVU1378
 4325 0038 FFF7FEFF 		bl	lv_disp_get_draw_buf
 4326              	.LVL468:
 205:lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4327              		.loc 1 205 37 view .LVU1379
 4328 003c 8046     		mov	r8, r0
 4329              	.LVL469:
 206:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4330              		.loc 1 206 5 is_stmt 1 view .LVU1380
 206:lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4331              		.loc 1 206 23 is_stmt 0 view .LVU1381
 4332 003e 00F1100B 		add	fp, r0, #16
 4333              	.LVL470:
 207:lvgl/src/draw/lv_draw_blend.c **** 
 4334              		.loc 1 207 5 is_stmt 1 view .LVU1382
 207:lvgl/src/draw/lv_draw_blend.c **** 
 4335              		.loc 1 207 18 is_stmt 0 view .LVU1383
 4336 0042 8368     		ldr	r3, [r0, #8]
 4337 0044 0793     		str	r3, [sp, #28]
 4338              	.LVL471:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4339              		.loc 1 209 5 is_stmt 1 view .LVU1384
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4340              		.loc 1 209 12 is_stmt 0 view .LVU1385
 4341 0046 DAF80000 		ldr	r0, [r10]
 4342              	.LVL472:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4343              		.loc 1 209 20 view .LVU1386
 4344 004a 436A     		ldr	r3, [r0, #36]
 4345              	.LVL473:
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4346              		.loc 1 209 7 view .LVU1387
 4347 004c 03B1     		cbz	r3, .L232
 209:lvgl/src/draw/lv_draw_blend.c **** 
 4348              		.loc 1 209 35 is_stmt 1 discriminator 1 view .LVU1388
 4349 004e 9847     		blx	r3
 4350              	.LVL474:
 4351              	.L232:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 130


 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4352              		.loc 1 213 5 view .LVU1389
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4353              		.loc 1 213 30 is_stmt 0 view .LVU1390
 4354 0050 B8F810C0 		ldrh	ip, [r8, #16]
 213:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4355              		.loc 1 213 18 view .LVU1391
 4356 0054 BDF82020 		ldrh	r2, [sp, #32]
 4357 0058 A2EB0C02 		sub	r2, r2, ip
 4358 005c 92B2     		uxth	r2, r2
 4359 005e ADF82020 		strh	r2, [sp, #32]	@ movhi
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4360              		.loc 1 214 5 is_stmt 1 view .LVU1392
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4361              		.loc 1 214 30 is_stmt 0 view .LVU1393
 4362 0062 B8F81200 		ldrh	r0, [r8, #18]
 214:lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4363              		.loc 1 214 18 view .LVU1394
 4364 0066 BDF82210 		ldrh	r1, [sp, #34]
 4365 006a 091A     		subs	r1, r1, r0
 4366 006c ADF82210 		strh	r1, [sp, #34]	@ movhi
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4367              		.loc 1 215 5 is_stmt 1 view .LVU1395
 215:lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4368              		.loc 1 215 18 is_stmt 0 view .LVU1396
 4369 0070 BDF82430 		ldrh	r3, [sp, #36]
 4370 0074 A3EB0C03 		sub	r3, r3, ip
 4371 0078 9BB2     		uxth	r3, r3
 4372 007a ADF82430 		strh	r3, [sp, #36]	@ movhi
 216:lvgl/src/draw/lv_draw_blend.c **** 
 4373              		.loc 1 216 5 is_stmt 1 view .LVU1397
 216:lvgl/src/draw/lv_draw_blend.c **** 
 4374              		.loc 1 216 18 is_stmt 0 view .LVU1398
 4375 007e BDF82610 		ldrh	r1, [sp, #38]
 4376 0082 091A     		subs	r1, r1, r0
 4377 0084 ADF82610 		strh	r1, [sp, #38]	@ movhi
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4378              		.loc 1 219 5 is_stmt 1 view .LVU1399
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4379              		.loc 1 219 7 is_stmt 0 view .LVU1400
 4380 0088 D4B1     		cbz	r4, .L233
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4381              		.loc 1 219 20 discriminator 1 view .LVU1401
 4382 008a DAF80010 		ldr	r1, [r10]
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4383              		.loc 1 219 43 discriminator 1 view .LVU1402
 4384 008e 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 219:lvgl/src/draw/lv_draw_blend.c ****     {
 4385              		.loc 1 219 13 discriminator 1 view .LVU1403
 4386 0090 11F00401 		ands	r1, r1, #4
 4387 0094 14D1     		bne	.L233
 4388              	.LBB263:
 221:lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 4389              		.loc 1 221 9 is_stmt 1 view .LVU1404
 4390              	.LVL475:
 4391              	.LBB264:
 4392              	.LBI264:
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 131


 133:lvgl/src/draw/../misc/lv_area.h **** {
 4393              		.loc 2 133 26 view .LVU1405
 4394              	.LBB265:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4395              		.loc 2 135 5 view .LVU1406
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4396              		.loc 2 135 36 is_stmt 0 view .LVU1407
 4397 0096 9A1A     		subs	r2, r3, r2
 4398 0098 92B2     		uxth	r2, r2
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4399              		.loc 2 135 49 view .LVU1408
 4400 009a 0132     		adds	r2, r2, #1
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4401              		.loc 2 135 12 view .LVU1409
 4402 009c 12B2     		sxth	r2, r2
 4403              	.LVL476:
 135:lvgl/src/draw/../misc/lv_area.h **** }
 4404              		.loc 2 135 12 view .LVU1410
 4405              	.LBE265:
 4406              	.LBE264:
 222:lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4407              		.loc 1 222 9 is_stmt 1 view .LVU1411
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4408              		.loc 1 223 9 view .LVU1412
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4409              		.loc 1 223 15 is_stmt 0 view .LVU1413
 4410 009e 0023     		movs	r3, #0
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4411              		.loc 1 223 9 view .LVU1414
 4412 00a0 03E0     		b	.L234
 4413              	.LVL477:
 4414              	.L241:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4415              		.loc 1 223 46 view .LVU1415
 4416 00a2 8C46     		mov	ip, r1
 4417              	.L235:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4418              		.loc 1 223 46 discriminator 5 view .LVU1416
 4419 00a4 80F800C0 		strb	ip, [r0]
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4420              		.loc 1 223 32 is_stmt 1 discriminator 5 view .LVU1417
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4421              		.loc 1 223 33 is_stmt 0 discriminator 5 view .LVU1418
 4422 00a8 0133     		adds	r3, r3, #1
 4423              	.LVL478:
 4424              	.L234:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4425              		.loc 1 223 20 is_stmt 1 discriminator 6 view .LVU1419
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4426              		.loc 1 223 9 is_stmt 0 discriminator 6 view .LVU1420
 4427 00aa 9342     		cmp	r3, r2
 4428 00ac 08DA     		bge	.L233
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4429              		.loc 1 223 38 is_stmt 1 discriminator 7 view .LVU1421
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4430              		.loc 1 223 52 is_stmt 0 discriminator 7 view .LVU1422
 4431 00ae E018     		adds	r0, r4, r3
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 132


 4432 00b0 14F803C0 		ldrb	ip, [r4, r3]	@ zero_extendqisi2
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4433              		.loc 1 223 46 discriminator 7 view .LVU1423
 4434 00b4 BCF1800F 		cmp	ip, #128
 4435 00b8 F3D9     		bls	.L241
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4436              		.loc 1 223 46 view .LVU1424
 4437 00ba 4FF0FF0C 		mov	ip, #255
 4438 00be F1E7     		b	.L235
 4439              	.LVL479:
 4440              	.L233:
 223:lvgl/src/draw/lv_draw_blend.c ****     }
 4441              		.loc 1 223 46 view .LVU1425
 4442              	.LBE263:
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4443              		.loc 1 225 5 is_stmt 1 view .LVU1426
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4444              		.loc 1 225 12 is_stmt 0 view .LVU1427
 4445 00c0 DAF80030 		ldr	r3, [r10]
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4446              		.loc 1 225 20 view .LVU1428
 4447 00c4 5B69     		ldr	r3, [r3, #20]
 225:lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4448              		.loc 1 225 7 view .LVU1429
 4449 00c6 5BB1     		cbz	r3, .L237
 226:lvgl/src/draw/lv_draw_blend.c ****     }
 4450              		.loc 1 226 9 is_stmt 1 view .LVU1430
 4451 00c8 0397     		str	r7, [sp, #12]
 4452 00ca 0294     		str	r4, [sp, #8]
 4453 00cc 0196     		str	r6, [sp, #4]
 4454 00ce 069B     		ldr	r3, [sp, #24]
 4455 00d0 0093     		str	r3, [sp]
 4456 00d2 2B46     		mov	r3, r5
 4457 00d4 08AA     		add	r2, sp, #32
 4458 00d6 0799     		ldr	r1, [sp, #28]
 4459 00d8 5846     		mov	r0, fp
 4460 00da FFF7FEFF 		bl	map_set_px
 4461              	.LVL480:
 4462 00de 9EE7     		b	.L230
 4463              	.L237:
 228:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4464              		.loc 1 228 10 view .LVU1431
 228:lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4465              		.loc 1 228 12 is_stmt 0 view .LVU1432
 4466 00e0 B9F1000F 		cmp	r9, #0
 4467 00e4 0BD1     		bne	.L239
 229:lvgl/src/draw/lv_draw_blend.c ****     }
 4468              		.loc 1 229 9 is_stmt 1 view .LVU1433
 4469 00e6 0397     		str	r7, [sp, #12]
 4470 00e8 0294     		str	r4, [sp, #8]
 4471 00ea 0196     		str	r6, [sp, #4]
 4472 00ec 069B     		ldr	r3, [sp, #24]
 4473 00ee 0093     		str	r3, [sp]
 4474 00f0 2B46     		mov	r3, r5
 4475 00f2 08AA     		add	r2, sp, #32
 4476 00f4 0799     		ldr	r1, [sp, #28]
 4477 00f6 5846     		mov	r0, fp
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 133


 4478 00f8 FFF7FEFF 		bl	map_normal
 4479              	.LVL481:
 4480 00fc 8FE7     		b	.L230
 4481              	.L239:
 233:lvgl/src/draw/lv_draw_blend.c ****     }
 4482              		.loc 1 233 9 view .LVU1434
 4483 00fe CDF81090 		str	r9, [sp, #16]
 4484 0102 0397     		str	r7, [sp, #12]
 4485 0104 0294     		str	r4, [sp, #8]
 4486 0106 0196     		str	r6, [sp, #4]
 4487 0108 069B     		ldr	r3, [sp, #24]
 4488 010a 0093     		str	r3, [sp]
 4489 010c 2B46     		mov	r3, r5
 4490 010e 08AA     		add	r2, sp, #32
 4491 0110 0799     		ldr	r1, [sp, #28]
 4492 0112 5846     		mov	r0, fp
 4493 0114 FFF7FEFF 		bl	map_blended
 4494              	.LVL482:
 4495 0118 81E7     		b	.L230
 4496              		.cfi_endproc
 4497              	.LFE148:
 4499              		.text
 4500              	.Letext0:
 4501              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 4502              		.file 5 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 4503              		.file 6 "lvgl/src/draw/../misc/lv_types.h"
 4504              		.file 7 "lvgl/src/draw/../misc/lv_style.h"
 4505              		.file 8 "lvgl/src/draw/lv_draw_mask.h"
 4506              		.file 9 "lvgl/src/draw/../hal/../misc/lv_ll.h"
 4507              		.file 10 "lvgl/src/draw/../hal/../misc/lv_timer.h"
 4508              		.file 11 "lvgl/src/draw/../hal/lv_hal_disp.h"
 4509              		.file 12 "lvgl/src/draw/../core/lv_obj.h"
 4510              		.file 13 "lvgl/src/draw/../core/lv_group.h"
 4511              		.file 14 "lvgl/src/draw/../core/lv_obj_scroll.h"
 4512              		.file 15 "lvgl/src/draw/../core/lv_obj_style.h"
 4513              		.file 16 "lvgl/src/draw/../core/lv_obj_class.h"
 4514              		.file 17 "lvgl/src/draw/../core/lv_event.h"
 4515              		.file 18 "lvgl/src/draw/../hal/../misc/lv_mem.h"
 4516              		.file 19 "lvgl/src/draw/../core/lv_refr.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s 			page 134


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_blend.c
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:20     .text.map_blended:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:25     .text.map_blended:00000000 map_blended
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:352    .text.map_blended:00000140 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:1079   .text.color_blend_true_color_subtractive:00000000 color_blend_true_color_subtractive
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:919    .text.color_blend_true_color_additive:00000000 color_blend_true_color_additive
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:358    .text.fill_set_px:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:363    .text.fill_set_px:00000000 fill_set_px
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:606    .text.map_set_px:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:611    .text.map_set_px:00000000 map_set_px
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:914    .text.color_blend_true_color_additive:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:1074   .text.color_blend_true_color_subtractive:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:1227   .text.map_normal:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:1232   .text.map_normal:00000000 map_normal
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:2356   .text.fill_normal:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:2361   .text.fill_normal:00000000 fill_normal
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:3574   .text.fill_blended:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:3579   .text.fill_blended:00000000 fill_blended
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:3990   .text.fill_blended:00000180 $d
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:3996   .text._lv_blend_fill:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:4002   .text._lv_blend_fill:00000000 _lv_blend_fill
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:4242   .text._lv_blend_map:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\ccXqf4MH.s:4248   .text._lv_blend_map:00000000 _lv_blend_map

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_memcpy
lv_area_get_size
lv_color_fill
lv_disp_get_draw_buf
_lv_area_intersect
