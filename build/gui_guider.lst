ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"gui_guider.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.init_scr_del_flag,"ax",%progbits
  20              		.align	1
  21              		.global	init_scr_del_flag
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	init_scr_del_flag:
  27              	.LVL0:
  28              	.LFB187:
  29              		.file 1 "generated/gui_guider.c"
   1:generated/gui_guider.c **** /*
   2:generated/gui_guider.c ****  * Copyright 2023 NXP
   3:generated/gui_guider.c ****  * SPDX-License-Identifier: MIT
   4:generated/gui_guider.c ****  * The auto-generated can only be used on NXP devices
   5:generated/gui_guider.c ****  */
   6:generated/gui_guider.c **** 
   7:generated/gui_guider.c **** #include "lvgl.h"
   8:generated/gui_guider.c **** #include <stdio.h>
   9:generated/gui_guider.c **** #include "gui_guider.h"
  10:generated/gui_guider.c **** 
  11:generated/gui_guider.c **** 
  12:generated/gui_guider.c **** void init_scr_del_flag(lv_ui *ui){
  30              		.loc 1 12 34 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  13:generated/gui_guider.c **** 	ui->screen_del = true;
  35              		.loc 1 13 2 view .LVU1
  36              		.loc 1 13 17 is_stmt 0 view .LVU2
  37 0000 0123     		movs	r3, #1
  38 0002 0371     		strb	r3, [r0, #4]
  14:generated/gui_guider.c **** 	ui->screen2_del = true;
  39              		.loc 1 14 2 is_stmt 1 view .LVU3
  40              		.loc 1 14 18 is_stmt 0 view .LVU4
  41 0004 80F82430 		strb	r3, [r0, #36]
  15:generated/gui_guider.c **** }
  42              		.loc 1 15 1 view .LVU5
  43 0008 7047     		bx	lr
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 2


  44              		.cfi_endproc
  45              	.LFE187:
  47              		.section	.text.setup_ui,"ax",%progbits
  48              		.align	1
  49              		.global	setup_ui
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	setup_ui:
  55              	.LVL1:
  56              	.LFB188:
  16:generated/gui_guider.c **** 
  17:generated/gui_guider.c **** void setup_ui(lv_ui *ui){
  57              		.loc 1 17 25 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		.loc 1 17 25 is_stmt 0 view .LVU7
  62 0000 10B5     		push	{r4, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 4, -8
  66              		.cfi_offset 14, -4
  67 0002 0446     		mov	r4, r0
  18:generated/gui_guider.c **** 	init_scr_del_flag(ui);
  68              		.loc 1 18 2 is_stmt 1 view .LVU8
  69 0004 FFF7FEFF 		bl	init_scr_del_flag
  70              	.LVL2:
  19:generated/gui_guider.c **** 	setup_scr_screen(ui);
  71              		.loc 1 19 2 view .LVU9
  72 0008 2046     		mov	r0, r4
  73 000a FFF7FEFF 		bl	setup_scr_screen
  74              	.LVL3:
  20:generated/gui_guider.c **** 	lv_scr_load(ui->screen);
  75              		.loc 1 20 2 view .LVU10
  76              	.LBB4:
  77              	.LBI4:
  78              		.file 2 "lvgl/src/core/lv_disp.h"
   1:lvgl/src/core/lv_disp.h **** /**
   2:lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/src/core/lv_disp.h ****  *
   4:lvgl/src/core/lv_disp.h ****  */
   5:lvgl/src/core/lv_disp.h **** 
   6:lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/src/core/lv_disp.h **** 
   9:lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/src/core/lv_disp.h **** extern "C" {
  11:lvgl/src/core/lv_disp.h **** #endif
  12:lvgl/src/core/lv_disp.h **** 
  13:lvgl/src/core/lv_disp.h **** /*********************
  14:lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/src/core/lv_disp.h ****  *********************/
  16:lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/src/core/lv_disp.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 3


  20:lvgl/src/core/lv_disp.h **** /*********************
  21:lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/src/core/lv_disp.h ****  *********************/
  23:lvgl/src/core/lv_disp.h **** 
  24:lvgl/src/core/lv_disp.h **** /**********************
  25:lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/src/core/lv_disp.h ****  **********************/
  27:lvgl/src/core/lv_disp.h **** 
  28:lvgl/src/core/lv_disp.h **** typedef enum {
  29:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:lvgl/src/core/lv_disp.h **** 
  41:lvgl/src/core/lv_disp.h **** /**********************
  42:lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:lvgl/src/core/lv_disp.h ****  **********************/
  44:lvgl/src/core/lv_disp.h **** 
  45:lvgl/src/core/lv_disp.h **** /**
  46:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:lvgl/src/core/lv_disp.h ****  * screen)
  49:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:lvgl/src/core/lv_disp.h ****  */
  51:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:lvgl/src/core/lv_disp.h **** 
  53:lvgl/src/core/lv_disp.h **** /**
  54:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:lvgl/src/core/lv_disp.h ****  * screen)
  57:lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:lvgl/src/core/lv_disp.h ****  */
  59:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:lvgl/src/core/lv_disp.h **** 
  61:lvgl/src/core/lv_disp.h **** /**
  62:lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:lvgl/src/core/lv_disp.h ****  */
  65:lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:lvgl/src/core/lv_disp.h **** 
  67:lvgl/src/core/lv_disp.h **** /**
  68:lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:lvgl/src/core/lv_disp.h ****  */
  72:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:lvgl/src/core/lv_disp.h **** 
  74:lvgl/src/core/lv_disp.h **** /**
  75:lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:lvgl/src/core/lv_disp.h ****  * layer)
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 4


  77:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:lvgl/src/core/lv_disp.h ****  */
  80:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:lvgl/src/core/lv_disp.h **** 
  82:lvgl/src/core/lv_disp.h **** /**
  83:lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:lvgl/src/core/lv_disp.h ****  */
  87:lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:lvgl/src/core/lv_disp.h **** 
  89:lvgl/src/core/lv_disp.h **** /**
  90:lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:lvgl/src/core/lv_disp.h ****  */
  94:lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:lvgl/src/core/lv_disp.h **** 
  96:lvgl/src/core/lv_disp.h **** /**
  97:lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:lvgl/src/core/lv_disp.h ****  */
 101:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:lvgl/src/core/lv_disp.h **** 
 103:lvgl/src/core/lv_disp.h **** /**
 104:lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:lvgl/src/core/lv_disp.h ****  */
 108:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:lvgl/src/core/lv_disp.h **** 
 110:lvgl/src/core/lv_disp.h **** /**
 111:lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:lvgl/src/core/lv_disp.h ****  */
 115:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:lvgl/src/core/lv_disp.h **** 
 117:lvgl/src/core/lv_disp.h **** /**
 118:lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:lvgl/src/core/lv_disp.h ****  */
 125:lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:lvgl/src/core/lv_disp.h **** 
 127:lvgl/src/core/lv_disp.h **** /**
 128:lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:lvgl/src/core/lv_disp.h ****  */
 132:lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:lvgl/src/core/lv_disp.h **** 
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 5


 134:lvgl/src/core/lv_disp.h **** /**
 135:lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:lvgl/src/core/lv_disp.h ****  */
 138:lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:lvgl/src/core/lv_disp.h **** 
 140:lvgl/src/core/lv_disp.h **** /**
 141:lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:lvgl/src/core/lv_disp.h ****  */
 144:lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:lvgl/src/core/lv_disp.h **** 
 146:lvgl/src/core/lv_disp.h **** /**
 147:lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:lvgl/src/core/lv_disp.h ****  */
 152:lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:lvgl/src/core/lv_disp.h **** 
 154:lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:lvgl/src/core/lv_disp.h **** 
 159:lvgl/src/core/lv_disp.h **** /**
 160:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:lvgl/src/core/lv_disp.h ****  */
 163:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 164:lvgl/src/core/lv_disp.h **** {
 165:lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 166:lvgl/src/core/lv_disp.h **** }
 167:lvgl/src/core/lv_disp.h **** 
 168:lvgl/src/core/lv_disp.h **** /**
 169:lvgl/src/core/lv_disp.h ****  * Get the top layer  of the default display
 170:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer
 171:lvgl/src/core/lv_disp.h ****  */
 172:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_top(void)
 173:lvgl/src/core/lv_disp.h **** {
 174:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_top(lv_disp_get_default());
 175:lvgl/src/core/lv_disp.h **** }
 176:lvgl/src/core/lv_disp.h **** 
 177:lvgl/src/core/lv_disp.h **** /**
 178:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 179:lvgl/src/core/lv_disp.h ****  * @return  pointer to the sys layer
 180:lvgl/src/core/lv_disp.h ****  */
 181:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_sys(void)
 182:lvgl/src/core/lv_disp.h **** {
 183:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_sys(lv_disp_get_default());
 184:lvgl/src/core/lv_disp.h **** }
 185:lvgl/src/core/lv_disp.h **** 
 186:lvgl/src/core/lv_disp.h **** static inline void lv_scr_load(lv_obj_t * scr)
  79              		.loc 2 186 20 view .LVU11
  80              	.LBB5:
 187:lvgl/src/core/lv_disp.h **** {
 188:lvgl/src/core/lv_disp.h ****     lv_disp_load_scr(scr);
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 6


  81              		.loc 2 188 5 view .LVU12
  82 000e 2068     		ldr	r0, [r4]
  83 0010 FFF7FEFF 		bl	lv_disp_load_scr
  84              	.LVL4:
  85              		.loc 2 188 5 is_stmt 0 view .LVU13
  86              	.LBE5:
  87              	.LBE4:
  21:generated/gui_guider.c **** }
  88              		.loc 1 21 1 view .LVU14
  89 0014 10BD     		pop	{r4, pc}
  90              		.loc 1 21 1 view .LVU15
  91              		.cfi_endproc
  92              	.LFE188:
  94              		.text
  95              	.Letext0:
  96              		.file 3 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
  97              		.file 4 "e:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
  98              		.file 5 "lvgl/src/misc/lv_ll.h"
  99              		.file 6 "lvgl/src/hal/../misc/lv_color.h"
 100              		.file 7 "lvgl/src/hal/../misc/lv_area.h"
 101              		.file 8 "lvgl/src/core/lv_obj.h"
 102              		.file 9 "lvgl/src/core/lv_group.h"
 103              		.file 10 "lvgl/src/core/../misc/lv_style.h"
 104              		.file 11 "lvgl/src/core/lv_obj_scroll.h"
 105              		.file 12 "lvgl/src/core/lv_obj_style.h"
 106              		.file 13 "lvgl/src/core/lv_obj_class.h"
 107              		.file 14 "lvgl/src/core/lv_event.h"
 108              		.file 15 "generated/gui_guider.h"
ARM GAS  C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 gui_guider.c
C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s:20     .text.init_scr_del_flag:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s:26     .text.init_scr_del_flag:00000000 init_scr_del_flag
C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s:48     .text.setup_ui:00000000 $t
C:\Users\BLACK_~1\AppData\Local\Temp\cc2dG2Tc.s:54     .text.setup_ui:00000000 setup_ui

UNDEFINED SYMBOLS
setup_scr_screen
lv_disp_load_scr
