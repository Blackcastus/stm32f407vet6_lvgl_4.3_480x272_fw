ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_img_buf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_img_buf_get_px_color,"ax",%progbits
  18              		.align	1
  19              		.global	lv_img_buf_get_px_color
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_img_buf_get_px_color:
  27              	.LVL0:
  28              	.LFB48:
  29              		.file 1 "lvgl/src/draw/lv_img_buf.c"
   1:lvgl/src/draw/lv_img_buf.c **** /**
   2:lvgl/src/draw/lv_img_buf.c ****  * @file lv_img_buf.c
   3:lvgl/src/draw/lv_img_buf.c ****  *
   4:lvgl/src/draw/lv_img_buf.c ****  */
   5:lvgl/src/draw/lv_img_buf.c **** 
   6:lvgl/src/draw/lv_img_buf.c **** /*********************
   7:lvgl/src/draw/lv_img_buf.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_img_buf.c ****  *********************/
   9:lvgl/src/draw/lv_img_buf.c **** #include <stddef.h>
  10:lvgl/src/draw/lv_img_buf.c **** #include <string.h>
  11:lvgl/src/draw/lv_img_buf.c **** #include "lv_img_buf.h"
  12:lvgl/src/draw/lv_img_buf.c **** #include "lv_draw_img.h"
  13:lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_math.h"
  14:lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_log.h"
  15:lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_mem.h"
  16:lvgl/src/draw/lv_img_buf.c **** 
  17:lvgl/src/draw/lv_img_buf.c **** /*********************
  18:lvgl/src/draw/lv_img_buf.c ****  *      DEFINES
  19:lvgl/src/draw/lv_img_buf.c ****  *********************/
  20:lvgl/src/draw/lv_img_buf.c **** 
  21:lvgl/src/draw/lv_img_buf.c **** /**********************
  22:lvgl/src/draw/lv_img_buf.c ****  *      TYPEDEFS
  23:lvgl/src/draw/lv_img_buf.c ****  **********************/
  24:lvgl/src/draw/lv_img_buf.c **** 
  25:lvgl/src/draw/lv_img_buf.c **** /**********************
  26:lvgl/src/draw/lv_img_buf.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/draw/lv_img_buf.c ****  **********************/
  28:lvgl/src/draw/lv_img_buf.c **** 
  29:lvgl/src/draw/lv_img_buf.c **** /**********************
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 2


  30:lvgl/src/draw/lv_img_buf.c ****  *  STATIC VARIABLES
  31:lvgl/src/draw/lv_img_buf.c ****  **********************/
  32:lvgl/src/draw/lv_img_buf.c **** 
  33:lvgl/src/draw/lv_img_buf.c **** /**********************
  34:lvgl/src/draw/lv_img_buf.c ****  *      MACROS
  35:lvgl/src/draw/lv_img_buf.c ****  **********************/
  36:lvgl/src/draw/lv_img_buf.c **** 
  37:lvgl/src/draw/lv_img_buf.c **** /**********************
  38:lvgl/src/draw/lv_img_buf.c ****  *   GLOBAL FUNCTIONS
  39:lvgl/src/draw/lv_img_buf.c ****  **********************/
  40:lvgl/src/draw/lv_img_buf.c **** 
  41:lvgl/src/draw/lv_img_buf.c **** /**
  42:lvgl/src/draw/lv_img_buf.c ****  * Get the color of an image's pixel
  43:lvgl/src/draw/lv_img_buf.c ****  * @param dsc an image descriptor
  44:lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to get
  45:lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to get
  46:lvgl/src/draw/lv_img_buf.c ****  * @param color the color of the image. In case of `LV_IMG_CF_ALPHA_1/2/4/8` this color is used.
  47:lvgl/src/draw/lv_img_buf.c ****  * Not used in other cases.
  48:lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
  49:lvgl/src/draw/lv_img_buf.c ****  * @return color of the point
  50:lvgl/src/draw/lv_img_buf.c ****  */
  51:lvgl/src/draw/lv_img_buf.c **** lv_color_t lv_img_buf_get_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t color
  52:lvgl/src/draw/lv_img_buf.c **** {
  30              		.loc 1 52 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 52 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  46 0004 0546     		mov	r5, r0
  47 0006 0C46     		mov	r4, r1
  48 0008 1746     		mov	r7, r2
  53:lvgl/src/draw/lv_img_buf.c ****     lv_color_t p_color = lv_color_black();
  49              		.loc 1 53 5 is_stmt 1 view .LVU2
  50              	.LBB47:
  51              	.LBI47:
  52              		.file 2 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 3


  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/src/draw/../misc/lv_color.h **** enum {
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/src/draw/../misc/lv_color.h **** 
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 4


  68:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/src/draw/../misc/lv_color.h **** #endif
 100:lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/src/draw/../misc/lv_color.h **** #else
 115:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 5


 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/src/draw/../misc/lv_color.h **** 
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/src/draw/../misc/lv_color.h **** #endif
 173:lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 6


 182:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 7


 239:lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 8


 296:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/src/draw/../misc/lv_color.h ****     else {
 328:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/src/draw/../misc/lv_color.h ****     }
 330:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 343:lvgl/src/draw/../misc/lv_color.h ****     }
 344:lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/src/draw/../misc/lv_color.h ****     else
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 9


 353:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/src/draw/../misc/lv_color.h ****     else
 401:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 10


 410:lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 462:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 463:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 464:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 465:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 11


 467:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 468:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 469:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 470:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 471:lvgl/src/draw/../misc/lv_color.h **** #else
 472:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 473:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 474:lvgl/src/draw/../misc/lv_color.h **** #endif
 475:lvgl/src/draw/../misc/lv_color.h **** 
 476:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 477:lvgl/src/draw/../misc/lv_color.h **** }
 478:lvgl/src/draw/../misc/lv_color.h **** 
 479:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 480:lvgl/src/draw/../misc/lv_color.h **** {
 481:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 482:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 483:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 484:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 485:lvgl/src/draw/../misc/lv_color.h **** #else
 486:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 487:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 488:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 489:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 490:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 491:lvgl/src/draw/../misc/lv_color.h **** #endif
 492:lvgl/src/draw/../misc/lv_color.h **** 
 493:lvgl/src/draw/../misc/lv_color.h **** }
 494:lvgl/src/draw/../misc/lv_color.h **** 
 495:lvgl/src/draw/../misc/lv_color.h **** /**
 496:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 500:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 502:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl/src/draw/../misc/lv_color.h ****  */
 504:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl/src/draw/../misc/lv_color.h **** {
 506:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 507:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 513:lvgl/src/draw/../misc/lv_color.h **** #else
 514:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 515:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 516:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 517:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 519:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 521:lvgl/src/draw/../misc/lv_color.h **** #endif
 522:lvgl/src/draw/../misc/lv_color.h **** 
 523:lvgl/src/draw/../misc/lv_color.h ****     return ret;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 12


 524:lvgl/src/draw/../misc/lv_color.h **** }
 525:lvgl/src/draw/../misc/lv_color.h **** 
 526:lvgl/src/draw/../misc/lv_color.h **** /**
 527:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 529:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 530:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 531:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 532:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 533:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 534:lvgl/src/draw/../misc/lv_color.h ****  */
 535:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 536:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 537:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 538:lvgl/src/draw/../misc/lv_color.h **** {
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 540:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 546:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 551:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 552:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 553:lvgl/src/draw/../misc/lv_color.h ****     }
 554:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 555:lvgl/src/draw/../misc/lv_color.h ****     else {
 556:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 558:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 559:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 560:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 563:lvgl/src/draw/../misc/lv_color.h **** 
 564:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 565:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 566:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 567:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 568:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 569:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 570:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 571:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 572:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 573:lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 574:lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 575:lvgl/src/draw/../misc/lv_color.h ****                     ;
 576:lvgl/src/draw/../misc/lv_color.h ****             }
 577:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 578:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 579:lvgl/src/draw/../misc/lv_color.h **** 
 580:lvgl/src/draw/../misc/lv_color.h ****         }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 13


 581:lvgl/src/draw/../misc/lv_color.h **** 
 582:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 583:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 584:lvgl/src/draw/../misc/lv_color.h ****     }
 585:lvgl/src/draw/../misc/lv_color.h **** }
 586:lvgl/src/draw/../misc/lv_color.h **** 
 587:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 588:lvgl/src/draw/../misc/lv_color.h **** 
 589:lvgl/src/draw/../misc/lv_color.h **** /**
 590:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 591:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 592:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 593:lvgl/src/draw/../misc/lv_color.h ****  */
 594:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 597:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 598:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 599:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 600:lvgl/src/draw/../misc/lv_color.h **** }
 601:lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 603:lvgl/src/draw/../misc/lv_color.h **** {
 604:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 605:lvgl/src/draw/../misc/lv_color.h **** }
 606:lvgl/src/draw/../misc/lv_color.h **** 
 607:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 608:lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 610:lvgl/src/draw/../misc/lv_color.h **** }
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 613:lvgl/src/draw/../misc/lv_color.h **** {
 614:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 615:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 616:lvgl/src/draw/../misc/lv_color.h **** }
 617:lvgl/src/draw/../misc/lv_color.h **** 
 618:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 619:lvgl/src/draw/../misc/lv_color.h **** {
 620:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 621:lvgl/src/draw/../misc/lv_color.h **** }
 622:lvgl/src/draw/../misc/lv_color.h **** 
 623:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 624:lvgl/src/draw/../misc/lv_color.h **** //!
 625:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 626:lvgl/src/draw/../misc/lv_color.h **** 
 627:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 628:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 629:lvgl/src/draw/../misc/lv_color.h **** 
 630:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 631:lvgl/src/draw/../misc/lv_color.h **** 
 632:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 633:lvgl/src/draw/../misc/lv_color.h **** 
 634:lvgl/src/draw/../misc/lv_color.h **** /**
 635:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 636:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 637:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 14


 638:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 639:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 640:lvgl/src/draw/../misc/lv_color.h ****  */
 641:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 642:lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/src/draw/../misc/lv_color.h **** /**
 644:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 645:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 646:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 647:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 648:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 649:lvgl/src/draw/../misc/lv_color.h ****  */
 650:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 651:lvgl/src/draw/../misc/lv_color.h **** 
 652:lvgl/src/draw/../misc/lv_color.h **** /**
 653:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 654:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 655:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 656:lvgl/src/draw/../misc/lv_color.h ****  */
 657:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 658:lvgl/src/draw/../misc/lv_color.h **** 
 659:lvgl/src/draw/../misc/lv_color.h **** /**
 660:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 661:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 662:lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 664:lvgl/src/draw/../misc/lv_color.h **** {
 665:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 666:lvgl/src/draw/../misc/lv_color.h **** }
 667:lvgl/src/draw/../misc/lv_color.h **** 
 668:lvgl/src/draw/../misc/lv_color.h **** /**********************
 669:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 670:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 671:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 674:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 675:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
  53              		.loc 2 675 26 view .LVU3
  54              	.LBE47:
  55              		.loc 2 675 49 view .LVU4
  56              	.LVL1:
  57              	.LBB50:
  58              	.LBB48:
  59              	.LBI48:
 602:lvgl/src/draw/../misc/lv_color.h **** {
  60              		.loc 2 602 26 view .LVU5
  61              	.LBB49:
 604:lvgl/src/draw/../misc/lv_color.h **** }
  62              		.loc 2 604 5 view .LVU6
 604:lvgl/src/draw/../misc/lv_color.h **** }
  63              		.loc 2 604 12 is_stmt 0 view .LVU7
  64 000a 0021     		movs	r1, #0
  65              	.LVL2:
 604:lvgl/src/draw/../misc/lv_color.h **** }
  66              		.loc 2 604 12 view .LVU8
  67 000c 6FF30701 		bfc	r1, #0, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 15


  68 0010 6FF30F21 		bfc	r1, #8, #8
  69 0014 6FF31741 		bfc	r1, #16, #8
  70 0018 41F07F41 		orr	r1, r1, #-16777216
  71              	.LVL3:
 604:lvgl/src/draw/../misc/lv_color.h **** }
  72              		.loc 2 604 12 view .LVU9
  73              	.LBE49:
  74              	.LBE48:
  75              	.LBE50:
  76              		.loc 1 53 26 view .LVU10
  77 001c 0191     		str	r1, [sp, #4]
  54:lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
  78              		.loc 1 54 5 is_stmt 1 view .LVU11
  79              		.loc 1 54 15 is_stmt 0 view .LVU12
  80 001e 8668     		ldr	r6, [r0, #8]
  81              	.LVL4:
  55:lvgl/src/draw/lv_img_buf.c **** 
  56:lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
  82              		.loc 1 56 5 is_stmt 1 view .LVU13
  83              		.loc 1 56 23 is_stmt 0 view .LVU14
  84 0020 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
  85 0022 01F01F01 		and	r1, r1, #31
  86              		.loc 1 56 7 view .LVU15
  87 0026 0429     		cmp	r1, #4
  88 0028 12D0     		beq	.L2
  89              		.loc 1 56 47 discriminator 1 view .LVU16
  90 002a 0629     		cmp	r1, #6
  91 002c 10D0     		beq	.L2
  92              		.loc 1 56 102 discriminator 2 view .LVU17
  93 002e 0529     		cmp	r1, #5
  94 0030 0ED0     		beq	.L2
  57:lvgl/src/draw/lv_img_buf.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
  58:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
  59:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
  60:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
  61:lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
  62:lvgl/src/draw/lv_img_buf.c ****         p_color.ch.alpha = 0xFF; /*Only the color should be get so use a default alpha value*/
  63:lvgl/src/draw/lv_img_buf.c **** #endif
  64:lvgl/src/draw/lv_img_buf.c ****     }
  65:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
  95              		.loc 1 65 10 is_stmt 1 view .LVU18
  96              		.loc 1 65 12 is_stmt 0 view .LVU19
  97 0032 0729     		cmp	r1, #7
  98 0034 2DD0     		beq	.L12
  66:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 2;
  67:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
  68:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
  69:lvgl/src/draw/lv_img_buf.c **** 
  70:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
  71:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
  72:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8, 16, 24 ...*/
  73:lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 7) >> 3) * y + x;
  74:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
  75:lvgl/src/draw/lv_img_buf.c ****     }
  76:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
  99              		.loc 1 76 10 is_stmt 1 view .LVU20
 100              		.loc 1 76 12 is_stmt 0 view .LVU21
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 16


 101 0036 0829     		cmp	r1, #8
 102 0038 40D0     		beq	.L13
  77:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 4;
  78:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
  79:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
  80:lvgl/src/draw/lv_img_buf.c **** 
  81:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
  82:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
  83:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4, 8, 12 ...*/
  84:lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 3) >> 2) * y + x;
  85:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
  86:lvgl/src/draw/lv_img_buf.c ****     }
  87:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
 103              		.loc 1 87 10 is_stmt 1 view .LVU22
 104              		.loc 1 87 12 is_stmt 0 view .LVU23
 105 003a 0929     		cmp	r1, #9
 106 003c 55D0     		beq	.L14
  88:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 16;
  89:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
  90:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
  91:lvgl/src/draw/lv_img_buf.c **** 
  92:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
  93:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
  94:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2, 4, 6 ...*/
  95:lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 1) >> 1) * y + x;
  96:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
  97:lvgl/src/draw/lv_img_buf.c ****     }
  98:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 107              		.loc 1 98 10 is_stmt 1 view .LVU24
 108              		.loc 1 98 12 is_stmt 0 view .LVU25
 109 003e 0A29     		cmp	r1, #10
 110 0040 6BD0     		beq	.L15
  99:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 256;
 100:lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
 101:lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 102:lvgl/src/draw/lv_img_buf.c ****     }
 103:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
 111              		.loc 1 103 10 is_stmt 1 view .LVU26
 104:lvgl/src/draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 112              		.loc 1 104 52 is_stmt 0 view .LVU27
 113 0042 A1F10B02 		sub	r2, r1, #11
 114              	.LVL5:
 115              		.loc 1 104 52 view .LVU28
 116 0046 D2B2     		uxtb	r2, r2
 103:lvgl/src/draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 117              		.loc 1 103 12 view .LVU29
 118 0048 032A     		cmp	r2, #3
 119 004a 1FD8     		bhi	.L6
 105:lvgl/src/draw/lv_img_buf.c ****         p_color = color;
 120              		.loc 1 105 9 is_stmt 1 view .LVU30
 121              		.loc 1 105 17 is_stmt 0 view .LVU31
 122 004c 0193     		str	r3, [sp, #4]
 123 004e 1DE0     		b	.L6
 124              	.LVL6:
 125              	.L2:
 126              	.LBB51:
  58:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 17


 127              		.loc 1 58 9 is_stmt 1 view .LVU32
  58:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 128              		.loc 1 58 60 is_stmt 0 view .LVU33
 129 0050 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 130              	.LVL7:
  58:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 131              		.loc 1 58 27 view .LVU34
 132 0052 00F01F00 		and	r0, r0, #31
 133 0056 FFF7FEFF 		bl	lv_img_cf_get_px_size
 134              	.LVL8:
  58:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 135              		.loc 1 58 17 view .LVU35
 136 005a C0F3C700 		ubfx	r0, r0, #3, #8
 137              	.LVL9:
  59:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 138              		.loc 1 59 9 is_stmt 1 view .LVU36
  59:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 139              		.loc 1 59 38 is_stmt 0 view .LVU37
 140 005e 2B68     		ldr	r3, [r5]
 141 0060 C3F38A23 		ubfx	r3, r3, #10, #11
  59:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 142              		.loc 1 59 41 view .LVU38
 143 0064 07FB03F3 		mul	r3, r7, r3
  59:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 144              		.loc 1 59 59 view .LVU39
 145 0068 00FB04F2 		mul	r2, r0, r4
  59:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 146              		.loc 1 59 55 view .LVU40
 147 006c 00FB0322 		mla	r2, r0, r3, r2
 148              	.LVL10:
  60:lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 149              		.loc 1 60 9 is_stmt 1 view .LVU41
  60:lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 150              		.loc 1 60 35 is_stmt 0 view .LVU42
 151 0070 3244     		add	r2, r2, r6
 152              	.LVL11:
 153              	.LBB52:
 154              	.LBI52:
 155              		.file 3 "lvgl/src/draw/../misc/lv_mem.h"
   1:lvgl/src/draw/../misc/lv_mem.h **** /**
   2:lvgl/src/draw/../misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/draw/../misc/lv_mem.h ****  *
   4:lvgl/src/draw/../misc/lv_mem.h ****  */
   5:lvgl/src/draw/../misc/lv_mem.h **** 
   6:lvgl/src/draw/../misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/draw/../misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/draw/../misc/lv_mem.h **** 
   9:lvgl/src/draw/../misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_mem.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_mem.h **** #endif
  12:lvgl/src/draw/../misc/lv_mem.h **** 
  13:lvgl/src/draw/../misc/lv_mem.h **** /*********************
  14:lvgl/src/draw/../misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_mem.h **** 
  18:lvgl/src/draw/../misc/lv_mem.h **** #include <stdint.h>
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 18


  19:lvgl/src/draw/../misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/draw/../misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/src/draw/../misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/src/draw/../misc/lv_mem.h **** 
  23:lvgl/src/draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/src/draw/../misc/lv_mem.h **** #include <string.h>
  25:lvgl/src/draw/../misc/lv_mem.h **** #endif
  26:lvgl/src/draw/../misc/lv_mem.h **** 
  27:lvgl/src/draw/../misc/lv_mem.h **** /*********************
  28:lvgl/src/draw/../misc/lv_mem.h ****  *      DEFINES
  29:lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  30:lvgl/src/draw/../misc/lv_mem.h **** 
  31:lvgl/src/draw/../misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/src/draw/../misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/src/draw/../misc/lv_mem.h **** #endif
  34:lvgl/src/draw/../misc/lv_mem.h **** 
  35:lvgl/src/draw/../misc/lv_mem.h **** /**********************
  36:lvgl/src/draw/../misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  38:lvgl/src/draw/../misc/lv_mem.h **** 
  39:lvgl/src/draw/../misc/lv_mem.h **** /**
  40:lvgl/src/draw/../misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/src/draw/../misc/lv_mem.h ****  */
  42:lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  43:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size*/
  44:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory*/
  46:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used*/
  49:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used*/
  50:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation*/
  51:lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/src/draw/../misc/lv_mem.h **** 
  53:lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  54:lvgl/src/draw/../misc/lv_mem.h ****     void * p;
  55:lvgl/src/draw/../misc/lv_mem.h ****     uint16_t size;
  56:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used : 1;
  57:lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/src/draw/../misc/lv_mem.h **** 
  59:lvgl/src/draw/../misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/src/draw/../misc/lv_mem.h **** 
  61:lvgl/src/draw/../misc/lv_mem.h **** /**********************
  62:lvgl/src/draw/../misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  63:lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  64:lvgl/src/draw/../misc/lv_mem.h **** 
  65:lvgl/src/draw/../misc/lv_mem.h **** /**
  66:lvgl/src/draw/../misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  67:lvgl/src/draw/../misc/lv_mem.h ****  */
  68:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_init(void);
  69:lvgl/src/draw/../misc/lv_mem.h **** 
  70:lvgl/src/draw/../misc/lv_mem.h **** /**
  71:lvgl/src/draw/../misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  72:lvgl/src/draw/../misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  73:lvgl/src/draw/../misc/lv_mem.h ****  */
  74:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_deinit(void);
  75:lvgl/src/draw/../misc/lv_mem.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 19


  76:lvgl/src/draw/../misc/lv_mem.h **** /**
  77:lvgl/src/draw/../misc/lv_mem.h ****  * Allocate a memory dynamically
  78:lvgl/src/draw/../misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  79:lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the allocated memory
  80:lvgl/src/draw/../misc/lv_mem.h ****  */
  81:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  82:lvgl/src/draw/../misc/lv_mem.h **** 
  83:lvgl/src/draw/../misc/lv_mem.h **** /**
  84:lvgl/src/draw/../misc/lv_mem.h ****  * Free an allocated data
  85:lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory
  86:lvgl/src/draw/../misc/lv_mem.h ****  */
  87:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_free(void * data);
  88:lvgl/src/draw/../misc/lv_mem.h **** 
  89:lvgl/src/draw/../misc/lv_mem.h **** /**
  90:lvgl/src/draw/../misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  91:lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  92:lvgl/src/draw/../misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  93:lvgl/src/draw/../misc/lv_mem.h ****  * @param new_size the desired new size in byte
  94:lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the new memory
  95:lvgl/src/draw/../misc/lv_mem.h ****  */
  96:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  97:lvgl/src/draw/../misc/lv_mem.h **** 
  98:lvgl/src/draw/../misc/lv_mem.h **** /**
  99:lvgl/src/draw/../misc/lv_mem.h ****  *
 100:lvgl/src/draw/../misc/lv_mem.h ****  * @return
 101:lvgl/src/draw/../misc/lv_mem.h ****  */
 102:lvgl/src/draw/../misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 103:lvgl/src/draw/../misc/lv_mem.h **** 
 104:lvgl/src/draw/../misc/lv_mem.h **** /**
 105:lvgl/src/draw/../misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 106:lvgl/src/draw/../misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 107:lvgl/src/draw/../misc/lv_mem.h ****  *              the result of the analysis will be stored here
 108:lvgl/src/draw/../misc/lv_mem.h ****  */
 109:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 110:lvgl/src/draw/../misc/lv_mem.h **** 
 111:lvgl/src/draw/../misc/lv_mem.h **** 
 112:lvgl/src/draw/../misc/lv_mem.h **** /**
 113:lvgl/src/draw/../misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 114:lvgl/src/draw/../misc/lv_mem.h ****  * @param size the required size
 115:lvgl/src/draw/../misc/lv_mem.h ****  */
 116:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_buf_get(uint32_t size);
 117:lvgl/src/draw/../misc/lv_mem.h **** 
 118:lvgl/src/draw/../misc/lv_mem.h **** /**
 119:lvgl/src/draw/../misc/lv_mem.h ****  * Release a memory buffer
 120:lvgl/src/draw/../misc/lv_mem.h ****  * @param p buffer to release
 121:lvgl/src/draw/../misc/lv_mem.h ****  */
 122:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_release(void * p);
 123:lvgl/src/draw/../misc/lv_mem.h **** 
 124:lvgl/src/draw/../misc/lv_mem.h **** /**
 125:lvgl/src/draw/../misc/lv_mem.h ****  * Free all memory buffers
 126:lvgl/src/draw/../misc/lv_mem.h ****  */
 127:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_free_all(void);
 128:lvgl/src/draw/../misc/lv_mem.h **** 
 129:lvgl/src/draw/../misc/lv_mem.h **** //! @cond Doxygen_Suppress
 130:lvgl/src/draw/../misc/lv_mem.h **** 
 131:lvgl/src/draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 132:lvgl/src/draw/../misc/lv_mem.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 20


 133:lvgl/src/draw/../misc/lv_mem.h **** /**
 134:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 135:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 136:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 137:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 138:lvgl/src/draw/../misc/lv_mem.h ****  */
 139:lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy(void * dst, const void * src, size_t len)
 140:lvgl/src/draw/../misc/lv_mem.h **** {
 141:lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 142:lvgl/src/draw/../misc/lv_mem.h **** }
 143:lvgl/src/draw/../misc/lv_mem.h **** 
 144:lvgl/src/draw/../misc/lv_mem.h **** /**
 145:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 146:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 147:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 148:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 149:lvgl/src/draw/../misc/lv_mem.h ****  */
 150:lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)
 151:lvgl/src/draw/../misc/lv_mem.h **** {
 152:lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 153:lvgl/src/draw/../misc/lv_mem.h **** }
 154:lvgl/src/draw/../misc/lv_mem.h **** 
 155:lvgl/src/draw/../misc/lv_mem.h **** /**
 156:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset
 157:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 158:lvgl/src/draw/../misc/lv_mem.h ****  * @param v value to set [0..255]
 159:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 160:lvgl/src/draw/../misc/lv_mem.h ****  */
 161:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset(void * dst, uint8_t v, size_t len)
 162:lvgl/src/draw/../misc/lv_mem.h **** {
 163:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, v, len);
 164:lvgl/src/draw/../misc/lv_mem.h **** }
 165:lvgl/src/draw/../misc/lv_mem.h **** 
 166:lvgl/src/draw/../misc/lv_mem.h **** /**
 167:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 168:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 169:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 170:lvgl/src/draw/../misc/lv_mem.h ****  */
 171:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_00(void * dst, size_t len)
 172:lvgl/src/draw/../misc/lv_mem.h **** {
 173:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0x00, len);
 174:lvgl/src/draw/../misc/lv_mem.h **** }
 175:lvgl/src/draw/../misc/lv_mem.h **** 
 176:lvgl/src/draw/../misc/lv_mem.h **** /**
 177:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 178:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 179:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 180:lvgl/src/draw/../misc/lv_mem.h ****  */
 181:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_ff(void * dst, size_t len)
 182:lvgl/src/draw/../misc/lv_mem.h **** {
 183:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0xFF, len);
 184:lvgl/src/draw/../misc/lv_mem.h **** }
 185:lvgl/src/draw/../misc/lv_mem.h **** 
 186:lvgl/src/draw/../misc/lv_mem.h **** #else
 187:lvgl/src/draw/../misc/lv_mem.h **** /**
 188:lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 189:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 21


 190:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 191:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 192:lvgl/src/draw/../misc/lv_mem.h ****  */
 193:lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len);
 194:lvgl/src/draw/../misc/lv_mem.h **** 
 195:lvgl/src/draw/../misc/lv_mem.h **** /**
 196:lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 197:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 198:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 199:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 200:lvgl/src/draw/../misc/lv_mem.h ****  */
 201:lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len
 156              		.loc 3 201 44 is_stmt 1 view .LVU43
 157              	.LBB53:
 202:lvgl/src/draw/../misc/lv_mem.h **** {
 203:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 158              		.loc 3 203 5 view .LVU44
 204:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 159              		.loc 3 204 5 view .LVU45
 205:lvgl/src/draw/../misc/lv_mem.h **** 
 206:lvgl/src/draw/../misc/lv_mem.h ****     while(len) {
 160              		.loc 3 206 5 view .LVU46
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 161              		.loc 3 203 15 is_stmt 0 view .LVU47
 162 0072 01A9     		add	r1, sp, #4
 163              	.LVL12:
 164              		.loc 3 206 10 view .LVU48
 165 0074 0423     		movs	r3, #4
 166              	.LVL13:
 167              		.loc 3 206 10 view .LVU49
 168 0076 04E0     		b	.L4
 169              	.LVL14:
 170              	.L5:
 207:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 171              		.loc 3 207 9 is_stmt 1 view .LVU50
 172              		.loc 3 207 15 is_stmt 0 view .LVU51
 173 0078 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 174              	.LVL15:
 175              		.loc 3 207 13 view .LVU52
 176 007c 01F8010B 		strb	r0, [r1], #1
 177              	.LVL16:
 208:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 178              		.loc 3 208 9 is_stmt 1 view .LVU53
 209:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 179              		.loc 3 209 9 view .LVU54
 210:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 180              		.loc 3 210 9 view .LVU55
 181              		.loc 3 210 12 is_stmt 0 view .LVU56
 182 0080 013B     		subs	r3, r3, #1
 183              	.LVL17:
 184              	.L4:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 185              		.loc 3 206 10 is_stmt 1 view .LVU57
 186 0082 002B     		cmp	r3, #0
 187 0084 F8D1     		bne	.L5
 211:lvgl/src/draw/../misc/lv_mem.h ****     }
 212:lvgl/src/draw/../misc/lv_mem.h **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 22


 213:lvgl/src/draw/../misc/lv_mem.h ****     return dst;
 188              		.loc 3 213 5 view .LVU58
 189              	.LVL18:
 190              		.loc 3 213 5 is_stmt 0 view .LVU59
 191              	.LBE53:
 192              	.LBE52:
  62:lvgl/src/draw/lv_img_buf.c **** #endif
 193              		.loc 1 62 9 is_stmt 1 view .LVU60
  62:lvgl/src/draw/lv_img_buf.c **** #endif
 194              		.loc 1 62 26 is_stmt 0 view .LVU61
 195 0086 FF23     		movs	r3, #255
 196 0088 8DF80730 		strb	r3, [sp, #7]
 197              	.LVL19:
 198              	.L6:
  62:lvgl/src/draw/lv_img_buf.c **** #endif
 199              		.loc 1 62 26 view .LVU62
 200              	.LBE51:
 106:lvgl/src/draw/lv_img_buf.c ****     }
 107:lvgl/src/draw/lv_img_buf.c ****     return p_color;
 201              		.loc 1 107 5 is_stmt 1 view .LVU63
 108:lvgl/src/draw/lv_img_buf.c **** }
 202              		.loc 1 108 1 is_stmt 0 view .LVU64
 203 008c 0198     		ldr	r0, [sp, #4]
 204 008e 03B0     		add	sp, sp, #12
 205              	.LCFI2:
 206              		.cfi_remember_state
 207              		.cfi_def_cfa_offset 20
 208              		@ sp needed
 209 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 210              	.LVL20:
 211              	.L12:
 212              	.LCFI3:
 213              		.cfi_restore_state
 214              	.LBB54:
  66:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 215              		.loc 1 66 9 is_stmt 1 view .LVU65
  67:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 216              		.loc 1 67 9 view .LVU66
  67:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 217              		.loc 1 67 17 is_stmt 0 view .LVU67
 218 0092 04F00701 		and	r1, r4, #7
 219              	.LVL21:
  68:lvgl/src/draw/lv_img_buf.c **** 
 220              		.loc 1 68 9 is_stmt 1 view .LVU68
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 221              		.loc 1 73 9 view .LVU69
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 222              		.loc 1 73 37 is_stmt 0 view .LVU70
 223 0096 0268     		ldr	r2, [r0]
 224              	.LVL22:
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 225              		.loc 1 73 37 view .LVU71
 226 0098 C2F38A22 		ubfx	r2, r2, #10, #11
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 227              		.loc 1 73 40 view .LVU72
 228 009c 0732     		adds	r2, r2, #7
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 23


 229              		.loc 1 73 45 view .LVU73
 230 009e D210     		asrs	r2, r2, #3
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 231              		.loc 1 73 51 view .LVU74
 232 00a0 07FB02F2 		mul	r2, r7, r2
  73:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 233              		.loc 1 73 55 view .LVU75
 234 00a4 02EBE402 		add	r2, r2, r4, asr #3
 235              	.LVL23:
  74:lvgl/src/draw/lv_img_buf.c ****     }
 236              		.loc 1 74 9 is_stmt 1 view .LVU76
  74:lvgl/src/draw/lv_img_buf.c ****     }
 237              		.loc 1 74 31 is_stmt 0 view .LVU77
 238 00a8 3244     		add	r2, r2, r6
 239              	.LVL24:
  74:lvgl/src/draw/lv_img_buf.c ****     }
 240              		.loc 1 74 31 view .LVU78
 241 00aa 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
 242              	.LVL25:
  74:lvgl/src/draw/lv_img_buf.c ****     }
 243              		.loc 1 74 47 view .LVU79
 244 00ac C1F10702 		rsb	r2, r1, #7
  74:lvgl/src/draw/lv_img_buf.c ****     }
 245              		.loc 1 74 41 view .LVU80
 246 00b0 0121     		movs	r1, #1
 247              	.LVL26:
  74:lvgl/src/draw/lv_img_buf.c ****     }
 248              		.loc 1 74 41 view .LVU81
 249 00b2 9140     		lsls	r1, r1, r2
  74:lvgl/src/draw/lv_img_buf.c ****     }
 250              		.loc 1 74 36 view .LVU82
 251 00b4 0B40     		ands	r3, r3, r1
  74:lvgl/src/draw/lv_img_buf.c ****     }
 252              		.loc 1 74 56 view .LVU83
 253 00b6 1341     		asrs	r3, r3, r2
  74:lvgl/src/draw/lv_img_buf.c ****     }
 254              		.loc 1 74 22 view .LVU84
 255 00b8 0193     		str	r3, [sp, #4]
 256              	.LVL27:
  74:lvgl/src/draw/lv_img_buf.c ****     }
 257              		.loc 1 74 22 view .LVU85
 258              	.LBE54:
 259 00ba E7E7     		b	.L6
 260              	.LVL28:
 261              	.L13:
 262              	.LBB55:
  77:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 263              		.loc 1 77 9 is_stmt 1 view .LVU86
  78:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 264              		.loc 1 78 9 view .LVU87
  78:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 265              		.loc 1 78 17 is_stmt 0 view .LVU88
 266 00bc 04F00303 		and	r3, r4, #3
 267              	.LVL29:
  78:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 268              		.loc 1 78 17 view .LVU89
 269 00c0 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 24


 270              	.LVL30:
  79:lvgl/src/draw/lv_img_buf.c **** 
 271              		.loc 1 79 9 is_stmt 1 view .LVU90
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 272              		.loc 1 84 9 view .LVU91
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 273              		.loc 1 84 37 is_stmt 0 view .LVU92
 274 00c2 0268     		ldr	r2, [r0]
 275              	.LVL31:
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 276              		.loc 1 84 37 view .LVU93
 277 00c4 C2F38A22 		ubfx	r2, r2, #10, #11
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 278              		.loc 1 84 40 view .LVU94
 279 00c8 0332     		adds	r2, r2, #3
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 280              		.loc 1 84 45 view .LVU95
 281 00ca 9210     		asrs	r2, r2, #2
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 282              		.loc 1 84 51 view .LVU96
 283 00cc 07FB02F2 		mul	r2, r7, r2
  84:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 284              		.loc 1 84 55 view .LVU97
 285 00d0 02EBA402 		add	r2, r2, r4, asr #2
 286              	.LVL32:
  85:lvgl/src/draw/lv_img_buf.c ****     }
 287              		.loc 1 85 9 is_stmt 1 view .LVU98
  85:lvgl/src/draw/lv_img_buf.c ****     }
 288              		.loc 1 85 31 is_stmt 0 view .LVU99
 289 00d4 3244     		add	r2, r2, r6
 290              	.LVL33:
  85:lvgl/src/draw/lv_img_buf.c ****     }
 291              		.loc 1 85 31 view .LVU100
 292 00d6 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
  85:lvgl/src/draw/lv_img_buf.c ****     }
 293              		.loc 1 85 47 view .LVU101
 294 00d8 C3F10603 		rsb	r3, r3, #6
 295              	.LVL34:
  85:lvgl/src/draw/lv_img_buf.c ****     }
 296              		.loc 1 85 41 view .LVU102
 297 00dc 0321     		movs	r1, #3
 298 00de 9940     		lsls	r1, r1, r3
  85:lvgl/src/draw/lv_img_buf.c ****     }
 299              		.loc 1 85 36 view .LVU103
 300 00e0 0A40     		ands	r2, r2, r1
  85:lvgl/src/draw/lv_img_buf.c ****     }
 301              		.loc 1 85 56 view .LVU104
 302 00e2 42FA03F3 		asr	r3, r2, r3
  85:lvgl/src/draw/lv_img_buf.c ****     }
 303              		.loc 1 85 22 view .LVU105
 304 00e6 0193     		str	r3, [sp, #4]
 305              	.LVL35:
  85:lvgl/src/draw/lv_img_buf.c ****     }
 306              		.loc 1 85 22 view .LVU106
 307              	.LBE55:
 308 00e8 D0E7     		b	.L6
 309              	.LVL36:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 25


 310              	.L14:
 311              	.LBB56:
  88:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 312              		.loc 1 88 9 is_stmt 1 view .LVU107
  89:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 313              		.loc 1 89 9 view .LVU108
  89:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 314              		.loc 1 89 17 is_stmt 0 view .LVU109
 315 00ea 04F00103 		and	r3, r4, #1
 316              	.LVL37:
  89:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 317              		.loc 1 89 17 view .LVU110
 318 00ee 9B00     		lsls	r3, r3, #2
 319              	.LVL38:
  90:lvgl/src/draw/lv_img_buf.c **** 
 320              		.loc 1 90 9 is_stmt 1 view .LVU111
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 321              		.loc 1 95 9 view .LVU112
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 322              		.loc 1 95 37 is_stmt 0 view .LVU113
 323 00f0 0268     		ldr	r2, [r0]
 324              	.LVL39:
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 325              		.loc 1 95 37 view .LVU114
 326 00f2 C2F38A22 		ubfx	r2, r2, #10, #11
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 327              		.loc 1 95 40 view .LVU115
 328 00f6 0132     		adds	r2, r2, #1
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 329              		.loc 1 95 45 view .LVU116
 330 00f8 5210     		asrs	r2, r2, #1
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 331              		.loc 1 95 51 view .LVU117
 332 00fa 07FB02F2 		mul	r2, r7, r2
  95:lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 333              		.loc 1 95 55 view .LVU118
 334 00fe 02EB6402 		add	r2, r2, r4, asr #1
 335              	.LVL40:
  96:lvgl/src/draw/lv_img_buf.c ****     }
 336              		.loc 1 96 9 is_stmt 1 view .LVU119
  96:lvgl/src/draw/lv_img_buf.c ****     }
 337              		.loc 1 96 31 is_stmt 0 view .LVU120
 338 0102 3244     		add	r2, r2, r6
 339              	.LVL41:
  96:lvgl/src/draw/lv_img_buf.c ****     }
 340              		.loc 1 96 31 view .LVU121
 341 0104 92F84020 		ldrb	r2, [r2, #64]	@ zero_extendqisi2
  96:lvgl/src/draw/lv_img_buf.c ****     }
 342              		.loc 1 96 49 view .LVU122
 343 0108 C3F10403 		rsb	r3, r3, #4
 344              	.LVL42:
  96:lvgl/src/draw/lv_img_buf.c ****     }
 345              		.loc 1 96 43 view .LVU123
 346 010c 0F21     		movs	r1, #15
 347 010e 9940     		lsls	r1, r1, r3
  96:lvgl/src/draw/lv_img_buf.c ****     }
 348              		.loc 1 96 36 view .LVU124
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 26


 349 0110 0A40     		ands	r2, r2, r1
  96:lvgl/src/draw/lv_img_buf.c ****     }
 350              		.loc 1 96 58 view .LVU125
 351 0112 42FA03F3 		asr	r3, r2, r3
  96:lvgl/src/draw/lv_img_buf.c ****     }
 352              		.loc 1 96 22 view .LVU126
 353 0116 0193     		str	r3, [sp, #4]
 354              	.LVL43:
  96:lvgl/src/draw/lv_img_buf.c ****     }
 355              		.loc 1 96 22 view .LVU127
 356              	.LBE56:
 357 0118 B8E7     		b	.L6
 358              	.LVL44:
 359              	.L15:
 360              	.LBB57:
  99:lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
 361              		.loc 1 99 9 is_stmt 1 view .LVU128
 100:lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 362              		.loc 1 100 9 view .LVU129
 100:lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 363              		.loc 1 100 35 is_stmt 0 view .LVU130
 364 011a 0368     		ldr	r3, [r0]
 365              	.LVL45:
 100:lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 366              		.loc 1 100 35 view .LVU131
 367 011c C3F38A23 		ubfx	r3, r3, #10, #11
 100:lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 368              		.loc 1 100 42 view .LVU132
 369 0120 03FB0243 		mla	r3, r3, r2, r4
 370              	.LVL46:
 101:lvgl/src/draw/lv_img_buf.c ****     }
 371              		.loc 1 101 9 is_stmt 1 view .LVU133
 101:lvgl/src/draw/lv_img_buf.c ****     }
 372              		.loc 1 101 30 is_stmt 0 view .LVU134
 373 0124 3344     		add	r3, r3, r6
 374              	.LVL47:
 101:lvgl/src/draw/lv_img_buf.c ****     }
 375              		.loc 1 101 30 view .LVU135
 376 0126 93F80034 		ldrb	r3, [r3, #1024]	@ zero_extendqisi2
 101:lvgl/src/draw/lv_img_buf.c ****     }
 377              		.loc 1 101 22 view .LVU136
 378 012a 0193     		str	r3, [sp, #4]
 379              	.LVL48:
 101:lvgl/src/draw/lv_img_buf.c ****     }
 380              		.loc 1 101 22 view .LVU137
 381              	.LBE57:
 382 012c AEE7     		b	.L6
 383              		.cfi_endproc
 384              	.LFE48:
 386              		.section	.text.lv_img_buf_get_px_alpha,"ax",%progbits
 387              		.align	1
 388              		.global	lv_img_buf_get_px_alpha
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	lv_img_buf_get_px_alpha:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 27


 395              	.LVL49:
 396              	.LFB49:
 109:lvgl/src/draw/lv_img_buf.c **** 
 110:lvgl/src/draw/lv_img_buf.c **** /**
 111:lvgl/src/draw/lv_img_buf.c ****  * Get the alpha value of an image's pixel
 112:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 113:lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 114:lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 115:lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 116:lvgl/src/draw/lv_img_buf.c ****  * @return alpha value of the point
 117:lvgl/src/draw/lv_img_buf.c ****  */
 118:lvgl/src/draw/lv_img_buf.c **** lv_opa_t lv_img_buf_get_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y)
 119:lvgl/src/draw/lv_img_buf.c **** {
 397              		.loc 1 119 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 16
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		.loc 1 119 1 is_stmt 0 view .LVU139
 402 0000 70B5     		push	{r4, r5, r6, lr}
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 16
 405              		.cfi_offset 4, -16
 406              		.cfi_offset 5, -12
 407              		.cfi_offset 6, -8
 408              		.cfi_offset 14, -4
 409 0002 84B0     		sub	sp, sp, #16
 410              	.LCFI5:
 411              		.cfi_def_cfa_offset 32
 412 0004 8446     		mov	ip, r0
 413 0006 8E46     		mov	lr, r1
 414 0008 1446     		mov	r4, r2
 120:lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 415              		.loc 1 120 5 is_stmt 1 view .LVU140
 416              		.loc 1 120 15 is_stmt 0 view .LVU141
 417 000a 8568     		ldr	r5, [r0, #8]
 418              	.LVL50:
 121:lvgl/src/draw/lv_img_buf.c **** 
 122:lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 419              		.loc 1 122 5 is_stmt 1 view .LVU142
 420              		.loc 1 122 23 is_stmt 0 view .LVU143
 421 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 422 000e 03F01F03 		and	r3, r3, #31
 423              		.loc 1 122 7 view .LVU144
 424 0012 052B     		cmp	r3, #5
 425 0014 0AD0     		beq	.L26
 123:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y * LV_IMG_PX_SIZE_ALPHA_BYTE + x * LV_IMG_PX_SIZE_ALPHA_BYTE
 124:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 125:lvgl/src/draw/lv_img_buf.c ****     }
 126:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 426              		.loc 1 126 10 is_stmt 1 view .LVU145
 427              		.loc 1 126 12 is_stmt 0 view .LVU146
 428 0016 0B2B     		cmp	r3, #11
 429 0018 11D0     		beq	.L27
 127:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 128:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 129:lvgl/src/draw/lv_img_buf.c **** 
 130:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 28


 131:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 132:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 133:lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 7) >> 3) * y + x;
 134:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 135:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 136:lvgl/src/draw/lv_img_buf.c ****     }
 137:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 430              		.loc 1 137 10 is_stmt 1 view .LVU147
 431              		.loc 1 137 12 is_stmt 0 view .LVU148
 432 001a 0C2B     		cmp	r3, #12
 433 001c 29D0     		beq	.L28
 138:lvgl/src/draw/lv_img_buf.c ****         const uint8_t opa_table[4] = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
 139:lvgl/src/draw/lv_img_buf.c **** 
 140:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 141:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 142:lvgl/src/draw/lv_img_buf.c **** 
 143:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 144:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 145:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4 ,8, 12 ...*/
 146:lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 3) >> 2) * y + x;
 147:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 148:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 149:lvgl/src/draw/lv_img_buf.c ****     }
 150:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 434              		.loc 1 150 10 is_stmt 1 view .LVU149
 435              		.loc 1 150 12 is_stmt 0 view .LVU150
 436 001e 0D2B     		cmp	r3, #13
 437 0020 43D0     		beq	.L29
 151:lvgl/src/draw/lv_img_buf.c ****         const uint8_t opa_table[16] = {0,  17, 34,  51, /*Opacity mapping with bpp = 4*/
 152:lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 153:lvgl/src/draw/lv_img_buf.c ****                                       };
 154:lvgl/src/draw/lv_img_buf.c **** 
 155:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 156:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 157:lvgl/src/draw/lv_img_buf.c **** 
 158:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 159:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 160:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 161:lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 1) >> 1) * y + x;
 162:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 163:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 164:lvgl/src/draw/lv_img_buf.c ****     }
 165:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 438              		.loc 1 165 10 is_stmt 1 view .LVU151
 439              		.loc 1 165 12 is_stmt 0 view .LVU152
 440 0022 0E2B     		cmp	r3, #14
 441 0024 5FD0     		beq	.L30
 166:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 167:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 168:lvgl/src/draw/lv_img_buf.c ****     }
 169:lvgl/src/draw/lv_img_buf.c **** 
 170:lvgl/src/draw/lv_img_buf.c ****     return LV_OPA_COVER;
 442              		.loc 1 170 12 view .LVU153
 443 0026 FF20     		movs	r0, #255
 444              	.LVL51:
 445              	.L18:
 171:lvgl/src/draw/lv_img_buf.c **** }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 29


 446              		.loc 1 171 1 discriminator 1 view .LVU154
 447 0028 04B0     		add	sp, sp, #16
 448              	.LCFI6:
 449              		.cfi_remember_state
 450              		.cfi_def_cfa_offset 16
 451              		@ sp needed
 452 002a 70BD     		pop	{r4, r5, r6, pc}
 453              	.LVL52:
 454              	.L26:
 455              	.LCFI7:
 456              		.cfi_restore_state
 457              	.LBB58:
 123:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 458              		.loc 1 123 9 is_stmt 1 view .LVU155
 123:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 459              		.loc 1 123 34 is_stmt 0 view .LVU156
 460 002c 0268     		ldr	r2, [r0]
 461              	.LVL53:
 123:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 462              		.loc 1 123 34 view .LVU157
 463 002e C2F38A22 		ubfx	r2, r2, #10, #11
 123:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 464              		.loc 1 123 69 view .LVU158
 465 0032 02FB0412 		mla	r2, r2, r4, r1
 466              	.LVL54:
 124:lvgl/src/draw/lv_img_buf.c ****     }
 467              		.loc 1 124 9 is_stmt 1 view .LVU159
 124:lvgl/src/draw/lv_img_buf.c ****     }
 468              		.loc 1 124 22 is_stmt 0 view .LVU160
 469 0036 05EB8205 		add	r5, r5, r2, lsl #2
 470              	.LVL55:
 124:lvgl/src/draw/lv_img_buf.c ****     }
 471              		.loc 1 124 22 view .LVU161
 472 003a E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 473              	.LVL56:
 124:lvgl/src/draw/lv_img_buf.c ****     }
 474              		.loc 1 124 22 view .LVU162
 475 003c F4E7     		b	.L18
 476              	.LVL57:
 477              	.L27:
 124:lvgl/src/draw/lv_img_buf.c ****     }
 478              		.loc 1 124 22 view .LVU163
 479              	.LBE58:
 480              	.LBB59:
 127:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 481              		.loc 1 127 9 is_stmt 1 view .LVU164
 127:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 482              		.loc 1 127 17 is_stmt 0 view .LVU165
 483 003e 01F00700 		and	r0, r1, #7
 484              	.LVL58:
 128:lvgl/src/draw/lv_img_buf.c **** 
 485              		.loc 1 128 9 is_stmt 1 view .LVU166
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 486              		.loc 1 133 9 view .LVU167
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 487              		.loc 1 133 39 is_stmt 0 view .LVU168
 488 0042 DCF80020 		ldr	r2, [ip]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 30


 489              	.LVL59:
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 490              		.loc 1 133 39 view .LVU169
 491 0046 C2F38A22 		ubfx	r2, r2, #10, #11
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 492              		.loc 1 133 42 view .LVU170
 493 004a 0732     		adds	r2, r2, #7
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 494              		.loc 1 133 47 view .LVU171
 495 004c D210     		asrs	r2, r2, #3
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 496              		.loc 1 133 53 view .LVU172
 497 004e 04FB02F2 		mul	r2, r4, r2
 133:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 498              		.loc 1 133 57 view .LVU173
 499 0052 02EBE101 		add	r1, r2, r1, asr #3
 500              	.LVL60:
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 501              		.loc 1 134 9 is_stmt 1 view .LVU174
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 502              		.loc 1 134 33 is_stmt 0 view .LVU175
 503 0056 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 504              		.loc 1 134 49 view .LVU176
 505 0058 C0F10702 		rsb	r2, r0, #7
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 506              		.loc 1 134 43 view .LVU177
 507 005c 0121     		movs	r1, #1
 508              	.LVL61:
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 509              		.loc 1 134 43 view .LVU178
 510 005e 9140     		lsls	r1, r1, r2
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 511              		.loc 1 134 38 view .LVU179
 512 0060 0B40     		ands	r3, r3, r1
 134:lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 513              		.loc 1 134 58 view .LVU180
 514 0062 1341     		asrs	r3, r3, r2
 515              	.LVL62:
 135:lvgl/src/draw/lv_img_buf.c ****     }
 516              		.loc 1 135 9 is_stmt 1 view .LVU181
 135:lvgl/src/draw/lv_img_buf.c ****     }
 517              		.loc 1 135 39 is_stmt 0 view .LVU182
 518 0064 13F0FF0F 		tst	r3, #255
 519 0068 01D0     		beq	.L23
 520 006a 0020     		movs	r0, #0
 521              	.LVL63:
 135:lvgl/src/draw/lv_img_buf.c ****     }
 522              		.loc 1 135 39 view .LVU183
 523 006c DCE7     		b	.L18
 524              	.LVL64:
 525              	.L23:
 135:lvgl/src/draw/lv_img_buf.c ****     }
 526              		.loc 1 135 39 view .LVU184
 527 006e FF20     		movs	r0, #255
 528              	.LVL65:
 135:lvgl/src/draw/lv_img_buf.c ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 31


 529              		.loc 1 135 39 view .LVU185
 530 0070 DAE7     		b	.L18
 531              	.LVL66:
 532              	.L28:
 135:lvgl/src/draw/lv_img_buf.c ****     }
 533              		.loc 1 135 39 view .LVU186
 534              	.LBE59:
 535              	.LBB60:
 138:lvgl/src/draw/lv_img_buf.c **** 
 536              		.loc 1 138 9 is_stmt 1 view .LVU187
 138:lvgl/src/draw/lv_img_buf.c **** 
 537              		.loc 1 138 23 is_stmt 0 view .LVU188
 538 0072 204B     		ldr	r3, .L31
 539 0074 0093     		str	r3, [sp]
 140:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 540              		.loc 1 140 9 is_stmt 1 view .LVU189
 140:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 541              		.loc 1 140 17 is_stmt 0 view .LVU190
 542 0076 01F00302 		and	r2, r1, #3
 543              	.LVL67:
 140:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 544              		.loc 1 140 17 view .LVU191
 545 007a 5000     		lsls	r0, r2, #1
 546              	.LVL68:
 141:lvgl/src/draw/lv_img_buf.c **** 
 547              		.loc 1 141 9 is_stmt 1 view .LVU192
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 548              		.loc 1 146 9 view .LVU193
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 549              		.loc 1 146 39 is_stmt 0 view .LVU194
 550 007c DCF80020 		ldr	r2, [ip]
 551 0080 C2F38A22 		ubfx	r2, r2, #10, #11
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 552              		.loc 1 146 42 view .LVU195
 553 0084 0332     		adds	r2, r2, #3
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 554              		.loc 1 146 47 view .LVU196
 555 0086 9210     		asrs	r2, r2, #2
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 556              		.loc 1 146 53 view .LVU197
 557 0088 04FB02F2 		mul	r2, r4, r2
 146:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 558              		.loc 1 146 57 view .LVU198
 559 008c 02EBA101 		add	r1, r2, r1, asr #2
 560              	.LVL69:
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 561              		.loc 1 147 9 is_stmt 1 view .LVU199
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 562              		.loc 1 147 33 is_stmt 0 view .LVU200
 563 0090 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 564              		.loc 1 147 49 view .LVU201
 565 0092 C0F10602 		rsb	r2, r0, #6
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 566              		.loc 1 147 43 view .LVU202
 567 0096 0321     		movs	r1, #3
 568              	.LVL70:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 32


 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 569              		.loc 1 147 43 view .LVU203
 570 0098 9140     		lsls	r1, r1, r2
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 571              		.loc 1 147 38 view .LVU204
 572 009a 0B40     		ands	r3, r3, r1
 147:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 573              		.loc 1 147 58 view .LVU205
 574 009c 1341     		asrs	r3, r3, r2
 575              	.LVL71:
 148:lvgl/src/draw/lv_img_buf.c ****     }
 576              		.loc 1 148 9 is_stmt 1 view .LVU206
 148:lvgl/src/draw/lv_img_buf.c ****     }
 577              		.loc 1 148 25 is_stmt 0 view .LVU207
 578 009e 04AA     		add	r2, sp, #16
 579 00a0 52FA83F3 		uxtab	r3, r2, r3
 580              	.LVL72:
 148:lvgl/src/draw/lv_img_buf.c ****     }
 581              		.loc 1 148 25 view .LVU208
 582 00a4 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 583              	.LVL73:
 148:lvgl/src/draw/lv_img_buf.c ****     }
 584              		.loc 1 148 25 view .LVU209
 585 00a8 BEE7     		b	.L18
 586              	.LVL74:
 587              	.L29:
 148:lvgl/src/draw/lv_img_buf.c ****     }
 588              		.loc 1 148 25 view .LVU210
 589              	.LBE60:
 590              	.LBB61:
 151:lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 591              		.loc 1 151 9 is_stmt 1 view .LVU211
 151:lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 592              		.loc 1 151 23 is_stmt 0 view .LVU212
 593 00aa 134B     		ldr	r3, .L31+4
 594 00ac 0FCB     		ldm	r3, {r0, r1, r2, r3}
 595              	.LVL75:
 151:lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 596              		.loc 1 151 23 view .LVU213
 597 00ae 04AE     		add	r6, sp, #16
 598 00b0 06E90F00 		stmdb	r6, {r0, r1, r2, r3}
 155:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 599              		.loc 1 155 9 is_stmt 1 view .LVU214
 155:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 600              		.loc 1 155 17 is_stmt 0 view .LVU215
 601 00b4 0EF00102 		and	r2, lr, #1
 602 00b8 9000     		lsls	r0, r2, #2
 603              	.LVL76:
 156:lvgl/src/draw/lv_img_buf.c **** 
 604              		.loc 1 156 9 is_stmt 1 view .LVU216
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 605              		.loc 1 161 9 view .LVU217
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 606              		.loc 1 161 39 is_stmt 0 view .LVU218
 607 00ba DCF80020 		ldr	r2, [ip]
 608 00be C2F38A22 		ubfx	r2, r2, #10, #11
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 33


 609              		.loc 1 161 42 view .LVU219
 610 00c2 0132     		adds	r2, r2, #1
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 611              		.loc 1 161 47 view .LVU220
 612 00c4 5210     		asrs	r2, r2, #1
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 613              		.loc 1 161 53 view .LVU221
 614 00c6 04FB02F2 		mul	r2, r4, r2
 161:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 615              		.loc 1 161 57 view .LVU222
 616 00ca 02EB6E01 		add	r1, r2, lr, asr #1
 617              	.LVL77:
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 618              		.loc 1 162 9 is_stmt 1 view .LVU223
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 619              		.loc 1 162 33 is_stmt 0 view .LVU224
 620 00ce 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 621              		.loc 1 162 51 view .LVU225
 622 00d0 C0F10402 		rsb	r2, r0, #4
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 623              		.loc 1 162 45 view .LVU226
 624 00d4 0F21     		movs	r1, #15
 625              	.LVL78:
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 626              		.loc 1 162 45 view .LVU227
 627 00d6 9140     		lsls	r1, r1, r2
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 628              		.loc 1 162 38 view .LVU228
 629 00d8 0B40     		ands	r3, r3, r1
 162:lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 630              		.loc 1 162 60 view .LVU229
 631 00da 1341     		asrs	r3, r3, r2
 632              	.LVL79:
 163:lvgl/src/draw/lv_img_buf.c ****     }
 633              		.loc 1 163 9 is_stmt 1 view .LVU230
 163:lvgl/src/draw/lv_img_buf.c ****     }
 634              		.loc 1 163 25 is_stmt 0 view .LVU231
 635 00dc 56FA83F3 		uxtab	r3, r6, r3
 636              	.LVL80:
 163:lvgl/src/draw/lv_img_buf.c ****     }
 637              		.loc 1 163 25 view .LVU232
 638 00e0 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 639              	.LVL81:
 163:lvgl/src/draw/lv_img_buf.c ****     }
 640              		.loc 1 163 25 view .LVU233
 641 00e4 A0E7     		b	.L18
 642              	.LVL82:
 643              	.L30:
 163:lvgl/src/draw/lv_img_buf.c ****     }
 644              		.loc 1 163 25 view .LVU234
 645              	.LBE61:
 646              	.LBB62:
 166:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 647              		.loc 1 166 9 is_stmt 1 view .LVU235
 166:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 648              		.loc 1 166 34 is_stmt 0 view .LVU236
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 34


 649 00e6 0268     		ldr	r2, [r0]
 650              	.LVL83:
 166:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 651              		.loc 1 166 34 view .LVU237
 652 00e8 C2F38A22 		ubfx	r2, r2, #10, #11
 166:lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 653              		.loc 1 166 41 view .LVU238
 654 00ec 02FB0412 		mla	r2, r2, r4, r1
 655              	.LVL84:
 167:lvgl/src/draw/lv_img_buf.c ****     }
 656              		.loc 1 167 9 is_stmt 1 view .LVU239
 167:lvgl/src/draw/lv_img_buf.c ****     }
 657              		.loc 1 167 22 is_stmt 0 view .LVU240
 658 00f0 A85C     		ldrb	r0, [r5, r2]	@ zero_extendqisi2
 659              	.LVL85:
 167:lvgl/src/draw/lv_img_buf.c ****     }
 660              		.loc 1 167 22 view .LVU241
 661 00f2 99E7     		b	.L18
 662              	.L32:
 663              		.align	2
 664              	.L31:
 665 00f4 0055AAFF 		.word	-5614336
 666 00f8 00000000 		.word	.LANCHOR0
 667              	.LBE62:
 668              		.cfi_endproc
 669              	.LFE49:
 671              		.section	.text.lv_img_buf_set_px_alpha,"ax",%progbits
 672              		.align	1
 673              		.global	lv_img_buf_set_px_alpha
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	lv_img_buf_set_px_alpha:
 680              	.LVL86:
 681              	.LFB50:
 172:lvgl/src/draw/lv_img_buf.c **** 
 173:lvgl/src/draw/lv_img_buf.c **** /**
 174:lvgl/src/draw/lv_img_buf.c ****  * Set the alpha value of a pixel of an image. The color won't be affected
 175:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 176:lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 177:lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 178:lvgl/src/draw/lv_img_buf.c ****  * @param opa the desired opacity
 179:lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 180:lvgl/src/draw/lv_img_buf.c ****  */
 181:lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)
 182:lvgl/src/draw/lv_img_buf.c **** {
 682              		.loc 1 182 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		.loc 1 182 1 is_stmt 0 view .LVU243
 687 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 688              	.LCFI8:
 689              		.cfi_def_cfa_offset 24
 690              		.cfi_offset 4, -24
 691              		.cfi_offset 5, -20
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 35


 692              		.cfi_offset 6, -16
 693              		.cfi_offset 7, -12
 694              		.cfi_offset 8, -8
 695              		.cfi_offset 14, -4
 696 0004 0546     		mov	r5, r0
 697 0006 0E46     		mov	r6, r1
 698 0008 1746     		mov	r7, r2
 699 000a 1C46     		mov	r4, r3
 183:lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 700              		.loc 1 183 5 is_stmt 1 view .LVU244
 701              		.loc 1 183 15 is_stmt 0 view .LVU245
 702 000c D0F80880 		ldr	r8, [r0, #8]
 703              	.LVL87:
 184:lvgl/src/draw/lv_img_buf.c **** 
 185:lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 704              		.loc 1 185 5 is_stmt 1 view .LVU246
 705              		.loc 1 185 23 is_stmt 0 view .LVU247
 706 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 707              	.LVL88:
 708              		.loc 1 185 23 view .LVU248
 709 0012 03F01F03 		and	r3, r3, #31
 710              		.loc 1 185 7 view .LVU249
 711 0016 052B     		cmp	r3, #5
 712 0018 0FD0     		beq	.L40
 186:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size          = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 187:lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 188:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 189:lvgl/src/draw/lv_img_buf.c ****     }
 190:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 713              		.loc 1 190 10 is_stmt 1 view .LVU250
 714              		.loc 1 190 12 is_stmt 0 view .LVU251
 715 001a 0B2B     		cmp	r3, #11
 716 001c 20D0     		beq	.L41
 191:lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 7; /*opa -> [0,1]*/
 192:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 193:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 194:lvgl/src/draw/lv_img_buf.c **** 
 195:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 196:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 197:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 198:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 200:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 201:lvgl/src/draw/lv_img_buf.c ****     }
 202:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 717              		.loc 1 202 10 is_stmt 1 view .LVU252
 718              		.loc 1 202 12 is_stmt 0 view .LVU253
 719 001e 0C2B     		cmp	r3, #12
 720 0020 3BD0     		beq	.L42
 203:lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 6; /*opa -> [0,3]*/
 204:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 205:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 206:lvgl/src/draw/lv_img_buf.c **** 
 207:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 208:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 209:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4 ,8, 12 ...*/
 210:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 36


 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 212:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 213:lvgl/src/draw/lv_img_buf.c ****     }
 214:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 721              		.loc 1 214 10 is_stmt 1 view .LVU254
 722              		.loc 1 214 12 is_stmt 0 view .LVU255
 723 0022 0D2B     		cmp	r3, #13
 724 0024 56D0     		beq	.L43
 215:lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 4; /*opa -> [0,15]*/
 216:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 217:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 218:lvgl/src/draw/lv_img_buf.c **** 
 219:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 220:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 221:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 222:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 224:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 225:lvgl/src/draw/lv_img_buf.c ****     }
 226:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 725              		.loc 1 226 10 is_stmt 1 view .LVU256
 726              		.loc 1 226 12 is_stmt 0 view .LVU257
 727 0026 0E2B     		cmp	r3, #14
 728 0028 35D1     		bne	.L33
 729              	.LBB63:
 227:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 730              		.loc 1 227 9 is_stmt 1 view .LVU258
 731              		.loc 1 227 34 is_stmt 0 view .LVU259
 732 002a 0268     		ldr	r2, [r0]
 733              	.LVL89:
 734              		.loc 1 227 34 view .LVU260
 735 002c C2F38A22 		ubfx	r2, r2, #10, #11
 736              		.loc 1 227 41 view .LVU261
 737 0030 02FB0716 		mla	r6, r2, r7, r1
 738              	.LVL90:
 228:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = opa;
 739              		.loc 1 228 9 is_stmt 1 view .LVU262
 740              		.loc 1 228 21 is_stmt 0 view .LVU263
 741 0034 08F80640 		strb	r4, [r8, r6]
 742              	.LBE63:
 229:lvgl/src/draw/lv_img_buf.c ****     }
 230:lvgl/src/draw/lv_img_buf.c **** }
 743              		.loc 1 230 1 view .LVU264
 744 0038 2DE0     		b	.L33
 745              	.LVL91:
 746              	.L40:
 747              	.LBB64:
 186:lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 748              		.loc 1 186 9 is_stmt 1 view .LVU265
 186:lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 749              		.loc 1 186 36 is_stmt 0 view .LVU266
 750 003a 1846     		mov	r0, r3
 751              	.LVL92:
 186:lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 752              		.loc 1 186 36 view .LVU267
 753 003c FFF7FEFF 		bl	lv_img_cf_get_px_size
 754              	.LVL93:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 37


 186:lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 755              		.loc 1 186 17 view .LVU268
 756 0040 C0F3C700 		ubfx	r0, r0, #3, #8
 757              	.LVL94:
 187:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 758              		.loc 1 187 9 is_stmt 1 view .LVU269
 187:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 759              		.loc 1 187 47 is_stmt 0 view .LVU270
 760 0044 2A68     		ldr	r2, [r5]
 761 0046 C2F38A22 		ubfx	r2, r2, #10, #11
 187:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 762              		.loc 1 187 50 view .LVU271
 763 004a 02FB07F7 		mul	r7, r2, r7
 187:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 764              		.loc 1 187 68 view .LVU272
 765 004e 00FB06F6 		mul	r6, r0, r6
 187:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 766              		.loc 1 187 64 view .LVU273
 767 0052 00FB0767 		mla	r7, r0, r7, r6
 768              	.LVL95:
 188:lvgl/src/draw/lv_img_buf.c ****     }
 769              		.loc 1 188 9 is_stmt 1 view .LVU274
 188:lvgl/src/draw/lv_img_buf.c ****     }
 770              		.loc 1 188 19 is_stmt 0 view .LVU275
 771 0056 3844     		add	r0, r0, r7
 772              	.LVL96:
 188:lvgl/src/draw/lv_img_buf.c ****     }
 773              		.loc 1 188 15 view .LVU276
 774 0058 0138     		subs	r0, r0, #1
 188:lvgl/src/draw/lv_img_buf.c ****     }
 775              		.loc 1 188 34 view .LVU277
 776 005a 08F80040 		strb	r4, [r8, r0]
 777              	.LBE64:
 778 005e 1AE0     		b	.L33
 779              	.LVL97:
 780              	.L41:
 781              	.LBB65:
 191:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 782              		.loc 1 191 9 is_stmt 1 view .LVU278
 191:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 783              		.loc 1 191 21 is_stmt 0 view .LVU279
 784 0060 E409     		lsrs	r4, r4, #7
 785              	.LVL98:
 192:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 786              		.loc 1 192 9 is_stmt 1 view .LVU280
 192:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 787              		.loc 1 192 17 is_stmt 0 view .LVU281
 788 0062 01F00701 		and	r1, r1, #7
 789              	.LVL99:
 193:lvgl/src/draw/lv_img_buf.c **** 
 790              		.loc 1 193 9 is_stmt 1 view .LVU282
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 791              		.loc 1 198 9 view .LVU283
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 792              		.loc 1 198 36 is_stmt 0 view .LVU284
 793 0066 0268     		ldr	r2, [r0]
 794              	.LVL100:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 38


 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 795              		.loc 1 198 36 view .LVU285
 796 0068 C2F38A22 		ubfx	r2, r2, #10, #11
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 797              		.loc 1 198 39 view .LVU286
 798 006c 0732     		adds	r2, r2, #7
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 799              		.loc 1 198 44 view .LVU287
 800 006e D210     		asrs	r2, r2, #3
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 801              		.loc 1 198 50 view .LVU288
 802 0070 02FB07F7 		mul	r7, r2, r7
 198:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 803              		.loc 1 198 54 view .LVU289
 804 0074 07EBE606 		add	r6, r7, r6, asr #3
 805              	.LVL101:
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 806              		.loc 1 199 9 is_stmt 1 view .LVU290
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 807              		.loc 1 199 29 is_stmt 0 view .LVU291
 808 0078 18F90630 		ldrsb	r3, [r8, r6]
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 809              		.loc 1 199 46 view .LVU292
 810 007c C1F10702 		rsb	r2, r1, #7
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 811              		.loc 1 199 40 view .LVU293
 812 0080 0121     		movs	r1, #1
 813              	.LVL102:
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 814              		.loc 1 199 40 view .LVU294
 815 0082 9140     		lsls	r1, r1, r2
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 816              		.loc 1 199 34 view .LVU295
 817 0084 23EA0101 		bic	r1, r3, r1
 818 0088 48B2     		sxtb	r0, r1
 819              	.LVL103:
 199:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 820              		.loc 1 199 21 view .LVU296
 821 008a 08F80610 		strb	r1, [r8, r6]
 200:lvgl/src/draw/lv_img_buf.c ****     }
 822              		.loc 1 200 9 is_stmt 1 view .LVU297
 200:lvgl/src/draw/lv_img_buf.c ****     }
 823              		.loc 1 200 49 is_stmt 0 view .LVU298
 824 008e 9440     		lsls	r4, r4, r2
 825              	.LVL104:
 200:lvgl/src/draw/lv_img_buf.c ****     }
 826              		.loc 1 200 34 view .LVU299
 827 0090 0443     		orrs	r4, r4, r0
 200:lvgl/src/draw/lv_img_buf.c ****     }
 828              		.loc 1 200 21 view .LVU300
 829 0092 08F80640 		strb	r4, [r8, r6]
 830              	.LVL105:
 831              	.L33:
 200:lvgl/src/draw/lv_img_buf.c ****     }
 832              		.loc 1 200 21 view .LVU301
 833              	.LBE65:
 834              		.loc 1 230 1 view .LVU302
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 39


 835 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 836              	.LVL106:
 837              	.L42:
 838              	.LBB66:
 203:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 839              		.loc 1 203 9 is_stmt 1 view .LVU303
 203:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 840              		.loc 1 203 21 is_stmt 0 view .LVU304
 841 009a A409     		lsrs	r4, r4, #6
 842              	.LVL107:
 204:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 843              		.loc 1 204 9 is_stmt 1 view .LVU305
 204:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 844              		.loc 1 204 17 is_stmt 0 view .LVU306
 845 009c 01F00302 		and	r2, r1, #3
 846              	.LVL108:
 204:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 847              		.loc 1 204 17 view .LVU307
 848 00a0 5100     		lsls	r1, r2, #1
 849              	.LVL109:
 205:lvgl/src/draw/lv_img_buf.c **** 
 850              		.loc 1 205 9 is_stmt 1 view .LVU308
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 851              		.loc 1 210 9 view .LVU309
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 852              		.loc 1 210 36 is_stmt 0 view .LVU310
 853 00a2 0268     		ldr	r2, [r0]
 854 00a4 C2F38A22 		ubfx	r2, r2, #10, #11
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 855              		.loc 1 210 39 view .LVU311
 856 00a8 0332     		adds	r2, r2, #3
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 857              		.loc 1 210 44 view .LVU312
 858 00aa 9210     		asrs	r2, r2, #2
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 859              		.loc 1 210 50 view .LVU313
 860 00ac 02FB07F7 		mul	r7, r2, r7
 210:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 861              		.loc 1 210 54 view .LVU314
 862 00b0 07EBA606 		add	r6, r7, r6, asr #2
 863              	.LVL110:
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 864              		.loc 1 211 9 is_stmt 1 view .LVU315
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 865              		.loc 1 211 29 is_stmt 0 view .LVU316
 866 00b4 18F90630 		ldrsb	r3, [r8, r6]
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 867              		.loc 1 211 46 view .LVU317
 868 00b8 C1F10602 		rsb	r2, r1, #6
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 869              		.loc 1 211 40 view .LVU318
 870 00bc 0321     		movs	r1, #3
 871              	.LVL111:
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 872              		.loc 1 211 40 view .LVU319
 873 00be 9140     		lsls	r1, r1, r2
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 40


 874              		.loc 1 211 34 view .LVU320
 875 00c0 23EA0103 		bic	r3, r3, r1
 876 00c4 59B2     		sxtb	r1, r3
 211:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 877              		.loc 1 211 21 view .LVU321
 878 00c6 08F80630 		strb	r3, [r8, r6]
 212:lvgl/src/draw/lv_img_buf.c ****     }
 879              		.loc 1 212 9 is_stmt 1 view .LVU322
 212:lvgl/src/draw/lv_img_buf.c ****     }
 880              		.loc 1 212 49 is_stmt 0 view .LVU323
 881 00ca 9440     		lsls	r4, r4, r2
 882              	.LVL112:
 212:lvgl/src/draw/lv_img_buf.c ****     }
 883              		.loc 1 212 34 view .LVU324
 884 00cc 0C43     		orrs	r4, r4, r1
 212:lvgl/src/draw/lv_img_buf.c ****     }
 885              		.loc 1 212 21 view .LVU325
 886 00ce 08F80640 		strb	r4, [r8, r6]
 887              	.LBE66:
 888 00d2 E0E7     		b	.L33
 889              	.LVL113:
 890              	.L43:
 891              	.LBB67:
 215:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 892              		.loc 1 215 9 is_stmt 1 view .LVU326
 215:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 893              		.loc 1 215 21 is_stmt 0 view .LVU327
 894 00d4 2409     		lsrs	r4, r4, #4
 895              	.LVL114:
 216:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 896              		.loc 1 216 9 is_stmt 1 view .LVU328
 216:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 897              		.loc 1 216 17 is_stmt 0 view .LVU329
 898 00d6 01F00102 		and	r2, r1, #1
 899              	.LVL115:
 216:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 900              		.loc 1 216 17 view .LVU330
 901 00da 9100     		lsls	r1, r2, #2
 902              	.LVL116:
 217:lvgl/src/draw/lv_img_buf.c **** 
 903              		.loc 1 217 9 is_stmt 1 view .LVU331
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 904              		.loc 1 222 9 view .LVU332
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 905              		.loc 1 222 36 is_stmt 0 view .LVU333
 906 00dc 0268     		ldr	r2, [r0]
 907 00de C2F38A22 		ubfx	r2, r2, #10, #11
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 908              		.loc 1 222 39 view .LVU334
 909 00e2 0132     		adds	r2, r2, #1
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 910              		.loc 1 222 44 view .LVU335
 911 00e4 5210     		asrs	r2, r2, #1
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 912              		.loc 1 222 50 view .LVU336
 913 00e6 02FB07F7 		mul	r7, r2, r7
 222:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 41


 914              		.loc 1 222 54 view .LVU337
 915 00ea 07EB6606 		add	r6, r7, r6, asr #1
 916              	.LVL117:
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 917              		.loc 1 223 9 is_stmt 1 view .LVU338
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 918              		.loc 1 223 29 is_stmt 0 view .LVU339
 919 00ee 18F90630 		ldrsb	r3, [r8, r6]
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 920              		.loc 1 223 48 view .LVU340
 921 00f2 C1F10402 		rsb	r2, r1, #4
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 922              		.loc 1 223 42 view .LVU341
 923 00f6 0F21     		movs	r1, #15
 924              	.LVL118:
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 925              		.loc 1 223 42 view .LVU342
 926 00f8 9140     		lsls	r1, r1, r2
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 927              		.loc 1 223 34 view .LVU343
 928 00fa 23EA0103 		bic	r3, r3, r1
 929 00fe 59B2     		sxtb	r1, r3
 223:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 930              		.loc 1 223 21 view .LVU344
 931 0100 08F80630 		strb	r3, [r8, r6]
 224:lvgl/src/draw/lv_img_buf.c ****     }
 932              		.loc 1 224 9 is_stmt 1 view .LVU345
 224:lvgl/src/draw/lv_img_buf.c ****     }
 933              		.loc 1 224 49 is_stmt 0 view .LVU346
 934 0104 9440     		lsls	r4, r4, r2
 935              	.LVL119:
 224:lvgl/src/draw/lv_img_buf.c ****     }
 936              		.loc 1 224 34 view .LVU347
 937 0106 0C43     		orrs	r4, r4, r1
 224:lvgl/src/draw/lv_img_buf.c ****     }
 938              		.loc 1 224 21 view .LVU348
 939 0108 08F80640 		strb	r4, [r8, r6]
 940              	.LBE67:
 941 010c C3E7     		b	.L33
 942              		.cfi_endproc
 943              	.LFE50:
 945              		.section	.text.lv_img_buf_set_px_color,"ax",%progbits
 946              		.align	1
 947              		.global	lv_img_buf_set_px_color
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv4-sp-d16
 953              	lv_img_buf_set_px_color:
 954              	.LVL120:
 955              	.LFB51:
 231:lvgl/src/draw/lv_img_buf.c **** 
 232:lvgl/src/draw/lv_img_buf.c **** /**
 233:lvgl/src/draw/lv_img_buf.c ****  * Set the color of a pixel of an image. The alpha channel won't be affected.
 234:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 235:lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 236:lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 42


 237:lvgl/src/draw/lv_img_buf.c ****  * @param c color of the point
 238:lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 239:lvgl/src/draw/lv_img_buf.c ****  */
 240:lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)
 241:lvgl/src/draw/lv_img_buf.c **** {
 956              		.loc 1 241 1 is_stmt 1 view -0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 8
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              		.loc 1 241 1 is_stmt 0 view .LVU350
 961 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 962              	.LCFI9:
 963              		.cfi_def_cfa_offset 20
 964              		.cfi_offset 4, -20
 965              		.cfi_offset 5, -16
 966              		.cfi_offset 6, -12
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 83B0     		sub	sp, sp, #12
 970              	.LCFI10:
 971              		.cfi_def_cfa_offset 32
 972 0004 0546     		mov	r5, r0
 973 0006 0C46     		mov	r4, r1
 974 0008 1746     		mov	r7, r2
 975 000a 0193     		str	r3, [sp, #4]
 242:lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 976              		.loc 1 242 5 is_stmt 1 view .LVU351
 977              		.loc 1 242 15 is_stmt 0 view .LVU352
 978 000c 8668     		ldr	r6, [r0, #8]
 979              	.LVL121:
 243:lvgl/src/draw/lv_img_buf.c **** 
 244:lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
 980              		.loc 1 244 5 is_stmt 1 view .LVU353
 981              		.loc 1 244 23 is_stmt 0 view .LVU354
 982 000e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 983              	.LVL122:
 984              		.loc 1 244 23 view .LVU355
 985 0010 01F01F01 		and	r1, r1, #31
 986              		.loc 1 244 7 view .LVU356
 987 0014 0429     		cmp	r1, #4
 988 0016 15D0     		beq	.L45
 989              		.loc 1 244 47 discriminator 1 view .LVU357
 990 0018 0629     		cmp	r1, #6
 991 001a 13D0     		beq	.L45
 245:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 246:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 247:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 248:lvgl/src/draw/lv_img_buf.c ****     }
 249:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 992              		.loc 1 249 10 is_stmt 1 view .LVU358
 993              		.loc 1 249 12 is_stmt 0 view .LVU359
 994 001c 0529     		cmp	r1, #5
 995 001e 2DD0     		beq	.L57
 250:lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 251:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 252:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 253:lvgl/src/draw/lv_img_buf.c ****     }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 43


 254:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
 996              		.loc 1 254 10 is_stmt 1 view .LVU360
 997              		.loc 1 254 12 is_stmt 0 view .LVU361
 998 0020 0729     		cmp	r1, #7
 999 0022 47D0     		beq	.L58
 255:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 2; /*Skip the palette*/
 256:lvgl/src/draw/lv_img_buf.c **** 
 257:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 258:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 259:lvgl/src/draw/lv_img_buf.c **** 
 260:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 261:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 262:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 263:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 265:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 266:lvgl/src/draw/lv_img_buf.c ****     }
 267:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
 1000              		.loc 1 267 10 is_stmt 1 view .LVU362
 1001              		.loc 1 267 12 is_stmt 0 view .LVU363
 1002 0024 0829     		cmp	r1, #8
 1003 0026 62D0     		beq	.L59
 268:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 4; /*Skip the palette*/
 269:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 270:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 271:lvgl/src/draw/lv_img_buf.c **** 
 272:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 273:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
 274:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4, 8 ,12 ...*/
 275:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
 276:lvgl/src/draw/lv_img_buf.c **** 
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] & ~(3 << (6 - bit));
 278:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 279:lvgl/src/draw/lv_img_buf.c ****     }
 280:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
 1004              		.loc 1 280 10 is_stmt 1 view .LVU364
 1005              		.loc 1 280 12 is_stmt 0 view .LVU365
 1006 0028 0929     		cmp	r1, #9
 1007 002a 7FD0     		beq	.L60
 281:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 16; /*Skip the palette*/
 282:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 283:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 284:lvgl/src/draw/lv_img_buf.c **** 
 285:lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 286:lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
 287:lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 288:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 290:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 291:lvgl/src/draw/lv_img_buf.c ****     }
 292:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1008              		.loc 1 292 10 is_stmt 1 view .LVU366
 1009              		.loc 1 292 12 is_stmt 0 view .LVU367
 1010 002c 0A29     		cmp	r1, #10
 1011 002e 23D1     		bne	.L44
 1012              	.LBB68:
 293:lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 256; /*Skip the palette*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 44


 1013              		.loc 1 293 9 is_stmt 1 view .LVU368
 1014              	.LVL123:
 294:lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 1015              		.loc 1 294 9 view .LVU369
 1016              		.loc 1 294 34 is_stmt 0 view .LVU370
 1017 0030 0368     		ldr	r3, [r0]
 1018 0032 C3F38A23 		ubfx	r3, r3, #10, #11
 1019              		.loc 1 294 41 view .LVU371
 1020 0036 03FB0243 		mla	r3, r3, r2, r4
 1021              	.LVL124:
 295:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = c.full;
 1022              		.loc 1 295 9 is_stmt 1 view .LVU372
 1023              		.loc 1 295 15 is_stmt 0 view .LVU373
 1024 003a 03F58063 		add	r3, r3, #1024
 1025              	.LVL125:
 1026              		.loc 1 295 21 view .LVU374
 1027 003e 019A     		ldr	r2, [sp, #4]
 1028              	.LVL126:
 1029              		.loc 1 295 21 view .LVU375
 1030 0040 F254     		strb	r2, [r6, r3]
 1031              	.LBE68:
 296:lvgl/src/draw/lv_img_buf.c ****     }
 297:lvgl/src/draw/lv_img_buf.c **** }
 1032              		.loc 1 297 1 view .LVU376
 1033 0042 19E0     		b	.L44
 1034              	.LVL127:
 1035              	.L45:
 1036              	.LBB69:
 245:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1037              		.loc 1 245 9 is_stmt 1 view .LVU377
 245:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1038              		.loc 1 245 60 is_stmt 0 view .LVU378
 1039 0044 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1040              	.LVL128:
 245:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1041              		.loc 1 245 27 view .LVU379
 1042 0046 00F01F00 		and	r0, r0, #31
 1043 004a FFF7FEFF 		bl	lv_img_cf_get_px_size
 1044              	.LVL129:
 245:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1045              		.loc 1 245 17 view .LVU380
 1046 004e C0F3C700 		ubfx	r0, r0, #3, #8
 1047              	.LVL130:
 246:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1048              		.loc 1 246 9 is_stmt 1 view .LVU381
 246:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1049              		.loc 1 246 38 is_stmt 0 view .LVU382
 1050 0052 2B68     		ldr	r3, [r5]
 1051 0054 C3F38A23 		ubfx	r3, r3, #10, #11
 246:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1052              		.loc 1 246 41 view .LVU383
 1053 0058 03FB07F7 		mul	r7, r3, r7
 246:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1054              		.loc 1 246 59 view .LVU384
 1055 005c 00FB04F3 		mul	r3, r0, r4
 246:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1056              		.loc 1 246 55 view .LVU385
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 45


 1057 0060 00FB0733 		mla	r3, r0, r7, r3
 1058              	.LVL131:
 247:lvgl/src/draw/lv_img_buf.c ****     }
 1059              		.loc 1 247 9 is_stmt 1 view .LVU386
 247:lvgl/src/draw/lv_img_buf.c ****     }
 1060              		.loc 1 247 25 is_stmt 0 view .LVU387
 1061 0064 3344     		add	r3, r3, r6
 1062              	.LVL132:
 1063              	.LBB70:
 1064              	.LBI70:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 1065              		.loc 3 201 44 is_stmt 1 view .LVU388
 1066              	.LBB71:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1067              		.loc 3 203 5 view .LVU389
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1068              		.loc 3 204 5 view .LVU390
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1069              		.loc 3 206 5 view .LVU391
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1070              		.loc 3 204 21 is_stmt 0 view .LVU392
 1071 0066 01AA     		add	r2, sp, #4
 1072              	.LVL133:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1073              		.loc 3 206 10 view .LVU393
 1074 0068 04E0     		b	.L47
 1075              	.LVL134:
 1076              	.L48:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1077              		.loc 3 207 9 is_stmt 1 view .LVU394
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1078              		.loc 3 207 15 is_stmt 0 view .LVU395
 1079 006a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 1080              	.LVL135:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1081              		.loc 3 207 13 view .LVU396
 1082 006e 03F8011B 		strb	r1, [r3], #1
 1083              	.LVL136:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1084              		.loc 3 208 9 is_stmt 1 view .LVU397
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1085              		.loc 3 209 9 view .LVU398
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1086              		.loc 3 210 9 view .LVU399
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1087              		.loc 3 210 12 is_stmt 0 view .LVU400
 1088 0072 0138     		subs	r0, r0, #1
 1089              	.LVL137:
 1090              	.L47:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1091              		.loc 3 206 10 is_stmt 1 view .LVU401
 1092 0074 0028     		cmp	r0, #0
 1093 0076 F8D1     		bne	.L48
 1094              	.LVL138:
 1095              	.L44:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1096              		.loc 3 206 10 is_stmt 0 view .LVU402
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 46


 1097              	.LBE71:
 1098              	.LBE70:
 1099              	.LBE69:
 1100              		.loc 1 297 1 view .LVU403
 1101 0078 03B0     		add	sp, sp, #12
 1102              	.LCFI11:
 1103              		.cfi_remember_state
 1104              		.cfi_def_cfa_offset 20
 1105              		@ sp needed
 1106 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 1107              	.LVL139:
 1108              	.L57:
 1109              	.LCFI12:
 1110              		.cfi_restore_state
 1111              	.LBB72:
 250:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1112              		.loc 1 250 9 is_stmt 1 view .LVU404
 250:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1113              		.loc 1 250 60 is_stmt 0 view .LVU405
 1114 007c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1115              	.LVL140:
 250:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1116              		.loc 1 250 27 view .LVU406
 1117 007e 00F01F00 		and	r0, r0, #31
 1118 0082 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1119              	.LVL141:
 250:lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1120              		.loc 1 250 17 view .LVU407
 1121 0086 C0F3C702 		ubfx	r2, r0, #3, #8
 1122              	.LVL142:
 251:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1123              		.loc 1 251 9 is_stmt 1 view .LVU408
 251:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1124              		.loc 1 251 38 is_stmt 0 view .LVU409
 1125 008a 2B68     		ldr	r3, [r5]
 1126 008c C3F38A23 		ubfx	r3, r3, #10, #11
 251:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1127              		.loc 1 251 41 view .LVU410
 1128 0090 03FB07F7 		mul	r7, r3, r7
 251:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1129              		.loc 1 251 59 view .LVU411
 1130 0094 02FB04F3 		mul	r3, r2, r4
 251:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1131              		.loc 1 251 55 view .LVU412
 1132 0098 02FB0733 		mla	r3, r2, r7, r3
 1133              	.LVL143:
 252:lvgl/src/draw/lv_img_buf.c ****     }
 1134              		.loc 1 252 9 is_stmt 1 view .LVU413
 252:lvgl/src/draw/lv_img_buf.c ****     }
 1135              		.loc 1 252 25 is_stmt 0 view .LVU414
 1136 009c 3344     		add	r3, r3, r6
 1137              	.LVL144:
 252:lvgl/src/draw/lv_img_buf.c ****     }
 1138              		.loc 1 252 50 view .LVU415
 1139 009e 013A     		subs	r2, r2, #1
 1140              	.LVL145:
 1141              	.LBB73:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 47


 1142              	.LBI73:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 1143              		.loc 3 201 44 is_stmt 1 view .LVU416
 1144              	.LBB74:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1145              		.loc 3 203 5 view .LVU417
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1146              		.loc 3 204 5 view .LVU418
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1147              		.loc 3 206 5 view .LVU419
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1148              		.loc 3 204 21 is_stmt 0 view .LVU420
 1149 00a0 01A9     		add	r1, sp, #4
 1150              	.LVL146:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1151              		.loc 3 206 10 view .LVU421
 1152 00a2 04E0     		b	.L51
 1153              	.LVL147:
 1154              	.L52:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1155              		.loc 3 207 9 is_stmt 1 view .LVU422
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1156              		.loc 3 207 15 is_stmt 0 view .LVU423
 1157 00a4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1158              	.LVL148:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1159              		.loc 3 207 13 view .LVU424
 1160 00a8 03F8010B 		strb	r0, [r3], #1
 1161              	.LVL149:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1162              		.loc 3 208 9 is_stmt 1 view .LVU425
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1163              		.loc 3 209 9 view .LVU426
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1164              		.loc 3 210 9 view .LVU427
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1165              		.loc 3 210 12 is_stmt 0 view .LVU428
 1166 00ac 013A     		subs	r2, r2, #1
 1167              	.LVL150:
 1168              	.L51:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1169              		.loc 3 206 10 is_stmt 1 view .LVU429
 1170 00ae 002A     		cmp	r2, #0
 1171 00b0 F8D1     		bne	.L52
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1172              		.loc 3 206 10 is_stmt 0 view .LVU430
 1173 00b2 E1E7     		b	.L44
 1174              	.LVL151:
 1175              	.L58:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1176              		.loc 3 206 10 view .LVU431
 1177              	.LBE74:
 1178              	.LBE73:
 1179              	.LBE72:
 1180              	.LBB75:
 255:lvgl/src/draw/lv_img_buf.c **** 
 1181              		.loc 1 255 9 is_stmt 1 view .LVU432
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 48


 255:lvgl/src/draw/lv_img_buf.c **** 
 1182              		.loc 1 255 16 is_stmt 0 view .LVU433
 1183 00b4 06F10803 		add	r3, r6, #8
 1184              	.LVL152:
 257:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 1185              		.loc 1 257 9 is_stmt 1 view .LVU434
 257:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 1186              		.loc 1 257 17 is_stmt 0 view .LVU435
 1187 00b8 04F00701 		and	r1, r4, #7
 1188              	.LVL153:
 258:lvgl/src/draw/lv_img_buf.c **** 
 1189              		.loc 1 258 9 is_stmt 1 view .LVU436
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1190              		.loc 1 263 9 view .LVU437
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1191              		.loc 1 263 36 is_stmt 0 view .LVU438
 1192 00bc 0268     		ldr	r2, [r0]
 1193              	.LVL154:
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1194              		.loc 1 263 36 view .LVU439
 1195 00be C2F38A22 		ubfx	r2, r2, #10, #11
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1196              		.loc 1 263 39 view .LVU440
 1197 00c2 0732     		adds	r2, r2, #7
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1198              		.loc 1 263 44 view .LVU441
 1199 00c4 D210     		asrs	r2, r2, #3
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1200              		.loc 1 263 50 view .LVU442
 1201 00c6 02FB07F7 		mul	r7, r2, r7
 263:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1202              		.loc 1 263 54 view .LVU443
 1203 00ca 07EBE404 		add	r4, r7, r4, asr #3
 1204              	.LVL155:
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1205              		.loc 1 264 9 is_stmt 1 view .LVU444
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1206              		.loc 1 264 29 is_stmt 0 view .LVU445
 1207 00ce 1A57     		ldrsb	r2, [r3, r4]
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1208              		.loc 1 264 46 view .LVU446
 1209 00d0 C1F10700 		rsb	r0, r1, #7
 1210              	.LVL156:
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1211              		.loc 1 264 40 view .LVU447
 1212 00d4 0121     		movs	r1, #1
 1213              	.LVL157:
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1214              		.loc 1 264 40 view .LVU448
 1215 00d6 8140     		lsls	r1, r1, r0
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1216              		.loc 1 264 34 view .LVU449
 1217 00d8 22EA0102 		bic	r2, r2, r1
 1218 00dc D2B2     		uxtb	r2, r2
 264:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1219              		.loc 1 264 21 view .LVU450
 1220 00de 1A55     		strb	r2, [r3, r4]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 49


 265:lvgl/src/draw/lv_img_buf.c ****     }
 1221              		.loc 1 265 9 is_stmt 1 view .LVU451
 265:lvgl/src/draw/lv_img_buf.c ****     }
 1222              		.loc 1 265 39 is_stmt 0 view .LVU452
 1223 00e0 0199     		ldr	r1, [sp, #4]
 265:lvgl/src/draw/lv_img_buf.c ****     }
 1224              		.loc 1 265 45 view .LVU453
 1225 00e2 01F00101 		and	r1, r1, #1
 265:lvgl/src/draw/lv_img_buf.c ****     }
 1226              		.loc 1 265 52 view .LVU454
 1227 00e6 8140     		lsls	r1, r1, r0
 265:lvgl/src/draw/lv_img_buf.c ****     }
 1228              		.loc 1 265 34 view .LVU455
 1229 00e8 0A43     		orrs	r2, r2, r1
 265:lvgl/src/draw/lv_img_buf.c ****     }
 1230              		.loc 1 265 21 view .LVU456
 1231 00ea 1A55     		strb	r2, [r3, r4]
 1232              	.LBE75:
 1233 00ec C4E7     		b	.L44
 1234              	.LVL158:
 1235              	.L59:
 1236              	.LBB76:
 268:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1237              		.loc 1 268 9 is_stmt 1 view .LVU457
 268:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1238              		.loc 1 268 16 is_stmt 0 view .LVU458
 1239 00ee 06F11003 		add	r3, r6, #16
 1240              	.LVL159:
 269:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 1241              		.loc 1 269 9 is_stmt 1 view .LVU459
 269:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 1242              		.loc 1 269 17 is_stmt 0 view .LVU460
 1243 00f2 04F00301 		and	r1, r4, #3
 1244 00f6 4900     		lsls	r1, r1, #1
 1245              	.LVL160:
 270:lvgl/src/draw/lv_img_buf.c **** 
 1246              		.loc 1 270 9 is_stmt 1 view .LVU461
 275:lvgl/src/draw/lv_img_buf.c **** 
 1247              		.loc 1 275 9 view .LVU462
 275:lvgl/src/draw/lv_img_buf.c **** 
 1248              		.loc 1 275 36 is_stmt 0 view .LVU463
 1249 00f8 0268     		ldr	r2, [r0]
 1250              	.LVL161:
 275:lvgl/src/draw/lv_img_buf.c **** 
 1251              		.loc 1 275 36 view .LVU464
 1252 00fa C2F38A22 		ubfx	r2, r2, #10, #11
 275:lvgl/src/draw/lv_img_buf.c **** 
 1253              		.loc 1 275 39 view .LVU465
 1254 00fe 0332     		adds	r2, r2, #3
 275:lvgl/src/draw/lv_img_buf.c **** 
 1255              		.loc 1 275 44 view .LVU466
 1256 0100 9210     		asrs	r2, r2, #2
 275:lvgl/src/draw/lv_img_buf.c **** 
 1257              		.loc 1 275 50 view .LVU467
 1258 0102 02FB07F7 		mul	r7, r2, r7
 275:lvgl/src/draw/lv_img_buf.c **** 
 1259              		.loc 1 275 54 view .LVU468
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 50


 1260 0106 07EBA404 		add	r4, r7, r4, asr #2
 1261              	.LVL162:
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1262              		.loc 1 277 9 is_stmt 1 view .LVU469
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1263              		.loc 1 277 28 is_stmt 0 view .LVU470
 1264 010a 1A57     		ldrsb	r2, [r3, r4]
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1265              		.loc 1 277 45 view .LVU471
 1266 010c C1F10601 		rsb	r1, r1, #6
 1267              	.LVL163:
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1268              		.loc 1 277 39 view .LVU472
 1269 0110 0320     		movs	r0, #3
 1270              	.LVL164:
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1271              		.loc 1 277 39 view .LVU473
 1272 0112 8840     		lsls	r0, r0, r1
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1273              		.loc 1 277 33 view .LVU474
 1274 0114 22EA0002 		bic	r2, r2, r0
 1275 0118 D2B2     		uxtb	r2, r2
 277:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1276              		.loc 1 277 20 view .LVU475
 1277 011a 1A55     		strb	r2, [r3, r4]
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1278              		.loc 1 278 9 is_stmt 1 view .LVU476
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1279              		.loc 1 278 38 is_stmt 0 view .LVU477
 1280 011c 0198     		ldr	r0, [sp, #4]
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1281              		.loc 1 278 44 view .LVU478
 1282 011e 00F00300 		and	r0, r0, #3
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1283              		.loc 1 278 51 view .LVU479
 1284 0122 00FA01F1 		lsl	r1, r0, r1
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1285              		.loc 1 278 33 view .LVU480
 1286 0126 0A43     		orrs	r2, r2, r1
 278:lvgl/src/draw/lv_img_buf.c ****     }
 1287              		.loc 1 278 20 view .LVU481
 1288 0128 1A55     		strb	r2, [r3, r4]
 1289              	.LBE76:
 1290 012a A5E7     		b	.L44
 1291              	.LVL165:
 1292              	.L60:
 1293              	.LBB77:
 281:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1294              		.loc 1 281 9 is_stmt 1 view .LVU482
 281:lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1295              		.loc 1 281 16 is_stmt 0 view .LVU483
 1296 012c 06F14003 		add	r3, r6, #64
 1297              	.LVL166:
 282:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 1298              		.loc 1 282 9 is_stmt 1 view .LVU484
 282:lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 1299              		.loc 1 282 17 is_stmt 0 view .LVU485
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 51


 1300 0130 04F00101 		and	r1, r4, #1
 1301 0134 8900     		lsls	r1, r1, #2
 1302              	.LVL167:
 283:lvgl/src/draw/lv_img_buf.c **** 
 1303              		.loc 1 283 9 is_stmt 1 view .LVU486
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1304              		.loc 1 288 9 view .LVU487
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1305              		.loc 1 288 36 is_stmt 0 view .LVU488
 1306 0136 0268     		ldr	r2, [r0]
 1307              	.LVL168:
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1308              		.loc 1 288 36 view .LVU489
 1309 0138 C2F38A22 		ubfx	r2, r2, #10, #11
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1310              		.loc 1 288 39 view .LVU490
 1311 013c 0132     		adds	r2, r2, #1
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1312              		.loc 1 288 44 view .LVU491
 1313 013e 5210     		asrs	r2, r2, #1
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1314              		.loc 1 288 50 view .LVU492
 1315 0140 02FB07F7 		mul	r7, r2, r7
 288:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1316              		.loc 1 288 54 view .LVU493
 1317 0144 07EB6404 		add	r4, r7, r4, asr #1
 1318              	.LVL169:
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1319              		.loc 1 289 9 is_stmt 1 view .LVU494
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1320              		.loc 1 289 29 is_stmt 0 view .LVU495
 1321 0148 1A57     		ldrsb	r2, [r3, r4]
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1322              		.loc 1 289 48 view .LVU496
 1323 014a C1F10401 		rsb	r1, r1, #4
 1324              	.LVL170:
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1325              		.loc 1 289 42 view .LVU497
 1326 014e 0F20     		movs	r0, #15
 1327              	.LVL171:
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1328              		.loc 1 289 42 view .LVU498
 1329 0150 8840     		lsls	r0, r0, r1
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1330              		.loc 1 289 34 view .LVU499
 1331 0152 22EA0002 		bic	r2, r2, r0
 1332 0156 D2B2     		uxtb	r2, r2
 289:lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1333              		.loc 1 289 21 view .LVU500
 1334 0158 1A55     		strb	r2, [r3, r4]
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1335              		.loc 1 290 9 is_stmt 1 view .LVU501
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1336              		.loc 1 290 39 is_stmt 0 view .LVU502
 1337 015a 0198     		ldr	r0, [sp, #4]
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1338              		.loc 1 290 45 view .LVU503
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 52


 1339 015c 00F00F00 		and	r0, r0, #15
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1340              		.loc 1 290 52 view .LVU504
 1341 0160 00FA01F1 		lsl	r1, r0, r1
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1342              		.loc 1 290 34 view .LVU505
 1343 0164 0A43     		orrs	r2, r2, r1
 290:lvgl/src/draw/lv_img_buf.c ****     }
 1344              		.loc 1 290 21 view .LVU506
 1345 0166 1A55     		strb	r2, [r3, r4]
 1346              	.LBE77:
 1347 0168 86E7     		b	.L44
 1348              		.cfi_endproc
 1349              	.LFE51:
 1351              		.section	.text.lv_img_buf_set_palette,"ax",%progbits
 1352              		.align	1
 1353              		.global	lv_img_buf_set_palette
 1354              		.syntax unified
 1355              		.thumb
 1356              		.thumb_func
 1357              		.fpu fpv4-sp-d16
 1359              	lv_img_buf_set_palette:
 1360              	.LVL172:
 1361              	.LFB52:
 298:lvgl/src/draw/lv_img_buf.c **** 
 299:lvgl/src/draw/lv_img_buf.c **** /**
 300:lvgl/src/draw/lv_img_buf.c ****  * Set the palette color of an indexed image. Valid only for `LV_IMG_CF_INDEXED1/2/4/8`
 301:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 302:lvgl/src/draw/lv_img_buf.c ****  * @param id the palette color to set:
 303:lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED1`: 0..1
 304:lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED2`: 0..3
 305:lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED4`: 0..15
 306:lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED8`: 0..255
 307:lvgl/src/draw/lv_img_buf.c ****  * @param c the color to set
 308:lvgl/src/draw/lv_img_buf.c ****  */
 309:lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_palette(lv_img_dsc_t * dsc, uint8_t id, lv_color_t c)
 310:lvgl/src/draw/lv_img_buf.c **** {
 1362              		.loc 1 310 1 is_stmt 1 view -0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 311:lvgl/src/draw/lv_img_buf.c ****     if((dsc->header.cf == LV_IMG_CF_ALPHA_1BIT && id > 1) || (dsc->header.cf == LV_IMG_CF_ALPHA_2BI
 1367              		.loc 1 311 5 view .LVU508
 1368              		.loc 1 311 24 is_stmt 0 view .LVU509
 1369 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1370 0002 03F01F03 		and	r3, r3, #31
 1371              		.loc 1 311 7 view .LVU510
 1372 0006 0B2B     		cmp	r3, #11
 1373 0008 0DD0     		beq	.L74
 1374              	.L62:
 1375              		.loc 1 311 59 discriminator 3 view .LVU511
 1376 000a 0C2B     		cmp	r3, #12
 1377 000c 0ED0     		beq	.L75
 1378              	.L64:
 1379              		.loc 1 311 113 discriminator 6 view .LVU512
 1380 000e 0D2B     		cmp	r3, #13
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 53


 1381 0010 0FD0     		beq	.L76
 1382              	.L65:
 312:lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1383              		.loc 1 312 60 discriminator 1 view .LVU513
 1384 0012 0E2B     		cmp	r3, #14
 1385 0014 09D0     		beq	.L71
 310:lvgl/src/draw/lv_img_buf.c ****     if((dsc->header.cf == LV_IMG_CF_ALPHA_1BIT && id > 1) || (dsc->header.cf == LV_IMG_CF_ALPHA_2BI
 1386              		.loc 1 310 1 view .LVU514
 1387 0016 82B0     		sub	sp, sp, #8
 1388              	.LCFI13:
 1389              		.cfi_def_cfa_offset 8
 313:lvgl/src/draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 314:lvgl/src/draw/lv_img_buf.c ****         return;
 315:lvgl/src/draw/lv_img_buf.c ****     }
 316:lvgl/src/draw/lv_img_buf.c **** 
 317:lvgl/src/draw/lv_img_buf.c ****     lv_color32_t c32;
 1390              		.loc 1 317 5 is_stmt 1 view .LVU515
 318:lvgl/src/draw/lv_img_buf.c ****     c32.full      = lv_color_to32(c);
 1391              		.loc 1 318 5 view .LVU516
 1392              	.LBB78:
 1393              	.LBI78:
 395:lvgl/src/draw/../misc/lv_color.h **** {
 1394              		.loc 2 395 24 view .LVU517
 1395              	.LBB79:
 446:lvgl/src/draw/../misc/lv_color.h **** #endif
 1396              		.loc 2 446 5 view .LVU518
 1397              	.LBE79:
 1398              	.LBE78:
 1399              		.loc 1 318 19 is_stmt 0 view .LVU519
 1400 0018 0192     		str	r2, [sp, #4]
 319:lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf = (uint8_t *)dsc->data;
 1401              		.loc 1 319 5 is_stmt 1 view .LVU520
 1402              		.loc 1 319 15 is_stmt 0 view .LVU521
 1403 001a 8368     		ldr	r3, [r0, #8]
 1404              	.LVL173:
 320:lvgl/src/draw/lv_img_buf.c ****     lv_memcpy_small(&buf[id * sizeof(c32)], &c32, sizeof(c32));
 1405              		.loc 1 320 5 is_stmt 1 view .LVU522
 1406              		.loc 1 320 21 is_stmt 0 view .LVU523
 1407 001c 03EB8101 		add	r1, r3, r1, lsl #2
 1408              	.LVL174:
 1409              	.LBB80:
 1410              	.LBI80:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 1411              		.loc 3 201 44 is_stmt 1 view .LVU524
 1412              	.LBB81:
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1413              		.loc 3 204 21 is_stmt 0 view .LVU525
 1414 0020 01AA     		add	r2, sp, #4
 1415              	.LVL175:
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 1416              		.loc 3 204 21 view .LVU526
 1417              	.LBE81:
 1418              	.LBE80:
 1419              		.loc 1 320 21 view .LVU527
 1420 0022 0423     		movs	r3, #4
 1421              	.LVL176:
 1422              		.loc 1 320 21 view .LVU528
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 54


 1423 0024 0DE0     		b	.L68
 1424              	.LVL177:
 1425              	.L74:
 1426              	.LCFI14:
 1427              		.cfi_def_cfa_offset 0
 311:lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1428              		.loc 1 311 48 discriminator 1 view .LVU529
 1429 0026 0129     		cmp	r1, #1
 1430 0028 EFD9     		bls	.L62
 1431              	.L71:
 1432 002a 7047     		bx	lr
 1433              	.L75:
 311:lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1434              		.loc 1 311 102 discriminator 4 view .LVU530
 1435 002c 0329     		cmp	r1, #3
 1436 002e EED9     		bls	.L64
 1437 0030 FBE7     		b	.L71
 1438              	.L76:
 312:lvgl/src/draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 1439              		.loc 1 312 48 view .LVU531
 1440 0032 0F29     		cmp	r1, #15
 1441 0034 EDD9     		bls	.L65
 1442 0036 F8E7     		b	.L71
 1443              	.LVL178:
 1444              	.L69:
 1445              	.LCFI15:
 1446              		.cfi_def_cfa_offset 8
 1447              	.LBB83:
 1448              	.LBB82:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1449              		.loc 3 207 9 is_stmt 1 view .LVU532
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1450              		.loc 3 207 15 is_stmt 0 view .LVU533
 1451 0038 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1452              	.LVL179:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1453              		.loc 3 207 13 view .LVU534
 1454 003c 01F8010B 		strb	r0, [r1], #1
 1455              	.LVL180:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1456              		.loc 3 208 9 is_stmt 1 view .LVU535
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1457              		.loc 3 209 9 view .LVU536
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1458              		.loc 3 210 9 view .LVU537
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 1459              		.loc 3 210 12 is_stmt 0 view .LVU538
 1460 0040 013B     		subs	r3, r3, #1
 1461              	.LVL181:
 1462              	.L68:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1463              		.loc 3 206 10 is_stmt 1 view .LVU539
 1464 0042 002B     		cmp	r3, #0
 1465 0044 F8D1     		bne	.L69
 1466              	.LBE82:
 1467              	.LBE83:
 321:lvgl/src/draw/lv_img_buf.c **** }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 55


 1468              		.loc 1 321 1 is_stmt 0 view .LVU540
 1469 0046 02B0     		add	sp, sp, #8
 1470              	.LCFI16:
 1471              		.cfi_def_cfa_offset 0
 1472              	.LVL182:
 1473              		.loc 1 321 1 view .LVU541
 1474              		@ sp needed
 1475 0048 7047     		bx	lr
 1476              		.cfi_endproc
 1477              	.LFE52:
 1479              		.section	.text.lv_img_buf_free,"ax",%progbits
 1480              		.align	1
 1481              		.global	lv_img_buf_free
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1485              		.fpu fpv4-sp-d16
 1487              	lv_img_buf_free:
 1488              	.LVL183:
 1489              	.LFB54:
 322:lvgl/src/draw/lv_img_buf.c **** 
 323:lvgl/src/draw/lv_img_buf.c **** /**
 324:lvgl/src/draw/lv_img_buf.c ****  * Allocate an image buffer in RAM
 325:lvgl/src/draw/lv_img_buf.c ****  * @param w width of image
 326:lvgl/src/draw/lv_img_buf.c ****  * @param h height of image
 327:lvgl/src/draw/lv_img_buf.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 328:lvgl/src/draw/lv_img_buf.c ****  * @return an allocated image, or NULL on failure
 329:lvgl/src/draw/lv_img_buf.c ****  */
 330:lvgl/src/draw/lv_img_buf.c **** lv_img_dsc_t * lv_img_buf_alloc(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 331:lvgl/src/draw/lv_img_buf.c **** {
 332:lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 333:lvgl/src/draw/lv_img_buf.c ****     lv_img_dsc_t * dsc = lv_mem_alloc(sizeof(lv_img_dsc_t));
 334:lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 335:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 336:lvgl/src/draw/lv_img_buf.c **** 
 337:lvgl/src/draw/lv_img_buf.c ****     lv_memset_00(dsc, sizeof(lv_img_dsc_t));
 338:lvgl/src/draw/lv_img_buf.c **** 
 339:lvgl/src/draw/lv_img_buf.c ****     /*Get image data size*/
 340:lvgl/src/draw/lv_img_buf.c ****     dsc->data_size = lv_img_buf_get_img_size(w, h, cf);
 341:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 342:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 343:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 344:lvgl/src/draw/lv_img_buf.c ****     }
 345:lvgl/src/draw/lv_img_buf.c **** 
 346:lvgl/src/draw/lv_img_buf.c ****     /*Allocate raw buffer*/
 347:lvgl/src/draw/lv_img_buf.c ****     dsc->data = lv_mem_alloc(dsc->data_size);
 348:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 349:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 350:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 351:lvgl/src/draw/lv_img_buf.c ****     }
 352:lvgl/src/draw/lv_img_buf.c ****     lv_memset_00((uint8_t *)dsc->data, dsc->data_size);
 353:lvgl/src/draw/lv_img_buf.c **** 
 354:lvgl/src/draw/lv_img_buf.c ****     /*Fill in header*/
 355:lvgl/src/draw/lv_img_buf.c ****     dsc->header.always_zero = 0;
 356:lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 357:lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 358:lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 56


 359:lvgl/src/draw/lv_img_buf.c ****     return dsc;
 360:lvgl/src/draw/lv_img_buf.c **** }
 361:lvgl/src/draw/lv_img_buf.c **** 
 362:lvgl/src/draw/lv_img_buf.c **** /**
 363:lvgl/src/draw/lv_img_buf.c ****  * Free an allocated image buffer
 364:lvgl/src/draw/lv_img_buf.c ****  * @param dsc image buffer to free
 365:lvgl/src/draw/lv_img_buf.c ****  */
 366:lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_free(lv_img_dsc_t * dsc)
 367:lvgl/src/draw/lv_img_buf.c **** {
 1490              		.loc 1 367 1 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 368:lvgl/src/draw/lv_img_buf.c ****     if(dsc != NULL) {
 1494              		.loc 1 368 5 view .LVU543
 1495              		.loc 1 368 7 is_stmt 0 view .LVU544
 1496 0000 48B1     		cbz	r0, .L81
 367:lvgl/src/draw/lv_img_buf.c ****     if(dsc != NULL) {
 1497              		.loc 1 367 1 view .LVU545
 1498 0002 10B5     		push	{r4, lr}
 1499              	.LCFI17:
 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 4, -8
 1502              		.cfi_offset 14, -4
 1503 0004 0446     		mov	r4, r0
 369:lvgl/src/draw/lv_img_buf.c ****         if(dsc->data != NULL)
 1504              		.loc 1 369 9 is_stmt 1 view .LVU546
 1505              		.loc 1 369 15 is_stmt 0 view .LVU547
 1506 0006 8068     		ldr	r0, [r0, #8]
 1507              	.LVL184:
 1508              		.loc 1 369 11 view .LVU548
 1509 0008 08B1     		cbz	r0, .L79
 370:lvgl/src/draw/lv_img_buf.c ****             lv_mem_free((void*)dsc->data);
 1510              		.loc 1 370 13 is_stmt 1 view .LVU549
 1511 000a FFF7FEFF 		bl	lv_mem_free
 1512              	.LVL185:
 1513              	.L79:
 371:lvgl/src/draw/lv_img_buf.c **** 
 372:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1514              		.loc 1 372 9 view .LVU550
 1515 000e 2046     		mov	r0, r4
 1516 0010 FFF7FEFF 		bl	lv_mem_free
 1517              	.LVL186:
 373:lvgl/src/draw/lv_img_buf.c ****     }
 374:lvgl/src/draw/lv_img_buf.c **** }
 1518              		.loc 1 374 1 is_stmt 0 view .LVU551
 1519 0014 10BD     		pop	{r4, pc}
 1520              	.LVL187:
 1521              	.L81:
 1522              	.LCFI18:
 1523              		.cfi_def_cfa_offset 0
 1524              		.cfi_restore 4
 1525              		.cfi_restore 14
 1526              		.loc 1 374 1 view .LVU552
 1527 0016 7047     		bx	lr
 1528              		.cfi_endproc
 1529              	.LFE54:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 57


 1531              		.section	.text.lv_img_buf_get_img_size,"ax",%progbits
 1532              		.align	1
 1533              		.global	lv_img_buf_get_img_size
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv4-sp-d16
 1539              	lv_img_buf_get_img_size:
 1540              	.LVL188:
 1541              	.LFB55:
 375:lvgl/src/draw/lv_img_buf.c **** 
 376:lvgl/src/draw/lv_img_buf.c **** /**
 377:lvgl/src/draw/lv_img_buf.c ****  * Get the memory consumption of a raw bitmap, given color format and dimensions.
 378:lvgl/src/draw/lv_img_buf.c ****  * @param w width
 379:lvgl/src/draw/lv_img_buf.c ****  * @param h height
 380:lvgl/src/draw/lv_img_buf.c ****  * @param cf color format
 381:lvgl/src/draw/lv_img_buf.c ****  * @return size in bytes
 382:lvgl/src/draw/lv_img_buf.c ****  */
 383:lvgl/src/draw/lv_img_buf.c **** uint32_t lv_img_buf_get_img_size(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 384:lvgl/src/draw/lv_img_buf.c **** {
 1542              		.loc 1 384 1 is_stmt 1 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 1547              		.loc 1 384 1 is_stmt 0 view .LVU554
 1548 0000 0346     		mov	r3, r0
 385:lvgl/src/draw/lv_img_buf.c ****     switch(cf) {
 1549              		.loc 1 385 5 is_stmt 1 view .LVU555
 1550 0002 043A     		subs	r2, r2, #4
 1551              	.LVL189:
 1552              		.loc 1 385 5 is_stmt 0 view .LVU556
 1553 0004 0A2A     		cmp	r2, #10
 1554 0006 4FD8     		bhi	.L102
 1555 0008 DFE802F0 		tbb	[pc, r2]
 1556              	.LVL190:
 1557              	.L87:
 1558 000c 06       		.byte	(.L97-.L87)/2
 1559 000d 0A       		.byte	(.L96-.L87)/2
 1560 000e 0E       		.byte	(.L95-.L87)/2
 1561 000f 2D       		.byte	(.L94-.L87)/2
 1562 0010 37       		.byte	(.L93-.L87)/2
 1563 0011 41       		.byte	(.L92-.L87)/2
 1564 0012 49       		.byte	(.L91-.L87)/2
 1565 0013 12       		.byte	(.L90-.L87)/2
 1566 0014 1B       		.byte	(.L89-.L87)/2
 1567 0015 24       		.byte	(.L88-.L87)/2
 1568 0016 2A       		.byte	(.L86-.L87)/2
 1569 0017 00       		.p2align 1
 1570              	.L97:
 386:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR:
 387:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR(w, h);
 1571              		.loc 1 387 13 is_stmt 1 view .LVU557
 1572              		.loc 1 387 20 is_stmt 0 view .LVU558
 1573 0018 01FB03F0 		mul	r0, r1, r3
 1574 001c 8000     		lsls	r0, r0, #2
 1575 001e 7047     		bx	lr
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 58


 1576              	.L96:
 388:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 389:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w, h);
 1577              		.loc 1 389 13 is_stmt 1 view .LVU559
 1578              		.loc 1 389 20 is_stmt 0 view .LVU560
 1579 0020 01FB03F0 		mul	r0, r1, r3
 1580 0024 8000     		lsls	r0, r0, #2
 1581 0026 7047     		bx	lr
 1582              	.L95:
 390:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 391:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w, h);
 1583              		.loc 1 391 13 is_stmt 1 view .LVU561
 1584              		.loc 1 391 20 is_stmt 0 view .LVU562
 1585 0028 01FB03F0 		mul	r0, r1, r3
 1586 002c 8000     		lsls	r0, r0, #2
 1587 002e 7047     		bx	lr
 1588              	.L90:
 392:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_1BIT:
 393:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_1BIT(w, h);
 1589              		.loc 1 393 13 is_stmt 1 view .LVU563
 1590              		.loc 1 393 20 is_stmt 0 view .LVU564
 1591 0030 1846     		mov	r0, r3
 1592 0032 002B     		cmp	r3, #0
 1593 0034 03DB     		blt	.L103
 1594              	.L98:
 1595 0036 C010     		asrs	r0, r0, #3
 1596 0038 00FB0110 		mla	r0, r0, r1, r1
 1597 003c 7047     		bx	lr
 1598              	.L103:
 1599 003e D81D     		adds	r0, r3, #7
 1600 0040 F9E7     		b	.L98
 1601              	.L89:
 394:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_2BIT:
 395:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_2BIT(w, h);
 1602              		.loc 1 395 13 is_stmt 1 view .LVU565
 1603              		.loc 1 395 20 is_stmt 0 view .LVU566
 1604 0042 1846     		mov	r0, r3
 1605 0044 002B     		cmp	r3, #0
 1606 0046 03DB     		blt	.L104
 1607              	.L99:
 1608 0048 8010     		asrs	r0, r0, #2
 1609 004a 00FB0110 		mla	r0, r0, r1, r1
 1610 004e 7047     		bx	lr
 1611              	.L104:
 1612 0050 D81C     		adds	r0, r3, #3
 1613 0052 F9E7     		b	.L99
 1614              	.L88:
 396:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_4BIT:
 397:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_4BIT(w, h);
 1615              		.loc 1 397 13 is_stmt 1 view .LVU567
 1616              		.loc 1 397 20 is_stmt 0 view .LVU568
 1617 0054 03EBD370 		add	r0, r3, r3, lsr #31
 1618 0058 4010     		asrs	r0, r0, #1
 1619 005a 00FB0110 		mla	r0, r0, r1, r1
 1620 005e 7047     		bx	lr
 1621              	.L86:
 398:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_8BIT:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 59


 399:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_8BIT(w, h);
 1622              		.loc 1 399 13 is_stmt 1 view .LVU569
 1623              		.loc 1 399 20 is_stmt 0 view .LVU570
 1624 0060 01FB03F0 		mul	r0, r1, r3
 1625 0064 7047     		bx	lr
 1626              	.L94:
 400:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_1BIT:
 401:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_1BIT(w, h);
 1627              		.loc 1 401 13 is_stmt 1 view .LVU571
 1628              		.loc 1 401 20 is_stmt 0 view .LVU572
 1629 0066 1846     		mov	r0, r3
 1630 0068 002B     		cmp	r3, #0
 1631 006a 04DB     		blt	.L105
 1632              	.L100:
 1633 006c C010     		asrs	r0, r0, #3
 1634 006e 00FB0110 		mla	r0, r0, r1, r1
 1635 0072 0830     		adds	r0, r0, #8
 1636 0074 7047     		bx	lr
 1637              	.L105:
 1638 0076 D81D     		adds	r0, r3, #7
 1639 0078 F8E7     		b	.L100
 1640              	.L93:
 402:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_2BIT:
 403:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_2BIT(w, h);
 1641              		.loc 1 403 13 is_stmt 1 view .LVU573
 1642              		.loc 1 403 20 is_stmt 0 view .LVU574
 1643 007a 1846     		mov	r0, r3
 1644 007c 002B     		cmp	r3, #0
 1645 007e 04DB     		blt	.L106
 1646              	.L101:
 1647 0080 8010     		asrs	r0, r0, #2
 1648 0082 00FB0110 		mla	r0, r0, r1, r1
 1649 0086 1030     		adds	r0, r0, #16
 1650 0088 7047     		bx	lr
 1651              	.L106:
 1652 008a D81C     		adds	r0, r3, #3
 1653 008c F8E7     		b	.L101
 1654              	.L92:
 404:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_4BIT:
 405:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_4BIT(w, h);
 1655              		.loc 1 405 13 is_stmt 1 view .LVU575
 1656              		.loc 1 405 20 is_stmt 0 view .LVU576
 1657 008e 03EBD370 		add	r0, r3, r3, lsr #31
 1658 0092 4010     		asrs	r0, r0, #1
 1659 0094 00FB0111 		mla	r1, r0, r1, r1
 1660              	.LVL191:
 1661              		.loc 1 405 20 view .LVU577
 1662 0098 01F14000 		add	r0, r1, #64
 1663 009c 7047     		bx	lr
 1664              	.LVL192:
 1665              	.L91:
 406:lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_8BIT:
 407:lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_8BIT(w, h);
 1666              		.loc 1 407 13 is_stmt 1 view .LVU578
 1667              		.loc 1 407 20 is_stmt 0 view .LVU579
 1668 009e 01FB03F0 		mul	r0, r1, r3
 1669 00a2 00F58060 		add	r0, r0, #1024
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 60


 1670 00a6 7047     		bx	lr
 1671              	.L102:
 384:lvgl/src/draw/lv_img_buf.c ****     switch(cf) {
 1672              		.loc 1 384 1 view .LVU580
 1673 00a8 0020     		movs	r0, #0
 408:lvgl/src/draw/lv_img_buf.c ****         default:
 409:lvgl/src/draw/lv_img_buf.c ****             return 0;
 410:lvgl/src/draw/lv_img_buf.c ****     }
 411:lvgl/src/draw/lv_img_buf.c **** }
 1674              		.loc 1 411 1 view .LVU581
 1675 00aa 7047     		bx	lr
 1676              		.cfi_endproc
 1677              	.LFE55:
 1679              		.section	.text.lv_img_buf_alloc,"ax",%progbits
 1680              		.align	1
 1681              		.global	lv_img_buf_alloc
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu fpv4-sp-d16
 1687              	lv_img_buf_alloc:
 1688              	.LVL193:
 1689              	.LFB53:
 331:lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 1690              		.loc 1 331 1 is_stmt 1 view -0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 331:lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 1694              		.loc 1 331 1 is_stmt 0 view .LVU583
 1695 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1696              	.LCFI19:
 1697              		.cfi_def_cfa_offset 24
 1698              		.cfi_offset 4, -24
 1699              		.cfi_offset 5, -20
 1700              		.cfi_offset 6, -16
 1701              		.cfi_offset 7, -12
 1702              		.cfi_offset 8, -8
 1703              		.cfi_offset 14, -4
 1704 0004 0746     		mov	r7, r0
 1705 0006 0E46     		mov	r6, r1
 1706 0008 1546     		mov	r5, r2
 333:lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1707              		.loc 1 333 5 is_stmt 1 view .LVU584
 333:lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1708              		.loc 1 333 26 is_stmt 0 view .LVU585
 1709 000a 0C20     		movs	r0, #12
 1710              	.LVL194:
 333:lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1711              		.loc 1 333 26 view .LVU586
 1712 000c FFF7FEFF 		bl	lv_mem_alloc
 1713              	.LVL195:
 334:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1714              		.loc 1 334 5 is_stmt 1 view .LVU587
 334:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1715              		.loc 1 334 7 is_stmt 0 view .LVU588
 1716 0010 0446     		mov	r4, r0
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 61


 1717 0012 08B3     		cbz	r0, .L107
 337:lvgl/src/draw/lv_img_buf.c **** 
 1718              		.loc 1 337 5 is_stmt 1 view .LVU589
 1719 0014 0C21     		movs	r1, #12
 1720 0016 FFF7FEFF 		bl	lv_memset_00
 1721              	.LVL196:
 340:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1722              		.loc 1 340 5 view .LVU590
 340:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1723              		.loc 1 340 22 is_stmt 0 view .LVU591
 1724 001a 2A46     		mov	r2, r5
 1725 001c 3146     		mov	r1, r6
 1726 001e 3846     		mov	r0, r7
 1727 0020 FFF7FEFF 		bl	lv_img_buf_get_img_size
 1728              	.LVL197:
 340:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1729              		.loc 1 340 20 view .LVU592
 1730 0024 6060     		str	r0, [r4, #4]
 341:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1731              		.loc 1 341 5 is_stmt 1 view .LVU593
 341:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1732              		.loc 1 341 7 is_stmt 0 view .LVU594
 1733 0026 D0B1     		cbz	r0, .L112
 347:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1734              		.loc 1 347 5 is_stmt 1 view .LVU595
 347:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1735              		.loc 1 347 17 is_stmt 0 view .LVU596
 1736 0028 FFF7FEFF 		bl	lv_mem_alloc
 1737              	.LVL198:
 1738 002c 8046     		mov	r8, r0
 347:lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1739              		.loc 1 347 15 view .LVU597
 1740 002e A060     		str	r0, [r4, #8]
 348:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1741              		.loc 1 348 5 is_stmt 1 view .LVU598
 348:lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1742              		.loc 1 348 7 is_stmt 0 view .LVU599
 1743 0030 D0B1     		cbz	r0, .L113
 352:lvgl/src/draw/lv_img_buf.c **** 
 1744              		.loc 1 352 5 is_stmt 1 view .LVU600
 1745 0032 6168     		ldr	r1, [r4, #4]
 1746 0034 FFF7FEFF 		bl	lv_memset_00
 1747              	.LVL199:
 355:lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 1748              		.loc 1 355 5 view .LVU601
 355:lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 1749              		.loc 1 355 29 is_stmt 0 view .LVU602
 1750 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1751 003a 6FF34713 		bfc	r3, #5, #3
 1752 003e 2370     		strb	r3, [r4]
 356:lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 1753              		.loc 1 356 5 is_stmt 1 view .LVU603
 356:lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 1754              		.loc 1 356 19 is_stmt 0 view .LVU604
 1755 0040 2368     		ldr	r3, [r4]
 1756 0042 67F39423 		bfi	r3, r7, #10, #11
 1757 0046 2360     		str	r3, [r4]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 62


 357:lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1758              		.loc 1 357 5 is_stmt 1 view .LVU605
 357:lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1759              		.loc 1 357 19 is_stmt 0 view .LVU606
 1760 0048 6388     		ldrh	r3, [r4, #2]
 1761 004a 66F34F13 		bfi	r3, r6, #5, #11
 1762 004e 6380     		strh	r3, [r4, #2]	@ movhi
 358:lvgl/src/draw/lv_img_buf.c ****     return dsc;
 1763              		.loc 1 358 5 is_stmt 1 view .LVU607
 358:lvgl/src/draw/lv_img_buf.c ****     return dsc;
 1764              		.loc 1 358 20 is_stmt 0 view .LVU608
 1765 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1766 0052 65F30403 		bfi	r3, r5, #0, #5
 1767 0056 2370     		strb	r3, [r4]
 359:lvgl/src/draw/lv_img_buf.c **** }
 1768              		.loc 1 359 5 is_stmt 1 view .LVU609
 1769              	.LVL200:
 1770              	.L107:
 360:lvgl/src/draw/lv_img_buf.c **** 
 1771              		.loc 1 360 1 is_stmt 0 view .LVU610
 1772 0058 2046     		mov	r0, r4
 1773 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1774              	.LVL201:
 1775              	.L112:
 342:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1776              		.loc 1 342 9 is_stmt 1 view .LVU611
 1777 005e 2046     		mov	r0, r4
 1778 0060 FFF7FEFF 		bl	lv_mem_free
 1779              	.LVL202:
 343:lvgl/src/draw/lv_img_buf.c ****     }
 1780              		.loc 1 343 9 view .LVU612
 343:lvgl/src/draw/lv_img_buf.c ****     }
 1781              		.loc 1 343 16 is_stmt 0 view .LVU613
 1782 0064 0024     		movs	r4, #0
 1783              	.LVL203:
 343:lvgl/src/draw/lv_img_buf.c ****     }
 1784              		.loc 1 343 16 view .LVU614
 1785 0066 F7E7     		b	.L107
 1786              	.LVL204:
 1787              	.L113:
 349:lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1788              		.loc 1 349 9 is_stmt 1 view .LVU615
 1789 0068 2046     		mov	r0, r4
 1790 006a FFF7FEFF 		bl	lv_mem_free
 1791              	.LVL205:
 350:lvgl/src/draw/lv_img_buf.c ****     }
 1792              		.loc 1 350 9 view .LVU616
 350:lvgl/src/draw/lv_img_buf.c ****     }
 1793              		.loc 1 350 16 is_stmt 0 view .LVU617
 1794 006e 4446     		mov	r4, r8
 1795              	.LVL206:
 350:lvgl/src/draw/lv_img_buf.c ****     }
 1796              		.loc 1 350 16 view .LVU618
 1797 0070 F2E7     		b	.L107
 1798              		.cfi_endproc
 1799              	.LFE53:
 1801              		.section	.text._lv_img_buf_transform_init,"ax",%progbits
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 63


 1802              		.align	1
 1803              		.global	_lv_img_buf_transform_init
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1807              		.fpu fpv4-sp-d16
 1809              	_lv_img_buf_transform_init:
 1810              	.LVL207:
 1811              	.LFB56:
 412:lvgl/src/draw/lv_img_buf.c **** 
 413:lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 414:lvgl/src/draw/lv_img_buf.c **** /**
 415:lvgl/src/draw/lv_img_buf.c ****  * Initialize a descriptor to transform an image
 416:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an `lv_img_transform_dsc_t` variable whose `cfg` field is initialized
 417:lvgl/src/draw/lv_img_buf.c ****  */
 418:lvgl/src/draw/lv_img_buf.c **** void _lv_img_buf_transform_init(lv_img_transform_dsc_t * dsc)
 419:lvgl/src/draw/lv_img_buf.c **** {
 1812              		.loc 1 419 1 is_stmt 1 view -0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              		.loc 1 419 1 is_stmt 0 view .LVU620
 1817 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1818              	.LCFI20:
 1819              		.cfi_def_cfa_offset 32
 1820              		.cfi_offset 4, -32
 1821              		.cfi_offset 5, -28
 1822              		.cfi_offset 6, -24
 1823              		.cfi_offset 7, -20
 1824              		.cfi_offset 8, -16
 1825              		.cfi_offset 9, -12
 1826              		.cfi_offset 10, -8
 1827              		.cfi_offset 14, -4
 1828 0004 0446     		mov	r4, r0
 420:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pivot_x_256 = dsc->cfg.pivot_x * 256;
 1829              		.loc 1 420 5 is_stmt 1 view .LVU621
 1830              		.loc 1 420 36 is_stmt 0 view .LVU622
 1831 0006 B0F90830 		ldrsh	r3, [r0, #8]
 1832              		.loc 1 420 45 view .LVU623
 1833 000a 1B02     		lsls	r3, r3, #8
 1834              		.loc 1 420 26 view .LVU624
 1835 000c C362     		str	r3, [r0, #44]
 421:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pivot_y_256 = dsc->cfg.pivot_y * 256;
 1836              		.loc 1 421 5 is_stmt 1 view .LVU625
 1837              		.loc 1 421 36 is_stmt 0 view .LVU626
 1838 000e B0F90A30 		ldrsh	r3, [r0, #10]
 1839              		.loc 1 421 45 view .LVU627
 1840 0012 1B02     		lsls	r3, r3, #8
 1841              		.loc 1 421 26 view .LVU628
 1842 0014 0363     		str	r3, [r0, #48]
 422:lvgl/src/draw/lv_img_buf.c **** 
 423:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_low = dsc->cfg.angle / 10;
 1843              		.loc 1 423 5 is_stmt 1 view .LVU629
 1844              		.loc 1 423 33 is_stmt 0 view .LVU630
 1845 0016 B0F90C50 		ldrsh	r5, [r0, #12]
 1846              		.loc 1 423 40 view .LVU631
 1847 001a 454F     		ldr	r7, .L118
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 64


 1848 001c 87FB0523 		smull	r2, r3, r7, r5
 1849 0020 E817     		asrs	r0, r5, #31
 1850              	.LVL208:
 1851              		.loc 1 423 40 view .LVU632
 1852 0022 C0EBA300 		rsb	r0, r0, r3, asr #2
 1853 0026 00B2     		sxth	r0, r0
 1854              	.LVL209:
 424:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 1855              		.loc 1 424 5 is_stmt 1 view .LVU633
 1856              		.loc 1 424 13 is_stmt 0 view .LVU634
 1857 0028 00F1010A 		add	r10, r0, #1
 1858              	.LVL210:
 425:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = dsc->cfg.angle  - (angle_low * 10);
 1859              		.loc 1 425 5 is_stmt 1 view .LVU635
 1860              		.loc 1 425 13 is_stmt 0 view .LVU636
 1861 002c 6FF00903 		mvn	r3, #9
 1862 0030 03FB0055 		mla	r5, r3, r0, r5
 1863              	.LVL211:
 426:lvgl/src/draw/lv_img_buf.c **** 
 427:lvgl/src/draw/lv_img_buf.c ****     int32_t s1 = lv_trigo_sin(-angle_low);
 1864              		.loc 1 427 5 is_stmt 1 view .LVU637
 1865              		.loc 1 427 18 is_stmt 0 view .LVU638
 1866 0034 1FFA80F8 		uxth	r8, r0
 1867 0038 C8F10000 		rsb	r0, r8, #0
 1868              	.LVL212:
 1869              		.loc 1 427 18 view .LVU639
 1870 003c 00B2     		sxth	r0, r0
 1871 003e FFF7FEFF 		bl	lv_trigo_sin
 1872              	.LVL213:
 1873 0042 8146     		mov	r9, r0
 1874              	.LVL214:
 428:lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(-angle_high);
 1875              		.loc 1 428 5 is_stmt 1 view .LVU640
 1876              		.loc 1 428 18 is_stmt 0 view .LVU641
 1877 0044 1FFA8AFA 		uxth	r10, r10
 1878              	.LVL215:
 1879              		.loc 1 428 18 view .LVU642
 1880 0048 CAF10000 		rsb	r0, r10, #0
 1881              	.LVL216:
 1882              		.loc 1 428 18 view .LVU643
 1883 004c 00B2     		sxth	r0, r0
 1884 004e FFF7FEFF 		bl	lv_trigo_sin
 1885              	.LVL217:
 1886 0052 0646     		mov	r6, r0
 1887              	.LVL218:
 429:lvgl/src/draw/lv_img_buf.c **** 
 430:lvgl/src/draw/lv_img_buf.c ****     int32_t c1 = lv_trigo_sin(-angle_low + 90);
 1888              		.loc 1 430 5 is_stmt 1 view .LVU644
 1889              		.loc 1 430 42 is_stmt 0 view .LVU645
 1890 0054 C8F15A00 		rsb	r0, r8, #90
 1891              	.LVL219:
 1892              		.loc 1 430 18 view .LVU646
 1893 0058 00B2     		sxth	r0, r0
 1894 005a FFF7FEFF 		bl	lv_trigo_sin
 1895              	.LVL220:
 1896 005e 8046     		mov	r8, r0
 1897              	.LVL221:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 65


 431:lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(-angle_high + 90);
 1898              		.loc 1 431 5 is_stmt 1 view .LVU647
 1899              		.loc 1 431 43 is_stmt 0 view .LVU648
 1900 0060 CAF15A00 		rsb	r0, r10, #90
 1901              	.LVL222:
 1902              		.loc 1 431 18 view .LVU649
 1903 0064 00B2     		sxth	r0, r0
 1904 0066 FFF7FEFF 		bl	lv_trigo_sin
 1905              	.LVL223:
 432:lvgl/src/draw/lv_img_buf.c **** 
 433:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 1906              		.loc 1 433 5 is_stmt 1 view .LVU650
 1907              		.loc 1 433 32 is_stmt 0 view .LVU651
 1908 006a C5F10A02 		rsb	r2, r5, #10
 1909              		.loc 1 433 50 view .LVU652
 1910 006e 06FB05F3 		mul	r3, r6, r5
 1911              		.loc 1 433 45 view .LVU653
 1912 0072 09FB0233 		mla	r3, r9, r2, r3
 1913              		.loc 1 433 63 view .LVU654
 1914 0076 87FB0361 		smull	r6, r1, r7, r3
 1915              	.LVL224:
 1916              		.loc 1 433 63 view .LVU655
 1917 007a DB17     		asrs	r3, r3, #31
 1918 007c C3EBA103 		rsb	r3, r3, r1, asr #2
 1919              		.loc 1 433 20 view .LVU656
 1920 0080 6363     		str	r3, [r4, #52]
 434:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1921              		.loc 1 434 5 is_stmt 1 view .LVU657
 1922              		.loc 1 434 50 is_stmt 0 view .LVU658
 1923 0082 00FB05F5 		mul	r5, r0, r5
 1924              	.LVL225:
 1925              		.loc 1 434 45 view .LVU659
 1926 0086 08FB0250 		mla	r0, r8, r2, r5
 1927              	.LVL226:
 1928              		.loc 1 434 63 view .LVU660
 1929 008a 87FB0027 		smull	r2, r7, r7, r0
 1930 008e C517     		asrs	r5, r0, #31
 1931 0090 C5EBA705 		rsb	r5, r5, r7, asr #2
 1932              		.loc 1 434 20 view .LVU661
 1933 0094 A563     		str	r5, [r4, #56]
 435:lvgl/src/draw/lv_img_buf.c **** 
 436:lvgl/src/draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 437:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.sinma = dsc->tmp.sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 1934              		.loc 1 437 5 is_stmt 1 view .LVU662
 1935              		.loc 1 437 37 is_stmt 0 view .LVU663
 1936 0096 5B11     		asrs	r3, r3, #5
 1937              		.loc 1 437 20 view .LVU664
 1938 0098 6363     		str	r3, [r4, #52]
 438:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.cosma = dsc->tmp.cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 1939              		.loc 1 438 5 is_stmt 1 view .LVU665
 1940              		.loc 1 438 37 is_stmt 0 view .LVU666
 1941 009a 6D11     		asrs	r5, r5, #5
 1942              		.loc 1 438 20 view .LVU667
 1943 009c A563     		str	r5, [r4, #56]
 439:lvgl/src/draw/lv_img_buf.c **** 
 440:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.chroma_keyed = lv_img_cf_is_chroma_keyed(dsc->cfg.cf) ? 1 : 0;
 1944              		.loc 1 440 5 is_stmt 1 view .LVU668
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 66


 1945              		.loc 1 440 29 is_stmt 0 view .LVU669
 1946 009e 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 1947 00a0 FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 1948              	.LVL227:
 1949              		.loc 1 440 27 view .LVU670
 1950 00a4 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1951 00a8 60F30003 		bfi	r3, r0, #0, #1
 1952 00ac 84F83C30 		strb	r3, [r4, #60]
 441:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.has_alpha = lv_img_cf_has_alpha(dsc->cfg.cf) ? 1 : 0;
 1953              		.loc 1 441 5 is_stmt 1 view .LVU671
 1954              		.loc 1 441 26 is_stmt 0 view .LVU672
 1955 00b0 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 1956 00b2 FFF7FEFF 		bl	lv_img_cf_has_alpha
 1957              	.LVL228:
 1958              		.loc 1 441 24 view .LVU673
 1959 00b6 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1960 00ba 60F34103 		bfi	r3, r0, #1, #1
 1961 00be 84F83C30 		strb	r3, [r4, #60]
 442:lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR || dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 1962              		.loc 1 442 5 is_stmt 1 view .LVU674
 1963              		.loc 1 442 16 is_stmt 0 view .LVU675
 1964 00c2 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1965              		.loc 1 442 89 view .LVU676
 1966 00c4 131F     		subs	r3, r2, #4
 1967 00c6 DBB2     		uxtb	r3, r3
 1968              		.loc 1 442 7 view .LVU677
 1969 00c8 022B     		cmp	r3, #2
 1970 00ca 29D8     		bhi	.L115
 443:lvgl/src/draw/lv_img_buf.c ****        dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 444:lvgl/src/draw/lv_img_buf.c ****         dsc->tmp.native_color = 1;
 1971              		.loc 1 444 9 is_stmt 1 view .LVU678
 1972              		.loc 1 444 31 is_stmt 0 view .LVU679
 1973 00cc 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1974 00d0 43F00403 		orr	r3, r3, #4
 1975 00d4 84F83C30 		strb	r3, [r4, #60]
 1976              	.L116:
 445:lvgl/src/draw/lv_img_buf.c ****     }
 446:lvgl/src/draw/lv_img_buf.c ****     else {
 447:lvgl/src/draw/lv_img_buf.c ****         dsc->tmp.native_color = 0;
 448:lvgl/src/draw/lv_img_buf.c ****     }
 449:lvgl/src/draw/lv_img_buf.c **** 
 450:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.data = dsc->cfg.src;
 1977              		.loc 1 450 5 is_stmt 1 view .LVU680
 1978              		.loc 1 450 37 is_stmt 0 view .LVU681
 1979 00d8 2368     		ldr	r3, [r4]
 1980              		.loc 1 450 27 view .LVU682
 1981 00da A362     		str	r3, [r4, #40]
 451:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.always_zero = 0;
 1982              		.loc 1 451 5 is_stmt 1 view .LVU683
 1983              		.loc 1 451 41 is_stmt 0 view .LVU684
 1984 00dc 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1985 00e0 6FF34713 		bfc	r3, #5, #3
 1986 00e4 84F82030 		strb	r3, [r4, #32]
 452:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.cf = dsc->cfg.cf;
 1987              		.loc 1 452 5 is_stmt 1 view .LVU685
 1988              		.loc 1 452 32 is_stmt 0 view .LVU686
 1989 00e8 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 67


 1990 00ea 62F30403 		bfi	r3, r2, #0, #5
 1991 00ee 84F82030 		strb	r3, [r4, #32]
 453:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.w = dsc->cfg.src_w;
 1992              		.loc 1 453 5 is_stmt 1 view .LVU687
 1993              		.loc 1 453 41 is_stmt 0 view .LVU688
 1994 00f2 A288     		ldrh	r2, [r4, #4]
 1995              		.loc 1 453 31 view .LVU689
 1996 00f4 236A     		ldr	r3, [r4, #32]
 1997 00f6 62F39423 		bfi	r3, r2, #10, #11
 1998 00fa 2362     		str	r3, [r4, #32]
 454:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.h = dsc->cfg.src_h;
 1999              		.loc 1 454 5 is_stmt 1 view .LVU690
 2000              		.loc 1 454 41 is_stmt 0 view .LVU691
 2001 00fc E288     		ldrh	r2, [r4, #6]
 2002              		.loc 1 454 31 view .LVU692
 2003 00fe 638C     		ldrh	r3, [r4, #34]
 2004 0100 62F34F13 		bfi	r3, r2, #5, #11
 2005 0104 6384     		strh	r3, [r4, #34]	@ movhi
 455:lvgl/src/draw/lv_img_buf.c **** 
 456:lvgl/src/draw/lv_img_buf.c ****     /*The inverse of the zoom will be sued during the transformation
 457:lvgl/src/draw/lv_img_buf.c ****      * + dsc->cfg.zoom / 2 for rounding*/
 458:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.zoom_inv = (((256 * 256) << _LV_ZOOM_INV_UPSCALE) + dsc->cfg.zoom / 2) / dsc->cfg.zoom
 2006              		.loc 1 458 5 is_stmt 1 view .LVU693
 2007              		.loc 1 458 74 is_stmt 0 view .LVU694
 2008 0106 E289     		ldrh	r2, [r4, #14]
 2009              		.loc 1 458 80 view .LVU695
 2010 0108 5308     		lsrs	r3, r2, #1
 2011              		.loc 1 458 64 view .LVU696
 2012 010a 03F50013 		add	r3, r3, #2097152
 2013              		.loc 1 458 85 view .LVU697
 2014 010e 93FBF2F3 		sdiv	r3, r3, r2
 2015              		.loc 1 458 23 view .LVU698
 2016 0112 2364     		str	r3, [r4, #64]
 459:lvgl/src/draw/lv_img_buf.c **** 
 460:lvgl/src/draw/lv_img_buf.c ****     dsc->res.opa = LV_OPA_COVER;
 2017              		.loc 1 460 5 is_stmt 1 view .LVU699
 2018              		.loc 1 460 18 is_stmt 0 view .LVU700
 2019 0114 FF23     		movs	r3, #255
 2020 0116 2377     		strb	r3, [r4, #28]
 461:lvgl/src/draw/lv_img_buf.c ****     dsc->res.color = dsc->cfg.color;
 2021              		.loc 1 461 5 is_stmt 1 view .LVU701
 2022              		.loc 1 461 20 is_stmt 0 view .LVU702
 2023 0118 2369     		ldr	r3, [r4, #16]
 2024 011a A361     		str	r3, [r4, #24]
 462:lvgl/src/draw/lv_img_buf.c **** }
 2025              		.loc 1 462 1 view .LVU703
 2026 011c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2027              	.LVL229:
 2028              	.L115:
 447:lvgl/src/draw/lv_img_buf.c ****     }
 2029              		.loc 1 447 9 is_stmt 1 view .LVU704
 447:lvgl/src/draw/lv_img_buf.c ****     }
 2030              		.loc 1 447 31 is_stmt 0 view .LVU705
 2031 0120 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2032 0124 6FF38203 		bfc	r3, #2, #1
 2033 0128 84F83C30 		strb	r3, [r4, #60]
 2034 012c D4E7     		b	.L116
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 68


 2035              	.L119:
 2036 012e 00BF     		.align	2
 2037              	.L118:
 2038 0130 67666666 		.word	1717986919
 2039              		.cfi_endproc
 2040              	.LFE56:
 2042              		.section	.text._lv_img_buf_get_transformed_area,"ax",%progbits
 2043              		.align	1
 2044              		.global	_lv_img_buf_get_transformed_area
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2048              		.fpu fpv4-sp-d16
 2050              	_lv_img_buf_get_transformed_area:
 2051              	.LVL230:
 2052              	.LFB57:
 463:lvgl/src/draw/lv_img_buf.c **** #endif
 464:lvgl/src/draw/lv_img_buf.c **** 
 465:lvgl/src/draw/lv_img_buf.c **** /**
 466:lvgl/src/draw/lv_img_buf.c ****  * Get the area of a rectangle if its rotated and scaled
 467:lvgl/src/draw/lv_img_buf.c ****  * @param res store the coordinates here
 468:lvgl/src/draw/lv_img_buf.c ****  * @param w width of the rectangle to transform
 469:lvgl/src/draw/lv_img_buf.c ****  * @param h height of the rectangle to transform
 470:lvgl/src/draw/lv_img_buf.c ****  * @param angle angle of rotation
 471:lvgl/src/draw/lv_img_buf.c ****  * @param zoom zoom, (256 no zoom)
 472:lvgl/src/draw/lv_img_buf.c ****  * @param pivot x,y pivot coordinates of rotation
 473:lvgl/src/draw/lv_img_buf.c ****  */
 474:lvgl/src/draw/lv_img_buf.c **** void _lv_img_buf_get_transformed_area(lv_area_t * res, lv_coord_t w, lv_coord_t h, int16_t angle, u
 475:lvgl/src/draw/lv_img_buf.c ****                                       const lv_point_t * pivot)
 476:lvgl/src/draw/lv_img_buf.c **** {
 2053              		.loc 1 476 1 is_stmt 1 view -0
 2054              		.cfi_startproc
 2055              		@ args = 8, pretend = 0, frame = 16
 2056              		@ frame_needed = 0, uses_anonymous_args = 0
 2057              		.loc 1 476 1 is_stmt 0 view .LVU707
 2058 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2059              	.LCFI21:
 2060              		.cfi_def_cfa_offset 36
 2061              		.cfi_offset 4, -36
 2062              		.cfi_offset 5, -32
 2063              		.cfi_offset 6, -28
 2064              		.cfi_offset 7, -24
 2065              		.cfi_offset 8, -20
 2066              		.cfi_offset 9, -16
 2067              		.cfi_offset 10, -12
 2068              		.cfi_offset 11, -8
 2069              		.cfi_offset 14, -4
 2070 0004 85B0     		sub	sp, sp, #20
 2071              	.LCFI22:
 2072              		.cfi_def_cfa_offset 56
 2073 0006 0446     		mov	r4, r0
 2074 0008 BDF83800 		ldrh	r0, [sp, #56]
 2075              	.LVL231:
 2076              		.loc 1 476 1 view .LVU708
 2077 000c 0F9D     		ldr	r5, [sp, #60]
 477:lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 478:lvgl/src/draw/lv_img_buf.c ****     if(angle == 0 && zoom == LV_IMG_ZOOM_NONE) {
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 69


 2078              		.loc 1 478 5 is_stmt 1 view .LVU709
 2079              		.loc 1 478 7 is_stmt 0 view .LVU710
 2080 000e 1E46     		mov	r6, r3
 2081 0010 13B9     		cbnz	r3, .L121
 2082              		.loc 1 478 19 discriminator 1 view .LVU711
 2083 0012 B0F5807F 		cmp	r0, #256
 2084 0016 37D0     		beq	.L126
 2085              	.L121:
 479:lvgl/src/draw/lv_img_buf.c ****         res->x1 = 0;
 480:lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 481:lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 482:lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 483:lvgl/src/draw/lv_img_buf.c ****         return;
 484:lvgl/src/draw/lv_img_buf.c ****     }
 485:lvgl/src/draw/lv_img_buf.c **** 
 486:lvgl/src/draw/lv_img_buf.c ****     res->x1 = (((-pivot->x) * zoom) >> 8) - 1;
 2086              		.loc 1 486 5 is_stmt 1 view .LVU712
 2087              		.loc 1 486 24 is_stmt 0 view .LVU713
 2088 0018 B5F90030 		ldrsh	r3, [r5]
 2089              	.LVL232:
 2090              		.loc 1 486 18 view .LVU714
 2091 001c 5B42     		rsbs	r3, r3, #0
 2092              		.loc 1 486 29 view .LVU715
 2093 001e 00FB03F3 		mul	r3, r0, r3
 2094              		.loc 1 486 37 view .LVU716
 2095 0022 1B12     		asrs	r3, r3, #8
 2096              		.loc 1 486 43 view .LVU717
 2097 0024 013B     		subs	r3, r3, #1
 2098 0026 1FFA83FE 		uxth	lr, r3
 2099              		.loc 1 486 13 view .LVU718
 2100 002a 2380     		strh	r3, [r4]	@ movhi
 487:lvgl/src/draw/lv_img_buf.c ****     res->y1 = (((-pivot->y) * zoom) >> 8) - 1;
 2101              		.loc 1 487 5 is_stmt 1 view .LVU719
 2102              		.loc 1 487 24 is_stmt 0 view .LVU720
 2103 002c B5F90270 		ldrsh	r7, [r5, #2]
 2104              		.loc 1 487 18 view .LVU721
 2105 0030 7F42     		rsbs	r7, r7, #0
 2106              		.loc 1 487 29 view .LVU722
 2107 0032 00FB07F7 		mul	r7, r0, r7
 2108              		.loc 1 487 37 view .LVU723
 2109 0036 3F12     		asrs	r7, r7, #8
 2110              		.loc 1 487 43 view .LVU724
 2111 0038 013F     		subs	r7, r7, #1
 2112 003a 1FFA87FC 		uxth	ip, r7
 2113              		.loc 1 487 13 view .LVU725
 2114 003e 6780     		strh	r7, [r4, #2]	@ movhi
 488:lvgl/src/draw/lv_img_buf.c ****     res->x2 = (((w - pivot->x) * zoom) >> 8) + 2;
 2115              		.loc 1 488 5 is_stmt 1 view .LVU726
 2116              		.loc 1 488 27 is_stmt 0 view .LVU727
 2117 0040 B5F90030 		ldrsh	r3, [r5]
 2118              		.loc 1 488 20 view .LVU728
 2119 0044 C91A     		subs	r1, r1, r3
 2120              	.LVL233:
 2121              		.loc 1 488 32 view .LVU729
 2122 0046 00FB01F1 		mul	r1, r0, r1
 2123              		.loc 1 488 40 view .LVU730
 2124 004a 0912     		asrs	r1, r1, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 70


 2125              		.loc 1 488 46 view .LVU731
 2126 004c 0231     		adds	r1, r1, #2
 2127 004e 8FB2     		uxth	r7, r1
 2128              		.loc 1 488 13 view .LVU732
 2129 0050 A180     		strh	r1, [r4, #4]	@ movhi
 489:lvgl/src/draw/lv_img_buf.c ****     res->y2 = (((h - pivot->y) * zoom) >> 8) + 2;
 2130              		.loc 1 489 5 is_stmt 1 view .LVU733
 2131              		.loc 1 489 27 is_stmt 0 view .LVU734
 2132 0052 B5F90230 		ldrsh	r3, [r5, #2]
 2133              		.loc 1 489 20 view .LVU735
 2134 0056 D31A     		subs	r3, r2, r3
 2135              		.loc 1 489 32 view .LVU736
 2136 0058 00FB03F3 		mul	r3, r0, r3
 2137              		.loc 1 489 40 view .LVU737
 2138 005c 1B12     		asrs	r3, r3, #8
 2139              		.loc 1 489 46 view .LVU738
 2140 005e 0233     		adds	r3, r3, #2
 2141 0060 9AB2     		uxth	r2, r3
 2142              	.LVL234:
 2143              		.loc 1 489 13 view .LVU739
 2144 0062 E380     		strh	r3, [r4, #6]	@ movhi
 490:lvgl/src/draw/lv_img_buf.c **** 
 491:lvgl/src/draw/lv_img_buf.c ****     if(angle == 0) {
 2145              		.loc 1 491 5 is_stmt 1 view .LVU740
 2146              		.loc 1 491 7 is_stmt 0 view .LVU741
 2147 0064 BEB9     		cbnz	r6, .L123
 492:lvgl/src/draw/lv_img_buf.c ****         res->x1 += pivot->x;
 2148              		.loc 1 492 9 is_stmt 1 view .LVU742
 2149              		.loc 1 492 25 is_stmt 0 view .LVU743
 2150 0066 2B88     		ldrh	r3, [r5]
 2151              		.loc 1 492 17 view .LVU744
 2152 0068 9E44     		add	lr, lr, r3
 2153 006a A4F800E0 		strh	lr, [r4]	@ movhi
 493:lvgl/src/draw/lv_img_buf.c ****         res->y1 += pivot->y;
 2154              		.loc 1 493 9 is_stmt 1 view .LVU745
 2155              		.loc 1 493 25 is_stmt 0 view .LVU746
 2156 006e 6B88     		ldrh	r3, [r5, #2]
 2157              		.loc 1 493 17 view .LVU747
 2158 0070 9C44     		add	ip, ip, r3
 2159 0072 A4F802C0 		strh	ip, [r4, #2]	@ movhi
 494:lvgl/src/draw/lv_img_buf.c ****         res->x2 += pivot->x;
 2160              		.loc 1 494 9 is_stmt 1 view .LVU748
 2161              		.loc 1 494 25 is_stmt 0 view .LVU749
 2162 0076 2B88     		ldrh	r3, [r5]
 2163              		.loc 1 494 17 view .LVU750
 2164 0078 1F44     		add	r7, r7, r3
 2165 007a A780     		strh	r7, [r4, #4]	@ movhi
 495:lvgl/src/draw/lv_img_buf.c ****         res->y2 += pivot->y;
 2166              		.loc 1 495 9 is_stmt 1 view .LVU751
 2167              		.loc 1 495 25 is_stmt 0 view .LVU752
 2168 007c 6B88     		ldrh	r3, [r5, #2]
 2169              		.loc 1 495 17 view .LVU753
 2170 007e 1A44     		add	r2, r2, r3
 2171 0080 E280     		strh	r2, [r4, #6]	@ movhi
 496:lvgl/src/draw/lv_img_buf.c ****         return;
 2172              		.loc 1 496 9 is_stmt 1 view .LVU754
 2173              	.L120:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 71


 497:lvgl/src/draw/lv_img_buf.c ****     }
 498:lvgl/src/draw/lv_img_buf.c **** 
 499:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_low = angle / 10;
 500:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 501:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 502:lvgl/src/draw/lv_img_buf.c **** 
 503:lvgl/src/draw/lv_img_buf.c ****     int32_t s1 = lv_trigo_sin(angle_low);
 504:lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 505:lvgl/src/draw/lv_img_buf.c **** 
 506:lvgl/src/draw/lv_img_buf.c ****     int32_t c1 = lv_trigo_sin(angle_low + 90);
 507:lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 508:lvgl/src/draw/lv_img_buf.c **** 
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 510:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 511:lvgl/src/draw/lv_img_buf.c **** 
 512:lvgl/src/draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 513:lvgl/src/draw/lv_img_buf.c ****     sinma = sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 514:lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 515:lvgl/src/draw/lv_img_buf.c **** 
 516:lvgl/src/draw/lv_img_buf.c ****     lv_point_t lt;
 517:lvgl/src/draw/lv_img_buf.c ****     lv_point_t rt;
 518:lvgl/src/draw/lv_img_buf.c ****     lv_point_t lb;
 519:lvgl/src/draw/lv_img_buf.c ****     lv_point_t rb;
 520:lvgl/src/draw/lv_img_buf.c **** 
 521:lvgl/src/draw/lv_img_buf.c ****     lv_coord_t xt;
 522:lvgl/src/draw/lv_img_buf.c ****     lv_coord_t yt;
 523:lvgl/src/draw/lv_img_buf.c **** 
 524:lvgl/src/draw/lv_img_buf.c ****     xt = res->x1;
 525:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 526:lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 527:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 528:lvgl/src/draw/lv_img_buf.c **** 
 529:lvgl/src/draw/lv_img_buf.c ****     xt = res->x2;
 530:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 531:lvgl/src/draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 532:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 533:lvgl/src/draw/lv_img_buf.c **** 
 534:lvgl/src/draw/lv_img_buf.c ****     xt = res->x1;
 535:lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 536:lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 537:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 538:lvgl/src/draw/lv_img_buf.c **** 
 539:lvgl/src/draw/lv_img_buf.c ****     xt = res->x2;
 540:lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 541:lvgl/src/draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 542:lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 543:lvgl/src/draw/lv_img_buf.c **** 
 544:lvgl/src/draw/lv_img_buf.c ****     res->x1 = LV_MIN4(lb.x, lt.x, rb.x, rt.x);
 545:lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 546:lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 547:lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 548:lvgl/src/draw/lv_img_buf.c **** #else
 549:lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(angle);
 550:lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(zoom);
 551:lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(pivot);
 552:lvgl/src/draw/lv_img_buf.c ****     res->x1 = 0;
 553:lvgl/src/draw/lv_img_buf.c ****     res->y1 = 0;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 72


 554:lvgl/src/draw/lv_img_buf.c ****     res->x2 = w - 1;
 555:lvgl/src/draw/lv_img_buf.c ****     res->y2 = h - 1;
 556:lvgl/src/draw/lv_img_buf.c **** #endif
 557:lvgl/src/draw/lv_img_buf.c **** }
 2174              		.loc 1 557 1 is_stmt 0 view .LVU755
 2175 0082 05B0     		add	sp, sp, #20
 2176              	.LCFI23:
 2177              		.cfi_remember_state
 2178              		.cfi_def_cfa_offset 36
 2179              		@ sp needed
 2180 0084 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2181              	.LVL235:
 2182              	.L126:
 2183              	.LCFI24:
 2184              		.cfi_restore_state
 479:lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 2185              		.loc 1 479 9 is_stmt 1 view .LVU756
 479:lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 2186              		.loc 1 479 17 is_stmt 0 view .LVU757
 2187 0088 2380     		strh	r3, [r4]	@ movhi
 480:lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 2188              		.loc 1 480 9 is_stmt 1 view .LVU758
 480:lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 2189              		.loc 1 480 17 is_stmt 0 view .LVU759
 2190 008a 6380     		strh	r3, [r4, #2]	@ movhi
 481:lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2191              		.loc 1 481 9 is_stmt 1 view .LVU760
 481:lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2192              		.loc 1 481 21 is_stmt 0 view .LVU761
 2193 008c 0139     		subs	r1, r1, #1
 2194              	.LVL236:
 481:lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2195              		.loc 1 481 17 view .LVU762
 2196 008e A180     		strh	r1, [r4, #4]	@ movhi
 482:lvgl/src/draw/lv_img_buf.c ****         return;
 2197              		.loc 1 482 9 is_stmt 1 view .LVU763
 482:lvgl/src/draw/lv_img_buf.c ****         return;
 2198              		.loc 1 482 21 is_stmt 0 view .LVU764
 2199 0090 013A     		subs	r2, r2, #1
 2200              	.LVL237:
 482:lvgl/src/draw/lv_img_buf.c ****         return;
 2201              		.loc 1 482 17 view .LVU765
 2202 0092 E280     		strh	r2, [r4, #6]	@ movhi
 483:lvgl/src/draw/lv_img_buf.c ****     }
 2203              		.loc 1 483 9 is_stmt 1 view .LVU766
 2204 0094 F5E7     		b	.L120
 2205              	.LVL238:
 2206              	.L123:
 499:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2207              		.loc 1 499 5 view .LVU767
 499:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2208              		.loc 1 499 31 is_stmt 0 view .LVU768
 2209 0096 DFF87491 		ldr	r9, .L127
 2210 009a 89FB0630 		smull	r3, r0, r9, r6
 2211 009e 4FEAE678 		asr	r8, r6, #31
 2212 00a2 C8EBA008 		rsb	r8, r8, r0, asr #2
 2213 00a6 0FFA88F8 		sxth	r8, r8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 73


 2214              	.LVL239:
 500:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2215              		.loc 1 500 5 is_stmt 1 view .LVU769
 500:lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2216              		.loc 1 500 13 is_stmt 0 view .LVU770
 2217 00aa 08F1010A 		add	r10, r8, #1
 2218              	.LVL240:
 501:lvgl/src/draw/lv_img_buf.c **** 
 2219              		.loc 1 501 5 is_stmt 1 view .LVU771
 501:lvgl/src/draw/lv_img_buf.c **** 
 2220              		.loc 1 501 13 is_stmt 0 view .LVU772
 2221 00ae 6FF00903 		mvn	r3, #9
 2222 00b2 03FB0866 		mla	r6, r3, r8, r6
 2223              	.LVL241:
 503:lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 2224              		.loc 1 503 5 is_stmt 1 view .LVU773
 503:lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 2225              		.loc 1 503 18 is_stmt 0 view .LVU774
 2226 00b6 4046     		mov	r0, r8
 2227 00b8 FFF7FEFF 		bl	lv_trigo_sin
 2228              	.LVL242:
 2229 00bc 8346     		mov	fp, r0
 2230              	.LVL243:
 504:lvgl/src/draw/lv_img_buf.c **** 
 2231              		.loc 1 504 5 is_stmt 1 view .LVU775
 504:lvgl/src/draw/lv_img_buf.c **** 
 2232              		.loc 1 504 18 is_stmt 0 view .LVU776
 2233 00be 0FFA8AF0 		sxth	r0, r10
 2234              	.LVL244:
 504:lvgl/src/draw/lv_img_buf.c **** 
 2235              		.loc 1 504 18 view .LVU777
 2236 00c2 FFF7FEFF 		bl	lv_trigo_sin
 2237              	.LVL245:
 2238 00c6 0746     		mov	r7, r0
 2239              	.LVL246:
 506:lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2240              		.loc 1 506 5 is_stmt 1 view .LVU778
 506:lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2241              		.loc 1 506 41 is_stmt 0 view .LVU779
 2242 00c8 08F15A00 		add	r0, r8, #90
 2243              	.LVL247:
 506:lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2244              		.loc 1 506 18 view .LVU780
 2245 00cc 00B2     		sxth	r0, r0
 2246 00ce FFF7FEFF 		bl	lv_trigo_sin
 2247              	.LVL248:
 2248 00d2 8046     		mov	r8, r0
 2249              	.LVL249:
 507:lvgl/src/draw/lv_img_buf.c **** 
 2250              		.loc 1 507 5 is_stmt 1 view .LVU781
 507:lvgl/src/draw/lv_img_buf.c **** 
 2251              		.loc 1 507 42 is_stmt 0 view .LVU782
 2252 00d4 0AF15A00 		add	r0, r10, #90
 2253              	.LVL250:
 507:lvgl/src/draw/lv_img_buf.c **** 
 2254              		.loc 1 507 18 view .LVU783
 2255 00d8 00B2     		sxth	r0, r0
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 74


 2256 00da FFF7FEFF 		bl	lv_trigo_sin
 2257              	.LVL251:
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2258              		.loc 1 509 5 is_stmt 1 view .LVU784
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2259              		.loc 1 509 31 is_stmt 0 view .LVU785
 2260 00de C6F10A01 		rsb	r1, r6, #10
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2261              		.loc 1 509 49 view .LVU786
 2262 00e2 06FB07F7 		mul	r7, r6, r7
 2263              	.LVL252:
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2264              		.loc 1 509 44 view .LVU787
 2265 00e6 0BFB017B 		mla	fp, fp, r1, r7
 2266              	.LVL253:
 509:lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2267              		.loc 1 509 13 view .LVU788
 2268 00ea 89FB0B23 		smull	r2, r3, r9, fp
 2269 00ee 4FEAEB7B 		asr	fp, fp, #31
 2270 00f2 CBEBA303 		rsb	r3, fp, r3, asr #2
 2271              	.LVL254:
 510:lvgl/src/draw/lv_img_buf.c **** 
 2272              		.loc 1 510 5 is_stmt 1 view .LVU789
 510:lvgl/src/draw/lv_img_buf.c **** 
 2273              		.loc 1 510 49 is_stmt 0 view .LVU790
 2274 00f6 00FB06F6 		mul	r6, r0, r6
 2275              	.LVL255:
 510:lvgl/src/draw/lv_img_buf.c **** 
 2276              		.loc 1 510 44 view .LVU791
 2277 00fa 08FB0166 		mla	r6, r8, r1, r6
 510:lvgl/src/draw/lv_img_buf.c **** 
 2278              		.loc 1 510 13 view .LVU792
 2279 00fe 89FB0629 		smull	r2, r9, r9, r6
 2280 0102 F117     		asrs	r1, r6, #31
 2281 0104 C1EBA901 		rsb	r1, r1, r9, asr #2
 2282              	.LVL256:
 513:lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2283              		.loc 1 513 5 is_stmt 1 view .LVU793
 513:lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2284              		.loc 1 513 11 is_stmt 0 view .LVU794
 2285 0108 5B11     		asrs	r3, r3, #5
 2286              	.LVL257:
 514:lvgl/src/draw/lv_img_buf.c **** 
 2287              		.loc 1 514 5 is_stmt 1 view .LVU795
 514:lvgl/src/draw/lv_img_buf.c **** 
 2288              		.loc 1 514 11 is_stmt 0 view .LVU796
 2289 010a 4911     		asrs	r1, r1, #5
 2290              	.LVL258:
 516:lvgl/src/draw/lv_img_buf.c ****     lv_point_t rt;
 2291              		.loc 1 516 5 is_stmt 1 view .LVU797
 517:lvgl/src/draw/lv_img_buf.c ****     lv_point_t lb;
 2292              		.loc 1 517 5 view .LVU798
 518:lvgl/src/draw/lv_img_buf.c ****     lv_point_t rb;
 2293              		.loc 1 518 5 view .LVU799
 519:lvgl/src/draw/lv_img_buf.c **** 
 2294              		.loc 1 519 5 view .LVU800
 521:lvgl/src/draw/lv_img_buf.c ****     lv_coord_t yt;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 75


 2295              		.loc 1 521 5 view .LVU801
 522:lvgl/src/draw/lv_img_buf.c **** 
 2296              		.loc 1 522 5 view .LVU802
 524:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2297              		.loc 1 524 5 view .LVU803
 524:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2298              		.loc 1 524 8 is_stmt 0 view .LVU804
 2299 010c B4F90060 		ldrsh	r6, [r4]
 2300              	.LVL259:
 525:lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2301              		.loc 1 525 5 is_stmt 1 view .LVU805
 525:lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2302              		.loc 1 525 8 is_stmt 0 view .LVU806
 2303 0110 B4F90220 		ldrsh	r2, [r4, #2]
 2304              	.LVL260:
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2305              		.loc 1 526 5 is_stmt 1 view .LVU807
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2306              		.loc 1 526 20 is_stmt 0 view .LVU808
 2307 0114 01FB06F7 		mul	r7, r1, r6
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2308              		.loc 1 526 33 view .LVU809
 2309 0118 03FB02F0 		mul	r0, r3, r2
 2310              	.LVL261:
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2311              		.loc 1 526 25 view .LVU810
 2312 011c A7EB0008 		sub	r8, r7, r0
 2313              	.LVL262:
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2314              		.loc 1 526 76 view .LVU811
 2315 0120 B5F800C0 		ldrh	ip, [r5]
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2316              		.loc 1 526 69 view .LVU812
 2317 0124 0CEBA828 		add	r8, ip, r8, asr #10
 2318 0128 0FFA88F8 		sxth	r8, r8
 526:lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2319              		.loc 1 526 10 view .LVU813
 2320 012c ADF80C80 		strh	r8, [sp, #12]	@ movhi
 527:lvgl/src/draw/lv_img_buf.c **** 
 2321              		.loc 1 527 5 is_stmt 1 view .LVU814
 527:lvgl/src/draw/lv_img_buf.c **** 
 2322              		.loc 1 527 20 is_stmt 0 view .LVU815
 2323 0130 03FB06F6 		mul	r6, r3, r6
 2324              	.LVL263:
 527:lvgl/src/draw/lv_img_buf.c **** 
 2325              		.loc 1 527 33 view .LVU816
 2326 0134 01FB02F2 		mul	r2, r1, r2
 2327              	.LVL264:
 527:lvgl/src/draw/lv_img_buf.c **** 
 2328              		.loc 1 527 25 view .LVU817
 2329 0138 06EB020E 		add	lr, r6, r2
 527:lvgl/src/draw/lv_img_buf.c **** 
 2330              		.loc 1 527 76 view .LVU818
 2331 013c 6D88     		ldrh	r5, [r5, #2]
 527:lvgl/src/draw/lv_img_buf.c **** 
 2332              		.loc 1 527 69 view .LVU819
 2333 013e 05EBAE2E 		add	lr, r5, lr, asr #10
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 76


 2334 0142 0FFA8EFE 		sxth	lr, lr
 527:lvgl/src/draw/lv_img_buf.c **** 
 2335              		.loc 1 527 10 view .LVU820
 2336 0146 ADF80EE0 		strh	lr, [sp, #14]	@ movhi
 529:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2337              		.loc 1 529 5 is_stmt 1 view .LVU821
 529:lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2338              		.loc 1 529 8 is_stmt 0 view .LVU822
 2339 014a B4F90490 		ldrsh	r9, [r4, #4]
 2340              	.LVL265:
 530:lvgl/src/draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2341              		.loc 1 530 5 is_stmt 1 view .LVU823
 531:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2342              		.loc 1 531 5 view .LVU824
 531:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2343              		.loc 1 531 20 is_stmt 0 view .LVU825
 2344 014e 01FB09FB 		mul	fp, r1, r9
 531:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2345              		.loc 1 531 25 view .LVU826
 2346 0152 ABEB0000 		sub	r0, fp, r0
 531:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2347              		.loc 1 531 69 view .LVU827
 2348 0156 0CEBA020 		add	r0, ip, r0, asr #10
 2349 015a 00B2     		sxth	r0, r0
 531:lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2350              		.loc 1 531 10 view .LVU828
 2351 015c ADF80800 		strh	r0, [sp, #8]	@ movhi
 532:lvgl/src/draw/lv_img_buf.c **** 
 2352              		.loc 1 532 5 is_stmt 1 view .LVU829
 532:lvgl/src/draw/lv_img_buf.c **** 
 2353              		.loc 1 532 20 is_stmt 0 view .LVU830
 2354 0160 03FB09F9 		mul	r9, r3, r9
 2355              	.LVL266:
 532:lvgl/src/draw/lv_img_buf.c **** 
 2356              		.loc 1 532 25 view .LVU831
 2357 0164 4A44     		add	r2, r2, r9
 532:lvgl/src/draw/lv_img_buf.c **** 
 2358              		.loc 1 532 69 view .LVU832
 2359 0166 05EBA222 		add	r2, r5, r2, asr #10
 2360 016a 12B2     		sxth	r2, r2
 532:lvgl/src/draw/lv_img_buf.c **** 
 2361              		.loc 1 532 10 view .LVU833
 2362 016c ADF80A20 		strh	r2, [sp, #10]	@ movhi
 534:lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 2363              		.loc 1 534 5 is_stmt 1 view .LVU834
 2364              	.LVL267:
 535:lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2365              		.loc 1 535 5 view .LVU835
 535:lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2366              		.loc 1 535 8 is_stmt 0 view .LVU836
 2367 0170 B4F906A0 		ldrsh	r10, [r4, #6]
 2368              	.LVL268:
 536:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2369              		.loc 1 536 5 is_stmt 1 view .LVU837
 536:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2370              		.loc 1 536 33 is_stmt 0 view .LVU838
 2371 0174 03FB0AF3 		mul	r3, r3, r10
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 77


 2372              	.LVL269:
 536:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2373              		.loc 1 536 25 view .LVU839
 2374 0178 FF1A     		subs	r7, r7, r3
 536:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2375              		.loc 1 536 69 view .LVU840
 2376 017a 0CEBA727 		add	r7, ip, r7, asr #10
 2377 017e 3FB2     		sxth	r7, r7
 536:lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2378              		.loc 1 536 10 view .LVU841
 2379 0180 ADF80470 		strh	r7, [sp, #4]	@ movhi
 537:lvgl/src/draw/lv_img_buf.c **** 
 2380              		.loc 1 537 5 is_stmt 1 view .LVU842
 537:lvgl/src/draw/lv_img_buf.c **** 
 2381              		.loc 1 537 33 is_stmt 0 view .LVU843
 2382 0184 01FB0AF1 		mul	r1, r1, r10
 2383              	.LVL270:
 537:lvgl/src/draw/lv_img_buf.c **** 
 2384              		.loc 1 537 25 view .LVU844
 2385 0188 0E44     		add	r6, r6, r1
 537:lvgl/src/draw/lv_img_buf.c **** 
 2386              		.loc 1 537 69 view .LVU845
 2387 018a 05EBA626 		add	r6, r5, r6, asr #10
 2388 018e 36B2     		sxth	r6, r6
 537:lvgl/src/draw/lv_img_buf.c **** 
 2389              		.loc 1 537 10 view .LVU846
 2390 0190 ADF80660 		strh	r6, [sp, #6]	@ movhi
 539:lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 2391              		.loc 1 539 5 is_stmt 1 view .LVU847
 2392              	.LVL271:
 540:lvgl/src/draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2393              		.loc 1 540 5 view .LVU848
 541:lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2394              		.loc 1 541 5 view .LVU849
 541:lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2395              		.loc 1 541 25 is_stmt 0 view .LVU850
 2396 0194 ABEB0303 		sub	r3, fp, r3
 541:lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2397              		.loc 1 541 69 view .LVU851
 2398 0198 0CEBA32C 		add	ip, ip, r3, asr #10
 2399 019c 0FFA8CFC 		sxth	ip, ip
 541:lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2400              		.loc 1 541 10 view .LVU852
 2401 01a0 ADF800C0 		strh	ip, [sp]	@ movhi
 542:lvgl/src/draw/lv_img_buf.c **** 
 2402              		.loc 1 542 5 is_stmt 1 view .LVU853
 542:lvgl/src/draw/lv_img_buf.c **** 
 2403              		.loc 1 542 25 is_stmt 0 view .LVU854
 2404 01a4 4944     		add	r1, r1, r9
 542:lvgl/src/draw/lv_img_buf.c **** 
 2405              		.loc 1 542 69 view .LVU855
 2406 01a6 05EBA125 		add	r5, r5, r1, asr #10
 2407 01aa 2DB2     		sxth	r5, r5
 542:lvgl/src/draw/lv_img_buf.c **** 
 2408              		.loc 1 542 10 view .LVU856
 2409 01ac ADF80250 		strh	r5, [sp, #2]	@ movhi
 544:lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 78


 2410              		.loc 1 544 5 is_stmt 1 view .LVU857
 544:lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 2411              		.loc 1 544 15 is_stmt 0 view .LVU858
 2412 01b0 0346     		mov	r3, r0
 2413 01b2 6045     		cmp	r0, ip
 2414 01b4 A8BF     		it	ge
 2415 01b6 6346     		movge	r3, ip
 2416 01b8 4146     		mov	r1, r8
 2417 01ba B845     		cmp	r8, r7
 2418 01bc A8BF     		it	ge
 2419 01be 3946     		movge	r1, r7
 2420 01c0 8B42     		cmp	r3, r1
 2421 01c2 A8BF     		it	ge
 2422 01c4 0B46     		movge	r3, r1
 544:lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 2423              		.loc 1 544 13 view .LVU859
 2424 01c6 2380     		strh	r3, [r4]	@ movhi
 545:lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2425              		.loc 1 545 5 is_stmt 1 view .LVU860
 545:lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2426              		.loc 1 545 15 is_stmt 0 view .LVU861
 2427 01c8 6045     		cmp	r0, ip
 2428 01ca B8BF     		it	lt
 2429 01cc 6046     		movlt	r0, ip
 2430 01ce 4745     		cmp	r7, r8
 2431 01d0 B8BF     		it	lt
 2432 01d2 4746     		movlt	r7, r8
 2433 01d4 B842     		cmp	r0, r7
 2434 01d6 B8BF     		it	lt
 2435 01d8 3846     		movlt	r0, r7
 545:lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2436              		.loc 1 545 13 view .LVU862
 2437 01da A080     		strh	r0, [r4, #4]	@ movhi
 2438              	.LVL272:
 546:lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2439              		.loc 1 546 5 is_stmt 1 view .LVU863
 546:lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2440              		.loc 1 546 15 is_stmt 0 view .LVU864
 2441 01dc 1346     		mov	r3, r2
 2442 01de AA42     		cmp	r2, r5
 2443 01e0 A8BF     		it	ge
 2444 01e2 2B46     		movge	r3, r5
 2445 01e4 7146     		mov	r1, lr
 2446 01e6 B645     		cmp	lr, r6
 2447 01e8 A8BF     		it	ge
 2448 01ea 3146     		movge	r1, r6
 2449 01ec 8B42     		cmp	r3, r1
 2450 01ee A8BF     		it	ge
 2451 01f0 0B46     		movge	r3, r1
 546:lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2452              		.loc 1 546 13 view .LVU865
 2453 01f2 6380     		strh	r3, [r4, #2]	@ movhi
 547:lvgl/src/draw/lv_img_buf.c **** #else
 2454              		.loc 1 547 5 is_stmt 1 view .LVU866
 547:lvgl/src/draw/lv_img_buf.c **** #else
 2455              		.loc 1 547 15 is_stmt 0 view .LVU867
 2456 01f4 AA42     		cmp	r2, r5
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 79


 2457 01f6 B8BF     		it	lt
 2458 01f8 2A46     		movlt	r2, r5
 2459 01fa 7645     		cmp	r6, lr
 2460 01fc B8BF     		it	lt
 2461 01fe 7646     		movlt	r6, lr
 2462 0200 B242     		cmp	r2, r6
 2463 0202 B8BF     		it	lt
 2464 0204 3246     		movlt	r2, r6
 547:lvgl/src/draw/lv_img_buf.c **** #else
 2465              		.loc 1 547 13 view .LVU868
 2466 0206 E280     		strh	r2, [r4, #6]	@ movhi
 2467 0208 3BE7     		b	.L120
 2468              	.L128:
 2469 020a 00BF     		.align	2
 2470              	.L127:
 2471 020c 67666666 		.word	1717986919
 2472              		.cfi_endproc
 2473              	.LFE57:
 2475              		.section	.text._lv_img_buf_transform_anti_alias,"ax",%progbits
 2476              		.align	1
 2477              		.global	_lv_img_buf_transform_anti_alias
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
 2481              		.fpu fpv4-sp-d16
 2483              	_lv_img_buf_transform_anti_alias:
 2484              	.LVL273:
 2485              	.LFB59:
 558:lvgl/src/draw/lv_img_buf.c **** 
 559:lvgl/src/draw/lv_img_buf.c **** 
 560:lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 561:lvgl/src/draw/lv_img_buf.c **** /**
 562:lvgl/src/draw/lv_img_buf.c ****  * Get which color and opa would come to a pixel if it were rotated
 563:lvgl/src/draw/lv_img_buf.c ****  * @param dsc a descriptor initialized by `lv_img_buf_rotate_init`
 564:lvgl/src/draw/lv_img_buf.c ****  * @param x the coordinate which color and opa should be get
 565:lvgl/src/draw/lv_img_buf.c ****  * @param y the coordinate which color and opa should be get
 566:lvgl/src/draw/lv_img_buf.c ****  * @return true: there is valid pixel on these x/y coordinates; false: the rotated pixel was out of
 567:lvgl/src/draw/lv_img_buf.c ****  * @note the result is written back to `dsc->res_color` and `dsc->res_opa`
 568:lvgl/src/draw/lv_img_buf.c ****  */
 569:lvgl/src/draw/lv_img_buf.c **** bool _lv_img_buf_transform(lv_img_transform_dsc_t * dsc, lv_coord_t x, lv_coord_t y)
 570:lvgl/src/draw/lv_img_buf.c **** {
 571:lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 572:lvgl/src/draw/lv_img_buf.c **** 
 573:lvgl/src/draw/lv_img_buf.c ****     /*Get the target point relative coordinates to the pivot*/
 574:lvgl/src/draw/lv_img_buf.c ****     int32_t xt = x - dsc->cfg.pivot_x;
 575:lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 576:lvgl/src/draw/lv_img_buf.c **** 
 577:lvgl/src/draw/lv_img_buf.c ****     int32_t xs;
 578:lvgl/src/draw/lv_img_buf.c ****     int32_t ys;
 579:lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.zoom == LV_IMG_ZOOM_NONE) {
 580:lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 581:lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 582:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 583:lvgl/src/draw/lv_img_buf.c ****     }
 584:lvgl/src/draw/lv_img_buf.c ****     else if(dsc->cfg.angle == 0) {
 585:lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 586:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 80


 587:lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 588:lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 589:lvgl/src/draw/lv_img_buf.c ****     }
 590:lvgl/src/draw/lv_img_buf.c ****     else {
 591:lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 592:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 593:lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 594:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 595:lvgl/src/draw/lv_img_buf.c ****     }
 596:lvgl/src/draw/lv_img_buf.c **** 
 597:lvgl/src/draw/lv_img_buf.c ****     /*Get the integer part of the source pixel*/
 598:lvgl/src/draw/lv_img_buf.c ****     int32_t xs_int = xs >> 8;
 599:lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 600:lvgl/src/draw/lv_img_buf.c **** 
 601:lvgl/src/draw/lv_img_buf.c ****     if(xs_int >= dsc->cfg.src_w) return false;
 602:lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 603:lvgl/src/draw/lv_img_buf.c **** 
 604:lvgl/src/draw/lv_img_buf.c ****     if(ys_int >= dsc->cfg.src_h) return false;
 605:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 606:lvgl/src/draw/lv_img_buf.c **** 
 607:lvgl/src/draw/lv_img_buf.c ****     uint8_t px_size;
 608:lvgl/src/draw/lv_img_buf.c ****     uint32_t pxi;
 609:lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 610:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 611:lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 612:lvgl/src/draw/lv_img_buf.c **** 
 613:lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 614:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 615:lvgl/src/draw/lv_img_buf.c ****         }
 616:lvgl/src/draw/lv_img_buf.c ****         else {
 617:lvgl/src/draw/lv_img_buf.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE;
 618:lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 619:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 620:lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 621:lvgl/src/draw/lv_img_buf.c ****         }
 622:lvgl/src/draw/lv_img_buf.c ****     }
 623:lvgl/src/draw/lv_img_buf.c ****     else {
 624:lvgl/src/draw/lv_img_buf.c ****         pxi = 0; /*unused*/
 625:lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 626:lvgl/src/draw/lv_img_buf.c ****         dsc->res.color = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, xs_int, ys_int, dsc->cfg.color)
 627:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 628:lvgl/src/draw/lv_img_buf.c ****     }
 629:lvgl/src/draw/lv_img_buf.c **** 
 630:lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.chroma_keyed) {
 631:lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 632:lvgl/src/draw/lv_img_buf.c ****         if(dsc->res.color.full == ct.full) return false;
 633:lvgl/src/draw/lv_img_buf.c ****     }
 634:lvgl/src/draw/lv_img_buf.c **** 
 635:lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.antialias == false) return true;
 636:lvgl/src/draw/lv_img_buf.c **** 
 637:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs = xs;
 638:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 639:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 640:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 641:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 642:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 643:lvgl/src/draw/lv_img_buf.c **** 
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 81


 644:lvgl/src/draw/lv_img_buf.c ****     bool ret;
 645:lvgl/src/draw/lv_img_buf.c ****     ret = _lv_img_buf_transform_anti_alias(dsc);
 646:lvgl/src/draw/lv_img_buf.c **** 
 647:lvgl/src/draw/lv_img_buf.c ****     return ret;
 648:lvgl/src/draw/lv_img_buf.c **** }
 649:lvgl/src/draw/lv_img_buf.c **** 
 650:lvgl/src/draw/lv_img_buf.c **** /**
 651:lvgl/src/draw/lv_img_buf.c ****  * Continue transformation by taking the neighbors into account
 652:lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to the transformation descriptor
 653:lvgl/src/draw/lv_img_buf.c ****  */
 654:lvgl/src/draw/lv_img_buf.c **** bool _lv_img_buf_transform_anti_alias(lv_img_transform_dsc_t * dsc)
 655:lvgl/src/draw/lv_img_buf.c **** {
 2486              		.loc 1 655 1 is_stmt 1 view -0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 32
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              		.loc 1 655 1 is_stmt 0 view .LVU870
 2491 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2492              	.LCFI25:
 2493              		.cfi_def_cfa_offset 36
 2494              		.cfi_offset 4, -36
 2495              		.cfi_offset 5, -32
 2496              		.cfi_offset 6, -28
 2497              		.cfi_offset 7, -24
 2498              		.cfi_offset 8, -20
 2499              		.cfi_offset 9, -16
 2500              		.cfi_offset 10, -12
 2501              		.cfi_offset 11, -8
 2502              		.cfi_offset 14, -4
 2503 0004 89B0     		sub	sp, sp, #36
 2504              	.LCFI26:
 2505              		.cfi_def_cfa_offset 72
 2506 0006 0446     		mov	r4, r0
 656:lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = dsc->cfg.src;
 2507              		.loc 1 656 5 is_stmt 1 view .LVU871
 2508              		.loc 1 656 21 is_stmt 0 view .LVU872
 2509 0008 0268     		ldr	r2, [r0]
 2510              	.LVL274:
 657:lvgl/src/draw/lv_img_buf.c **** 
 658:lvgl/src/draw/lv_img_buf.c ****     /*Get the fractional part of the source pixel*/
 659:lvgl/src/draw/lv_img_buf.c ****     int xs_fract = dsc->tmp.xs & 0xff;
 2511              		.loc 1 659 5 is_stmt 1 view .LVU873
 2512              		.loc 1 659 28 is_stmt 0 view .LVU874
 2513 000a B0F94450 		ldrsh	r5, [r0, #68]
 2514              		.loc 1 659 9 view .LVU875
 2515 000e E9B2     		uxtb	r1, r5
 2516              	.LVL275:
 660:lvgl/src/draw/lv_img_buf.c ****     int ys_fract = dsc->tmp.ys & 0xff;
 2517              		.loc 1 660 5 is_stmt 1 view .LVU876
 2518              		.loc 1 660 28 is_stmt 0 view .LVU877
 2519 0010 B0F94660 		ldrsh	r6, [r0, #70]
 2520              		.loc 1 660 9 view .LVU878
 2521 0014 F3B2     		uxtb	r3, r6
 2522              	.LVL276:
 661:lvgl/src/draw/lv_img_buf.c ****     int32_t xn;      /*x neighbor*/
 2523              		.loc 1 661 5 is_stmt 1 view .LVU879
 662:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr; /*x mix ratio*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 82


 2524              		.loc 1 662 5 view .LVU880
 663:lvgl/src/draw/lv_img_buf.c **** 
 664:lvgl/src/draw/lv_img_buf.c ****     if(xs_fract < 0x70) {
 2525              		.loc 1 664 5 view .LVU881
 2526              		.loc 1 664 7 is_stmt 0 view .LVU882
 2527 0016 6F29     		cmp	r1, #111
 2528 0018 28DC     		bgt	.L130
 665:lvgl/src/draw/lv_img_buf.c ****         xn = - 1;
 2529              		.loc 1 665 9 is_stmt 1 view .LVU883
 2530              	.LVL277:
 666:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn < 0) xn = 0;
 2531              		.loc 1 666 9 view .LVU884
 2532              		.loc 1 666 20 is_stmt 0 view .LVU885
 2533 001a B0F94810 		ldrsh	r1, [r0, #72]
 2534              	.LVL278:
 2535              		.loc 1 666 11 view .LVU886
 2536 001e 0029     		cmp	r1, #0
 2537 0020 22DD     		ble	.L163
 665:lvgl/src/draw/lv_img_buf.c ****         xn = - 1;
 2538              		.loc 1 665 12 view .LVU887
 2539 0022 4FF0FF37 		mov	r7, #-1
 2540              	.L131:
 2541              	.LVL279:
 667:lvgl/src/draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2542              		.loc 1 667 9 is_stmt 1 view .LVU888
 2543              		.loc 1 667 23 is_stmt 0 view .LVU889
 2544 0026 EDB2     		uxtb	r5, r5
 2545              		.loc 1 667 12 view .LVU890
 2546 0028 85F08005 		eor	r5, r5, #128
 2547              	.LVL280:
 2548              	.L132:
 668:lvgl/src/draw/lv_img_buf.c ****     }
 669:lvgl/src/draw/lv_img_buf.c ****     else if(xs_fract > 0x90) {
 670:lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 671:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 672:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 673:lvgl/src/draw/lv_img_buf.c ****     }
 674:lvgl/src/draw/lv_img_buf.c ****     else {
 675:lvgl/src/draw/lv_img_buf.c ****         xn = 0;
 676:lvgl/src/draw/lv_img_buf.c ****         xr = 0xFF;
 677:lvgl/src/draw/lv_img_buf.c ****     }
 678:lvgl/src/draw/lv_img_buf.c **** 
 679:lvgl/src/draw/lv_img_buf.c ****     int32_t yn;      /*x neighbor*/
 2549              		.loc 1 679 5 is_stmt 1 view .LVU891
 680:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t yr; /*x mix ratio*/
 2550              		.loc 1 680 5 view .LVU892
 681:lvgl/src/draw/lv_img_buf.c **** 
 682:lvgl/src/draw/lv_img_buf.c ****     if(ys_fract < 0x70) {
 2551              		.loc 1 682 5 view .LVU893
 2552              		.loc 1 682 7 is_stmt 0 view .LVU894
 2553 002c 6F2B     		cmp	r3, #111
 2554 002e 34DC     		bgt	.L134
 683:lvgl/src/draw/lv_img_buf.c ****         yn = - 1;
 2555              		.loc 1 683 9 is_stmt 1 view .LVU895
 2556              	.LVL281:
 684:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn < 0) yn = 0;
 2557              		.loc 1 684 9 view .LVU896
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 83


 2558              		.loc 1 684 20 is_stmt 0 view .LVU897
 2559 0030 B4F94A30 		ldrsh	r3, [r4, #74]
 2560              	.LVL282:
 2561              		.loc 1 684 11 view .LVU898
 2562 0034 002B     		cmp	r3, #0
 2563 0036 2DDD     		ble	.L166
 683:lvgl/src/draw/lv_img_buf.c ****         yn = - 1;
 2564              		.loc 1 683 12 view .LVU899
 2565 0038 4FF0FF39 		mov	r9, #-1
 2566              	.L135:
 2567              	.LVL283:
 685:lvgl/src/draw/lv_img_buf.c **** 
 686:lvgl/src/draw/lv_img_buf.c ****         yr = ys_fract + 0x80;
 2568              		.loc 1 686 9 is_stmt 1 view .LVU900
 2569              		.loc 1 686 23 is_stmt 0 view .LVU901
 2570 003c F6B2     		uxtb	r6, r6
 2571              		.loc 1 686 12 view .LVU902
 2572 003e 86F08006 		eor	r6, r6, #128
 2573              	.LVL284:
 2574              	.L136:
 687:lvgl/src/draw/lv_img_buf.c ****     }
 688:lvgl/src/draw/lv_img_buf.c ****     else if(ys_fract > 0x90) {
 689:lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 690:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 691:lvgl/src/draw/lv_img_buf.c **** 
 692:lvgl/src/draw/lv_img_buf.c ****         yr = (0xFF - ys_fract) + 0x80;
 693:lvgl/src/draw/lv_img_buf.c ****     }
 694:lvgl/src/draw/lv_img_buf.c ****     else {
 695:lvgl/src/draw/lv_img_buf.c ****         yn = 0;
 696:lvgl/src/draw/lv_img_buf.c ****         yr = 0xFF;
 697:lvgl/src/draw/lv_img_buf.c ****     }
 698:lvgl/src/draw/lv_img_buf.c **** 
 699:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c00 = dsc->res.color;
 2575              		.loc 1 699 5 is_stmt 1 view .LVU903
 2576              		.loc 1 699 16 is_stmt 0 view .LVU904
 2577 0042 A369     		ldr	r3, [r4, #24]
 2578              	.LVL285:
 2579              		.loc 1 699 16 view .LVU905
 2580 0044 0193     		str	r3, [sp, #4]
 700:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c01;
 2581              		.loc 1 700 5 is_stmt 1 view .LVU906
 701:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c10;
 2582              		.loc 1 701 5 view .LVU907
 702:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c11;
 2583              		.loc 1 702 5 view .LVU908
 703:lvgl/src/draw/lv_img_buf.c **** 
 704:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a00 = dsc->res.opa;
 2584              		.loc 1 704 5 view .LVU909
 2585              		.loc 1 704 14 is_stmt 0 view .LVU910
 2586 0046 94F81CA0 		ldrb	r10, [r4, #28]	@ zero_extendqisi2
 2587              	.LVL286:
 705:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a10 = 0;
 2588              		.loc 1 705 5 is_stmt 1 view .LVU911
 706:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a01 = 0;
 2589              		.loc 1 706 5 view .LVU912
 707:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 2590              		.loc 1 707 5 view .LVU913
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 84


 708:lvgl/src/draw/lv_img_buf.c **** 
 709:lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 2591              		.loc 1 709 5 view .LVU914
 2592              		.loc 1 709 8 is_stmt 0 view .LVU915
 2593 004a 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2594              	.LVL287:
 2595              		.loc 1 709 7 view .LVU916
 2596 004e 13F0040F 		tst	r3, #4
 2597 0052 00F0C180 		beq	.L138
 710:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c01, &src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn], sizeof(lv_color_t));
 2598              		.loc 1 710 9 is_stmt 1 view .LVU917
 2599              		.loc 1 710 47 is_stmt 0 view .LVU918
 2600 0056 E16C     		ldr	r1, [r4, #76]
 2601              		.loc 1 710 62 view .LVU919
 2602 0058 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2603              		.loc 1 710 52 view .LVU920
 2604 005c 07FB0311 		mla	r1, r7, r3, r1
 2605              		.loc 1 710 31 view .LVU921
 2606 0060 1144     		add	r1, r1, r2
 2607              	.LVL288:
 2608              	.LBB97:
 2609              	.LBI97:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 2610              		.loc 3 201 44 is_stmt 1 view .LVU922
 2611              	.LBB98:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2612              		.loc 3 203 5 view .LVU923
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 2613              		.loc 3 204 5 view .LVU924
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2614              		.loc 3 206 5 view .LVU925
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2615              		.loc 3 203 15 is_stmt 0 view .LVU926
 2616 0062 07A8     		add	r0, sp, #28
 2617              	.LVL289:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2618              		.loc 3 206 10 view .LVU927
 2619 0064 0423     		movs	r3, #4
 2620 0066 34E0     		b	.L139
 2621              	.LVL290:
 2622              	.L163:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2623              		.loc 3 206 10 view .LVU928
 2624              	.LBE98:
 2625              	.LBE97:
 666:lvgl/src/draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2626              		.loc 1 666 41 view .LVU929
 2627 0068 0027     		movs	r7, #0
 2628 006a DCE7     		b	.L131
 2629              	.LVL291:
 2630              	.L130:
 669:lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 2631              		.loc 1 669 10 is_stmt 1 view .LVU930
 669:lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 2632              		.loc 1 669 12 is_stmt 0 view .LVU931
 2633 006c 9029     		cmp	r1, #144
 2634 006e 0EDD     		ble	.L164
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 85


 670:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2635              		.loc 1 670 9 is_stmt 1 view .LVU932
 2636              	.LVL292:
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2637              		.loc 1 671 9 view .LVU933
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2638              		.loc 1 671 20 is_stmt 0 view .LVU934
 2639 0070 B0F94810 		ldrsh	r1, [r0, #72]
 2640              	.LVL293:
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2641              		.loc 1 671 28 view .LVU935
 2642 0074 0131     		adds	r1, r1, #1
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2643              		.loc 1 671 44 view .LVU936
 2644 0076 B0F90400 		ldrsh	r0, [r0, #4]
 2645              	.LVL294:
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2646              		.loc 1 671 11 view .LVU937
 2647 007a 8142     		cmp	r1, r0
 2648 007c 05DA     		bge	.L165
 670:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2649              		.loc 1 670 12 view .LVU938
 2650 007e 0127     		movs	r7, #1
 2651              	.L133:
 2652              	.LVL295:
 672:lvgl/src/draw/lv_img_buf.c ****     }
 2653              		.loc 1 672 9 is_stmt 1 view .LVU939
 672:lvgl/src/draw/lv_img_buf.c ****     }
 2654              		.loc 1 672 32 is_stmt 0 view .LVU940
 2655 0080 EDB2     		uxtb	r5, r5
 672:lvgl/src/draw/lv_img_buf.c ****     }
 2656              		.loc 1 672 12 view .LVU941
 2657 0082 C5F17F05 		rsb	r5, r5, #127
 2658              	.LVL296:
 672:lvgl/src/draw/lv_img_buf.c ****     }
 2659              		.loc 1 672 12 view .LVU942
 2660 0086 EDB2     		uxtb	r5, r5
 2661              	.LVL297:
 672:lvgl/src/draw/lv_img_buf.c ****     }
 2662              		.loc 1 672 12 view .LVU943
 2663 0088 D0E7     		b	.L132
 2664              	.LVL298:
 2665              	.L165:
 671:lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2666              		.loc 1 671 55 view .LVU944
 2667 008a 0027     		movs	r7, #0
 2668 008c F8E7     		b	.L133
 2669              	.LVL299:
 2670              	.L164:
 676:lvgl/src/draw/lv_img_buf.c ****     }
 2671              		.loc 1 676 12 view .LVU945
 2672 008e FF25     		movs	r5, #255
 675:lvgl/src/draw/lv_img_buf.c ****         xr = 0xFF;
 2673              		.loc 1 675 12 view .LVU946
 2674 0090 0027     		movs	r7, #0
 2675 0092 CBE7     		b	.L132
 2676              	.LVL300:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 86


 2677              	.L166:
 684:lvgl/src/draw/lv_img_buf.c **** 
 2678              		.loc 1 684 41 view .LVU947
 2679 0094 4FF00009 		mov	r9, #0
 2680 0098 D0E7     		b	.L135
 2681              	.LVL301:
 2682              	.L134:
 688:lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 2683              		.loc 1 688 10 is_stmt 1 view .LVU948
 688:lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 2684              		.loc 1 688 12 is_stmt 0 view .LVU949
 2685 009a 902B     		cmp	r3, #144
 2686 009c 10DD     		ble	.L167
 689:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2687              		.loc 1 689 9 is_stmt 1 view .LVU950
 2688              	.LVL302:
 690:lvgl/src/draw/lv_img_buf.c **** 
 2689              		.loc 1 690 9 view .LVU951
 690:lvgl/src/draw/lv_img_buf.c **** 
 2690              		.loc 1 690 20 is_stmt 0 view .LVU952
 2691 009e B4F94A30 		ldrsh	r3, [r4, #74]
 2692              	.LVL303:
 690:lvgl/src/draw/lv_img_buf.c **** 
 2693              		.loc 1 690 28 view .LVU953
 2694 00a2 0133     		adds	r3, r3, #1
 690:lvgl/src/draw/lv_img_buf.c **** 
 2695              		.loc 1 690 44 view .LVU954
 2696 00a4 B4F90610 		ldrsh	r1, [r4, #6]
 690:lvgl/src/draw/lv_img_buf.c **** 
 2697              		.loc 1 690 11 view .LVU955
 2698 00a8 8B42     		cmp	r3, r1
 2699 00aa 06DA     		bge	.L168
 689:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2700              		.loc 1 689 12 view .LVU956
 2701 00ac 4FF00109 		mov	r9, #1
 2702              	.L137:
 2703              	.LVL304:
 692:lvgl/src/draw/lv_img_buf.c ****     }
 2704              		.loc 1 692 9 is_stmt 1 view .LVU957
 692:lvgl/src/draw/lv_img_buf.c ****     }
 2705              		.loc 1 692 32 is_stmt 0 view .LVU958
 2706 00b0 F6B2     		uxtb	r6, r6
 692:lvgl/src/draw/lv_img_buf.c ****     }
 2707              		.loc 1 692 12 view .LVU959
 2708 00b2 C6F17F06 		rsb	r6, r6, #127
 2709              	.LVL305:
 692:lvgl/src/draw/lv_img_buf.c ****     }
 2710              		.loc 1 692 12 view .LVU960
 2711 00b6 F6B2     		uxtb	r6, r6
 2712              	.LVL306:
 692:lvgl/src/draw/lv_img_buf.c ****     }
 2713              		.loc 1 692 12 view .LVU961
 2714 00b8 C3E7     		b	.L136
 2715              	.LVL307:
 2716              	.L168:
 690:lvgl/src/draw/lv_img_buf.c **** 
 2717              		.loc 1 690 55 view .LVU962
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 87


 2718 00ba 4FF00009 		mov	r9, #0
 2719 00be F7E7     		b	.L137
 2720              	.LVL308:
 2721              	.L167:
 696:lvgl/src/draw/lv_img_buf.c ****     }
 2722              		.loc 1 696 12 view .LVU963
 2723 00c0 FF26     		movs	r6, #255
 695:lvgl/src/draw/lv_img_buf.c ****         yr = 0xFF;
 2724              		.loc 1 695 12 view .LVU964
 2725 00c2 4FF00009 		mov	r9, #0
 2726 00c6 BCE7     		b	.L136
 2727              	.LVL309:
 2728              	.L140:
 2729              	.LBB100:
 2730              	.LBB99:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2731              		.loc 3 207 9 is_stmt 1 view .LVU965
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2732              		.loc 3 207 15 is_stmt 0 view .LVU966
 2733 00c8 11F801CB 		ldrb	ip, [r1], #1	@ zero_extendqisi2
 2734              	.LVL310:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2735              		.loc 3 207 13 view .LVU967
 2736 00cc 00F801CB 		strb	ip, [r0], #1
 2737              	.LVL311:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2738              		.loc 3 208 9 is_stmt 1 view .LVU968
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2739              		.loc 3 209 9 view .LVU969
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2740              		.loc 3 210 9 view .LVU970
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2741              		.loc 3 210 12 is_stmt 0 view .LVU971
 2742 00d0 013B     		subs	r3, r3, #1
 2743              	.LVL312:
 2744              	.L139:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2745              		.loc 3 206 10 is_stmt 1 view .LVU972
 2746 00d2 002B     		cmp	r3, #0
 2747 00d4 F8D1     		bne	.L140
 2748              		.loc 3 213 5 view .LVU973
 2749              	.LVL313:
 2750              		.loc 3 213 5 is_stmt 0 view .LVU974
 2751              	.LBE99:
 2752              	.LBE100:
 711:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c10, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn], sizeo
 2753              		.loc 1 711 9 is_stmt 1 view .LVU975
 2754              		.loc 1 711 47 is_stmt 0 view .LVU976
 2755 00d6 E16C     		ldr	r1, [r4, #76]
 2756              		.loc 1 711 62 view .LVU977
 2757 00d8 B4F90430 		ldrsh	r3, [r4, #4]
 2758              		.loc 1 711 79 view .LVU978
 2759 00dc 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2760              		.loc 1 711 69 view .LVU979
 2761 00e0 00FB03F3 		mul	r3, r0, r3
 2762              		.loc 1 711 52 view .LVU980
 2763 00e4 09FB0311 		mla	r1, r9, r3, r1
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 88


 2764              		.loc 1 711 31 view .LVU981
 2765 00e8 1144     		add	r1, r1, r2
 2766              	.LVL314:
 2767              	.LBB101:
 2768              	.LBI101:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 2769              		.loc 3 201 44 is_stmt 1 view .LVU982
 2770              	.LBB102:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2771              		.loc 3 203 15 is_stmt 0 view .LVU983
 2772 00ea 06A8     		add	r0, sp, #24
 2773              	.LVL315:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2774              		.loc 3 203 15 view .LVU984
 2775              	.LBE102:
 2776              	.LBE101:
 2777              		.loc 1 711 31 view .LVU985
 2778 00ec 0423     		movs	r3, #4
 2779 00ee 04E0     		b	.L141
 2780              	.LVL316:
 2781              	.L142:
 2782              	.LBB104:
 2783              	.LBB103:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2784              		.loc 3 207 9 is_stmt 1 view .LVU986
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2785              		.loc 3 207 15 is_stmt 0 view .LVU987
 2786 00f0 11F801CB 		ldrb	ip, [r1], #1	@ zero_extendqisi2
 2787              	.LVL317:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2788              		.loc 3 207 13 view .LVU988
 2789 00f4 00F801CB 		strb	ip, [r0], #1
 2790              	.LVL318:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2791              		.loc 3 208 9 is_stmt 1 view .LVU989
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2792              		.loc 3 209 9 view .LVU990
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2793              		.loc 3 210 9 view .LVU991
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2794              		.loc 3 210 12 is_stmt 0 view .LVU992
 2795 00f8 013B     		subs	r3, r3, #1
 2796              	.LVL319:
 2797              	.L141:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2798              		.loc 3 206 10 is_stmt 1 view .LVU993
 2799 00fa 002B     		cmp	r3, #0
 2800 00fc F8D1     		bne	.L142
 2801              		.loc 3 213 5 view .LVU994
 2802              	.LVL320:
 2803              		.loc 3 213 5 is_stmt 0 view .LVU995
 2804              	.LBE103:
 2805              	.LBE104:
 712:lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c11, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->
 2806              		.loc 1 712 9 is_stmt 1 view .LVU996
 2807              		.loc 1 712 47 is_stmt 0 view .LVU997
 2808 00fe E16C     		ldr	r1, [r4, #76]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 89


 2809              		.loc 1 712 103 view .LVU998
 2810 0100 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2811              		.loc 1 712 62 view .LVU999
 2812 0104 B4F90430 		ldrsh	r3, [r4, #4]
 2813              		.loc 1 712 69 view .LVU1000
 2814 0108 00FB03F3 		mul	r3, r0, r3
 2815              		.loc 1 712 88 view .LVU1001
 2816 010c 09FB03F3 		mul	r3, r9, r3
 2817              		.loc 1 712 93 view .LVU1002
 2818 0110 07FB0033 		mla	r3, r7, r0, r3
 2819 0114 0B44     		add	r3, r3, r1
 2820              		.loc 1 712 31 view .LVU1003
 2821 0116 1344     		add	r3, r3, r2
 2822              	.LVL321:
 2823              	.LBB105:
 2824              	.LBI105:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 2825              		.loc 3 201 44 is_stmt 1 view .LVU1004
 2826              	.LBB106:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2827              		.loc 3 203 15 is_stmt 0 view .LVU1005
 2828 0118 05A8     		add	r0, sp, #20
 2829              	.LVL322:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2830              		.loc 3 203 15 view .LVU1006
 2831              	.LBE106:
 2832              	.LBE105:
 2833              		.loc 1 712 31 view .LVU1007
 2834 011a 0421     		movs	r1, #4
 2835 011c 04E0     		b	.L143
 2836              	.LVL323:
 2837              	.L144:
 2838              	.LBB108:
 2839              	.LBB107:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2840              		.loc 3 207 9 is_stmt 1 view .LVU1008
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2841              		.loc 3 207 15 is_stmt 0 view .LVU1009
 2842 011e 13F801CB 		ldrb	ip, [r3], #1	@ zero_extendqisi2
 2843              	.LVL324:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2844              		.loc 3 207 13 view .LVU1010
 2845 0122 00F801CB 		strb	ip, [r0], #1
 2846              	.LVL325:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2847              		.loc 3 208 9 is_stmt 1 view .LVU1011
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2848              		.loc 3 209 9 view .LVU1012
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2849              		.loc 3 210 9 view .LVU1013
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 2850              		.loc 3 210 12 is_stmt 0 view .LVU1014
 2851 0126 0139     		subs	r1, r1, #1
 2852              	.LVL326:
 2853              	.L143:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2854              		.loc 3 206 10 is_stmt 1 view .LVU1015
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 90


 2855 0128 0029     		cmp	r1, #0
 2856 012a F8D1     		bne	.L144
 2857              		.loc 3 213 5 view .LVU1016
 2858              	.LVL327:
 2859              		.loc 3 213 5 is_stmt 0 view .LVU1017
 2860              	.LBE107:
 2861              	.LBE108:
 713:lvgl/src/draw/lv_img_buf.c ****                          sizeof(lv_color_t));
 714:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 2862              		.loc 1 714 9 is_stmt 1 view .LVU1018
 2863              		.loc 1 714 12 is_stmt 0 view .LVU1019
 2864 012c 94F83C80 		ldrb	r8, [r4, #60]	@ zero_extendqisi2
 2865              		.loc 1 714 11 view .LVU1020
 2866 0130 18F00208 		ands	r8, r8, #2
 2867 0134 00F09C80 		beq	.L169
 715:lvgl/src/draw/lv_img_buf.c ****             a10 = src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn + dsc->tmp.px_size - 1];
 2868              		.loc 1 715 13 is_stmt 1 view .LVU1021
 2869              		.loc 1 715 34 is_stmt 0 view .LVU1022
 2870 0138 E06C     		ldr	r0, [r4, #76]
 2871              		.loc 1 715 49 view .LVU1023
 2872 013a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2873              		.loc 1 715 58 view .LVU1024
 2874 013e 07FB03F1 		mul	r1, r7, r3
 2875              		.loc 1 715 39 view .LVU1025
 2876 0142 4718     		adds	r7, r0, r1
 2877              	.LVL328:
 2878              		.loc 1 715 63 view .LVU1026
 2879 0144 1F44     		add	r7, r7, r3
 2880              		.loc 1 715 25 view .LVU1027
 2881 0146 013F     		subs	r7, r7, #1
 2882              		.loc 1 715 17 view .LVU1028
 2883 0148 12F80780 		ldrb	r8, [r2, r7]	@ zero_extendqisi2
 2884              	.LVL329:
 716:lvgl/src/draw/lv_img_buf.c ****             a01 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size -
 2885              		.loc 1 716 13 is_stmt 1 view .LVU1029
 2886              		.loc 1 716 49 is_stmt 0 view .LVU1030
 2887 014c B4F90470 		ldrsh	r7, [r4, #4]
 2888              		.loc 1 716 56 view .LVU1031
 2889 0150 03FB07F7 		mul	r7, r3, r7
 2890              		.loc 1 716 75 view .LVU1032
 2891 0154 09FB07F9 		mul	r9, r9, r7
 2892              	.LVL330:
 2893              		.loc 1 716 39 view .LVU1033
 2894 0158 00EB0907 		add	r7, r0, r9
 2895              		.loc 1 716 80 view .LVU1034
 2896 015c 1F44     		add	r7, r7, r3
 2897              		.loc 1 716 25 view .LVU1035
 2898 015e 013F     		subs	r7, r7, #1
 2899              		.loc 1 716 17 view .LVU1036
 2900 0160 D75D     		ldrb	r7, [r2, r7]	@ zero_extendqisi2
 2901              	.LVL331:
 717:lvgl/src/draw/lv_img_buf.c ****             a11 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size *
 2902              		.loc 1 717 13 is_stmt 1 view .LVU1037
 2903              		.loc 1 717 80 is_stmt 0 view .LVU1038
 2904 0162 4944     		add	r1, r1, r9
 2905 0164 0144     		add	r1, r1, r0
 2906              		.loc 1 717 104 view .LVU1039
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 91


 2907 0166 0B44     		add	r3, r3, r1
 2908              		.loc 1 717 25 view .LVU1040
 2909 0168 013B     		subs	r3, r3, #1
 2910              		.loc 1 717 17 view .LVU1041
 2911 016a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2912              	.LVL332:
 2913              	.L145:
 718:lvgl/src/draw/lv_img_buf.c ****         }
 719:lvgl/src/draw/lv_img_buf.c ****     }
 720:lvgl/src/draw/lv_img_buf.c ****     else {
 721:lvgl/src/draw/lv_img_buf.c ****         c01 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int, dsc
 722:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 723:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 724:lvgl/src/draw/lv_img_buf.c **** 
 725:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 726:lvgl/src/draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 727:lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 728:lvgl/src/draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 729:lvgl/src/draw/lv_img_buf.c ****         }
 730:lvgl/src/draw/lv_img_buf.c ****     }
 731:lvgl/src/draw/lv_img_buf.c **** 
 732:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr0 = xr;
 2914              		.loc 1 732 5 is_stmt 1 view .LVU1042
 733:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 2915              		.loc 1 733 5 view .LVU1043
 734:lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.has_alpha) {
 2916              		.loc 1 734 5 view .LVU1044
 2917              		.loc 1 734 8 is_stmt 0 view .LVU1045
 2918 016c 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2919              		.loc 1 734 7 view .LVU1046
 2920 0170 13F0020F 		tst	r3, #2
 2921 0174 00F08480 		beq	.L146
 2922              	.LBB109:
 735:lvgl/src/draw/lv_img_buf.c ****         lv_opa_t a0 = (a00 * xr + (a10 * (255 - xr))) >> 8;
 2923              		.loc 1 735 9 is_stmt 1 view .LVU1047
 2924              		.loc 1 735 47 is_stmt 0 view .LVU1048
 2925 0178 C5F1FF03 		rsb	r3, r5, #255
 2926              		.loc 1 735 40 view .LVU1049
 2927 017c 03FB08F1 		mul	r1, r3, r8
 2928              		.loc 1 735 33 view .LVU1050
 2929 0180 05FB0A11 		mla	r1, r5, r10, r1
 2930              		.loc 1 735 18 view .LVU1051
 2931 0184 C1F30721 		ubfx	r1, r1, #8, #8
 2932              	.LVL333:
 736:lvgl/src/draw/lv_img_buf.c ****         lv_opa_t a1 = (a01 * xr + (a11 * (255 - xr))) >> 8;
 2933              		.loc 1 736 9 is_stmt 1 view .LVU1052
 2934              		.loc 1 736 40 is_stmt 0 view .LVU1053
 2935 0188 00FB03F3 		mul	r3, r0, r3
 2936              		.loc 1 736 33 view .LVU1054
 2937 018c 05FB0733 		mla	r3, r5, r7, r3
 2938              		.loc 1 736 18 view .LVU1055
 2939 0190 C3F30723 		ubfx	r3, r3, #8, #8
 2940              	.LVL334:
 737:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = (a0 * yr + (a1 * (255 - yr))) >> 8;
 2941              		.loc 1 737 9 is_stmt 1 view .LVU1056
 2942              		.loc 1 737 46 is_stmt 0 view .LVU1057
 2943 0194 C6F1FF02 		rsb	r2, r6, #255
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 92


 2944              		.loc 1 737 39 view .LVU1058
 2945 0198 03FB02F2 		mul	r2, r3, r2
 2946              		.loc 1 737 33 view .LVU1059
 2947 019c 06FB0122 		mla	r2, r6, r1, r2
 2948              		.loc 1 737 54 view .LVU1060
 2949 01a0 1212     		asrs	r2, r2, #8
 2950              		.loc 1 737 22 view .LVU1061
 2951 01a2 2277     		strb	r2, [r4, #28]
 738:lvgl/src/draw/lv_img_buf.c **** 
 739:lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN && a1 <= LV_OPA_MIN) return false;
 2952              		.loc 1 739 9 is_stmt 1 view .LVU1062
 2953              		.loc 1 739 11 is_stmt 0 view .LVU1063
 2954 01a4 0229     		cmp	r1, #2
 2955 01a6 02D8     		bhi	.L147
 2956              		.loc 1 739 29 discriminator 1 view .LVU1064
 2957 01a8 022B     		cmp	r3, #2
 2958 01aa 40F22B81 		bls	.L171
 2959              	.L147:
 740:lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 2960              		.loc 1 740 9 is_stmt 1 view .LVU1065
 2961              		.loc 1 740 11 is_stmt 0 view .LVU1066
 2962 01ae 0229     		cmp	r1, #2
 2963 01b0 00D8     		bhi	.L149
 2964              		.loc 1 740 33 view .LVU1067
 2965 01b2 0026     		movs	r6, #0
 2966              	.LVL335:
 2967              	.L149:
 741:lvgl/src/draw/lv_img_buf.c ****         if(a1 <= LV_OPA_MIN) yr = LV_OPA_COVER;
 2968              		.loc 1 741 9 is_stmt 1 view .LVU1068
 2969              		.loc 1 741 11 is_stmt 0 view .LVU1069
 2970 01b4 022B     		cmp	r3, #2
 2971 01b6 00D8     		bhi	.L150
 2972              		.loc 1 741 33 view .LVU1070
 2973 01b8 FF26     		movs	r6, #255
 2974              	.LVL336:
 2975              	.L150:
 742:lvgl/src/draw/lv_img_buf.c ****         if(a00 <= LV_OPA_MIN) xr0 = LV_OPA_TRANSP;
 2976              		.loc 1 742 9 is_stmt 1 view .LVU1071
 2977              		.loc 1 742 11 is_stmt 0 view .LVU1072
 2978 01ba BAF1020F 		cmp	r10, #2
 2979 01be 5DD9     		bls	.L174
 2980              	.LBE109:
 732:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 2981              		.loc 1 732 14 view .LVU1073
 2982 01c0 2A46     		mov	r2, r5
 2983              	.L151:
 2984              	.LVL337:
 2985              	.LBB110:
 743:lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 2986              		.loc 1 743 9 is_stmt 1 view .LVU1074
 2987              		.loc 1 743 11 is_stmt 0 view .LVU1075
 2988 01c2 B8F1020F 		cmp	r8, #2
 2989 01c6 00D8     		bhi	.L152
 2990              		.loc 1 743 35 view .LVU1076
 2991 01c8 FF22     		movs	r2, #255
 2992              	.LVL338:
 2993              	.L152:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 93


 744:lvgl/src/draw/lv_img_buf.c ****         if(a01 <= LV_OPA_MIN) xr1 = LV_OPA_TRANSP;
 2994              		.loc 1 744 9 is_stmt 1 view .LVU1077
 2995              		.loc 1 744 11 is_stmt 0 view .LVU1078
 2996 01ca 022F     		cmp	r7, #2
 2997 01cc 00D8     		bhi	.L153
 2998              		.loc 1 744 35 view .LVU1079
 2999 01ce 0025     		movs	r5, #0
 3000              	.LVL339:
 3001              	.L153:
 745:lvgl/src/draw/lv_img_buf.c ****         if(a11 <= LV_OPA_MIN) xr1 = LV_OPA_COVER;
 3002              		.loc 1 745 9 is_stmt 1 view .LVU1080
 3003              		.loc 1 745 11 is_stmt 0 view .LVU1081
 3004 01d0 0228     		cmp	r0, #2
 3005 01d2 58D8     		bhi	.L154
 3006              		.loc 1 745 35 view .LVU1082
 3007 01d4 FF25     		movs	r5, #255
 3008              	.LVL340:
 3009              		.loc 1 745 35 view .LVU1083
 3010 01d6 56E0     		b	.L154
 3011              	.LVL341:
 3012              	.L138:
 3013              		.loc 1 745 35 view .LVU1084
 3014              	.LBE110:
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3015              		.loc 1 721 9 is_stmt 1 view .LVU1085
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3016              		.loc 1 721 15 is_stmt 0 view .LVU1086
 3017 01d8 04F1200B 		add	fp, r4, #32
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3018              		.loc 1 721 66 view .LVU1087
 3019 01dc B4F84810 		ldrh	r1, [r4, #72]
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3020              		.loc 1 721 74 view .LVU1088
 3021 01e0 BFB2     		uxth	r7, r7
 3022              	.LVL342:
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3023              		.loc 1 721 74 view .LVU1089
 3024 01e2 3944     		add	r1, r1, r7
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3025              		.loc 1 721 15 view .LVU1090
 3026 01e4 2369     		ldr	r3, [r4, #16]
 3027 01e6 B4F94A20 		ldrsh	r2, [r4, #74]
 3028              	.LVL343:
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3029              		.loc 1 721 15 view .LVU1091
 3030 01ea 09B2     		sxth	r1, r1
 3031 01ec 5846     		mov	r0, fp
 3032 01ee FFF7FEFF 		bl	lv_img_buf_get_px_color
 3033              	.LVL344:
 721:lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3034              		.loc 1 721 15 view .LVU1092
 3035 01f2 0790     		str	r0, [sp, #28]
 722:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3036              		.loc 1 722 9 is_stmt 1 view .LVU1093
 722:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3037              		.loc 1 722 83 is_stmt 0 view .LVU1094
 3038 01f4 B4F84A20 		ldrh	r2, [r4, #74]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 94


 722:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3039              		.loc 1 722 91 view .LVU1095
 3040 01f8 1FFA89F9 		uxth	r9, r9
 3041              	.LVL345:
 722:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3042              		.loc 1 722 91 view .LVU1096
 3043 01fc 4A44     		add	r2, r2, r9
 722:lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3044              		.loc 1 722 15 view .LVU1097
 3045 01fe 2369     		ldr	r3, [r4, #16]
 3046 0200 12B2     		sxth	r2, r2
 3047 0202 B4F94810 		ldrsh	r1, [r4, #72]
 3048 0206 5846     		mov	r0, fp
 3049 0208 FFF7FEFF 		bl	lv_img_buf_get_px_color
 3050              	.LVL346:
 3051 020c 0690     		str	r0, [sp, #24]
 723:lvgl/src/draw/lv_img_buf.c **** 
 3052              		.loc 1 723 9 is_stmt 1 view .LVU1098
 723:lvgl/src/draw/lv_img_buf.c **** 
 3053              		.loc 1 723 66 is_stmt 0 view .LVU1099
 3054 020e B4F84810 		ldrh	r1, [r4, #72]
 723:lvgl/src/draw/lv_img_buf.c **** 
 3055              		.loc 1 723 74 view .LVU1100
 3056 0212 3944     		add	r1, r1, r7
 723:lvgl/src/draw/lv_img_buf.c **** 
 3057              		.loc 1 723 88 view .LVU1101
 3058 0214 B4F84A20 		ldrh	r2, [r4, #74]
 723:lvgl/src/draw/lv_img_buf.c **** 
 3059              		.loc 1 723 96 view .LVU1102
 3060 0218 4A44     		add	r2, r2, r9
 723:lvgl/src/draw/lv_img_buf.c **** 
 3061              		.loc 1 723 15 view .LVU1103
 3062 021a 2369     		ldr	r3, [r4, #16]
 3063 021c 12B2     		sxth	r2, r2
 3064 021e 09B2     		sxth	r1, r1
 3065 0220 5846     		mov	r0, fp
 3066 0222 FFF7FEFF 		bl	lv_img_buf_get_px_color
 3067              	.LVL347:
 3068 0226 0590     		str	r0, [sp, #20]
 725:lvgl/src/draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3069              		.loc 1 725 9 is_stmt 1 view .LVU1104
 725:lvgl/src/draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3070              		.loc 1 725 12 is_stmt 0 view .LVU1105
 3071 0228 94F83C80 		ldrb	r8, [r4, #60]	@ zero_extendqisi2
 725:lvgl/src/draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3072              		.loc 1 725 11 view .LVU1106
 3073 022c 18F00208 		ands	r8, r8, #2
 3074 0230 21D0     		beq	.L170
 726:lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3075              		.loc 1 726 13 is_stmt 1 view .LVU1107
 726:lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3076              		.loc 1 726 70 is_stmt 0 view .LVU1108
 3077 0232 B4F94830 		ldrsh	r3, [r4, #72]
 726:lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3078              		.loc 1 726 78 view .LVU1109
 3079 0236 0293     		str	r3, [sp, #8]
 3080 0238 17FA83F7 		uxtah	r7, r7, r3
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 95


 726:lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3081              		.loc 1 726 19 view .LVU1110
 3082 023c 3BB2     		sxth	r3, r7
 3083 023e B4F94A70 		ldrsh	r7, [r4, #74]
 3084 0242 3A46     		mov	r2, r7
 3085 0244 0393     		str	r3, [sp, #12]
 3086 0246 1946     		mov	r1, r3
 3087 0248 5846     		mov	r0, fp
 3088 024a FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3089              	.LVL348:
 3090 024e 8046     		mov	r8, r0
 3091              	.LVL349:
 727:lvgl/src/draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3092              		.loc 1 727 13 is_stmt 1 view .LVU1111
 727:lvgl/src/draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3093              		.loc 1 727 95 is_stmt 0 view .LVU1112
 3094 0250 19FA87F9 		uxtah	r9, r9, r7
 727:lvgl/src/draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3095              		.loc 1 727 19 view .LVU1113
 3096 0254 0FFA89F9 		sxth	r9, r9
 3097 0258 4A46     		mov	r2, r9
 3098 025a 0299     		ldr	r1, [sp, #8]
 3099 025c 5846     		mov	r0, fp
 3100 025e FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3101              	.LVL350:
 3102 0262 0746     		mov	r7, r0
 3103              	.LVL351:
 728:lvgl/src/draw/lv_img_buf.c ****         }
 3104              		.loc 1 728 13 is_stmt 1 view .LVU1114
 728:lvgl/src/draw/lv_img_buf.c ****         }
 3105              		.loc 1 728 19 is_stmt 0 view .LVU1115
 3106 0264 4A46     		mov	r2, r9
 3107 0266 0399     		ldr	r1, [sp, #12]
 3108 0268 5846     		mov	r0, fp
 3109 026a FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3110              	.LVL352:
 728:lvgl/src/draw/lv_img_buf.c ****         }
 3111              		.loc 1 728 19 view .LVU1116
 3112 026e 7DE7     		b	.L145
 3113              	.LVL353:
 3114              	.L169:
 707:lvgl/src/draw/lv_img_buf.c **** 
 3115              		.loc 1 707 14 view .LVU1117
 3116 0270 4046     		mov	r0, r8
 706:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3117              		.loc 1 706 14 view .LVU1118
 3118 0272 4746     		mov	r7, r8
 3119              	.LVL354:
 706:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3120              		.loc 1 706 14 view .LVU1119
 3121 0274 7AE7     		b	.L145
 3122              	.LVL355:
 3123              	.L170:
 707:lvgl/src/draw/lv_img_buf.c **** 
 3124              		.loc 1 707 14 view .LVU1120
 3125 0276 4046     		mov	r0, r8
 706:lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 96


 3126              		.loc 1 706 14 view .LVU1121
 3127 0278 4746     		mov	r7, r8
 3128 027a 77E7     		b	.L145
 3129              	.LVL356:
 3130              	.L174:
 3131              	.LBB111:
 742:lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3132              		.loc 1 742 35 view .LVU1122
 3133 027c 0022     		movs	r2, #0
 3134 027e A0E7     		b	.L151
 3135              	.LVL357:
 3136              	.L146:
 742:lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3137              		.loc 1 742 35 view .LVU1123
 3138              	.LBE111:
 746:lvgl/src/draw/lv_img_buf.c ****     }
 747:lvgl/src/draw/lv_img_buf.c ****     else {
 748:lvgl/src/draw/lv_img_buf.c ****         xr0 = xr;
 3139              		.loc 1 748 9 is_stmt 1 view .LVU1124
 749:lvgl/src/draw/lv_img_buf.c ****         xr1 = xr;
 3140              		.loc 1 749 9 view .LVU1125
 750:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = LV_OPA_COVER;
 3141              		.loc 1 750 9 view .LVU1126
 3142              		.loc 1 750 22 is_stmt 0 view .LVU1127
 3143 0280 FF23     		movs	r3, #255
 3144 0282 2377     		strb	r3, [r4, #28]
 748:lvgl/src/draw/lv_img_buf.c ****         xr1 = xr;
 3145              		.loc 1 748 13 view .LVU1128
 3146 0284 2A46     		mov	r2, r5
 3147              	.LVL358:
 3148              	.L154:
 751:lvgl/src/draw/lv_img_buf.c ****     }
 752:lvgl/src/draw/lv_img_buf.c **** 
 753:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c0;
 3149              		.loc 1 753 5 is_stmt 1 view .LVU1129
 754:lvgl/src/draw/lv_img_buf.c ****     if(xr0 == LV_OPA_TRANSP) c0 = c01;
 3150              		.loc 1 754 5 view .LVU1130
 3151              		.loc 1 754 7 is_stmt 0 view .LVU1131
 3152 0286 52B9     		cbnz	r2, .L155
 3153              		.loc 1 754 30 is_stmt 1 discriminator 1 view .LVU1132
 3154              		.loc 1 754 33 is_stmt 0 discriminator 1 view .LVU1133
 3155 0288 0799     		ldr	r1, [sp, #28]
 3156              	.LVL359:
 3157              	.L156:
 755:lvgl/src/draw/lv_img_buf.c ****     else if(xr0 == LV_OPA_COVER) c0 = c00;
 756:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 757:lvgl/src/draw/lv_img_buf.c **** 
 758:lvgl/src/draw/lv_img_buf.c ****     lv_color_t c1;
 3158              		.loc 1 758 5 is_stmt 1 view .LVU1134
 759:lvgl/src/draw/lv_img_buf.c ****     if(xr1 == LV_OPA_TRANSP) c1 = c11;
 3159              		.loc 1 759 5 view .LVU1135
 3160              		.loc 1 759 7 is_stmt 0 view .LVU1136
 3161 028a 002D     		cmp	r5, #0
 3162 028c 43D1     		bne	.L158
 3163              		.loc 1 759 30 is_stmt 1 discriminator 1 view .LVU1137
 3164              		.loc 1 759 33 is_stmt 0 discriminator 1 view .LVU1138
 3165 028e 059A     		ldr	r2, [sp, #20]
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 97


 3166              	.LVL360:
 3167              	.L159:
 760:lvgl/src/draw/lv_img_buf.c ****     else if(xr1 == LV_OPA_COVER) c1 = c10;
 761:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 762:lvgl/src/draw/lv_img_buf.c **** 
 763:lvgl/src/draw/lv_img_buf.c ****     if(yr == LV_OPA_TRANSP) dsc->res.color = c1;
 3168              		.loc 1 763 5 is_stmt 1 view .LVU1139
 3169              		.loc 1 763 7 is_stmt 0 view .LVU1140
 3170 0290 002E     		cmp	r6, #0
 3171 0292 7CD1     		bne	.L161
 3172              		.loc 1 763 29 is_stmt 1 discriminator 1 view .LVU1141
 3173              	.LVL361:
 3174              		.loc 1 763 44 is_stmt 0 discriminator 1 view .LVU1142
 3175 0294 A261     		str	r2, [r4, #24]
 764:lvgl/src/draw/lv_img_buf.c ****     else if(yr == LV_OPA_COVER) dsc->res.color = c0;
 765:lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 766:lvgl/src/draw/lv_img_buf.c **** 
 767:lvgl/src/draw/lv_img_buf.c ****     return true;
 3176              		.loc 1 767 12 discriminator 1 view .LVU1143
 3177 0296 0120     		movs	r0, #1
 3178              	.LVL362:
 3179              	.L148:
 768:lvgl/src/draw/lv_img_buf.c **** }
 3180              		.loc 1 768 1 view .LVU1144
 3181 0298 09B0     		add	sp, sp, #36
 3182              	.LCFI27:
 3183              		.cfi_remember_state
 3184              		.cfi_def_cfa_offset 36
 3185              		@ sp needed
 3186 029a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3187              	.LVL363:
 3188              	.L155:
 3189              	.LCFI28:
 3190              		.cfi_restore_state
 755:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3191              		.loc 1 755 10 is_stmt 1 view .LVU1145
 755:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3192              		.loc 1 755 12 is_stmt 0 view .LVU1146
 3193 029e FF2A     		cmp	r2, #255
 3194 02a0 37D0     		beq	.L179
 756:lvgl/src/draw/lv_img_buf.c **** 
 3195              		.loc 1 756 10 is_stmt 1 view .LVU1147
 3196 02a2 079F     		ldr	r7, [sp, #28]
 3197              	.LVL364:
 3198              	.LBB112:
 3199              	.LBI112:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3200              		.loc 2 459 48 view .LVU1148
 3201              	.LBB113:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3202              		.loc 2 461 5 view .LVU1149
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3203              		.loc 2 464 5 view .LVU1150
 3204 02a4 019B     		ldr	r3, [sp, #4]
 3205              	.LVL365:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3206              		.loc 2 464 5 is_stmt 0 view .LVU1151
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 98


 3207 02a6 C3F30740 		ubfx	r0, r3, #16, #8
 3208              	.LVL366:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3209              		.loc 2 464 5 view .LVU1152
 3210 02aa C7F30741 		ubfx	r1, r7, #16, #8
 3211 02ae C2F1FF03 		rsb	r3, r2, #255
 3212              	.LVL367:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3213              		.loc 2 464 5 view .LVU1153
 3214 02b2 03FB01F1 		mul	r1, r3, r1
 3215 02b6 02FB0011 		mla	r1, r2, r0, r1
 3216 02ba 01EB0120 		add	r0, r1, r1, lsl #8
 3217 02be 01EBC011 		add	r1, r1, r0, lsl #7
 3218 02c2 C1F3C750 		ubfx	r0, r1, #23, #8
 3219 02c6 0021     		movs	r1, #0
 3220              	.LVL368:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3221              		.loc 2 464 5 view .LVU1154
 3222 02c8 60F31741 		bfi	r1, r0, #16, #8
 3223              	.LVL369:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3224              		.loc 2 466 5 is_stmt 1 view .LVU1155
 3225 02cc 0198     		ldr	r0, [sp, #4]
 3226              	.LVL370:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3227              		.loc 2 466 5 is_stmt 0 view .LVU1156
 3228 02ce C0F3072C 		ubfx	ip, r0, #8, #8
 3229 02d2 C7F30720 		ubfx	r0, r7, #8, #8
 3230              	.LVL371:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3231              		.loc 2 466 5 view .LVU1157
 3232 02d6 03FB00F0 		mul	r0, r3, r0
 3233 02da 0CFB0200 		mla	r0, ip, r2, r0
 3234 02de 00EB002C 		add	ip, r0, r0, lsl #8
 3235 02e2 00EBCC10 		add	r0, r0, ip, lsl #7
 3236 02e6 C0F3C750 		ubfx	r0, r0, #23, #8
 3237 02ea 60F30F21 		bfi	r1, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3238              		.loc 2 468 5 is_stmt 1 view .LVU1158
 3239 02ee 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 3240 02f2 FFB2     		uxtb	r7, r7
 3241              	.LVL372:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3242              		.loc 2 468 5 is_stmt 0 view .LVU1159
 3243 02f4 07FB03F3 		mul	r3, r7, r3
 3244 02f8 00FB0233 		mla	r3, r0, r2, r3
 3245 02fc 03EB0322 		add	r2, r3, r3, lsl #8
 3246              	.LVL373:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3247              		.loc 2 468 5 view .LVU1160
 3248 0300 03EBC213 		add	r3, r3, r2, lsl #7
 3249 0304 C3F3C753 		ubfx	r3, r3, #23, #8
 3250 0308 63F30701 		bfi	r1, r3, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3251              		.loc 2 470 5 is_stmt 1 view .LVU1161
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3252              		.loc 2 476 5 view .LVU1162
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 99


 3253 030c 41F07F41 		orr	r1, r1, #-16777216
 3254              	.LVL374:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3255              		.loc 2 476 5 is_stmt 0 view .LVU1163
 3256 0310 BBE7     		b	.L156
 3257              	.LVL375:
 3258              	.L179:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3259              		.loc 2 476 5 view .LVU1164
 3260              	.LBE113:
 3261              	.LBE112:
 755:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3262              		.loc 1 755 34 is_stmt 1 discriminator 1 view .LVU1165
 755:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3263              		.loc 1 755 37 is_stmt 0 discriminator 1 view .LVU1166
 3264 0312 0199     		ldr	r1, [sp, #4]
 755:lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3265              		.loc 1 755 37 discriminator 1 view .LVU1167
 3266 0314 B9E7     		b	.L156
 3267              	.LVL376:
 3268              	.L158:
 760:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3269              		.loc 1 760 10 is_stmt 1 view .LVU1168
 760:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3270              		.loc 1 760 12 is_stmt 0 view .LVU1169
 3271 0316 FF2D     		cmp	r5, #255
 3272 0318 37D0     		beq	.L180
 761:lvgl/src/draw/lv_img_buf.c **** 
 3273              		.loc 1 761 10 is_stmt 1 view .LVU1170
 3274 031a 069F     		ldr	r7, [sp, #24]
 3275              	.LVL377:
 761:lvgl/src/draw/lv_img_buf.c **** 
 3276              		.loc 1 761 10 is_stmt 0 view .LVU1171
 3277 031c DDF814C0 		ldr	ip, [sp, #20]
 3278              	.LVL378:
 3279              	.LBB114:
 3280              	.LBI114:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3281              		.loc 2 459 48 is_stmt 1 view .LVU1172
 3282              	.LBB115:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3283              		.loc 2 461 5 view .LVU1173
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3284              		.loc 2 464 5 view .LVU1174
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3285              		.loc 2 464 5 is_stmt 0 view .LVU1175
 3286 0320 C7F30740 		ubfx	r0, r7, #16, #8
 3287              	.LVL379:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3288              		.loc 2 464 5 view .LVU1176
 3289 0324 CCF30742 		ubfx	r2, ip, #16, #8
 3290 0328 C5F1FF03 		rsb	r3, r5, #255
 3291 032c 03FB02F2 		mul	r2, r3, r2
 3292 0330 05FB0022 		mla	r2, r5, r0, r2
 3293 0334 02EB0220 		add	r0, r2, r2, lsl #8
 3294 0338 02EBC012 		add	r2, r2, r0, lsl #7
 3295 033c C2F3C750 		ubfx	r0, r2, #23, #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 100


 3296 0340 0022     		movs	r2, #0
 3297              	.LVL380:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3298              		.loc 2 464 5 view .LVU1177
 3299 0342 60F31742 		bfi	r2, r0, #16, #8
 3300              	.LVL381:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3301              		.loc 2 466 5 is_stmt 1 view .LVU1178
 3302 0346 C7F3072E 		ubfx	lr, r7, #8, #8
 3303 034a CCF30720 		ubfx	r0, ip, #8, #8
 3304 034e 03FB00F0 		mul	r0, r3, r0
 3305 0352 0EFB0500 		mla	r0, lr, r5, r0
 3306 0356 00EB002E 		add	lr, r0, r0, lsl #8
 3307 035a 00EBCE10 		add	r0, r0, lr, lsl #7
 3308 035e C0F3C750 		ubfx	r0, r0, #23, #8
 3309 0362 60F30F22 		bfi	r2, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3310              		.loc 2 468 5 view .LVU1179
 3311 0366 FFB2     		uxtb	r7, r7
 3312              	.LVL382:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3313              		.loc 2 468 5 is_stmt 0 view .LVU1180
 3314 0368 5FFA8CFC 		uxtb	ip, ip
 3315              	.LVL383:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3316              		.loc 2 468 5 view .LVU1181
 3317 036c 0CFB03F3 		mul	r3, ip, r3
 3318 0370 07FB0535 		mla	r5, r7, r5, r3
 3319              	.LVL384:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3320              		.loc 2 468 5 view .LVU1182
 3321 0374 05EB0523 		add	r3, r5, r5, lsl #8
 3322 0378 05EBC315 		add	r5, r5, r3, lsl #7
 3323 037c C5F3C755 		ubfx	r5, r5, #23, #8
 3324 0380 65F30702 		bfi	r2, r5, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3325              		.loc 2 470 5 is_stmt 1 view .LVU1183
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3326              		.loc 2 476 5 view .LVU1184
 3327 0384 42F07F42 		orr	r2, r2, #-16777216
 3328              	.LVL385:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3329              		.loc 2 476 5 is_stmt 0 view .LVU1185
 3330 0388 82E7     		b	.L159
 3331              	.LVL386:
 3332              	.L180:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3333              		.loc 2 476 5 view .LVU1186
 3334              	.LBE115:
 3335              	.LBE114:
 760:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3336              		.loc 1 760 34 is_stmt 1 discriminator 1 view .LVU1187
 760:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3337              		.loc 1 760 37 is_stmt 0 discriminator 1 view .LVU1188
 3338 038a 069A     		ldr	r2, [sp, #24]
 760:lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3339              		.loc 1 760 37 discriminator 1 view .LVU1189
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 101


 3340 038c 80E7     		b	.L159
 3341              	.LVL387:
 3342              	.L161:
 764:lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3343              		.loc 1 764 10 is_stmt 1 view .LVU1190
 764:lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3344              		.loc 1 764 12 is_stmt 0 view .LVU1191
 3345 038e FF2E     		cmp	r6, #255
 3346 0390 35D0     		beq	.L181
 765:lvgl/src/draw/lv_img_buf.c **** 
 3347              		.loc 1 765 10 is_stmt 1 view .LVU1192
 3348              	.LVL388:
 3349              	.LBB116:
 3350              	.LBI116:
 459:lvgl/src/draw/../misc/lv_color.h **** {
 3351              		.loc 2 459 48 view .LVU1193
 3352              	.LBB117:
 461:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3353              		.loc 2 461 5 view .LVU1194
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3354              		.loc 2 464 5 view .LVU1195
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3355              		.loc 2 464 5 is_stmt 0 view .LVU1196
 3356 0392 C1F30745 		ubfx	r5, r1, #16, #8
 3357              	.LVL389:
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3358              		.loc 2 464 5 view .LVU1197
 3359 0396 C2F30740 		ubfx	r0, r2, #16, #8
 3360 039a C6F1FF03 		rsb	r3, r6, #255
 3361 039e 03FB00F0 		mul	r0, r3, r0
 3362 03a2 06FB0500 		mla	r0, r6, r5, r0
 3363 03a6 00EB0025 		add	r5, r0, r0, lsl #8
 3364 03aa 00EBC510 		add	r0, r0, r5, lsl #7
 3365 03ae C0F3C750 		ubfx	r0, r0, #23, #8
 3366 03b2 0025     		movs	r5, #0
 464:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3367              		.loc 2 464 5 view .LVU1198
 3368 03b4 60F31745 		bfi	r5, r0, #16, #8
 3369              	.LVL390:
 466:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3370              		.loc 2 466 5 is_stmt 1 view .LVU1199
 3371 03b8 C1F30727 		ubfx	r7, r1, #8, #8
 3372 03bc C2F30720 		ubfx	r0, r2, #8, #8
 3373 03c0 03FB00F0 		mul	r0, r3, r0
 3374 03c4 07FB0600 		mla	r0, r7, r6, r0
 3375 03c8 00EB0027 		add	r7, r0, r0, lsl #8
 3376 03cc 00EBC710 		add	r0, r0, r7, lsl #7
 3377 03d0 C0F3C750 		ubfx	r0, r0, #23, #8
 3378 03d4 60F30F25 		bfi	r5, r0, #8, #8
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3379              		.loc 2 468 5 view .LVU1200
 3380 03d8 C9B2     		uxtb	r1, r1
 3381              	.LVL391:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3382              		.loc 2 468 5 is_stmt 0 view .LVU1201
 3383 03da D2B2     		uxtb	r2, r2
 3384              	.LVL392:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 102


 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3385              		.loc 2 468 5 view .LVU1202
 3386 03dc 02FB03F3 		mul	r3, r2, r3
 3387 03e0 01FB0636 		mla	r6, r1, r6, r3
 3388              	.LVL393:
 468:lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3389              		.loc 2 468 5 view .LVU1203
 3390 03e4 06EB0623 		add	r3, r6, r6, lsl #8
 3391 03e8 06EBC316 		add	r6, r6, r3, lsl #7
 3392 03ec C6F3C756 		ubfx	r6, r6, #23, #8
 3393 03f0 66F30705 		bfi	r5, r6, #0, #8
 470:lvgl/src/draw/../misc/lv_color.h **** #else
 3394              		.loc 2 470 5 is_stmt 1 view .LVU1204
 3395 03f4 45F07F45 		orr	r5, r5, #-16777216
 3396              	.LVL394:
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3397              		.loc 2 476 5 view .LVU1205
 476:lvgl/src/draw/../misc/lv_color.h **** }
 3398              		.loc 2 476 5 is_stmt 0 view .LVU1206
 3399              	.LBE117:
 3400              	.LBE116:
 765:lvgl/src/draw/lv_img_buf.c **** 
 3401              		.loc 1 765 27 view .LVU1207
 3402 03f8 A561     		str	r5, [r4, #24]
 767:lvgl/src/draw/lv_img_buf.c **** }
 3403              		.loc 1 767 12 view .LVU1208
 3404 03fa 0120     		movs	r0, #1
 3405 03fc 4CE7     		b	.L148
 3406              	.LVL395:
 3407              	.L181:
 764:lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3408              		.loc 1 764 33 is_stmt 1 discriminator 1 view .LVU1209
 764:lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3409              		.loc 1 764 48 is_stmt 0 discriminator 1 view .LVU1210
 3410 03fe A161     		str	r1, [r4, #24]
 767:lvgl/src/draw/lv_img_buf.c **** }
 3411              		.loc 1 767 12 discriminator 1 view .LVU1211
 3412 0400 0120     		movs	r0, #1
 3413 0402 49E7     		b	.L148
 3414              	.LVL396:
 3415              	.L171:
 3416              	.LBB118:
 739:lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3417              		.loc 1 739 57 view .LVU1212
 3418 0404 0020     		movs	r0, #0
 3419              	.LVL397:
 739:lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3420              		.loc 1 739 57 view .LVU1213
 3421 0406 47E7     		b	.L148
 3422              	.LBE118:
 3423              		.cfi_endproc
 3424              	.LFE59:
 3426              		.section	.text._lv_img_buf_transform,"ax",%progbits
 3427              		.align	1
 3428              		.global	_lv_img_buf_transform
 3429              		.syntax unified
 3430              		.thumb
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 103


 3431              		.thumb_func
 3432              		.fpu fpv4-sp-d16
 3434              	_lv_img_buf_transform:
 3435              	.LVL398:
 3436              	.LFB58:
 570:lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 3437              		.loc 1 570 1 is_stmt 1 view -0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 8
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 570:lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 3441              		.loc 1 570 1 is_stmt 0 view .LVU1215
 3442 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3443              	.LCFI29:
 3444              		.cfi_def_cfa_offset 36
 3445              		.cfi_offset 4, -36
 3446              		.cfi_offset 5, -32
 3447              		.cfi_offset 6, -28
 3448              		.cfi_offset 7, -24
 3449              		.cfi_offset 8, -20
 3450              		.cfi_offset 9, -16
 3451              		.cfi_offset 10, -12
 3452              		.cfi_offset 11, -8
 3453              		.cfi_offset 14, -4
 3454 0004 83B0     		sub	sp, sp, #12
 3455              	.LCFI30:
 3456              		.cfi_def_cfa_offset 48
 3457 0006 0446     		mov	r4, r0
 571:lvgl/src/draw/lv_img_buf.c **** 
 3458              		.loc 1 571 5 is_stmt 1 view .LVU1216
 571:lvgl/src/draw/lv_img_buf.c **** 
 3459              		.loc 1 571 21 is_stmt 0 view .LVU1217
 3460 0008 0068     		ldr	r0, [r0]
 3461              	.LVL399:
 574:lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3462              		.loc 1 574 5 is_stmt 1 view .LVU1218
 574:lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3463              		.loc 1 574 30 is_stmt 0 view .LVU1219
 3464 000a B4F90830 		ldrsh	r3, [r4, #8]
 574:lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3465              		.loc 1 574 13 view .LVU1220
 3466 000e C91A     		subs	r1, r1, r3
 3467              	.LVL400:
 575:lvgl/src/draw/lv_img_buf.c **** 
 3468              		.loc 1 575 5 is_stmt 1 view .LVU1221
 575:lvgl/src/draw/lv_img_buf.c **** 
 3469              		.loc 1 575 30 is_stmt 0 view .LVU1222
 3470 0010 B4F90A30 		ldrsh	r3, [r4, #10]
 575:lvgl/src/draw/lv_img_buf.c **** 
 3471              		.loc 1 575 13 view .LVU1223
 3472 0014 D21A     		subs	r2, r2, r3
 3473              	.LVL401:
 577:lvgl/src/draw/lv_img_buf.c ****     int32_t ys;
 3474              		.loc 1 577 5 is_stmt 1 view .LVU1224
 578:lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.zoom == LV_IMG_ZOOM_NONE) {
 3475              		.loc 1 578 5 view .LVU1225
 579:lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 104


 3476              		.loc 1 579 5 view .LVU1226
 579:lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 3477              		.loc 1 579 16 is_stmt 0 view .LVU1227
 3478 0016 E389     		ldrh	r3, [r4, #14]
 579:lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 3479              		.loc 1 579 7 view .LVU1228
 3480 0018 B3F5807F 		cmp	r3, #256
 3481 001c 0FD0     		beq	.L202
 584:lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3482              		.loc 1 584 10 is_stmt 1 view .LVU1229
 584:lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3483              		.loc 1 584 21 is_stmt 0 view .LVU1230
 3484 001e B4F90C30 		ldrsh	r3, [r4, #12]
 584:lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3485              		.loc 1 584 12 view .LVU1231
 3486 0022 002B     		cmp	r3, #0
 3487 0024 41D1     		bne	.L185
 585:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3488              		.loc 1 585 9 is_stmt 1 view .LVU1232
 585:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3489              		.loc 1 585 46 is_stmt 0 view .LVU1233
 3490 0026 236C     		ldr	r3, [r4, #64]
 585:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3491              		.loc 1 585 36 view .LVU1234
 3492 0028 03FB01F1 		mul	r1, r3, r1
 3493              	.LVL402:
 586:lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 3494              		.loc 1 586 9 is_stmt 1 view .LVU1235
 586:lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 3495              		.loc 1 586 36 is_stmt 0 view .LVU1236
 3496 002c 03FB02F2 		mul	r2, r3, r2
 3497              	.LVL403:
 587:lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 3498              		.loc 1 587 9 is_stmt 1 view .LVU1237
 587:lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 3499              		.loc 1 587 27 is_stmt 0 view .LVU1238
 3500 0030 E56A     		ldr	r5, [r4, #44]
 587:lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 3501              		.loc 1 587 12 view .LVU1239
 3502 0032 05EB6115 		add	r5, r5, r1, asr #5
 3503              	.LVL404:
 588:lvgl/src/draw/lv_img_buf.c ****     }
 3504              		.loc 1 588 9 is_stmt 1 view .LVU1240
 588:lvgl/src/draw/lv_img_buf.c ****     }
 3505              		.loc 1 588 27 is_stmt 0 view .LVU1241
 3506 0036 266B     		ldr	r6, [r4, #48]
 588:lvgl/src/draw/lv_img_buf.c ****     }
 3507              		.loc 1 588 12 view .LVU1242
 3508 0038 06EB6216 		add	r6, r6, r2, asr #5
 3509              	.LVL405:
 588:lvgl/src/draw/lv_img_buf.c ****     }
 3510              		.loc 1 588 12 view .LVU1243
 3511 003c 0FE0     		b	.L184
 3512              	.LVL406:
 3513              	.L202:
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3514              		.loc 1 581 9 is_stmt 1 view .LVU1244
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 105


 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3515              		.loc 1 581 24 is_stmt 0 view .LVU1245
 3516 003e A36B     		ldr	r3, [r4, #56]
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3517              		.loc 1 581 31 view .LVU1246
 3518 0040 01FB03F5 		mul	r5, r1, r3
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3519              		.loc 1 581 46 view .LVU1247
 3520 0044 666B     		ldr	r6, [r4, #52]
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3521              		.loc 1 581 36 view .LVU1248
 3522 0046 02FB1655 		mls	r5, r2, r6, r5
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3523              		.loc 1 581 105 view .LVU1249
 3524 004a E76A     		ldr	r7, [r4, #44]
 581:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3525              		.loc 1 581 12 view .LVU1250
 3526 004c 07EBA505 		add	r5, r7, r5, asr #2
 3527              	.LVL407:
 582:lvgl/src/draw/lv_img_buf.c ****     }
 3528              		.loc 1 582 9 is_stmt 1 view .LVU1251
 582:lvgl/src/draw/lv_img_buf.c ****     }
 3529              		.loc 1 582 53 is_stmt 0 view .LVU1252
 3530 0050 03FB02F2 		mul	r2, r3, r2
 3531              	.LVL408:
 582:lvgl/src/draw/lv_img_buf.c ****     }
 3532              		.loc 1 582 36 view .LVU1253
 3533 0054 01FB0621 		mla	r1, r1, r6, r2
 3534              	.LVL409:
 582:lvgl/src/draw/lv_img_buf.c ****     }
 3535              		.loc 1 582 105 view .LVU1254
 3536 0058 266B     		ldr	r6, [r4, #48]
 582:lvgl/src/draw/lv_img_buf.c ****     }
 3537              		.loc 1 582 12 view .LVU1255
 3538 005a 06EBA106 		add	r6, r6, r1, asr #2
 3539              	.LVL410:
 3540              	.L184:
 598:lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 3541              		.loc 1 598 5 is_stmt 1 view .LVU1256
 598:lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 3542              		.loc 1 598 13 is_stmt 0 view .LVU1257
 3543 005e 4FEA2528 		asr	r8, r5, #8
 3544              	.LVL411:
 599:lvgl/src/draw/lv_img_buf.c **** 
 3545              		.loc 1 599 5 is_stmt 1 view .LVU1258
 599:lvgl/src/draw/lv_img_buf.c **** 
 3546              		.loc 1 599 13 is_stmt 0 view .LVU1259
 3547 0062 3712     		asrs	r7, r6, #8
 3548              	.LVL412:
 601:lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3549              		.loc 1 601 5 is_stmt 1 view .LVU1260
 601:lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3550              		.loc 1 601 26 is_stmt 0 view .LVU1261
 3551 0064 B4F90430 		ldrsh	r3, [r4, #4]
 601:lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3552              		.loc 1 601 7 view .LVU1262
 3553 0068 B3EB252F 		cmp	r3, r5, asr #8
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 106


 3554 006c 40F38780 		ble	.L196
 602:lvgl/src/draw/lv_img_buf.c **** 
 3555              		.loc 1 602 10 is_stmt 1 view .LVU1263
 602:lvgl/src/draw/lv_img_buf.c **** 
 3556              		.loc 1 602 12 is_stmt 0 view .LVU1264
 3557 0070 B8F1000F 		cmp	r8, #0
 3558 0074 C0F28780 		blt	.L197
 604:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3559              		.loc 1 604 5 is_stmt 1 view .LVU1265
 604:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3560              		.loc 1 604 26 is_stmt 0 view .LVU1266
 3561 0078 B4F90620 		ldrsh	r2, [r4, #6]
 604:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3562              		.loc 1 604 7 view .LVU1267
 3563 007c BA42     		cmp	r2, r7
 3564 007e 40F38480 		ble	.L198
 605:lvgl/src/draw/lv_img_buf.c **** 
 3565              		.loc 1 605 10 is_stmt 1 view .LVU1268
 605:lvgl/src/draw/lv_img_buf.c **** 
 3566              		.loc 1 605 12 is_stmt 0 view .LVU1269
 3567 0082 002F     		cmp	r7, #0
 3568 0084 C0F28380 		blt	.L199
 607:lvgl/src/draw/lv_img_buf.c ****     uint32_t pxi;
 3569              		.loc 1 607 5 is_stmt 1 view .LVU1270
 608:lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 3570              		.loc 1 608 5 view .LVU1271
 609:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3571              		.loc 1 609 5 view .LVU1272
 609:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3572              		.loc 1 609 8 is_stmt 0 view .LVU1273
 3573 0088 94F83C20 		ldrb	r2, [r4, #60]	@ zero_extendqisi2
 609:lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3574              		.loc 1 609 7 view .LVU1274
 3575 008c 12F00409 		ands	r9, r2, #4
 3576 0090 4FD0     		beq	.L187
 610:lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 3577              		.loc 1 610 9 is_stmt 1 view .LVU1275
 610:lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 3578              		.loc 1 610 11 is_stmt 0 view .LVU1276
 3579 0092 12F0020F 		tst	r2, #2
 3580 0096 36D1     		bne	.L188
 611:lvgl/src/draw/lv_img_buf.c **** 
 3581              		.loc 1 611 13 is_stmt 1 view .LVU1277
 3582              	.LVL413:
 613:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 3583              		.loc 1 613 13 view .LVU1278
 613:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 3584              		.loc 1 613 57 is_stmt 0 view .LVU1279
 3585 0098 07FB0383 		mla	r3, r7, r3, r8
 3586 009c 9900     		lsls	r1, r3, #2
 3587              	.LVL414:
 614:lvgl/src/draw/lv_img_buf.c ****         }
 3588              		.loc 1 614 13 is_stmt 1 view .LVU1280
 614:lvgl/src/draw/lv_img_buf.c ****         }
 3589              		.loc 1 614 29 is_stmt 0 view .LVU1281
 3590 009e 04F1180C 		add	ip, r4, #24
 614:lvgl/src/draw/lv_img_buf.c ****         }
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 107


 3591              		.loc 1 614 46 view .LVU1282
 3592 00a2 00EB8303 		add	r3, r0, r3, lsl #2
 3593              	.LVL415:
 3594              	.LBB119:
 3595              	.LBI119:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 3596              		.loc 3 201 44 is_stmt 1 view .LVU1283
 3597              	.LBB120:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3598              		.loc 3 203 5 view .LVU1284
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 3599              		.loc 3 204 5 view .LVU1285
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3600              		.loc 3 206 5 view .LVU1286
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3601              		.loc 3 206 10 is_stmt 0 view .LVU1287
 3602 00a6 0422     		movs	r2, #4
 3603 00a8 1CE0     		b	.L189
 3604              	.LVL416:
 3605              	.L185:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3606              		.loc 3 206 10 view .LVU1288
 3607              	.LBE120:
 3608              	.LBE119:
 591:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3609              		.loc 1 591 9 is_stmt 1 view .LVU1289
 591:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3610              		.loc 1 591 46 is_stmt 0 view .LVU1290
 3611 00aa 266C     		ldr	r6, [r4, #64]
 591:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3612              		.loc 1 591 36 view .LVU1291
 3613 00ac 06FB01F1 		mul	r1, r6, r1
 3614              	.LVL417:
 591:lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3615              		.loc 1 591 12 view .LVU1292
 3616 00b0 4911     		asrs	r1, r1, #5
 3617              	.LVL418:
 592:lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3618              		.loc 1 592 9 is_stmt 1 view .LVU1293
 592:lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3619              		.loc 1 592 36 is_stmt 0 view .LVU1294
 3620 00b2 06FB02F2 		mul	r2, r6, r2
 3621              	.LVL419:
 592:lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3622              		.loc 1 592 12 view .LVU1295
 3623 00b6 5211     		asrs	r2, r2, #5
 3624              	.LVL420:
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3625              		.loc 1 593 9 is_stmt 1 view .LVU1296
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3626              		.loc 1 593 24 is_stmt 0 view .LVU1297
 3627 00b8 A36B     		ldr	r3, [r4, #56]
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3628              		.loc 1 593 31 view .LVU1298
 3629 00ba 01FB03F5 		mul	r5, r1, r3
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3630              		.loc 1 593 46 view .LVU1299
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 108


 3631 00be 666B     		ldr	r6, [r4, #52]
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3632              		.loc 1 593 36 view .LVU1300
 3633 00c0 02FB1655 		mls	r5, r2, r6, r5
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3634              		.loc 1 593 101 view .LVU1301
 3635 00c4 E76A     		ldr	r7, [r4, #44]
 593:lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3636              		.loc 1 593 12 view .LVU1302
 3637 00c6 07EBA525 		add	r5, r7, r5, asr #10
 3638              	.LVL421:
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3639              		.loc 1 594 9 is_stmt 1 view .LVU1303
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3640              		.loc 1 594 53 is_stmt 0 view .LVU1304
 3641 00ca 03FB02F2 		mul	r2, r3, r2
 3642              	.LVL422:
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3643              		.loc 1 594 36 view .LVU1305
 3644 00ce 01FB0621 		mla	r1, r1, r6, r2
 3645              	.LVL423:
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3646              		.loc 1 594 101 view .LVU1306
 3647 00d2 266B     		ldr	r6, [r4, #48]
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3648              		.loc 1 594 12 view .LVU1307
 3649 00d4 06EBA126 		add	r6, r6, r1, asr #10
 3650              	.LVL424:
 594:lvgl/src/draw/lv_img_buf.c ****     }
 3651              		.loc 1 594 12 view .LVU1308
 3652 00d8 C1E7     		b	.L184
 3653              	.LVL425:
 3654              	.L190:
 3655              	.LBB122:
 3656              	.LBB121:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3657              		.loc 3 207 9 is_stmt 1 view .LVU1309
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3658              		.loc 3 207 15 is_stmt 0 view .LVU1310
 3659 00da 13F8010B 		ldrb	r0, [r3], #1	@ zero_extendqisi2
 3660              	.LVL426:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3661              		.loc 3 207 13 view .LVU1311
 3662 00de 0CF8010B 		strb	r0, [ip], #1
 3663              	.LVL427:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 3664              		.loc 3 208 9 is_stmt 1 view .LVU1312
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 3665              		.loc 3 209 9 view .LVU1313
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 3666              		.loc 3 210 9 view .LVU1314
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 3667              		.loc 3 210 12 is_stmt 0 view .LVU1315
 3668 00e2 013A     		subs	r2, r2, #1
 3669              	.LVL428:
 3670              	.L189:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 109


 3671              		.loc 3 206 10 is_stmt 1 view .LVU1316
 3672 00e4 002A     		cmp	r2, #0
 3673 00e6 F8D1     		bne	.L190
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3674              		.loc 3 206 10 is_stmt 0 view .LVU1317
 3675              	.LBE121:
 3676              	.LBE122:
 611:lvgl/src/draw/lv_img_buf.c **** 
 3677              		.loc 1 611 21 view .LVU1318
 3678 00e8 4FF00409 		mov	r9, #4
 3679              	.LVL429:
 3680              	.L191:
 630:lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3681              		.loc 1 630 5 is_stmt 1 view .LVU1319
 630:lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3682              		.loc 1 630 8 is_stmt 0 view .LVU1320
 3683 00ec 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 630:lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3684              		.loc 1 630 7 view .LVU1321
 3685 00f0 13F0010F 		tst	r3, #1
 3686 00f4 03D0     		beq	.L194
 3687              	.LBB123:
 631:lvgl/src/draw/lv_img_buf.c ****         if(dsc->res.color.full == ct.full) return false;
 3688              		.loc 1 631 9 is_stmt 1 view .LVU1322
 3689              	.LVL430:
 3690              	.LBB124:
 3691              	.LBI124:
 607:lvgl/src/draw/../misc/lv_color.h **** {
 3692              		.loc 2 607 26 view .LVU1323
 3693              	.LBE124:
 3694              	.LBE123:
 609:lvgl/src/draw/../misc/lv_color.h **** }
 3695              		.loc 2 609 5 view .LVU1324
 3696              	.LBB128:
 3697              	.LBB127:
 3698              	.LBB125:
 3699              	.LBI125:
 602:lvgl/src/draw/../misc/lv_color.h **** {
 3700              		.loc 2 602 26 view .LVU1325
 3701              	.LBB126:
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3702              		.loc 2 604 5 view .LVU1326
 604:lvgl/src/draw/../misc/lv_color.h **** }
 3703              		.loc 2 604 5 is_stmt 0 view .LVU1327
 3704              	.LBE126:
 3705              	.LBE125:
 3706              	.LBE127:
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3707              		.loc 1 632 9 is_stmt 1 view .LVU1328
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3708              		.loc 1 632 26 is_stmt 0 view .LVU1329
 3709 00f6 A369     		ldr	r3, [r4, #24]
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3710              		.loc 1 632 11 view .LVU1330
 3711 00f8 B3F1FF2F 		cmp	r3, #-16711936
 3712 00fc 2ED0     		beq	.L203
 3713              	.L194:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 110


 3714              	.LBE128:
 635:lvgl/src/draw/lv_img_buf.c **** 
 3715              		.loc 1 635 5 is_stmt 1 view .LVU1331
 635:lvgl/src/draw/lv_img_buf.c **** 
 3716              		.loc 1 635 16 is_stmt 0 view .LVU1332
 3717 00fe 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 635:lvgl/src/draw/lv_img_buf.c **** 
 3718              		.loc 1 635 7 view .LVU1333
 3719 0100 73BB     		cbnz	r3, .L204
 635:lvgl/src/draw/lv_img_buf.c **** 
 3720              		.loc 1 635 44 view .LVU1334
 3721 0102 0120     		movs	r0, #1
 3722 0104 3CE0     		b	.L186
 3723              	.LVL431:
 3724              	.L188:
 617:lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 3725              		.loc 1 617 13 is_stmt 1 view .LVU1335
 618:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 3726              		.loc 1 618 13 view .LVU1336
 618:lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 3727              		.loc 1 618 57 is_stmt 0 view .LVU1337
 3728 0106 07FB0383 		mla	r3, r7, r3, r8
 3729 010a 9900     		lsls	r1, r3, #2
 3730              	.LVL432:
 619:lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3731              		.loc 1 619 13 is_stmt 1 view .LVU1338
 619:lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3732              		.loc 1 619 29 is_stmt 0 view .LVU1339
 3733 010c 04F1180C 		add	ip, r4, #24
 619:lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3734              		.loc 1 619 46 view .LVU1340
 3735 0110 00EB8303 		add	r3, r0, r3, lsl #2
 3736              	.LVL433:
 3737              	.LBB129:
 3738              	.LBI129:
 201:lvgl/src/draw/../misc/lv_mem.h **** {
 3739              		.loc 3 201 44 is_stmt 1 view .LVU1341
 3740              	.LBB130:
 203:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3741              		.loc 3 203 5 view .LVU1342
 204:lvgl/src/draw/../misc/lv_mem.h **** 
 3742              		.loc 3 204 5 view .LVU1343
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3743              		.loc 3 206 5 view .LVU1344
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3744              		.loc 3 206 10 is_stmt 0 view .LVU1345
 3745 0114 0322     		movs	r2, #3
 3746 0116 04E0     		b	.L192
 3747              	.LVL434:
 3748              	.L193:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3749              		.loc 3 207 9 is_stmt 1 view .LVU1346
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3750              		.loc 3 207 15 is_stmt 0 view .LVU1347
 3751 0118 13F801EB 		ldrb	lr, [r3], #1	@ zero_extendqisi2
 3752              	.LVL435:
 207:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 111


 3753              		.loc 3 207 13 view .LVU1348
 3754 011c 0CF801EB 		strb	lr, [ip], #1
 3755              	.LVL436:
 208:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 3756              		.loc 3 208 9 is_stmt 1 view .LVU1349
 209:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 3757              		.loc 3 209 9 view .LVU1350
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 3758              		.loc 3 210 9 view .LVU1351
 210:lvgl/src/draw/../misc/lv_mem.h ****     }
 3759              		.loc 3 210 12 is_stmt 0 view .LVU1352
 3760 0120 013A     		subs	r2, r2, #1
 3761              	.LVL437:
 3762              	.L192:
 206:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3763              		.loc 3 206 10 is_stmt 1 view .LVU1353
 3764 0122 002A     		cmp	r2, #0
 3765 0124 F8D1     		bne	.L193
 3766              		.loc 3 213 5 view .LVU1354
 3767              	.LVL438:
 3768              		.loc 3 213 5 is_stmt 0 view .LVU1355
 3769              	.LBE130:
 3770              	.LBE129:
 620:lvgl/src/draw/lv_img_buf.c ****         }
 3771              		.loc 1 620 13 is_stmt 1 view .LVU1356
 620:lvgl/src/draw/lv_img_buf.c ****         }
 3772              		.loc 1 620 34 is_stmt 0 view .LVU1357
 3773 0126 4318     		adds	r3, r0, r1
 3774 0128 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 620:lvgl/src/draw/lv_img_buf.c ****         }
 3775              		.loc 1 620 26 view .LVU1358
 3776 012a 2377     		strb	r3, [r4, #28]
 617:lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 3777              		.loc 1 617 21 view .LVU1359
 3778 012c 4FF00409 		mov	r9, #4
 3779 0130 DCE7     		b	.L191
 3780              	.LVL439:
 3781              	.L187:
 624:lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 3782              		.loc 1 624 9 is_stmt 1 view .LVU1360
 625:lvgl/src/draw/lv_img_buf.c ****         dsc->res.color = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, xs_int, ys_int, dsc->cfg.color)
 3783              		.loc 1 625 9 view .LVU1361
 626:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3784              		.loc 1 626 9 view .LVU1362
 626:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3785              		.loc 1 626 26 is_stmt 0 view .LVU1363
 3786 0132 04F1200A 		add	r10, r4, #32
 3787 0136 0FFA88F1 		sxth	r1, r8
 3788 013a 0FFA87FB 		sxth	fp, r7
 3789 013e 2369     		ldr	r3, [r4, #16]
 3790 0140 5A46     		mov	r2, fp
 3791 0142 0191     		str	r1, [sp, #4]
 3792 0144 5046     		mov	r0, r10
 3793              	.LVL440:
 626:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3794              		.loc 1 626 26 view .LVU1364
 3795 0146 FFF7FEFF 		bl	lv_img_buf_get_px_color
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 112


 3796              	.LVL441:
 626:lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3797              		.loc 1 626 26 view .LVU1365
 3798 014a A061     		str	r0, [r4, #24]
 627:lvgl/src/draw/lv_img_buf.c ****     }
 3799              		.loc 1 627 9 is_stmt 1 view .LVU1366
 627:lvgl/src/draw/lv_img_buf.c ****     }
 3800              		.loc 1 627 24 is_stmt 0 view .LVU1367
 3801 014c 5A46     		mov	r2, fp
 3802 014e 0199     		ldr	r1, [sp, #4]
 3803 0150 5046     		mov	r0, r10
 3804 0152 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3805              	.LVL442:
 627:lvgl/src/draw/lv_img_buf.c ****     }
 3806              		.loc 1 627 22 view .LVU1368
 3807 0156 2077     		strb	r0, [r4, #28]
 624:lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 3808              		.loc 1 624 13 view .LVU1369
 3809 0158 0021     		movs	r1, #0
 3810 015a C7E7     		b	.L191
 3811              	.LVL443:
 3812              	.L203:
 3813              	.LBB131:
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3814              		.loc 1 632 44 is_stmt 1 discriminator 1 view .LVU1370
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3815              		.loc 1 632 51 is_stmt 0 discriminator 1 view .LVU1371
 3816 015c 0020     		movs	r0, #0
 3817 015e 0FE0     		b	.L186
 3818              	.L204:
 632:lvgl/src/draw/lv_img_buf.c ****     }
 3819              		.loc 1 632 51 discriminator 1 view .LVU1372
 3820              	.LBE131:
 637:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 3821              		.loc 1 637 5 is_stmt 1 view .LVU1373
 637:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 3822              		.loc 1 637 17 is_stmt 0 view .LVU1374
 3823 0160 A4F84450 		strh	r5, [r4, #68]	@ movhi
 638:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 3824              		.loc 1 638 5 is_stmt 1 view .LVU1375
 638:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 3825              		.loc 1 638 17 is_stmt 0 view .LVU1376
 3826 0164 A4F84660 		strh	r6, [r4, #70]	@ movhi
 639:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 3827              		.loc 1 639 5 is_stmt 1 view .LVU1377
 639:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 3828              		.loc 1 639 21 is_stmt 0 view .LVU1378
 3829 0168 A4F84880 		strh	r8, [r4, #72]	@ movhi
 640:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 3830              		.loc 1 640 5 is_stmt 1 view .LVU1379
 640:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 3831              		.loc 1 640 21 is_stmt 0 view .LVU1380
 3832 016c A4F84A70 		strh	r7, [r4, #74]	@ movhi
 641:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 3833              		.loc 1 641 5 is_stmt 1 view .LVU1381
 641:lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 3834              		.loc 1 641 18 is_stmt 0 view .LVU1382
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 113


 3835 0170 E164     		str	r1, [r4, #76]
 642:lvgl/src/draw/lv_img_buf.c **** 
 3836              		.loc 1 642 5 is_stmt 1 view .LVU1383
 642:lvgl/src/draw/lv_img_buf.c **** 
 3837              		.loc 1 642 22 is_stmt 0 view .LVU1384
 3838 0172 84F85090 		strb	r9, [r4, #80]
 644:lvgl/src/draw/lv_img_buf.c ****     ret = _lv_img_buf_transform_anti_alias(dsc);
 3839              		.loc 1 644 5 is_stmt 1 view .LVU1385
 645:lvgl/src/draw/lv_img_buf.c **** 
 3840              		.loc 1 645 5 view .LVU1386
 645:lvgl/src/draw/lv_img_buf.c **** 
 3841              		.loc 1 645 11 is_stmt 0 view .LVU1387
 3842 0176 2046     		mov	r0, r4
 3843 0178 FFF7FEFF 		bl	_lv_img_buf_transform_anti_alias
 3844              	.LVL444:
 647:lvgl/src/draw/lv_img_buf.c **** }
 3845              		.loc 1 647 5 is_stmt 1 view .LVU1388
 647:lvgl/src/draw/lv_img_buf.c **** }
 3846              		.loc 1 647 12 is_stmt 0 view .LVU1389
 3847 017c 00E0     		b	.L186
 3848              	.LVL445:
 3849              	.L196:
 601:lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3850              		.loc 1 601 41 view .LVU1390
 3851 017e 0020     		movs	r0, #0
 3852              	.LVL446:
 3853              	.L186:
 648:lvgl/src/draw/lv_img_buf.c **** 
 3854              		.loc 1 648 1 view .LVU1391
 3855 0180 03B0     		add	sp, sp, #12
 3856              	.LCFI31:
 3857              		.cfi_remember_state
 3858              		.cfi_def_cfa_offset 36
 3859              		@ sp needed
 3860 0182 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3861              	.LVL447:
 3862              	.L197:
 3863              	.LCFI32:
 3864              		.cfi_restore_state
 602:lvgl/src/draw/lv_img_buf.c **** 
 3865              		.loc 1 602 32 view .LVU1392
 3866 0186 0020     		movs	r0, #0
 3867              	.LVL448:
 602:lvgl/src/draw/lv_img_buf.c **** 
 3868              		.loc 1 602 32 view .LVU1393
 3869 0188 FAE7     		b	.L186
 3870              	.LVL449:
 3871              	.L198:
 604:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3872              		.loc 1 604 41 view .LVU1394
 3873 018a 0020     		movs	r0, #0
 3874              	.LVL450:
 604:lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3875              		.loc 1 604 41 view .LVU1395
 3876 018c F8E7     		b	.L186
 3877              	.LVL451:
 3878              	.L199:
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 114


 605:lvgl/src/draw/lv_img_buf.c **** 
 3879              		.loc 1 605 32 view .LVU1396
 3880 018e 0020     		movs	r0, #0
 3881              	.LVL452:
 605:lvgl/src/draw/lv_img_buf.c **** 
 3882              		.loc 1 605 32 view .LVU1397
 3883 0190 F6E7     		b	.L186
 3884              		.cfi_endproc
 3885              	.LFE58:
 3887              		.section	.rodata
 3888              		.align	2
 3889              		.set	.LANCHOR0,. + 0
 3890              	.LC0:
 3891 0000 00112233 		.ascii	"\000\021\"3DUfw\210\231\252\273\314\335\356\377"
 3891      44556677 
 3891      8899AABB 
 3891      CCDDEEFF 
 3892              		.text
 3893              	.Letext0:
 3894              		.file 4 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1
 3895              		.file 5 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machin
 3896              		.file 6 "/Users/nhantt/tools/stm32/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_s
 3897              		.file 7 "lvgl/src/draw/../misc/lv_area.h"
 3898              		.file 8 "lvgl/src/draw/lv_img_buf.h"
 3899              		.file 9 "lvgl/src/draw/../misc/lv_math.h"
 3900              		.file 10 "lvgl/src/draw/lv_draw_img.h"
ARM GAS  /var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s 			page 115


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_img_buf.c
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:18     .text.lv_img_buf_get_px_color:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:26     .text.lv_img_buf_get_px_color:0000000000000000 lv_img_buf_get_px_color
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:387    .text.lv_img_buf_get_px_alpha:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:394    .text.lv_img_buf_get_px_alpha:0000000000000000 lv_img_buf_get_px_alpha
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:665    .text.lv_img_buf_get_px_alpha:00000000000000f4 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:672    .text.lv_img_buf_set_px_alpha:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:679    .text.lv_img_buf_set_px_alpha:0000000000000000 lv_img_buf_set_px_alpha
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:946    .text.lv_img_buf_set_px_color:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:953    .text.lv_img_buf_set_px_color:0000000000000000 lv_img_buf_set_px_color
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1352   .text.lv_img_buf_set_palette:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1359   .text.lv_img_buf_set_palette:0000000000000000 lv_img_buf_set_palette
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1480   .text.lv_img_buf_free:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1487   .text.lv_img_buf_free:0000000000000000 lv_img_buf_free
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1532   .text.lv_img_buf_get_img_size:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1539   .text.lv_img_buf_get_img_size:0000000000000000 lv_img_buf_get_img_size
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1558   .text.lv_img_buf_get_img_size:000000000000000c $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1680   .text.lv_img_buf_alloc:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1687   .text.lv_img_buf_alloc:0000000000000000 lv_img_buf_alloc
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1802   .text._lv_img_buf_transform_init:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1809   .text._lv_img_buf_transform_init:0000000000000000 _lv_img_buf_transform_init
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2038   .text._lv_img_buf_transform_init:0000000000000130 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2043   .text._lv_img_buf_get_transformed_area:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2050   .text._lv_img_buf_get_transformed_area:0000000000000000 _lv_img_buf_get_transformed_area
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2471   .text._lv_img_buf_get_transformed_area:000000000000020c $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2476   .text._lv_img_buf_transform_anti_alias:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:2483   .text._lv_img_buf_transform_anti_alias:0000000000000000 _lv_img_buf_transform_anti_alias
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:3427   .text._lv_img_buf_transform:0000000000000000 $t
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:3434   .text._lv_img_buf_transform:0000000000000000 _lv_img_buf_transform
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:3888   .rodata:0000000000000000 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1569   .text.lv_img_buf_get_img_size:0000000000000017 $d
/var/folders/k2/cd9bl_j17z77g23y6ffqb_400000gn/T//ccnK0FmH.s:1569   .text.lv_img_buf_get_img_size:0000000000000018 $t

UNDEFINED SYMBOLS
lv_img_cf_get_px_size
lv_mem_free
lv_mem_alloc
lv_memset_00
lv_trigo_sin
lv_img_cf_is_chroma_keyed
lv_img_cf_has_alpha
